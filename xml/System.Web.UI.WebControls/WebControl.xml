<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b254acb1e67bf354401a449c30c001e9c8f39a3" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78761122" /></Metadata><TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="N:System.Web.UI.WebControls" /> 名前空間のすべてのコントロールに共通するメソッド、プロパティ、およびイベントを定義する基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl> クラスは、すべての Web サーバーコントロールに共通のプロパティ、メソッド、およびイベントを提供します。 このクラスで定義されているプロパティを設定することによって、Web サーバーコントロールの外観と動作を制御できます。 たとえば、コントロールの背景色とフォントの色は、それぞれ <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> プロパティと <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティを使用して制御します。 境界線を表示できるコントロールでは、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>、<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>、および <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> の各プロパティを設定することによって、境界線の幅、境界線のスタイル、および境界線の色を制御できます。 Web サーバーコントロールのサイズは、<xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティと <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティを使用して指定できます。

 コントロールの動作は、特定のプロパティを設定することによって指定できます。 コントロールを有効または無効にするには、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティを設定します。 タブオーダーでのコントロールの位置は、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティを設定することによって制御されます。 コントロールのツールヒントを指定するには、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> プロパティを設定します。

> [!NOTE]
>  すべてのコントロールが、このクラスで定義されたすべてのプロパティをサポートするわけではありません。 プロパティがサポートされているかどうかに関する具体的な情報については、特定のコントロールのドキュメントを参照してください。

> [!NOTE]
>  このクラスの一部のプロパティは、ブラウザーによって異なる方法で表示されます。 一部のプロパティは表示されませんが、他のプロパティはレンダリングされますが、効果はありません。 <xref:System.Web.HttpBrowserCapabilities> オブジェクトの <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> プロパティによって、Web サーバーコントロールの表示方法が決まります。 HTML 4.0 をサポートするブラウザーでは、<xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> プロパティに通常の <xref:System.Web.HttpBrowserCapabilities> オブジェクトが含まれ、ほとんどのプロパティは HTML 4.0 スタイル属性を使用してレンダリングされます。 HTML 4.0 をサポートしていないブラウザーでは、<xref:System.Web.UI.Html32TextWriter> オブジェクトが使用されます。 これにより、スタイル属性が関連する HTML 3.2 タグ属性に自動的にマップされます。 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティの場合など、場合によっては、スタイル属性が `<font>` タグなどの追加のタグに変換されます。 場合によっては、マッピングは実行されません。 さまざまなブラウザーでプロパティを表示する方法については、特定のプロパティのドキュメントを参照してください。

 <xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値の一覧については、<xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> コンストラクターを参照してください。



## Examples
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see langword="Span" /> HTML タグを表す <see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターは、`Span` HTML 要素を表す <xref:System.Web.UI.WebControls.WebControl> クラスの新しいインスタンスを初期化するために使用されます。

 次の表は、<xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値を示しています。

|プロパティ|初期値|
|--------------|-------------------|
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Span> 列挙型値。|

> [!NOTE]
>  このコンストラクターは直接呼び出されません。 代わりに、多くの場合、派生クラスのコンストラクターによって呼び出され、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A> プロパティを <xref:System.Web.UI.HtmlTextWriterTag.Span> 列挙値に初期化します。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">HTML タグ。</param>
        <summary>指定した HTML タグを使用して、<see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用して、指定された HTML タグを使用して <xref:System.Web.UI.WebControls.WebControl> クラスの新しいインスタンスを作成し、初期化します。

 次の表に、<xref:System.Web.UI.WebControls.WebControl>のインスタンスのプロパティの初期値を示します。

|プロパティ|初期値|
|--------------|-------------------|
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Unknown> 列挙型値。|
|`TagName`|`tag` パラメーターの値。|

> [!NOTE]
>  このコンストラクターは直接呼び出されません。 代わりに、多くの場合、派生クラスのコンストラクターによって呼び出され、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A> と <xref:System.Web.UI.WebControls.WebControl.TagName%2A> プロパティが初期化されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値のいずれか 1 つ。</param>
        <summary>指定した HTML タグを使用して、<see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用して、指定した <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> 値を使用して <xref:System.Web.UI.WebControls.WebControl> クラスの新しいインスタンスを作成し、初期化します。

 次の表は、<xref:System.Web.UI.WebControls.WebControl>のインスタンスの初期プロパティ値を示しています。

|プロパティ|初期値|
|--------------|-------------------|
|`TagKey`|`tag` パラメーターによって指定された <xref:System.Web.UI.HtmlTextWriterTag> 列挙値。|



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> クラスのコンストラクターを使用して `TextArea` HTML 要素を作成し、Web フォームページに表示する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx ファイル名拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールにすばやく移動できるアクセス キーを取得または設定します。</summary>
        <value>Web サーバー コントロールにすばやく移動できるアクセス キー。 既定値は <see cref="F:System.String.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティを使用して、Web サーバーコントロールのキーボードショートカットを指定します。 これにより、キーボードの指定した文字の ALT キーとキーを押すことで、コントロールにすばやく移動できます。 たとえば、コントロールのアクセスキーを文字列 `"D"` に設定すると、ユーザーは ALT キーを押しながら D キーを押してコントロールに移動できることを示します。

 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティに使用できる文字列は1つだけです。 このプロパティを `null`、<xref:System.String.Empty>、または1つの文字列のいずれでもない値に設定しようとすると、例外がスローされます。

> [!NOTE]
>  このプロパティは、Internet Explorer 4.0 以降でのみサポートされています。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.TextBox> コントロールの <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティを設定して使用する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたアクセス キーが <see langword="null" />、<see cref="F:System.String.Empty" />、または単一の文字列のいずれでもありません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> に表示する必要のある HTML 属性およびスタイルを追加します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 クライアント上の Web サーバーコントロールの属性とスタイルを表示するには、通常、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> および <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> メソッドを呼び出して、各属性とスタイルを <xref:System.Web.UI.HtmlTextWriter> 出力ストリームに個別に挿入します。 プロセスを簡略化するために、このメソッドは、Web サーバーコントロールに関連付けられているすべての属性とスタイルについて、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> および <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> メソッドへのすべての呼び出しをカプセル化します。 すべての属性とスタイルは、1回のメソッド呼び出しで <xref:System.Web.UI.HtmlTextWriter> 出力ストリームに挿入されます。 通常、このメソッドは、派生クラスのコントロール開発者によってオーバーライドされ、クラスの <xref:System.Web.UI.HtmlTextWriter> 出力ストリームに適切な属性とスタイルを挿入します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> メソッドを使用してクライアントスクリプトを挿入することはできません。 クライアントスクリプトを使用するには、<xref:System.Web.UI.ClientScriptManager> クラスを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> クラスから派生するクラスを作成する方法を示しています。 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> メソッドの基本実装は、<xref:System.Web.UI.HtmlTextWriter> 出力ストリームの派生クラスに適切な属性を追加するためにオーバーライドされます。

 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">コピーされるスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定したスタイルの空白以外の要素を Web コントロールにコピーして、コントロールの既存のスタイル要素を上書きします。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドを使用して <xref:System.Web.UI.WebControls.DataGrid> コントロールにスタイルを適用する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのプロパティに対応しない任意の属性 (表示専用) のコレクションを取得します。</summary>
        <value>名前と値の組み合わせの <see cref="T:System.Web.UI.AttributeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> コレクションには、Web サーバーコントロールの開始タグで宣言されたすべての属性のコレクションが含まれます。 これにより、Web サーバーコントロールに関連付けられている属性をプログラムで制御できます。 コレクションに属性を追加したり、コレクションから属性を削除したりできます。

> [!NOTE]
>  このプロパティは、ブラウザーの設定に関係なく、コントロールの開始タグのコレクション内のすべての属性と共に表示されます。 すべてのブラウザーが、表示されるすべての属性をサポートするわけではありません。 サポートされていない属性は、通常、ブラウザーによって無視されます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> コレクションを使用して、クライアント側のスクリプトを <xref:System.Web.UI.WebControls.WebControl> インスタンスに追加することはできません。 クライアント側のスクリプトを追加するには、<xref:System.Web.UI.Page> コントロールの <xref:System.Web.UI.Page.ClientScript%2A> プロパティを使用します。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.TextBox> コントロールがフォーカスを失ったときに、<xref:System.Web.UI.WebControls.WebControl> の <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> プロパティを使用して JavaScript コマンドを実行する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの背景色を取得または設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> プロパティを使用して、Web サーバーコントロールの背景色を指定します。 このプロパティは、<xref:System.Drawing.Color?displayProperty=nameWithType> オブジェクトを使用して設定されます。

> [!NOTE]
>  このプロパティは、特定のコントロールに対してのみ表示されます。 たとえば、<xref:System.Web.UI.WebControls.Table>、<xref:System.Web.UI.WebControls.Panel>、<xref:System.Web.UI.WebControls.DataGrid>、<xref:System.Web.UI.WebControls.Calendar>、および <xref:System.Web.UI.WebControls.ValidationSummary> では、このプロパティが表示されます。 また、`RepeatLayout` プロパティが `RepeatLayout.Table`ではなく `RepeatLayout.Flow`である場合は、<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList> および <xref:System.Web.UI.WebControls.DataList> にも使用できます。

 一般に、HTML 3.2 では、`<table>` タグとして表示されるコントロールのみが背景色を表示できますが、ほとんどのコントロールは HTML 4.0 で使用できます。

 `<span>` タグとして表示されるコントロール (<xref:System.Web.UI.WebControls.Label>、すべての検証コントロール、および `RepeatLayout` プロパティが `RepeatLayout.Flow`に設定されたリストコントロール) では、このプロパティは Microsoft Internet Explorer バージョン5以降で動作しますが、Microsoft Internet Explorer バージョン4では動作しません。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承される <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web コントロールの境界線の色を取得または設定します。</summary>
        <value>コントロールの境界線の色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> プロパティを使用して、Web サーバーコントロールの境界線の色を指定します。 このプロパティは、<xref:System.Drawing.Color> オブジェクトを使用して設定されます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> プロパティは、特定のコントロールに対してのみ表示されます。 たとえば、<xref:System.Web.UI.WebControls.Table>、<xref:System.Web.UI.WebControls.Panel>、<xref:System.Web.UI.WebControls.DataGrid>、<xref:System.Web.UI.WebControls.Calendar>、および <xref:System.Web.UI.WebControls.ValidationSummary> の各コントロールでは、このプロパティが表示されます。 また、`RepeatLayout` プロパティが `RepeatLayout.Table`ではなく `RepeatLayout.Flow`に設定されている場合は、<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>、および <xref:System.Web.UI.WebControls.DataList> コントロールに対しても機能します。 ただし、HTML 3.2 標準の一部ではない `bordercolor` 属性としてレンダリングされます。 `bordercolor` 属性は、Microsoft Internet Explorer バージョン3.0 以降では機能しますが、その他のほとんどのブラウザーでは機能しません。

 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> プロパティが設定されていない場合、ブラウザーは既定の境界線の色を使用します。 既定の配色を確認するには、ブラウザーを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承される <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> プロパティを使用して、Web サーバーコントロールの境界線スタイルを指定します。 このプロパティは、<xref:System.Web.UI.WebControls.BorderStyle> 列挙値のいずれかを使用して設定されます。 次の表に、使用可能な値を示します。

|枠線の種類|説明|
|------------------|-----------------|
|`NotSet`|境界線のスタイルが設定されていません。|
|`None`|罫線なし|
|`Dotted`|点線の境界線。|
|`Dashed`|破線の境界線。|
|`Solid`|実線の境界線。|
|`Double`|実線の二重線の境界線。|
|`Groove`|境界線をくぼみ表示にするための下降側の境界線。|
|`Ridge`|境界線を浮き出して表示するための上昇側の境界線。|
|`Inset`|コントロールをくぼんで表示するためのくぼみ表示の境界線。|
|`Outset`|コントロールを浮き出して表示するためのアウトセット境界線。|

> [!NOTE]
>  このプロパティは、Web サーバーコントロールについては、Microsoft Internet Explorer 4 より前のブラウザーでは表示されません。 HTML 3.2 では、これに相当するものはありません。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承される <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線の幅を取得または設定します。</summary>
        <value>Web サーバー コントロールの境界線の幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロールの境界線の幅を指定するには、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> プロパティを使用します。

> [!NOTE]
>  このプロパティは、すべての Web サーバーコントロールでは機能しません。 <xref:System.Web.UI.WebControls.Table> や <xref:System.Web.UI.WebControls.DataGrid>などのテーブルとして表示されるコントロールにのみ適用されます。

 このプロパティは <xref:System.Web.UI.WebControls.Unit> オブジェクトで設定されます。 <xref:System.Web.UI.WebControls.Unit> の <xref:System.Web.UI.WebControls.Unit.Value%2A> プロパティに負の数値が含まれている場合は、例外がスローされます。

> [!NOTE]
>  境界線の幅は、Microsoft Internet Explorer バージョン5より前のブラウザーではピクセル単位でのみ表現できます。 すべてのユニットの種類は、Microsoft Internet Explorer バージョン5以降でサポートされています。 詳細については、特定のコントロールを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承された <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した境界線の幅が負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールのスタイルを取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>Web サーバー コントロールの外観プロパティをカプセル化する <see cref="T:System.Web.UI.WebControls.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> や <xref:System.Web.UI.WebControls.WebControl.Font%2A>など、コントロールの外観を指定する <xref:System.Web.UI.WebControls.WebControl> クラスのすべてのプロパティをカプセル化します。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトが <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> プロパティに対して作成されたかどうかを示す値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトが <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> プロパティに対して作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">このメソッドの呼び出し元の Web サーバー コントロールにコピーされるプロパティを持つコピー元のコントロールを表す <see cref="T:System.Web.UI.WebControls.WebControl" />。</param>
        <summary>指定した Web サーバー コントロールから、<see cref="P:System.Web.UI.WebControls.WebControl.Style" /> オブジェクトでカプセル化されていないプロパティをこのメソッドの呼び出し元の Web サーバー コントロールにコピーします。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> メソッドは、指定された Web サーバーコントロールの <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>、および <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> の各プロパティを、このメソッドの呼び出し元の Web サーバーコントロールにコピーします。 これは一般的に、Web サーバーコントロールがレンダリング中にコントロールを使用しているときに、新しいコントロールを動的に作成することによって機能する場合に使用します。 このメソッドは、<xref:System.Web.UI.WebControls.Style> オブジェクトによってカプセル化されていない Web サーバーコントロールのすべてのプロパティをコピーして、表示されるタグの最も外側のコントロールに配置できるようにするために役立ちます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="controlSrc" /> が <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebControl" /> クラスで、すべてのスタイル関連プロパティを実装するために内部的に使用されるスタイル オブジェクトを作成します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <returns>コントロールのすべてのスタイル関連プロパティを実装するために使用される <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> メソッドは、すべてのスタイル関連プロパティを実装するために内部的に使用されるスタイルオブジェクトを作成するために使用されます。 派生クラスでこのメソッドをオーバーライドして、クラスに適したスタイルを作成できます。 このメソッドは、主にコントロールの開発者によって使用されます。

 **メモ**コントロール開発者は、基本コントロールから返された <xref:System.Web.UI.WebControls.Style> から派生した <xref:System.Web.UI.WebControls.Style> を返す必要があります。 派生コントロールが異なる型を返す可能性があるため、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> が特定のスタイル型であると想定することはできません。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントで Web サーバー コントロールによって表示されるカスケード スタイル シート (CSS: Cascading Style Sheet) クラスを取得または設定します。</summary>
        <value>クライアントで Web サーバー コントロールによって表示される CSS クラス。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティを使用して、Web サーバーコントロールのクライアントに表示する CSS クラスを指定します。 このプロパティは、すべてのコントロールのブラウザーで表示されます。 ブラウザーに関係なく、常に class 属性としてレンダリングされます。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 たとえば、次のような Web サーバーコントロール宣言があるとします。

```
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />
```

 次の HTML は、前の Web サーバーコントロール宣言用にクライアント上にレンダリングされます。

```
<input type=text class="class1" style="ForeColor:red">
```

 カスケードスタイルシート (CSS) を使用してコントロールの外観をカスタマイズする場合は、インラインスタイルまたは別の CSS ファイルを使用しますが、両方は使用しません。 インラインスタイルと別の CSS ファイルの両方を使用すると、予期しない結果が発生する可能性があります。

> [!NOTE]
>  CSS をサポートしていないブラウザーでは、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティを設定しても効果はありません。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.HyperLink> コントロールのスタイルを変更する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが無効の場合に、レンダリングされた HTML 要素に適用される CSS クラスを取得または設定します。</summary>
        <value>コントロールが無効の場合に、レンダリングされた HTML 要素に適用される CSS クラス。 既定値は "aspNetDisabled" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティは、個々の Web コントロールの <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティに表示される名前を変更するために使用できます。 既定では、このプロパティは "aspNetDisabled" を返します。

 派生クラスで <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> がオーバーライドされて `false`が返される場合、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティの値は、コントロールの HTML 要素の `class` 属性の値として表示されます。 この場合、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティに値があると、両方の CSS クラスがレンダリングされた HTML 要素に適用されます。 `class` 属性は、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティの値と、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティの値で構成され、スペースで区切られます。

 このプロパティは静的であるため、<xref:System.Web.UI.WebControls.WebControl> クラスに対してのみ設定できます。 どのような値を設定しても、Web アプリケーションのすべてのコントロールに使用されます。 個々のコントロールに異なる値を指定することはできません。

 既定値の "aspNetDisabled" とは異なるクラス名を使用する場合は、通常、次の例に示すように、global.asax ファイルの `Application_Start` メソッドでコードを記述します。

```vb
Private Sub Application_Start(
    ByVal sender As Object, ByVal e As EventArgs)
    WebControl.DisabledCssClass = "customDisabledClassName"
End Sub
```

```csharp
void Application_Start(object sender, EventArgs e)
{
    WebControl.DisabledCssClass = "customDisabledClassName";
}
```



## Examples
 次の例では、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティが `false`、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティに既定値が設定されている場合、および <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティが空の場合に、無効な <xref:System.Web.UI.WebControls.Label> コントロールの HTML をレンダリングする方法を示します。

 `<span id="Label1" class="aspNetDisabled">Test</span>`

 次の例では、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティに "SampleStyle" という値が指定されている点を除いて、同じ条件で HTML がレンダリングされることを示してい`:`

 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`

 詳細については、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティを参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>コントロールを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロールの <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティが `false`に設定されている場合、通常、コントロールは淡色表示になります。 コントロールが入力要素である場合、ブラウザーはユーザーがクリックしたり入力したりできないようにします。 サーバーコントロール用に表示される HTML 要素は、`disabled` 属性またはその CSS `class` 属性を設定することによって、無効としてマークされます。 詳細については、次のトピックを参照してください。 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> および <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>

 このプロパティは、コントロール階層の下位に伝達されます。 コンテナーコントロールを無効にすると、そのコンテナー内の子コントロールも無効になります。 詳細については、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティを参照してください。

> [!NOTE]
>  カスタム複合コントロールでは、この継承動作は、子コントロールをまだ作成していないコントロールには適用されません。 子コントロールの作成時に有効な状態を設定するか、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティをオーバーライドして <xref:System.Web.UI.Control.EnsureChildControls%2A> メソッドを呼び出す必要があります。

> [!NOTE]
>  コントロールを無効にすると、ユーザーがブラウザー UI を通じてコントロールを操作できなくなります。 ユーザーは、ページ上のコントロールが無効になっている場合でも、ページによって処理されるポストバックを送信する要求を行うことができます。 ポストバック要求を処理する前に、コントロールが有効で表示されていることを確認してください。

 このプロパティをサポートしていないコントロールがあります。 詳細については、個々のコントロールを参照してください。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティをプログラムによって設定することによって、<xref:System.Web.UI.WebControls.WebControl> 基底クラスから継承された <xref:System.Web.UI.WebControls.TextBox> コントロールを有効または無効にする方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーマがこのコントロールに適用されるかどうかを示す値を取得または設定します。</summary>
        <value>テーマを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> プロパティは、指定されたコントロールに対してテーマが有効かどうかを示します。 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> プロパティが `true`場合、アプリケーションのテーマディレクトリが検索され、コントロールスキンが適用されます。 テーマディレクトリに特定のコントロールのスキンが存在しない場合、スキンは適用されません。

 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> プロパティが `false`場合、テーマディレクトリは検索されず、<xref:System.Web.UI.WebControls.WebControl.SkinID%2A> プロパティの内容は使用されません。

 コントロールは、親コントロールまたはそれを含んでいるページによって設定された <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 値をオーバーライドできます。 たとえば、親コントロールの <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> プロパティが `false`に設定されている場合、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> プロパティを個々の子コントロールの `true` に設定することによって、親に含まれる子コントロールにテーマを選択して適用できます。

 テーマは、ページ、コンテナー、またはコントロールレベルで有効にすることができます。 ページまたはコンテナーレベルでテーマを無効にすると、ページまたはコンテナーに含まれるすべてのコントロールに対してテーマが無効になります。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET テーマの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールに関連付けられたフォント プロパティを取得します。</summary>
        <value>Web サーバー コントロールのフォント プロパティを表す <see cref="T:System.Web.UI.WebControls.FontInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Font%2A> プロパティを使用して、Web サーバーコントロールのフォントプロパティを指定します。 このプロパティには、`Property-Subproperty` の形式で宣言によってアクセスできるサブプロパティ (`Font-Bold`など) や、`Property.Subproperty` の形式でプログラムによってアクセスできるサブプロパティが含まれます (`Font.Bold`など)。

 すべてのコントロールについて、Microsoft Internet Explorer version 4 より前のすべてのサブプロパティがブラウザーでレンダリングされます。 これらは、<xref:System.Web.UI.WebControls.FontInfo.Bold%2A>、<xref:System.Web.UI.WebControls.FontInfo.Italic%2A>、<xref:System.Web.UI.WebControls.FontInfo.Name%2A>、<xref:System.Web.UI.WebControls.FontInfo.Names%2A>、<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>、<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>、<xref:System.Web.UI.WebControls.FontInfo.Size%2A> です (ただし、`Small`、`Smaller`などの名前付きフォントサイズのみが機能します)。

> [!NOTE]
>  これらのサブプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーでレンダリングされますが、表示される HTML は、以降のブラウザーとは異なります。 スタイル属性として表示するのではなく、これらのサブプロパティは、`<b>` や `<font>`などの HTML 要素としてレンダリングされます。

 以前のブラウザーでは、すべてのコントロールに対してレンダリングされないサブプロパティが <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>ます。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.Font%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Label> コントロールからフォント情報を収集する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの前景色 (通常はテキストの色) を取得または設定します。</summary>
        <value>コントロールの前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティを使用して、Web サーバーコントロールの前景色を指定します。 通常、前景色はテキストの色を表します。 このプロパティは、Microsoft Internet Explorer version 4 より前のすべてのコントロール (<xref:System.Web.UI.WebControls.Image>、<xref:System.Web.UI.WebControls.AdRotator>、<xref:System.Web.UI.WebControls.HyperLink>、および <xref:System.Web.UI.WebControls.LinkButton>を除く) で表示されます。

> [!NOTE]
>  Microsoft Internet Explorer version 4 より前のブラウザーでは、このプロパティは `<font>` タグとしてレンダリングされます。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承された <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに属性セットがあるかどうかを示す値を取得します。</summary>
        <value>コントロールに属性セットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl> インスタンスに属性の名前と値のペアがある場合、<xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> プロパティは `true` を返します。 属性ペアは、プロパティまたはビューステートのどちらかに設定できます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの高さを取得または設定します。</summary>
        <value>コントロールの高さを表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は、<see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティを使用して、Web サーバーコントロールの高さを指定します。

> [!NOTE]
>  このプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーのすべてのコントロールに対しては表示されません。 以前のブラウザーでこのプロパティを表示しないコントロールには、<xref:System.Web.UI.WebControls.Label>、<xref:System.Web.UI.WebControls.HyperLink>、<xref:System.Web.UI.WebControls.LinkButton>、およびすべての検証コントロールが含まれます。 また、`RepeatLayout` プロパティが `RepeatLayout.Flow`に設定されている場合、<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList> および <xref:System.Web.UI.WebControls.DataList> も、以前のブラウザーでこのプロパティを表示しません。 さらに、以前のブラウザーでサポートされているのは、`Pixel` と `Percentage` のユニットの種類だけです。

 このプロパティは非標準の HTML であるため、<xref:System.Web.UI.WebControls.Table> や <xref:System.Web.UI.WebControls.DataGrid>などのテーブルとして表示される Web サーバーコントロールは、Microsoft Internet Explorer version 4 より前のブラウザーではこのプロパティをサポートしていません。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティを既定の `Pixel`以外の単位の種類に設定するには、必要な単位の種類に固有の新しい単位の種類を作成する必要があります。 たとえば、コントロールの <xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティをパーセント値100に設定するには、次のようにします。
>
>  `myWebControl.Width = Unit.Percentage(100);`
>
>  <xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティで使用できる単位の種類の詳細については、<xref:System.Web.UI.WebControls.Unit> クラスを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承された <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.Height%2A> プロパティを宣言によって設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">高さが負の値に設定されました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが有効かどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebControl" /> オブジェクトが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 これは読み取り専用プロパティです。 コントロールを無効にする場合は、その <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティを `false`に設定します。

 コントロールが別のコントロールに含まれていない場合、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティの値は、常に <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティの値と同じになります。

 コントロールが別のコントロールの子であり、次のすべての状況に該当する場合は、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティの値が <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティとは異なります。

-   親コントロールの <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティまたは <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティの値が `false`。

-   子コントロールの <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティは `true`に設定されます。

 この場合、子コントロールは親コントロールの無効状態を継承します。 子コントロールの <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティを `false`に設定することによって、子コントロールが明示的に無効にされていない場合でも、コントロールが無効になっていることを示す `false` を返します。 親コントロール自体の <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティは `true` に設定されている場合がありますが、その親から無効状態が継承される可能性があります。

 ASP.NET は、サーバーコントロールの HTML 要素をレンダリングするときに、`disabled` 属性またはその CSS `class` 属性を設定することによって、要素を無効としてマークします。 詳細については、次のトピックを参照してください。 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> および <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> メソッドによって保存された前回の要求からビューステート情報を復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、主に .NET Framework インフラストラクチャによって使用されます。独自に作成したコードから直接使用するためのものではありません。 ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。

 <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> メソッドは、前の <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> 要求で保存されたビューステート情報を復元します。 <xref:System.Web.UI.WebControls.WebControl> クラスは、基本 <xref:System.Web.UI.Control.LoadViewState%2A> メソッドをオーバーライドして、<xref:System.Web.UI.Control.ViewState%2A>、<xref:System.Web.UI.WebControls.WebControl.Style%2A>、および <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> の各プロパティを処理します。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/1whwt1k7(v=vs.100)">コントロールの状態とビューステートのサンプル</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">コピーされるスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定したスタイルの空白以外の要素を Web コントロールにコピーしますが、コントロールの既存のスタイル要素は上書きしません。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> メソッドを使用して、スタイルを <xref:System.Web.UI.WebControls.DataGrid> コントロールのスタイルと結合する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>指定された HTML ライターにコントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Render%2A> メソッドは、主にコントロールの開発者によって使用されます。

 <xref:System.Web.UI.WebControls.WebControl.Render%2A> メソッドは、指定された <xref:System.Web.UI.HtmlTextWriter> インスタンスに Web コントロールを送信します。 カスタムサーバーコントロールをクライアントに送信するには、このメソッドをオーバーライドします。

 <xref:System.Web.UI.WebControls.WebControl.Render%2A> メソッドは、まず <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> メソッドを呼び出し、次に <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> メソッドを呼び出し、最後に <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> メソッドを呼び出してクライアントにコントロールを送信します。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 開始タグを指定したライターに表示します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 これは公開されるため、Web サーバーコントロールの開始タグと終了タグの間に、他のコントロールが複数のコントロールを表示できるようになります。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの内容を指定したライターに出力します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> メソッドをオーバーライドして、開始タグと終了タグの間にコントロールの内容を表示します。 このメソッドの既定の実装では、すべての子コントロールがレンダリングされます。

 コントロールに子コントロールがある場合は、基本 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> メソッドを呼び出すか、子コントロールをテキストライターにレンダリングする位置で <xref:System.Web.UI.Control.RenderChildren%2A> を呼び出す必要があります。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 終了タグを指定したライターに表示します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 これは公開されるため、Web サーバーコントロールの開始タグと終了タグの間に、他のコントロールが複数のコントロールを表示できるようになります。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出された後に変更された状態を保存します。</summary>
        <returns>コントロールの現在のビュー ステートを格納するオブジェクト。このコントロールに関連付けられたビュー ステートがない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。

 ビューステートは、サーバーコントロールのプロパティの累積値です。 これらの値は、<xref:System.Web.UI.StateBag> クラスのインスタンスであるサーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティに自動的に配置されます。 <xref:System.Web.UI.Control.ViewState%2A> プロパティ値は、サーバーコントロールのライフサイクルの状態の保存ステージの後に文字列オブジェクトに永続化されます。 詳細については、「 [ASP.NET Page ライフサイクルの概要](https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100))」を参照してください。

 ビューステートが保存されると、この文字列オブジェクトは、非表示の HTML `input` 要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> メソッドをオーバーライドし、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティを変更することで、効率を向上させることができます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/1whwt1k7(v=vs.100)">コントロールの状態とビューステートのサンプル</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに適用するスキンを取得または設定します。</summary>
        <value>コントロールに適用するスキンの名前。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロールで使用できるスキンは、テーマディレクトリ内の1つ以上のスキンファイルに格納されます。 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> プロパティは、これらのスキンをコントロールに適用するかどうかを指定します。 スキンは、特定のコントロールに固有のものです。異なる種類のコントロール間でスキン設定を共有することはできません。

 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> プロパティを設定しなかった場合、コントロールは既定のスキンを使用します (定義されている場合)。 たとえば、ID が指定されていないスキンが <xref:System.Web.UI.WebControls.Image> コントロールに対して定義されている場合、そのスキンは、ID でスキンを明示的に参照せず、テーマを無効に設定していないすべての <xref:System.Web.UI.WebControls.Image> コントロールに適用されます。 ID を持つスキンが <xref:System.Web.UI.WebControls.Image> コントロールに対して定義されている場合、そのスキンは <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> がその ID に設定されている <xref:System.Web.UI.WebControls.Image> コントロールにのみ適用されます。

 テーマディレクトリ内のスキンファイルに、指定した <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>のスキンが含まれていない場合は、実行時に <xref:System.ArgumentException> 例外がスローされます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> プロパティで指定されたスキンがテーマの中に存在しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET のテーマについて</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの外側のタグにスタイル属性として表示されるテキスト属性のコレクションを取得します。</summary>
        <value>Web サーバー コントロールの外側のタグに表示される HTML スタイル属性を示す <see cref="T:System.Web.UI.CssStyleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Style%2A> コレクションを使用して、Web サーバーコントロールの外側のタグに表示されるスタイル属性を管理します。 このプロパティは、すべてのコントロールのすべてのブラウザーで表示されます。

> [!NOTE]
>  スタイル属性をサポートしていないブラウザーは、レンダリングされた HTML を無視します。

 厳密に型指定されたスタイルプロパティ (`BackColor="Red"`など) によって設定されたすべてのスタイル値は、このコレクション内の対応する値を自動的にオーバーライドします。

 このコレクションに設定されている値は、厳密に型指定されたスタイルプロパティによって自動的には反映されません。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl.Style%2A> プロパティを使用して、ページ上の <xref:System.Web.UI.WebControls.Label> コントロールを非表示にしたり表示したりする方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see langword="disabled" /> プロパティが <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> の場合、レンダリングされた HTML 要素の <see langword="false" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>常に <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 派生クラスでは、このプロパティは、コントロールが無効になっている場合に、ASP.NET がコントロールの HTML を表示する方法を示します。

## <a name="disabling-aspnet-web-controls"></a>ASP.NET Web コントロールの無効化
 ASP.NET コントロールの <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティが `false` に設定されている場合 (つまり、コントロールが無効になっている場合)、ASP.NET はページ内にコントロールを表示しますが、無効の状態 (通常は淡色表示) で表示します。 親コントロールが無効になっている場合は、そのコントロールの子も無効として表示されます。 その場合、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A> プロパティが `true`に設定されている場合でも、子コントロールの <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティは `false`に設定されます。

 ASP.NET 3.5 以前のバージョンでは、コントロールの <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティが `false`と、コントロールに対してレンダリングされる HTML 要素で、`disabled` 属性が "disabled" に設定されます。 ただし、HTML 4.01 標準では、ユーザー入力に使用される特定の要素に対してのみ、`disabled` 属性が許可されます。 たとえば、`disabled` 属性は `input` 要素では許可されますが、`span` 要素には使用できません。

 ほとんどのブラウザーでは、`disabled` 属性を持つ表示専用の要素に対して、既定で無効になっている外観がサポートされています。 ただし、HTML 標準に準拠するために、ASP.NET 4 では既定で無効な属性が省略されています。

## <a name="how-the-supportsdisabledattribute-property-is-used"></a>SupportsDisabledAttribute プロパティの使用方法
 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティが `true`場合、コントロールが無効になっていると、ASP.NET は `disabled` 属性を表示します。 このプロパティが `false`場合、コントロールが無効になっていると、ASP.NET は `class` の属性を表示します。

 派生クラスは、このプロパティをオーバーライドして、次の条件がすべて満たされた場合に `false` を返します。

-   コントロールは、`disabled` 属性をサポートしていない HTML 要素をレンダリングします。

-   <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティは、4.0 より低い ASP.NET のバージョン番号を示します。

 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティは、必ずしもコントロールに対して表示される HTML 要素が `disabled` 属性をサポート (許可) するかどうかを示すとは限りません。 コントロールの <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティが4.0 未満の ASP.NET のバージョン番号を示している場合、レンダリングされた HTML が `disabled` 属性をサポートしていない場合でも、コントロールの <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティの値によって `true` が返されることがあります。

## <a name="backward-compatibility-for-disabled-controls"></a>無効なコントロールの旧バージョンとの互換性
 Visual Studio を使用して、以前のバージョンの Web プロジェクトを ASP.NET 4 にアップグレードすると、Visual Studio によって、web.config ファイル (<xref:System.Web.UI.Control.RenderingCompatibility%2A> のプロパティを設定する) の `controlRenderingCompatibilityVersion` 属性が、以前のバージョン番号に自動的に設定されます。 <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティが4.0 未満の場合、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティは常に `true` を返します。これにより、Web コントロールでは、以前のバージョンの場合と同じように、無効なコントロールに対して HTML がレンダリングされます。 アップグレードした Web サイトで ASP.NET 4 で導入されたアルゴリズムを使用して HTML を表示する場合は、`controlRenderingCompatibilityVersion` 属性を変更または削除できます。 詳細については、<xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティを参照してください。

## <a name="setting-a-disabled-appearance-by-using-css"></a>CSS を使用した無効な外観の設定
 コントロールの [<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>] プロパティが `false`、コントロールが無効になっている場合、ASP.NET は、表示された HTML 要素の `class` 属性を <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> プロパティの値に設定します。 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> プロパティの既定値は "aspNetDisabled" です。

 無効化されたコントロールに対して無効な外観を提供するには、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> プロパティの値で表されるクラスの CSS 規則を定義する必要があります。

 コントロールに対して表示される HTML 要素には、その <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> プロパティに値がある場合に、`class` 属性に複数の値が含まれる場合があります。 詳細については、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティを参照してください。



## Examples
 次の例では、無効な <xref:System.Web.UI.WebControls.Label> コントロールのマークアップを示します。

 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`

 ASP.NET 3.5 以前のバージョンでは、このマークアップは次の HTML をレンダリングします。

 `<span id="Label1" disabled="disabled">Test</span>`

 ASP.NET 4 では、<xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティの値が4.0 以上で、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティが既定値に設定されている場合、同じマークアップは次の HTML をレンダリングします。

 `<span id="Label1" class="aspNetDisabled">Test</span>`

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IAttributeAccessor.GetAttribute : string -&gt; string&#xA;override this.System.Web.UI.IAttributeAccessor.GetAttribute : string -&gt; string" Usage="webControl.System.Web.UI.IAttributeAccessor.GetAttribute name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性の名前。</param>
        <summary>指定された名前の Web コントロールの属性を取得します。</summary>
        <returns>属性の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> メソッドは、明示的なインターフェイスメンバーの実装です。 <xref:System.Web.UI.WebControls.WebControl> クラスのインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされている場合にのみ使用できます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IAttributeAccessor.SetAttribute : string * string -&gt; unit&#xA;override this.System.Web.UI.IAttributeAccessor.SetAttribute : string * string -&gt; unit" Usage="webControl.System.Web.UI.IAttributeAccessor.SetAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性の名前/値ペアの名前の構成要素。</param>
        <param name="value">属性の名前/値ペアの値の構成要素。</param>
        <summary>Web コントロールの属性を指定された名前と値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> メソッドは、明示的なインターフェイスメンバーの実装です。 <xref:System.Web.UI.WebControls.WebControl> クラスのインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされている場合にのみ使用できます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールのタブ インデックスを取得または設定します。</summary>
        <value>Web サーバー コントロールのタブ インデックス。 既定値は <see langword="0" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Web フォームページの Web サーバーコントロールのタブインデックスを指定または確認するには、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティを使用します。 `Tab` キーを押すと、Web サーバーコントロールがフォーカスを受け取る順序は、各コントロールの <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティによって決定されます。 ページが最初に読み込まれるときに、`Tab` キーが押されたときにフォーカスを受け取る最初の項目がアドレスバーになります。 次に、Web フォームページのコントロールは、各コントロールの [<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>] プロパティの値に基づいて、昇順にタブ設定されます。これは、最小の正の0以外の値から始まります。 複数のコントロールが同じタブインデックスを共有する場合、コントロールは Web フォームページで宣言されている順序でフォーカスを受け取ります。 最後に、0のタブインデックスを持つコントロールは、宣言された順序でタブになります。

> [!NOTE]
>  0以外のタブインデックスを持つコントロールのみが、`tabindex` 属性を表示します。

 [<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>] プロパティを負の値に設定すると、タブオーダーから Web サーバーコントロールを削除できます。

> [!NOTE]
>  このプロパティは、Internet Explorer 4 以降でのみサポートされています。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> の <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティを使用して、ページ上のコントロールのタブオーダーを設定する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したタブ インデックスが、-32768 から 32767 の間にありません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この Web サーバー コントロールに対応する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 この Web サーバーコントロールに関連付けられている <xref:System.Web.UI.HtmlTextWriterTag> 値を確認するには、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A> プロパティを使用します。 このプロパティは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール タグの名前を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>コントロール タグの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 この Web サーバーコントロールに関連付けられているコントロールタグの名前を確認するには、<xref:System.Web.UI.WebControls.WebControl.TagName%2A> プロパティを使用します。 このプロパティは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが Web サーバー コントロールの上を移動したときに表示されるテキストを取得または設定します。</summary>
        <value>マウス ポインターが Web サーバー コントロールの上を移動したときに表示されるテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> プロパティを使用して、マウスポインターが Web サーバーコントロールの上に置かれたときに表示されるカスタムテキストを指定します。

> [!NOTE]
>  このプロパティは、すべてのブラウザーに表示されます。 ただし、このプロパティがヒントとして表示されるのは、Microsoft Internet Explorer だけです。 他のすべてのブラウザーでは、このプロパティは無視されます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承される <xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> プロパティを設定する方法を示しています。

> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールでそのビュー ステートの変化を追跡して、その変化をオブジェクトの <see cref="P:System.Web.UI.Control.ViewState" /> プロパティに保存できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。

 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> は、コントロールのビューステートへの変更の追跡と保存を開始する開始点をマークします。 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> メソッドは、サーバーコントロールが初期化されるときに ASP.NET によって自動的に呼び出されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/1whwt1k7(v=vs.100)">コントロールの状態とビューステートのサンプル</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの幅を取得または設定します。</summary>
        <value>コントロールの幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は、<see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティを使用して、Web サーバーコントロールの幅を指定します。

> [!NOTE]
>  このプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーのすべてのコントロールに対しては表示されません。 以前のブラウザーでこのプロパティを表示しないコントロールには、<xref:System.Web.UI.WebControls.Label>、<xref:System.Web.UI.WebControls.HyperLink>、<xref:System.Web.UI.WebControls.LinkButton>、およびすべての検証コントロールが含まれます。 また、`RepeatLayout` プロパティが `RepeatLayout.Flow`に設定されている場合、<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList> および <xref:System.Web.UI.WebControls.DataList> も、以前のブラウザーでこのプロパティを表示しません。 さらに、以前のブラウザーでサポートされているのは、`Pixel` と `Percentage` のユニットの種類だけです。

 このプロパティは非標準の HTML であるため、<xref:System.Web.UI.WebControls.Table> や <xref:System.Web.UI.WebControls.DataGrid>などのテーブルとして表示される Web サーバーコントロールは、Microsoft Internet Explorer version 4 より前のブラウザーではこのプロパティをサポートしていません。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティを、既定の `Pixel`以外の単位型に宣言して設定するには、必要な単位の種類に固有の新しい単位の種類を作成する必要があります。 たとえば、コントロールの <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティをパーセント値100に設定するには、次のようにします。
>
>  `myWebControl.width = Unit.Percentage(100);`
>
>  <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティで使用できる単位の種類の詳細については、<xref:System.Web.UI.WebControls.Unit> クラスを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.WebControl> 基本クラスから継承された <xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティを宣言によって設定する方法を示しています。

 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Web サーバー コントロールの幅が負の値に設定されました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET サーバーコントロールとブラウザー機能</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)">カスタム ASP.NET サーバーコントロールの開発</related>
      </Docs>
    </Member>
  </Members>
</Type>
