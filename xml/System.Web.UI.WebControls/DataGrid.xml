<Type Name="DataGrid" FullName="System.Web.UI.WebControls.DataGrid">
  <Metadata><Meta Name="ms.openlocfilehash" Value="773a33788493020720bf27eaa7768bd091687351" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77244591" /></Metadata><TypeSignature Language="C#" Value="public class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGrid" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGrid&#xA;Inherits BaseDataList&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGrid : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer" />
  <TypeSignature Language="F#" Value="type DataGrid = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>テーブルのデータ ソースから取得した項目を表示するデータ連結リスト コントロール。 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールではこれらの項目の選択、並べ替え、および編集を行えます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#Introduction)  
  
-   [ユーザー補助](#Accessibility)  
  
-   [宣言型の構文](#DeclarativeSyntax)  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.DataGrid> コントロールを使用する前に、代わりに <xref:System.Web.UI.WebControls.GridView> コントロールを使用することを検討してください。 .NET Framework バージョン2.0 で導入された <xref:System.Web.UI.WebControls.GridView> コントロールは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの後継です。  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールを使用して、データソースのフィールドをテーブルの列として表示します。 <xref:System.Web.UI.WebControls.DataGrid> コントロールの各行は、データソース内のレコードを表します。 <xref:System.Web.UI.WebControls.DataGrid> コントロールでは、選択、編集、削除、ページング、および並べ替えがサポートされています。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 検証サーバーコントロールは、ユーザーの入力を評価するためにも用意されています。 詳細については、「[検証サーバーコントロールの構文](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)」を参照してください。  
  
 さまざまな列の型によって、コントロール内の列の動作が決まります。 次の表に、使用できるさまざまな列の型を示します。  
  
|列の型|説明|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|データソース内のフィールドにバインドされた列を表示します。 フィールド内の各項目がテキストとして表示されます。 これは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの既定の列型です。|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|列の各項目に対してコマンドボタンを表示します。 これにより、`Add` や `Remove` ボタンなど、カスタムボタンコントロールの列を作成できます。|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|列の各アイテムの編集コマンドを含む列を表示します。|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|列の各項目の内容をハイパーリンクとして表示します。 列の内容は、データソース内のフィールドまたは静的テキストにバインドできます。|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|指定されたテンプレートに従って、列内の各項目を表示します。 これにより、列にカスタムコントロールを提供できます。|  
  
 既定では、<xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> プロパティは `true`に設定されます。これにより、データソースの各フィールドに対して <xref:System.Web.UI.WebControls.BoundColumn> オブジェクトが作成されます。 各フィールドは、データソースに各フィールドが表示される順序で、<xref:System.Web.UI.WebControls.DataGrid> コントロールの列としてレンダリングされます。  
  
 また、<xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> プロパティを `false` に設定し、開始タグと `<Columns>` 終了タグの間に含める列を一覧表示して、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示する列を手動で制御することもできます。 指定された列は、一覧に示されている順序で <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションに追加されます。 これにより、<xref:System.Web.UI.WebControls.DataGrid> コントロールの列をプログラムで制御できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される列の順序は、列が <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションに表示される順序によって制御されます。 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションを操作して、列の順序をプログラムで変更することもできますが、必要な表示順序で列を一覧表示する方が簡単です。  
  
 明示的に宣言された列は、自動的に生成された列と共に表示できます。 両方を使用する場合は、明示的に宣言された列が最初に表示され、その後に自動的に生成された列が続きます。  
  
> [!NOTE]
>  自動的に生成された列は、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションには追加されません。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの外観は、コントロールのさまざまな部分のスタイルプロパティを設定することによってカスタマイズできます。 次の表は、さまざまなスタイルプロパティを示しています。  
  
|Style プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールの交互の項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールで編集される項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールのフッターセクションのスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールのヘッダーセクションのスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールのページ選択セクションのスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールで選択されている項目のスタイルを指定します。|  
  
 コントロールのさまざまな部分の表示と非表示を切り替えることもできます。 表示または非表示にする部分を制御するプロパティを次の表に示します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールのフッターセクションの表示と非表示を切り替えます。|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>|<xref:System.Web.UI.WebControls.DataGrid> コントロールのヘッダーセクションの表示と非表示を切り替えます。|  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの外観を制御するには、プログラムを使用して、`<td>` に属性を追加し、ブラウザーでコントロールによってレンダリングされるタグ `<tr>` します。 属性は、<xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> または <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> イベントのイベントハンドラーにコードを提供することによって、プログラムで追加できます。  
  
 属性を `<td>` タグに追加するには、まず、属性を追加する <xref:System.Web.UI.WebControls.DataGrid> コントロール内のセルを表す <xref:System.Web.UI.WebControls.TableCell> オブジェクトを取得します。 イベントハンドラーに渡された <xref:System.Web.UI.WebControls.DataGridItemEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> プロパティの <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> コレクションを使用すると、目的の <xref:System.Web.UI.WebControls.TableCell> オブジェクトを取得できます。 次に、<xref:System.Web.UI.WebControls.TableCell> オブジェクトの <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> コレクションの <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> メソッドを使用して、`<td>` タグに属性を追加できます。  
  
 属性を `<tr>` タグに追加するには、まず、属性を追加する <xref:System.Web.UI.WebControls.DataGrid> コントロール内の行を表す <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトを取得します。 イベントハンドラーに渡された <xref:System.Web.UI.WebControls.DataGridItemEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> プロパティを使用して、目的の <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトを取得できます。 次に、<xref:System.Web.UI.WebControls.DataGridItem> オブジェクトの <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> コレクションの <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> メソッドを使用して、`<tr>` タグに属性を追加できます。  
  
<a name="Accessibility"></a>   
## <a name="accessibility"></a>アクセシビリティ  
 ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))と[ASP.NET のコントロールとアクセシビリティ](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:DataGrid  
    AccessKey="string"  
    AllowCustomPaging="True|False"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSortCommand="SortCommand event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    PageSize="integer"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <Columns>  
                <asp:BoundColumn  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ReadOnly="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundColumn>  
                <asp:ButtonColumn  
                    ButtonType="LinkButton|PushButton"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonColumn>  
                <asp:EditCommandColumn  
                    ButtonType="LinkButton|PushButton"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:EditCommandColumn>  
                <asp:HyperLinkColumn  
                    DataNavigateUrlField="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    NavigateUrl="uri"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkColumn>  
                <asp:TemplateColumn  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateColumn>  
        </Columns>  
        <EditItemStyle />  
        <FooterStyle />  
        <HeaderStyle />  
        <ItemStyle />  
        <PagerStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalAlign="NotSet|Left|Center|Right|Justify"  
            Mode="NextPrev|NumericPages"  
            NextPageText="string"  
            OnDisposed="Disposed event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PrevPageText="string"  
            VerticalAlign="NotSet|Top|Middle|Bottom"  
            Visible="True|False"  
            Width="size"  
            Wrap="True|False"  
        />  
        <SelectedItemStyle />  
</asp:DataGrid>  
```  
  
   
  
## Examples  
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=11217)できます。  
  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid> コントロールを使用して、データソース内の項目を表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 次のコード例は、簡単なショッピングカートに対して <xref:System.Web.UI.WebControls.DataGrid> コントロールを使用する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic DataGrid Example 2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/source2vb.aspx#2)]  
  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid> コントロールによって生成される `<td>` および `<tr>` タグに動的に属性を追加する方法を示します。  
  
 [!code-aspx-csharp[DataGridTrTdTags#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridTrTdTags/CS/datagridtdtrtagcs.aspx#1)]
 [!code-aspx-vb[DataGridTrTdTags#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridTrTdTags/VB/datagridtdtrtagvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridExample/CS/datagridcs.aspx#1)]
 [!code-aspx-vb[DataGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridExample/VB/datagridvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGrid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.DataGrid> クラスの新しいインスタンスを作成し、初期化します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> クラスの新しいインスタンスを作成して初期化する方法を示しています。  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ページングを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>カスタム ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングを使用すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの内容をページセグメントに表示できます。 ページ上の項目の数は、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティによって決定されます。 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティに値が指定されていない場合、<xref:System.Web.UI.WebControls.DataGrid> はページに10個の項目を表示します。  
  
 通常、<xref:System.Web.UI.WebControls.DataGrid> コントロールのすべての行を含むデータソースは、<xref:System.Web.UI.WebControls.DataGrid> コントロールが別のページに移動するたびに読み込まれます。 これにより、データソースが非常に大きい場合に多くのリソースが消費される可能性があります。 カスタムページングを使用すると、1つのページを表示するために必要なデータのセグメントだけを読み込むことができます。  
  
 カスタムページングを有効にするには、<xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> と <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> の両方のプロパティを `true`に設定します。 次に、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントを処理するコードを指定します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントハンドラーの一般的なロジックでは、最初に <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示するページのインデックスに設定します。  
  
> [!NOTE]
>  イベントハンドラーは、パラメーターとして <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトを受け取ります。 このパラメーターの <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのページ選択要素からユーザーが選択したページのインデックスを確認できます。  
  
 次に、1つのページに表示するデータを含むデータソースを作成し、<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドを使用してデータを <xref:System.Web.UI.WebControls.DataGrid> コントロールにバインドします。  
  
> [!NOTE]
>  データのセグメントのみが読み込まれるため、<xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティを <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目の合計数に設定する必要があります。 これにより、コントロールは、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のすべての項目を表示するために必要なページの合計数を決定できます。 このプロパティは、通常、<xref:System.Web.UI.WebControls.DataGrid> コントロール内の項目の合計数が決定されると、プログラムによって設定されます。  
  
 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティを `false`に設定してページングを有効にした場合、<xref:System.Web.UI.WebControls.DataGrid> コントロールでは、表示されるすべてのアイテムがデータソースに含まれていると想定されます。 <xref:System.Web.UI.WebControls.DataGrid> 制御は、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティによって指定されたページインデックスに基づいて、表示されるページ上の項目のインデックスを計算し、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティによって指定されたページ上の項目の数を計算します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティが `true`に設定されている場合、<xref:System.Web.UI.WebControls.DataGrid> コントロールでは、<xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティによって決定された項目のみがデータソースに含まれることを前提としています。 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティによって指定された項目数までのすべての項目が表示されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティを使用してカスタムページングを有効にする方法を示しています。  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページングが有効かどうかを示す値を取得または設定します。</summary>
        <value>ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングを使用すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの内容をページセグメントに表示できます。 ページ上の項目の数は、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティによって決定されます。 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティに値が指定されていない場合は、<xref:System.Web.UI.WebControls.DataGrid> コントロールによってページに10個の項目が表示されます。  
  
 既定では、ページングは無効になっています。 ページングを有効にするには、このプロパティを `true` に設定し、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントを処理するコードを指定します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントの一般的なロジックは、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示するページのインデックスに設定し、<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドを使用してデータを <xref:System.Web.UI.WebControls.DataGrid> コントロールにバインドすることです。  
  
> [!NOTE]
>  イベントハンドラーは、パラメーターとして <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトを受け取ります。 このパラメーターの <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのページ選択要素からユーザーが選択したページのインデックスを確認できます。  
  
 標準のページングでは、<xref:System.Web.UI.WebControls.DataGrid> コントロールは、表示されるすべての項目がデータソースに含まれることを前提としています。 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティによって指定されたページインデックスに基づいて、表示されるページ上の項目のインデックスを計算し、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティによって指定されたページ上の項目の項目数を計算します。  
  
 通常、表示されるすべての項目が含まれているデータソースは、<xref:System.Web.UI.WebControls.DataGrid> コントロールがページングされるたびに読み込まれます。 これにより、データソースが非常に大きい場合に多くのリソースが消費される可能性があります。 カスタムページングを使用すると、1つのページを表示するために必要なデータのセグメントだけを読み込むことができます。 カスタムページングの詳細については、「<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティ」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> プロパティを使用してページングを有効にする方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSorting : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えが有効かどうかを示す値を取得または設定します。</summary>
        <value>並べ替えが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 並べ替えが有効になっている場合、<xref:System.Web.UI.WebControls.LinkButton> コントロールは、<xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A> プロパティが設定されている各列の見出しセクションに表示されます。 これらの <xref:System.Web.UI.WebControls.LinkButton> コントロールを使用すると、選択した列で <xref:System.Web.UI.WebControls.DataGrid> コントロールを並べ替えることができます。 唯一の例外は、<xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> プロパティが設定された <xref:System.Web.UI.WebControls.TemplateColumn> 列の型を使用する場合です。 この場合は、列の <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> に <xref:System.Web.UI.WebControls.Button> コントロールを指定する必要があります。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは、<xref:System.Web.UI.WebControls.LinkButton> コントロールの1つがクリックされたときに発生します。 イベントハンドラーのコードを指定するのはお勧めです。 ハンドラーの一般的なロジックでは、リストを並べ替え、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.AllowSorting%2A> プロパティを使用して並べ替えを有効にする方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの交互の項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> の交互の項目のスタイル プロパティを表す <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの交互の項目にカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 代替項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<AlternatingItemStyle>` タグを配置します。 その後、開始 `<AlternatingItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの交互の項目に対して異なる背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[DataGridAlternatingItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAlternatingItemStyle/CS/datagridalternatingitemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridAlternatingItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAlternatingItemStyle/VB/datagridalternatingitemstylevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースの各フィールドに対して <see cref="T:System.Web.UI.WebControls.BoundColumn" /> オブジェクトを自動的に作成して <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールに表示するかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> オブジェクトを自動的に生成して表示する場合は <see cref="T:System.Web.UI.WebControls.BoundColumn" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、データソースの各フィールドに対して <xref:System.Web.UI.WebControls.BoundColumn> オブジェクトが自動的に作成されます。 各フィールドは、データソースにフィールドが表示される順序で、<xref:System.Web.UI.WebControls.DataGrid> コントロールの列としてレンダリングされます。  
  
 すべてのデータ型を <xref:System.Web.UI.WebControls.DataGrid> コントロールにバインドすることはできません。 フィールドにサポートされていないデータ型が含まれている場合は、そのフィールドに対して列が作成されません。 データソースにサポートされていないデータ型の列が1つしか含まれていない場合は、例外がスローされます。 次の表は、コントロールにバインドできるデータ型を示しています。  
  
|データ型|説明|  
|---------------|-----------------|  
|プリミティブ|プリミティブデータ型 (<xref:System.Int32?displayProperty=nameWithType>、<xref:System.Char>、<xref:System.Double>など)。 完全な一覧については、「<xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType>」を参照してください。|  
|String|<xref:System.String?displayProperty=nameWithType> オブジェクトです。|  
|DateTime|<xref:System.DateTime?displayProperty=nameWithType> オブジェクトです。|  
|Decimal|<xref:System.Decimal?displayProperty=nameWithType> オブジェクトです。|  
  
> [!NOTE]
>  明示的に宣言された列は、自動生成された列と組み合わせて使用できます。 両方を使用する場合は、明示的に宣言された列が最初に表示され、その後に自動生成された列が続きます。 自動生成された列は <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションに追加されません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> プロパティを使用して、データソースの各フィールドに対して <xref:System.Web.UI.WebControls.BoundColumn> オブジェクトを自動的に作成する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの背景に表示するイメージの URL を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの背景に表示するイメージの URL。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの背景に表示するイメージを指定します。  
  
> [!NOTE]
>  指定したイメージが <xref:System.Web.UI.WebControls.DataGrid> コントロールより小さい場合は、コントロールの背景を塗りつぶすために画像が並べられます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの背景画像を指定する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridBackImageUrl/CS/datagridbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DataGridBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridBackImageUrl/VB/datagridbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> コントロールの項目に対して <see cref="T:System.Web.UI.WebControls.DataGrid" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して `Cancel` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを `-1` (項目の選択を解除) に設定し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して行われた編集をキャンセルするために、<xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Cancel` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataGrid.CancelCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Columns As DataGridColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridColumnCollection ^ Columns { System::Web::UI::WebControls::DataGridColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Web.UI.WebControls.DataGridColumnCollection" Usage="System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの列を表すオブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> コントロールの列を表すオブジェクトのコレクションを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロール内の列のコレクションをプログラムで制御します。 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションには、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される、明示的に宣言された列が含まれています。  
  
> [!NOTE]
>  明示的に宣言された列は、自動的に生成された列と組み合わせて使用できます。 両方を使用する場合は、明示的に宣言された列が最初に表示され、その後に自動的に生成された列が続きます。 自動的に生成された列は、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションには追加されません。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される列の順序は、列が <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションに表示される順序によって制御されます。  
  
 次の表は、<xref:System.Web.UI.WebControls.DataGridColumn> クラスから派生し、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションで使用できるさまざまな列クラスを示しています。  
  
|列の型|説明|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|データソース内のフィールドにバインドされた列を表示します。 フィールド内の各項目がテキストとして表示されます。 これは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの既定の列型です。|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|列の各項目に対してコマンドボタンを表示します。 これにより、`Add` や `Remove` ボタンなど、カスタムボタンコントロールの列を作成できます。|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|列の各アイテムの編集コマンドを含む列を表示します。|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|列の各項目の内容をハイパーリンクとして表示します。 列の内容は、データソース内のフィールドまたは静的テキストにバインドできます。|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|指定されたテンプレートに従って、列内の各項目を表示します。 これにより、列にカスタムコントロールを提供できます。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションにはプログラムで列を追加できますが、列を静的に一覧表示し、<xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> プロパティを使用して列を表示または非表示にする方が簡単です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションを使用して <xref:System.Web.UI.WebControls.DataGrid> コントロールに列を動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Columns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Columns Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumnSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList CreateColumnSet (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ArrayList CreateColumnSet(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnSet (dataSource As PagedDataSource, useDataSource As Boolean) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ArrayList ^ CreateColumnSet(System::Web::UI::WebControls::PagedDataSource ^ dataSource, bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnSet : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ArrayList&#xA;override this.CreateColumnSet : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ArrayList" Usage="dataGrid.CreateColumnSet (dataSource, useDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">コントロール階層を作成するために使用されるデータ ソース。</param>
        <param name="useDataSource">列の自動生成や保存済み状態の使用のためにデータ ソースを使用するかどうか。</param>
        <summary>コントロール階層の構築に使用する列のセットを作成します。 <see cref="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" /> が true の場合、データ ソースと一致するように列が作成され、<see cref="P:System.Web.UI.WebControls.DataGrid.Columns" /> コレクションで定義される列の集合に追加されます。</summary>
        <returns>有効な列の集合を正しい順序で格納している <see cref="T:System.Collections.ArrayList" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataGrid.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">列の自動生成や保存済み状態の使用のためにデータ ソースを使用するかどうか。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> を表示するために使用されるコントロール階層を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装では、controls コレクション内のすべての子が既にクリアされていることを前提としています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="useDataSource" /> が <see langword="true" /> でも、<see cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" /> の値が設定されていないため、選択したデータ ソースは <see cref="T:System.Collections.ICollection" /> インターフェイスを実装しません。  
  
または 
 <paramref name="useDataSource" /> が <see langword="true" /> でも、データ ソースの <see cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" /> プロパティが無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataGrid.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいコントロール スタイルを作成します。</summary>
        <returns>新しいスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.DataGrid.CreateControlStyle%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid>に <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> を含まない <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> を常に表示する方法を示します。  
  
 [!code-aspx-csharp[CustomDataGridCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataGridCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataGridCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstyle.cs#2)]
[!code-vb[CustomDataGridCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataGridItem CreateItem (int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataGridItem CreateItem(int32 itemIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, dataSourceIndex As Integer, itemType As ListItemType) As DataGridItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataGridItem ^ CreateItem(int itemIndex, int dataSourceIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataGridItem&#xA;override this.CreateItem : int * int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataGridItem" Usage="dataGrid.CreateItem (itemIndex, dataSourceIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトのインデックス。</param>
        <param name="dataSourceIndex">データ ソースのデータ項目のインデックス。</param>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 値のいずれか 1 つです。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.CreateItem%2A> は、<xref:System.Web.UI.WebControls.DataGridItem> オブジェクトを作成するために <xref:System.Web.UI.WebControls.DataGrid> クラスによって使用されるヘルパーメソッドです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在表示されているページのインデックスを取得または設定します。</summary>
        <value>現在表示されているページの 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、ページングが有効になっている場合に <xref:System.Web.UI.WebControls.DataGrid> コントロールに現在表示されているページを確認します。 このプロパティは、表示されるページをプログラムによって制御するためにも使用されます。  
  
 また、組み込みのページングコントロールを非表示にしたり、カスタムコントロールを作成したりすることもできます。 特定のページを表示するには、このプロパティを表示するページインデックスに設定し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示するページをプログラムで制御する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたページ インデックスが負の値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目に対して Delete ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して [削除] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントの一般的なハンドラーは、選択された項目をデータソースから削除し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールから項目を削除するために、<xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delete コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [<xref:System.Web.UI.WebControls.DataGrid.DeleteCommandName>] フィールドは、[削除] コマンド名を表すために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目に対して Edit ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して [編集] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを選択された行に設定し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目を編集するために、<xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Edit コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [<xref:System.Web.UI.WebControls.DataGrid.EditCommandName>] フィールドは、[編集] コマンド名を表すために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集する <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目のインデックスを取得または設定します。</summary>
        <value>編集する <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目のインデックス。 既定値は -1 です。これは、<see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目が編集されないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールに <xref:System.Web.UI.WebControls.EditCommandColumn> が含まれている場合は、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを使用して、編集する <xref:System.Web.UI.WebControls.DataGrid> コントロールで選択されている項目のインデックスを決定します。  
  
 このプロパティは、編集中の項目をプログラムによって制御するためにも使用されます。 このプロパティを <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目のインデックスに設定すると、<xref:System.Web.UI.WebControls.EditCommandColumn>でその項目のコントロールを編集できるようになります。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティは0から始まります。  
  
 編集を取り消すには、プログラムでこのプロパティを-1 に設定します。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで編集対象として選択されている項目を判断する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたインデックスが -1 未満です。</exception>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの編集対象として選択された項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの編集対象として選択された項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで編集するために選択した項目のカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 編集対象として選択した項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<EditItemStyle>` タグを配置します。 その後、開始 `<EditItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> プロパティを使用して、編集対象として選択した項目の背景色を黄色に設定する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールのフッター セクションのスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター セクションのスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのフッターにカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティのスタイル設定を継承します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティにも赤いフォントが表示されます。 これにより、1つのスタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 継承されたスタイルの設定をオーバーライドするには、<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティに青いフォントを指定できます。  
  
 フッターセクションのカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<FooterStyle>` タグを配置します。 その後、開始 `<FooterStyle>` タグ内にスタイル属性を一覧表示できます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> プロパティを `true` に設定する必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティを使用して、フッターセクションの背景色を設定する方法を示します。  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの見出しセクションのスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの見出しセクションのスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの見出しセクションにカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティのスタイル設定を継承します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティにも赤いフォントが表示されます。 これにより、1つのスタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 継承されたスタイルの設定をオーバーライドするには、<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティに青いフォントを指定できます。  
  
 見出しセクションのカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<HeaderStyle>` タグを配置します。 その後、開始 `<HeaderStyle>` タグ内にスタイル属性を一覧表示できます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> プロパティを `true` に設定する必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティを使用して、見出しセクションの背景色を設定する方法を示します。  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataGridItem item, class System.Web.UI.WebControls.DataGridColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataGridItem, columns As DataGridColumn())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataGridItem ^ item, cli::array &lt;System::Web::UI::WebControls::DataGridColumn ^&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataGridItem * System.Web.UI.WebControls.DataGridColumn[] -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataGridItem * System.Web.UI.WebControls.DataGridColumn[] -&gt; unit" Usage="dataGrid.InitializeItem (item, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columns" Type="System.Web.UI.WebControls.DataGridColumn[]" />
      </Parameters>
      <Docs>
        <param name="item">初期化する <see cref="T:System.Web.UI.WebControls.DataGridItem" />。</param>
        <param name="columns">この <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> コントロールの列を格納した <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクトの配列。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.InitializeItem%2A> メソッドは、指定された <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトを初期化するために <xref:System.Web.UI.WebControls.DataGrid> クラスによって使用されるヘルパーメソッドです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DataGridItem item, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::DataGridItem ^ item, int columnSpan, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.DataGridItem * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.DataGridItem * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="dataGrid.InitializePager (item, columnSpan, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="item">ページャーを格納している <see cref="T:System.Web.UI.WebControls.DataGridItem" />。</param>
        <param name="columnSpan">ページャーが複数の列にまたがって表示される場合の列数。</param>
        <param name="pagedDataSource">ページャーのプロパティを格納している <see cref="T:System.Web.UI.WebControls.PagedDataSource" />。</param>
        <summary>ページング UI を格納した <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング UI は、<xref:System.Web.UI.WebControls.DataGrid> コントロールのすべての列にまたがる1つの <xref:System.Web.UI.WebControls.TableCell> に組み込まれているナビゲーションバーです。 <xref:System.Web.UI.WebControls.DataGrid.InitializePager%2A> メソッドは、<xref:System.Web.UI.WebControls.DataGrid> クラスがポケットベルの行を作成するために使用するヘルパーメソッドです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの任意のボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールのボタンがクリックされると発生します。 このイベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールにカスタムの CommandName 値 (Add など) を使用してボタンコントロールを処理するためによく使用されます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントのハンドラーを指定して、ショッピングカートの項目を追加または削除する方法を示します。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataGridItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataGridItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataGridItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールに項目が作成されたときにサーバーで発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは、ラウンドトリップ中とデータがコントロールにバインドされているときの両方で、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目が作成されたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは、通常、<xref:System.Web.UI.WebControls.DataGrid> コントロールの行の内容と外観を制御するために使用されます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> コントロールに項目が作成された順序を表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataGridItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataGridItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataGridItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目が <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールにデータ連結された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントは、項目が <xref:System.Web.UI.WebControls.DataGrid> コントロールにデータバインドされた後に発生します。 このイベントは、データ項目がクライアントに表示される前に、そのデータ項目にアクセスする最後の機会を提供します。 このイベントが発生すると、データ項目は nulled out になり、使用できなくなります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> 内の項目がデータに制限されている順序を表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataGridItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridItemCollection ^ Items { System::Web::UI::WebControls::DataGridItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataGridItemCollection" Usage="System.Web.UI.WebControls.DataGrid.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> コントロールの個別の項目を表す <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridItemCollection" /> コントロールの個別の項目を表す <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトのコレクションを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目をプログラムで制御するには、<xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションを使用します。 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションには、コレクションに対して項目を追加または削除するメソッドは用意されていません。 ただし、<xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントのハンドラーを指定することによって、項目の内容を制御できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションには、データソースにバインドされている項目のみが含まれます。 ヘッダー、フッター、および区切り記号はコレクションに含まれません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの各項目の内容を表示する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Items Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目にカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<ItemStyle>` タグを配置します。 その後、開始 `<ItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
 また、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの交互の項目に対して異なる外観を提供することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> 内の項目の背景色を黄色に設定する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataGrid.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.DataGrid" /> の保存された状態。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> の保存された状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string NextPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NextPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Const NextPageCommandArgument As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ NextPageCommandArgument;" />
      <MemberSignature Language="F#" Value="val mutable NextPageCommandArgument : string" Usage="System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Next コマンド引数を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次のコマンド引数を表すには、<xref:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataGrid.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソースです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>コンテナー内のコントロールによって発生したイベントをページの UI サーバー コントロール階層の上位に渡します。</summary>
        <returns>このメソッドがコンテナー内のコントロールによって発生したイベントをページの UI サーバー コントロール階層の上位に渡すことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.OnBubbleEvent%2A> メソッドを使用して、コンテナー内のコントロールによって発生したイベントをページの UI サーバーコントロール階層の上位に渡します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnCancelCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して [キャンセル] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを `-1` (項目の選択を解除) に設定し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して行われた編集をキャンセルするために、<xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnDeleteCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して [削除] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントの一般的なハンドラーは、選択された項目をデータソースから削除し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールから項目を削除するために、<xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnEditCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目に対して [編集] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを選択された行に設定し、データを <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目を編集するために、<xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnItemCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールのボタンがクリックされると発生します。 このイベントは、<xref:System.Web.UI.WebControls.DataGrid> コントロールにカスタムの CommandName 値 (Add など) を使用してボタンコントロールを処理するためによく使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントのハンドラーを指定して、ショッピングカートの項目を追加または削除する方法を示します。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataGridItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataGridItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit" Usage="dataGrid.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは、ラウンドトリップ中とデータがコントロールにバインドされているときの両方で、<xref:System.Web.UI.WebControls.DataGrid> コントロールの項目が作成されたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは、通常、<xref:System.Web.UI.WebControls.DataGrid> コントロールの行の内容と外観を制御するために使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> コントロールに項目が作成された順序を表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataGridItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataGridItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit" Usage="dataGrid.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントは、項目が <xref:System.Web.UI.WebControls.DataGrid> コントロールにデータバインドされた後に発生します。 このイベントは、データ項目がクライアントに表示される前に、そのデータ項目にアクセスする最後の機会を提供します。 このイベントが発生すると、データ項目は nulled out になり、使用できなくなります。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> 内の項目がデータに制限されている順序を表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (System.Web.UI.WebControls.DataGridPageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.Web.UI.WebControls.DataGridPageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As DataGridPageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(System::Web::UI::WebControls::DataGridPageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventArgs -&gt; unit" Usage="dataGrid.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged%2A> メソッドを使用します。  
  
 ページ選択要素のいずれかがクリックされると、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントが発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示するページのインデックスに設定し、<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドを使用してデータを <xref:System.Web.UI.WebControls.DataGrid> コントロールにバインドします。  
  
> [!NOTE]
>  イベントハンドラーは、パラメーターとして <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトを受け取ります。 このパラメーターの <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのページ選択要素からユーザーが選択したページのインデックスを確認できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントのハンドラーを指定し、コーディングする方法を示しています。 <xref:System.Web.UI.WebControls.DataGrid> コントロールのページが10項目単位で表示されます。  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnSortCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCommand (System.Web.UI.WebControls.DataGridSortCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCommand(class System.Web.UI.WebControls.DataGridSortCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCommand (e As DataGridSortCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCommand(System::Web::UI::WebControls::DataGridSortCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCommand : System.Web.UI.WebControls.DataGridSortCommandEventArgs -&gt; unit&#xA;override this.OnSortCommand : System.Web.UI.WebControls.DataGridSortCommandEventArgs -&gt; unit" Usage="dataGrid.OnSortCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnSortCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは、列が並べ替えられたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントの一般的なハンドラーによってリストが並べ替えられ、データが <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドされます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid> コントロールを並べ替える <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントのハンドラーを指定し、コーディングする方法を示します。  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> をオーバーライドする場合は、必ず基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> メソッドを呼び出してください。  
  
イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントは、項目の [更新] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントの一般的なハンドラーによってデータが更新され、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティが-1 に設定され (項目の選択を解除)、データが <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドされます。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> コントロール内の項目の値をユーザーが指定した新しい値に更新する方法を示します。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PageCommandName">
      <MemberSignature Language="C#" Value="public const string PageCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PageCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const PageCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PageCommandName;" />
      <MemberSignature Language="F#" Value="val mutable PageCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Page コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [<xref:System.Web.UI.WebControls.DataGrid.PageCommandName>] フィールドを使用して、ページのコマンド名を表します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目の表示に必要なページの合計数を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目の表示に必要なページの合計数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールに項目を表示するために必要なページ数をプログラムで決定します。 このプロパティは、<xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> プロパティが `true`に設定されている場合にのみ使用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.PageCount%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールに項目を表示するために必要なページ数を決定する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As DataGridPageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridPageChangedEventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventHandler " Usage="member this.PageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ選択要素の 1 つがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページ選択要素のいずれかがクリックされると、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントが発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示するページのインデックスに設定し、<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドを使用してデータを <xref:System.Web.UI.WebControls.DataGrid> コントロールにバインドします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントのハンドラーを指定し、コーディングする方法を示しています。 <xref:System.Web.UI.WebControls.DataGrid> コントロールのページが10項目単位で表示されます。  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridPagerStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerStyle As DataGridPagerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridPagerStyle ^ PagerStyle { System::Web::UI::WebControls::DataGridPagerStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.DataGridPagerStyle" Usage="System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPagerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールのページング セクションのスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> コントロールのページング セクションのスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのページングセクションのカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 ページングセクションのカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<PagerStyle>` タグを配置します。 その後、開始 `<PagerStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのページ選択要素にカスタムスタイルを指定する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPagerStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPagerStyle/CS/datagridpagerstylecs.aspx#1)]
 [!code-aspx-vb[DataGridPagerStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPagerStyle/VB/datagridpagerstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridPagerStyle" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの 1 ページに表示される項目数を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの 1 ページに表示される項目数。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの1ページに表示する項目の数を指定します。 このプロパティを有効にするには、<xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> プロパティを `true` に設定する必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールの1つのページに5つの項目を表示するように指定する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPageSize/CS/datagridpagesizecs.aspx#1)]
 [!code-aspx-vb[DataGridPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPageSize/VB/datagridpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたページ サイズが 1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void PrepareControlHierarchy ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareControlHierarchy() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareControlHierarchy ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareControlHierarchy();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataGrid.PrepareControlHierarchy " />
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールのコントロール階層を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy%2A> メソッドは、コントロールがレンダリングされる前に <xref:System.Web.UI.WebControls.DataGrid> コントロールにコントロールの階層を設定するために、<xref:System.Web.UI.WebControls.DataGrid> コントロールによって呼び出されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string PrevPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PrevPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Const PrevPageCommandArgument As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PrevPageCommandArgument;" />
      <MemberSignature Language="F#" Value="val mutable PrevPageCommandArgument : string" Usage="System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Prev コマンド引数を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 前のコマンド引数を表すには、<xref:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataGrid.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> の現在の状態を保存します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataGrid" /> の保存された状態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Select コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.SelectCommandName> フィールドは、Select コマンド名を表すために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロール内の選択された項目のインデックスを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロール内の選択された項目のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールでユーザーが選択した項目のインデックスを確認するには、<xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> プロパティを使用します。 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで選択されている項目をプログラムで指定することもできます。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目の選択を解除するには、このプロパティを-1 に設定します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで選択されている項目のインデックス番号を確認する方法を示します。 また、プログラムによって項目を選択および選択解除する方法についても説明します。  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたインデックスが -1 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataGridItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridItem ^ SelectedItem { System::Web::UI::WebControls::DataGridItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataGridItem" Usage="System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> コントロールの選択された項目を表す <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridItem" /> コントロールの選択された項目を表す <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールで選択された項目を表す <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトを取得するには、<xref:System.Web.UI.WebControls.DataGrid.SelectedItem%2A> プロパティを使用します。 このオブジェクトを使用して、選択したアイテムのプロパティにアクセスできます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択された項目のプロパティにアクセスする方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの現在選択されている項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの現在選択されている項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataGrid" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで選択した項目のカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置があります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataGrid> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 選択した項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataGrid> コントロールの開始タグと終了タグの間に `<SelectedItemStyle>` タグを配置します。 その後、開始 `<SelectedItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールで選択されている項目の背景色を黄色に設定する方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSelectedItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSelectedItemStyle/CS/datagridselecteditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridSelectedItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSelectedItemStyle/VB/datagridselecteditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールにフッターを表示するかどうかを示す値を取得または設定します。</summary>
        <value>フッターを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid> コントロールにフッターを表示するには、このプロパティを `true` に設定します。 フッターの外観は、<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティを使用して制御します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールにフッターを表示する方法を示します。  
  
 [!code-aspx-csharp[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールにヘッダーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid>にヘッダーを表示するには、このプロパティを `true` に設定します。 ヘッダーの外観は、<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティを使用して制御します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataGrid> コントロールのヘッダーを非表示にする方法を示しています。  
  
 [!code-aspx-csharp[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="SortCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCommand As DataGridSortCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridSortCommandEventHandler ^ SortCommand;" />
      <MemberSignature Language="F#" Value="member this.SortCommand : System.Web.UI.WebControls.DataGridSortCommandEventHandler " Usage="member this.SortCommand : System.Web.UI.WebControls.DataGridSortCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridSortCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列が並べ替えられたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは、列が並べ替えられたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントの一般的なハンドラーによってリストが並べ替えられ、データが <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドされます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid> コントロールを並べ替える <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントのハンドラーを指定し、コーディングする方法を示します。  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SortCommandName">
      <MemberSignature Language="C#" Value="public const string SortCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SortCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SortCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SortCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SortCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sort コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 並べ替えコマンド名を表すには、<xref:System.Web.UI.WebControls.DataGrid.SortCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールの <see cref="T:System.Web.UI.WebControls.DataGrid" /> 値を取得します。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.TagKey%2A> プロパティを使用すると、出力ストリームで <xref:System.Web.UI.WebControls.DataGrid> コントロールの適切な HTML マークアップを書き込むことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataGrid.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールへの変更の追跡および保存の開始点を、コントロールのビューステートの一部としてマークします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの項目に対して Update ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントは、項目の [更新] ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントの一般的なハンドラーによってデータが更新され、<xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティが `-1` に設定され (項目の選択が解除されます)、データが <xref:System.Web.UI.WebControls.DataGrid> コントロールに再バインドされます。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataGrid> コントロール内の項目の値をユーザーが指定した新しい値に更新する方法を示します。  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Update コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [<xref:System.Web.UI.WebControls.DataGrid.UpdateCommandName>] フィールドを使用して、更新コマンド名を表します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VirtualItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VirtualItemCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualItemCount : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ページングを使用している場合の <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの仮想項目数を取得または設定します。</summary>
        <value>カスタム ページングを使用している場合の <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの仮想項目数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、カスタムページングを使用するときに <xref:System.Web.UI.WebControls.DataGrid> コントロール内の項目の仮想数を指定します。 このプロパティは、<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティが `true`に設定されている場合にのみ使用されます。  
  
 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティが `true`に設定されている場合、<xref:System.Web.UI.WebControls.DataGrid> コントロール内のすべての項目を表示するために必要なページ数は、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> および <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> のプロパティの値に基づいて計算されます。  
  
 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティが `false`に設定されている場合、<xref:System.Web.UI.WebControls.DataGrid> コントロールに表示されるページの数は、<xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティの値とデータソース内の項目の合計数に基づいて計算されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティを使用して、カスタムページングを使用する場合の <xref:System.Web.UI.WebControls.DataGrid> コントロール内の項目の合計数を指定する方法を示します。  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値が負の数です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
  </Members>
</Type>
