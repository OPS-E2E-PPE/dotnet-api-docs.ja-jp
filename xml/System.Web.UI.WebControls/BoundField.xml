<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="105ed2fdbc0c4897f7a62eb97e2deaf5fdef551e" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78764775" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロール内にテキストとして表示されるフィールドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField> クラスは、フィールドの値をテキストとして表示するために、データバインドコントロール (<xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>など) によって使用されます。 <xref:System.Web.UI.WebControls.BoundField> オブジェクトは、使用されるデータバインドコントロールによって異なる方法で表示されます。 たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールでは <xref:System.Web.UI.WebControls.BoundField> オブジェクトが列として表示され、<xref:System.Web.UI.WebControls.DetailsView> コントロールでは行として表示されます。  
  
 <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示するフィールドを指定するには、<xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティをフィールドの名前に設定します。 フィールドの値は、[<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>] プロパティを `true`に設定することによって、表示する前に HTML エンコードできます。 カスタム書式指定文字列をフィールドの値に適用するには、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを設定します。 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティが `true`場合、フィールドのエンコードされた文字列値がカスタム書式指定文字列で使用されます。 既定では、書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。 データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。 フィールドの値が null の場合は、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定することによって、カスタムキャプションを表示できます。 また、<xref:System.Web.UI.WebControls.BoundField> オブジェクトは、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを `true`に設定することによって、空の文字列 ("") フィールド値を null 値に自動的に変換することもできます。  
  
 データバインドコントロールの <xref:System.Web.UI.WebControls.BoundField> オブジェクトを非表示にするには、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティを `false`に設定します。 フィールドの値が編集モードで変更されないようにするには、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを `true`に設定します。 レコードの挿入をサポートするデータバインドコントロール (<xref:System.Web.UI.WebControls.DetailsView> コントロールなど) では、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティを `false`に設定することにより、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを非表示にすることができます。 これは、通常、挿入モードで自動的に生成されたキーフィールドを非表示にする場合に実行されます。  
  
 <xref:System.Web.UI.WebControls.BoundField> オブジェクトのヘッダーセクションとフッターセクションをカスタマイズできます。 ヘッダーセクションまたはフッターセクションにキャプションを表示するには、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> または <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> プロパティをそれぞれ設定します。 ヘッダーセクションにテキストを表示するのではなく、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティを設定して画像を表示できます。 ヘッダーセクションは、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> プロパティを `false`に設定することによって、<xref:System.Web.UI.WebControls.BoundField> オブジェクトで非表示にすることができます。  
  
> [!NOTE]
>  一部のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView> コントロールなど) では、コントロールのヘッダーセクション全体だけを表示または非表示にすることができます。 これらのデータバインドコントロールは、個々のバインドされたフィールドの <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> プロパティをサポートしていません。 データバインドコントロールのヘッダーセクション全体 (使用可能な場合) を表示または非表示にするには、コントロールの `ShowHeader` プロパティを使用します。  
  
 また、フィールドのさまざまな部分のスタイルプロパティを設定して、<xref:System.Web.UI.WebControls.BoundField> オブジェクト (フォントの色、背景色など) の外観をカスタマイズすることもできます。 次の表は、さまざまなスタイルプロパティを示しています。  
  
|Style プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|<xref:System.Web.UI.WebControls.BoundField> オブジェクトの子 Web サーバーコントロールのスタイル設定。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|<xref:System.Web.UI.WebControls.BoundField> オブジェクトのフッターセクションのスタイル設定。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|<xref:System.Web.UI.WebControls.BoundField> オブジェクトのヘッダーセクションのスタイル設定。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|<xref:System.Web.UI.WebControls.BoundField> オブジェクト内のデータ項目のスタイル設定。|  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールのフィールドの値を表示する方法を示しています。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.BoundField> クラスの新しいインスタンスを初期化します。 このコンストラクターは、動的に作成されたデータバインドコントロールにフィールドを追加する場合によく使用されます。  
  
 データバインドコントロールに <xref:System.Web.UI.WebControls.BoundField> オブジェクトを動的に追加するには、新しい <xref:System.Web.UI.WebControls.BoundField> オブジェクトを作成し、そのプロパティを設定して、データバインドコントロールのフィールドコレクションに追加します。 たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールを使用している場合は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションに追加します。  
  
> [!NOTE]
>  フィールドはデータバインドコントロールに動的に追加できますが、フィールドを静的に宣言し、必要に応じて表示または非表示にすることを強くお勧めします。 すべてのフィールドを静的に宣言すると、親データバインドコントロールのビューステートのサイズが縮小されます。  
  
   
  
## Examples  
 次のコード例では、コンストラクターを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールに <xref:System.Web.UI.WebControls.BoundField> オブジェクトを動的に追加する方法を示します。  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> オブジェクトを格納しているデータ バインド コントロールが編集モードである場合に、<see cref="T:System.Web.UI.WebControls.BoundField" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</summary>
        <value>編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインドコントロール (<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>、<xref:System.Web.UI.WebControls.GridView>など) には、ユーザーがレコードの読み取り、編集、または挿入を行うための表示モードが異なります。 既定では、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティによって指定された書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。 データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField> オブジェクトは、データソースでフィールドが更新されたときに、書式設定を自動的に削除しません。 格納されている値の一部として書式設定が不要な場合は、プログラムによって書式設定を削除する必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.GridView> コントロールが編集モードのときに、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを使用して書式設定文字列をフィールド値に適用する方法を示します。 書式設定は、データソースの値が更新される前にプログラムによって削除されます。  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースでデータ フィールドを更新したときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value>空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、レコードを更新または挿入するときに、ユーザーがフィールド値に空の文字列を入力することがあります。 データソースのデータフィールドを更新するときに、空の文字列値を null に自動的に変換するかどうかを指定するには、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを使用します。  
  
> [!NOTE]
>  既定では、<xref:System.Web.UI.WebControls.BoundField> オブジェクトは null 値を空の文字列として表示します。 別の値を表示するには、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを使用して、空の文字列 ("") フィールド値を自動的に null に変換するように指定する方法を示します。  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.BoundField" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> メソッドは、メソッドによって作成された <xref:System.Web.UI.WebControls.DataControlField> オブジェクトに現在の <xref:System.Web.UI.WebControls.BoundField> オブジェクトのプロパティをコピーするために、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>空の <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを作成します。</summary>
        <returns>空の <see cref="T:System.Web.UI.WebControls.BoundField" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> メソッドは、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドが、現在の <xref:System.Web.UI.WebControls.BoundField> オブジェクトのプロパティをコピーする空の <xref:System.Web.UI.WebControls.BoundField> オブジェクトを作成するために使用するヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドするデータ フィールドの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドするデータ フィールドの名前。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトにバインドするデータフィールドの名前を指定します。 指定したフィールドの値は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトにテキストとして表示されます。 必要に応じて、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを設定して、表示されるテキストの書式を設定することもできます。  
  
> [!NOTE]
>  フィールドの値が null の場合、既定では空の文字列 ("") が値に対して表示されます。 代替キャプションを指定するには、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BoundField> フィールド列に表示するフィールドを指定する方法を示します。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールドの値の表示形式を指定する文字列を取得または設定します。</summary>
        <value>フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される値のカスタム表示形式を指定します。 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティが設定されていない場合、フィールドの値は特殊な書式設定なしで表示されます。  
  
> [!NOTE]
>  3.5 より前のバージョンの ASP.NET では、文字列データ型ではないフィールドの書式を設定するために、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを `false` に設定する必要があります。 それ以外の場合は、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティに格納されている書式指定文字列が適用される前に、既定の変換メソッドによってフィールド値が文字列に変換されます。  
  
 既定では、書式設定文字列は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを含むデータバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。 編集モードでフィールド値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。  
  
 書式設定文字列は任意のリテラル文字列にすることができ、通常はフィールドの値のプレースホルダーが含まれます。 たとえば、書式設定文字列 `Item Value: {0}`では、文字列が <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示されるときに、フィールドの値が {0} のプレースホルダーの代わりに使用されます。 書式設定文字列の残りの部分は、リテラルテキストとして表示されます。  
  
 書式設定文字列にプレースホルダーが含まれていない場合は、書式設定文字列自体だけが最終的な表示テキストに含まれます (データソースからのフィールドの値は含まれません)。 前の例のように、プレースホルダーが中かっこで囲まれた 0 (ゼロ) の場合、既定のメソッドによってフィールド値が文字列に変換されます。 フィールド値の書式設定方法を指定する文字列をゼロに追加することができます。 たとえば、数値フィールドのプレースホルダー `{0:C}` では、フィールドの値が通貨書式に変換されることを指定します。  
  
 書式設定は、<xref:System.String.Format%2A> メソッドを使用して適用されます。 左中かっこの後に続く数値は、そのメソッドで使用される構文の一部であり、プレースホルダーが使用する一連の値のいずれかを示します。 各セルにはフィールド値が1つしかないため、左中かっこの後の数値は0にのみ設定できます。  
  
 次の表に、数値フィールドの標準の書式設定文字を示します。 これらの書式指定文字の大文字と小文字は区別されません。ただし、`X`では、指定された場合に16進文字が表示されます。 表示する有効桁数や小数点以下の桁数を指定するために、ほとんどの書式設定文字に数字を追加できます。  
  
> [!NOTE]
>  ほとんどの場合、書式設定はサーバーのカルチャ設定によって異なります。 例として、`en-US`のカルチャ設定があります。  
  
|書式指定文字|説明|例|  
|----------------------|-----------------|-------------|  
|`C` または `c`|通貨書式で数値を表示します。 小数点以下の桁数を指定できます。|形式: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 形式: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` または `d`|整数値を10進形式で表示します。 数字の数を指定できます。 (型は "decimal" と呼ばれますが、数値は整数として書式設定されます)。|形式: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 形式: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` または `e`|指数 (指数) 形式で数値を表示します。 小数点以下の桁数を指定できます。|形式: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> 形式: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` または `f`|固定形式で数値を表示します。 小数点以下の桁数を指定できます。|形式: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 形式: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` または `g`|一般的な形式で数値を表示します (固定小数点表記または指数表記のうち、最もコンパクトな形式)。 有効桁数を指定できます。|形式: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 形式: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` または `n`|数値形式で数値を表示します (グループの区切り記号とオプションの負の符号を含む)。 小数点以下の桁数を指定できます。|形式: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 形式: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` または `p`|パーセント形式で数値を表示します。 小数点以下の桁数を指定できます。|形式: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 形式: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` または `r`|ラウンドトリップ形式で <xref:System.Single>、<xref:System.Double>、または `BigInteger` 値を表示します。|形式: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` または `x`|整数値を16進形式で表示します。 数字の数を指定できます。|形式: `{0:X}`<br /><br /> 255 -> FF<br /><br /> 形式: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 その他のカルチャ値の書式を示す詳細および例については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。 また、カスタムの数値書式指定文字列を作成することもできます。 詳細については、「[カスタム数値形式文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」をご覧ください。  
  
 次の表に、<xref:System.DateTime> フィールドの書式文字の一覧を示します。 これらの書式指定のほとんどは、カルチャの設定によって異なる出力になります。 例としては、`en-US`のカルチャ設定を使用した <xref:System.DateTime> 値 6/15/2009 1:45:30 PM が挙げられます。  
  
|書式指定文字|説明|例|  
|----------------------|-----------------|-------------|  
|`d`|短い形式の日付パターン。|形式: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009|  
|`D`|長い形式の日付パターン。|形式: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009|  
|`f`|完全な日付と時刻のパターン (短い形式の時刻)。|形式: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 1:45 PM|  
|`F`|完全な日付と時刻のパターン (長い形式の時刻)。|形式: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 1:45:30 PM|  
|`g`|一般の日付と時刻のパターン (短い形式の時刻)。|形式: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM|  
|`G`|一般の日付と時刻のパターン (長い形式の時刻)。|形式: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM|  
|`M` または `m`|月日パターン。|形式: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM-> 6 月15日|  
|`O` または `o`|ラウンドトリップする日付と時刻のパターン。|形式: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` または `r`|RFC1123 パターン (詳細については、「<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>)」を参照してください。|形式: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|並べ替え可能な日付と時刻のパターン。|形式: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|短い形式の時刻パターン。|形式: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45 PM|  
|`T`|長い形式の時刻パターン。|形式: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45:30 PM|  
|`u`|並べ替え可能な日付と時刻のパターン (世界時刻)。|形式: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|完全な日付と時刻のパターン (世界時刻)。|形式: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 8:45:30 PM|  
|`Y` または `y`|年月パターン。|形式: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM-> 6 月、2009|  
  
 その他のカルチャ値の書式を示す詳細および例については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。 また、カスタムの日付と時刻の書式指定文字列を作成することもできます。 詳細については、「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。  
  
   
  
## Examples  
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=191889)できます。  
  
 次の例では、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを使用して、フィールドの値のカスタム表示形式を指定する方法を示します。  
  
  
  
 次の例では、この例によって生成される出力の1つの行を示します。  
  
|ProductID|Name|ProductNumber|ListPrice|[太さ]|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET での型の書式設定</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">指定したセルの値の格納に使用する <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="cell">取得する値を格納している <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</param>
        <param name="includeReadOnly">読み込み専用のフィールドの値を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した <see cref="T:System.Collections.IDictionary" /> オブジェクトに、指定した <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトの値を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトの指定された <xref:System.Web.UI.WebControls.TableCell> オブジェクトからフィールドの値を取得するための便利な方法として提供されています。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 このメソッドに戻り値はありません。 代わりに、フィールド値は、`dictionary` パラメーターに渡された <xref:System.Collections.IDictionary?displayProperty=nameWithType> オブジェクトを介して参照によって返されます。 メソッドが呼び出された後、<xref:System.Collections.IDictionary?displayProperty=nameWithType> オブジェクトを反復処理してフィールド値にアクセスします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TableCell> オブジェクトに読み取り専用フィールド値が含まれている場合は、これらの値を含めるために、`includeReadOnly` パラメーターに `true` を渡す必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">書式を変換するフィールド値。</param>
        <param name="encode">値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</summary>
        <returns><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> で指定した書式に変換するフィールド値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティによって指定された形式にフィールド値を変換するために使用されるヘルパーメソッドです。 フィールド値が null の場合は、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティの値が返されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタム書式設定ルーチンを実行できます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイナーで <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを表示するときにフィールド値に使用される値を取得します。</summary>
        <returns>デザイナーでフィールド値として表示する値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> メソッドは、デザイナーで <xref:System.Web.UI.WebControls.BoundField> オブジェクトを表示するときにフィールドに表示する値を決定するために使用されるヘルパーメソッドです。 デザイン時にデータソースから実際のデータを取得できない場合は、このメソッドによって返される値が代わりに表示されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドして、デザイナーのフィールドに表示する別の値を返すことができます。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">フィールド値のコンテナー。</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドされているフィールドの値を取得します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドされているフィールドの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> メソッドは、フィールドの値を決定するために使用されるヘルパーメソッドです。 <xref:System.Web.UI.WebControls.BoundField> オブジェクトがデザイナーに表示されていて、デザイン時にフィールド値を決定できない場合は、実際のフィールド値ではなく、<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> メソッドから返された値が返されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="controlContainer" /> パラメーターによって指定されたコンテナーが <see langword="null" /> です。  
  
または 
<paramref name="controlContainer" /> パラメーターで指定されたコンテナーにデータ項目がありません。  
  
または 
データ フィールドが見つかりませんでした。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドして、フィールドの値を決定するカスタムルーチンを提供できます。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ コントロールのヘッダーに表示するテキストを取得または設定します。</summary>
        <value>データ コントロールのヘッダーに表示されるテキスト。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> プロパティを使用して、わかりやすい名前のデータコントロール内のフィールドを識別します。 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> プロパティの最も一般的なアプリケーションは、<xref:System.Web.UI.WebControls.GridView> または <xref:System.Web.UI.WebControls.DetailsView> コントロールのデータバインドフィールドにわかりやすい列名を提供することです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</summary>
        <value>フィールド値を <see langword="true" /> オブジェクトに表示する前に HTML エンコードする場合は <see cref="T:System.Web.UI.WebControls.BoundField" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを使用して、フィールド値を <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示する前に、それぞれの文字列形式に HTML エンコードするかどうかを指定します。 たとえば、このプロパティが `true`場合、文字列値 "\<script >" が "&lt;スクリプト&gt;" として表示されます。 このプロパティが `false`場合、文字列は変更されずに表示されます。  
  
> [!NOTE]
>  HTML エンコードフィールド値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。 このプロパティは、可能な場合は常に有効にする必要があります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される前にフィールド値が HTML エンコードされないようにする方法を示します。  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> プロパティを <see cref="T:System.Web.UI.WebControls.BoundField" /> 値に適用することで作成されるテキストを表示するときに、HTML エンコードするかどうかを示す値を取得または設定します。</summary>
        <value>テキストを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML エンコード値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。 HTML エンコードは、ブラウザーに HTML コードを表示する場合にも便利です。たとえば、ページに改行 (`<br/>` 要素) を挿入する代わりに、文字列 "\<br/>" を表示することができます。  
  
> [!NOTE]
>  このプロパティは、ASP.NET 3.5 で新しく追加されたものです。 このプロパティを `false` に設定すると、3.5 より前のバージョンの ASP.NET で <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティの既定の動作が復元されます。 詳細については、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (enableSorting As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">並べ替えがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="control"><see cref="T:System.Web.UI.WebControls.BoundField" /> を所有しているデータ コントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを初期化します。</summary>
        <returns>すべてのケースで <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> メソッドは、フィールドが行コレクションに追加される前に、<xref:System.Web.UI.WebControls.BoundField> オブジェクトが関連付けられているデータコントロールによって呼び出され、フィールドのインスタンスに対する基本的なオブジェクトの初期化を実行します。 <xref:System.Web.UI.WebControls.DetailsView> や <xref:System.Web.UI.WebControls.GridView> などのデータコントロールは、`CreateRow` などの他のメソッドを呼び出して、データを含む特定の行を作成する前に、`CreateChildControls` メソッドで <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドを呼び出します。  
  
 <xref:System.Web.UI.WebControls.TableCell> オブジェクトを使用して <xref:System.Web.UI.WebControls.BoundField> オブジェクトの基本初期化を実行するカスタムデータバインドコントロールを作成する場合は、このメソッドを呼び出します。 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドのデータまたはコントロールを <xref:System.Web.UI.WebControls.TableCell> オブジェクトに読み込む前に、<xref:System.Web.UI.WebControls.BoundField>派生型でオブジェクトの初期化が必要な場合は、このメソッドを実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか 1 つです。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</param>
        <param name="rowIndex">行の 0 から始まるインデックス。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField>派生型によって実装され、テーブルを使用してユーザーインターフェイス (UI) を表示するデータコントロールの <xref:System.Web.UI.WebControls.TableCell> オブジェクトにテキストとコントロールを追加します。 これらのデータコントロールは、コントロールの `CreateChildControls` メソッドが呼び出されたときに、完全なテーブル構造を行ごとに作成します。 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドは、<xref:System.Web.UI.WebControls.DetailsView> や <xref:System.Web.UI.WebControls.GridView>などのデータコントロールの `InitializeRow` メソッドによって呼び出されます。  
  
 <xref:System.Web.UI.WebControls.TableCell> オブジェクトを使用してデータまたはコントロールを含むテーブル構造のセルを初期化するカスタムデータバインドコントロールを作成する場合は、このメソッドを呼び出します。 <xref:System.Web.UI.WebControls.BoundField>派生クラスを記述する場合は、このメソッドを実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクト内のセルを初期化するために使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタム初期化ルーチンを実行できます。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">復元するコントロールの状態を表します。</param>
        <summary>このフィールドの、以前保存したビューステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールド値が null の場合にフィールドに表示するキャプションを取得または設定します。</summary>
        <value>フィールド値が null の場合にフィールドに表示するキャプション。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フィールドの値がデータソースに null として格納されることがあります。 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定することによって、null 値を持つフィールドに表示するカスタムキャプションを指定できます。 このプロパティが設定されていない場合、null フィールド値は空の文字列 ("") として表示されます。 データバインドコントロールでレコードが更新または挿入されるときに、ユーザーがデータバインドコントロールのフィールドに対して、このプロパティによって指定された値 (空の文字列以外) を入力した場合、その値は自動的にデータソースで null に変換されます。  
  
> [!NOTE]
>  空の文字列フィールド値を null 値に変換するには、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを `true`に設定します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを使用して、null フィールド値に対して表示するカスタムキャプションを指定する方法を示します。  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソースです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのフィールドの値をバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> メソッドは、データソースのフィールドの値を <xref:System.Web.UI.WebControls.BoundField> オブジェクト内の対応するセルにバインドするために使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">フィールド値のバインド先のコントロールが <see cref="T:System.Web.UI.WebControls.TextBox" /> と <see cref="T:System.Web.UI.WebControls.TableCell" /> のどちらでもありません。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタムバインディングルーチンを実行できます。</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでフィールドの値を変更できるかどうかを示す値を取得または設定します。</summary>
        <value>編集モードでフィールド値を変更できないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される値が変更されないようにするには、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを使用します。 データバインドコントロールが編集モードの場合、読み取り専用のフィールドは、編集コントロールを使用せずにプレーンテキストとして表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティは編集モードにのみ適用されます。 フィールドが挿入モードで表示されないようにするには、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示されるキーフィールドの値が編集モードで変更されないようにする方法を示しています。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトで HTML エンコーディングがサポートされるかどうかを示す値を取得します。</summary>
        <value><see langword="true" /> で HTML エンコーディングがサポートされる場合は、必ず <see cref="T:System.Web.UI.WebControls.BoundField" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> プロパティは、クラスによって HTML エンコーディングがサポートされているかどうかを判断するために、<xref:System.Web.UI.WebControls.BoundField> クラスおよび派生クラスによって使用されるヘルパープロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスから派生する場合、このプロパティをオーバーライドして、クラスで HTML エンコーディングがサポートされているかどうかを示すことができます。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"this" 式を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトをデータソースのフィールドではなく、データソース自体にバインドする必要があることを示すために使用されます。 この場合、オブジェクトの `ToString` 値がフィールドに表示されます。  
  
 このフィールドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがクライアントの入力を検証するかどうかを決定する値を取得または設定します。</summary>
        <value>コントロールがクライアントの入力を検証するかどうかを決定する値。 既定では、 <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを判断するために使用されるヘルパーメソッドです。 このメソッドは、コールバックがサポートされていることを示す空のメソッド (コードを含まないメソッド) として実装されています。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスから派生したクラスは、このメソッドをオーバーライドして、フィールドに含まれるコントロールがコールバックをサポートするかどうかを示すことができます。 コールバックがサポートされていることを示すには、例外をスローしない空のメソッドとしてこのメソッドを実装します。それ以外の場合は、コールバックがサポートされていない理由を説明する便利なメッセージを含む例外をスローします。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
