<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="105ed2fdbc0c4897f7a62eb97e2deaf5fdef551e" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78764775" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1a1a-101">データ バインド コントロール内にテキストとして表示されるフィールドを表します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-101">Represents a field that is displayed as text in a data-bound control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-102"><xref:System.Web.UI.WebControls.BoundField> クラスは、フィールドの値をテキストとして表示するために、データバインドコントロール (<xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>など) によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-102">The <xref:System.Web.UI.WebControls.BoundField> class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text.</span></span> <span data-ttu-id="b1a1a-103"><xref:System.Web.UI.WebControls.BoundField> オブジェクトは、使用されるデータバインドコントロールによって異なる方法で表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-103">The <xref:System.Web.UI.WebControls.BoundField> object is displayed differently depending on the data-bound control in which it is used.</span></span> <span data-ttu-id="b1a1a-104">たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールでは <xref:System.Web.UI.WebControls.BoundField> オブジェクトが列として表示され、<xref:System.Web.UI.WebControls.DetailsView> コントロールでは行として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-104">For example, the <xref:System.Web.UI.WebControls.GridView> control displays a <xref:System.Web.UI.WebControls.BoundField> object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.</span></span>  
  
 <span data-ttu-id="b1a1a-105"><xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示するフィールドを指定するには、<xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティをフィールドの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-105">To specify the field to display in a <xref:System.Web.UI.WebControls.BoundField> object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name.</span></span> <span data-ttu-id="b1a1a-106">フィールドの値は、[<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>] プロパティを `true`に設定することによって、表示する前に HTML エンコードできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-106">The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`.</span></span> <span data-ttu-id="b1a1a-107">カスタム書式指定文字列をフィールドの値に適用するには、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-107">You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span> <span data-ttu-id="b1a1a-108"><xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティが `true`場合、フィールドのエンコードされた文字列値がカスタム書式指定文字列で使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-108">When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string.</span></span> <span data-ttu-id="b1a1a-109">既定では、書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-109">By default, the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="b1a1a-110">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-110">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="b1a1a-111">フィールドの値が null の場合は、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定することによって、カスタムキャプションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-111">If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="b1a1a-112">また、<xref:System.Web.UI.WebControls.BoundField> オブジェクトは、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを `true`に設定することによって、空の文字列 ("") フィールド値を null 値に自動的に変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-112">The <xref:System.Web.UI.WebControls.BoundField> object can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="b1a1a-113">データバインドコントロールの <xref:System.Web.UI.WebControls.BoundField> オブジェクトを非表示にするには、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-113">You can hide a <xref:System.Web.UI.WebControls.BoundField> object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`.</span></span> <span data-ttu-id="b1a1a-114">フィールドの値が編集モードで変更されないようにするには、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-114">To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`.</span></span> <span data-ttu-id="b1a1a-115">レコードの挿入をサポートするデータバインドコントロール (<xref:System.Web.UI.WebControls.DetailsView> コントロールなど) では、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティを `false`に設定することにより、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-115">In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`.</span></span> <span data-ttu-id="b1a1a-116">これは、通常、挿入モードで自動的に生成されたキーフィールドを非表示にする場合に実行されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-116">This is commonly done when you want to hide an automatically generated key field in insert mode.</span></span>  
  
 <span data-ttu-id="b1a1a-117"><xref:System.Web.UI.WebControls.BoundField> オブジェクトのヘッダーセクションとフッターセクションをカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-117">You can customize the header and footer sections of a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-118">ヘッダーセクションまたはフッターセクションにキャプションを表示するには、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> または <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> プロパティをそれぞれ設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-118">To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively.</span></span> <span data-ttu-id="b1a1a-119">ヘッダーセクションにテキストを表示するのではなく、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティを設定して画像を表示できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-119">Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property.</span></span> <span data-ttu-id="b1a1a-120">ヘッダーセクションは、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> プロパティを `false`に設定することによって、<xref:System.Web.UI.WebControls.BoundField> オブジェクトで非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-120">The header section can be hidden in the <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-121">一部のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView> コントロールなど) では、コントロールのヘッダーセクション全体だけを表示または非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-121">Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control.</span></span> <span data-ttu-id="b1a1a-122">これらのデータバインドコントロールは、個々のバインドされたフィールドの <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> プロパティをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-122">These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field.</span></span> <span data-ttu-id="b1a1a-123">データバインドコントロールのヘッダーセクション全体 (使用可能な場合) を表示または非表示にするには、コントロールの `ShowHeader` プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-123">To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property.</span></span>  
  
 <span data-ttu-id="b1a1a-124">また、フィールドのさまざまな部分のスタイルプロパティを設定して、<xref:System.Web.UI.WebControls.BoundField> オブジェクト (フォントの色、背景色など) の外観をカスタマイズすることもできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-124">You also can customize the appearance of the <xref:System.Web.UI.WebControls.BoundField> object (font color, background color, and so on) by setting the style properties for the different parts of the field.</span></span> <span data-ttu-id="b1a1a-125">次の表は、さまざまなスタイルプロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-125">The following table lists the different style properties.</span></span>  
  
|<span data-ttu-id="b1a1a-126">Style プロパティ</span><span class="sxs-lookup"><span data-stu-id="b1a1a-126">Style property</span></span>|<span data-ttu-id="b1a1a-127">説明</span><span class="sxs-lookup"><span data-stu-id="b1a1a-127">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|<span data-ttu-id="b1a1a-128"><xref:System.Web.UI.WebControls.BoundField> オブジェクトの子 Web サーバーコントロールのスタイル設定。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-128">The style settings for the child Web server controls of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|<span data-ttu-id="b1a1a-129"><xref:System.Web.UI.WebControls.BoundField> オブジェクトのフッターセクションのスタイル設定。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-129">The style settings for the footer section of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|<span data-ttu-id="b1a1a-130"><xref:System.Web.UI.WebControls.BoundField> オブジェクトのヘッダーセクションのスタイル設定。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-130">The style settings for the header section of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|<span data-ttu-id="b1a1a-131"><xref:System.Web.UI.WebControls.BoundField> オブジェクト内のデータ項目のスタイル設定。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-131">The style settings for the data items in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-132">次のコード例は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールのフィールドの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-132">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.BoundField> object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1a1a-133"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.BoundField" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-134">このコンストラクターを使用して、<xref:System.Web.UI.WebControls.BoundField> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-134">Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class.</span></span> <span data-ttu-id="b1a1a-135">このコンストラクターは、動的に作成されたデータバインドコントロールにフィールドを追加する場合によく使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-135">This constructor is commonly used when adding fields to a dynamically created data-bound control.</span></span>  
  
 <span data-ttu-id="b1a1a-136">データバインドコントロールに <xref:System.Web.UI.WebControls.BoundField> オブジェクトを動的に追加するには、新しい <xref:System.Web.UI.WebControls.BoundField> オブジェクトを作成し、そのプロパティを設定して、データバインドコントロールのフィールドコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-136">To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection.</span></span> <span data-ttu-id="b1a1a-137">たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールを使用している場合は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-137">For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-138">フィールドはデータバインドコントロールに動的に追加できますが、フィールドを静的に宣言し、必要に応じて表示または非表示にすることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-138">Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.</span></span> <span data-ttu-id="b1a1a-139">すべてのフィールドを静的に宣言すると、親データバインドコントロールのビューステートのサイズが縮小されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-139">Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-140">次のコード例では、コンストラクターを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールに <xref:System.Web.UI.WebControls.BoundField> オブジェクトを動的に追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-140">The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-141"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> オブジェクトを格納しているデータ バインド コントロールが編集モードである場合に、<see cref="T:System.Web.UI.WebControls.BoundField" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-141">Gets or sets a value indicating whether the formatting string specified by the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property is applied to field values when the data-bound control that contains the <see cref="T:System.Web.UI.WebControls.BoundField" /> object is in edit mode.</span></span></summary>
        <value><span data-ttu-id="b1a1a-142">編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-142"><see langword="true" /> to apply the formatting string to field values in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b1a1a-143">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-144">データバインドコントロール (<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>、<xref:System.Web.UI.WebControls.GridView>など) には、ユーザーがレコードの読み取り、編集、または挿入を行うための表示モードが異なります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-144">Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records.</span></span> <span data-ttu-id="b1a1a-145">既定では、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティによって指定された書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-145">By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="b1a1a-146">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-146">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-147"><xref:System.Web.UI.WebControls.BoundField> オブジェクトは、データソースでフィールドが更新されたときに、書式設定を自動的に削除しません。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-147">A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="b1a1a-148">格納されている値の一部として書式設定が不要な場合は、プログラムによって書式設定を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-148">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-149">次のコード例では、<xref:System.Web.UI.WebControls.GridView> コントロールが編集モードのときに、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを使用して書式設定文字列をフィールド値に適用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-149">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.</span></span> <span data-ttu-id="b1a1a-150">書式設定は、データソースの値が更新される前にプログラムによって削除されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-150">The formatting is then programmatically removed before the value is updated in the data source.</span></span>  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-151">データ ソースでデータ フィールドを更新したときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-151">Gets or sets a value indicating whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="b1a1a-152">空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-152"><see langword="true" /> to automatically convert empty string values to null values; otherwise, the <see langword="false" />.</span></span> <span data-ttu-id="b1a1a-153">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-154">場合によっては、レコードを更新または挿入するときに、ユーザーがフィールド値に空の文字列を入力することがあります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-154">Sometimes the user might enter an empty string for a field value when updating or inserting records.</span></span> <span data-ttu-id="b1a1a-155">データソースのデータフィールドを更新するときに、空の文字列値を null に自動的に変換するかどうかを指定するには、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-155">Use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-156">既定では、<xref:System.Web.UI.WebControls.BoundField> オブジェクトは null 値を空の文字列として表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-156">By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings.</span></span> <span data-ttu-id="b1a1a-157">別の値を表示するには、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-157">To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-158">次のコード例では、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを使用して、空の文字列 ("") フィールド値を自動的に null に変換するように指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-158">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify that an empty string ("") field value should automatically be converted to null.</span></span>  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField"><span data-ttu-id="b1a1a-159">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.BoundField" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-159">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> to.</span></span></param>
        <summary><span data-ttu-id="b1a1a-160"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-160">Copies the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-161"><xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> メソッドは、メソッドによって作成された <xref:System.Web.UI.WebControls.DataControlField> オブジェクトに現在の <xref:System.Web.UI.WebControls.BoundField> オブジェクトのプロパティをコピーするために、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドによって使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-161">The <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1a1a-162">空の <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-162">Creates an empty <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="b1a1a-163">空の <see cref="T:System.Web.UI.WebControls.BoundField" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-163">An empty <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-164"><xref:System.Web.UI.WebControls.BoundField.CreateField%2A> メソッドは、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドが、現在の <xref:System.Web.UI.WebControls.BoundField> オブジェクトのプロパティをコピーする空の <xref:System.Web.UI.WebControls.BoundField> オブジェクトを作成するために使用するヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-164">The <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-165"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドするデータ フィールドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-165">Gets or sets the name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="b1a1a-166"><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドするデータ フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-166">The name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span> <span data-ttu-id="b1a1a-167">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-167">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-168"><xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトにバインドするデータフィールドの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-168">Use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-169">指定したフィールドの値は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトにテキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-169">The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text.</span></span> <span data-ttu-id="b1a1a-170">必要に応じて、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを設定して、表示されるテキストの書式を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-170">You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-171">フィールドの値が null の場合、既定では空の文字列 ("") が値に対して表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-171">If a field's value is null, an empty string ("") is displayed for the value by default.</span></span> <span data-ttu-id="b1a1a-172">代替キャプションを指定するには、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-172">To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-173">次のコード例では、<xref:System.Web.UI.WebControls.BoundField.DataField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BoundField> フィールド列に表示するフィールドを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-173">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-174">フィールドの値の表示形式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-174">Gets or sets the string that specifies the display format for the value of the field.</span></span></summary>
        <value><span data-ttu-id="b1a1a-175">フィールドの値の表示形式を指定する書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-175">A formatting string that specifies the display format for the value of the field.</span></span> <span data-ttu-id="b1a1a-176">既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-176">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-177"><xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される値のカスタム表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-177">Use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-178"><xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティが設定されていない場合、フィールドの値は特殊な書式設定なしで表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-178">If the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-179">3.5 より前のバージョンの ASP.NET では、文字列データ型ではないフィールドの書式を設定するために、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-179">In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types.</span></span> <span data-ttu-id="b1a1a-180">それ以外の場合は、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティに格納されている書式指定文字列が適用される前に、既定の変換メソッドによってフィールド値が文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-180">Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied.</span></span>  
  
 <span data-ttu-id="b1a1a-181">既定では、書式設定文字列は、<xref:System.Web.UI.WebControls.BoundField> オブジェクトを含むデータバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-181">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode.</span></span> <span data-ttu-id="b1a1a-182">編集モードでフィールド値に書式設定文字列を適用するには、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-182">To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="b1a1a-183">書式設定文字列は任意のリテラル文字列にすることができ、通常はフィールドの値のプレースホルダーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-183">The formatting string can be any literal string and usually includes a placeholder for the field's value.</span></span> <span data-ttu-id="b1a1a-184">たとえば、書式設定文字列 `Item Value: {0}`では、文字列が <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示されるときに、フィールドの値が {0} のプレースホルダーの代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-184">For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-185">書式設定文字列の残りの部分は、リテラルテキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-185">The rest of the formatting string is displayed as literal text.</span></span>  
  
 <span data-ttu-id="b1a1a-186">書式設定文字列にプレースホルダーが含まれていない場合は、書式設定文字列自体だけが最終的な表示テキストに含まれます (データソースからのフィールドの値は含まれません)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-186">If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included).</span></span> <span data-ttu-id="b1a1a-187">前の例のように、プレースホルダーが中かっこで囲まれた 0 (ゼロ) の場合、既定のメソッドによってフィールド値が文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-187">If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method.</span></span> <span data-ttu-id="b1a1a-188">フィールド値の書式設定方法を指定する文字列をゼロに追加することができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-188">You can append to the zero a string that specifies how the field value should be formatted.</span></span> <span data-ttu-id="b1a1a-189">たとえば、数値フィールドのプレースホルダー `{0:C}` では、フィールドの値が通貨書式に変換されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-189">For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.</span></span>  
  
 <span data-ttu-id="b1a1a-190">書式設定は、<xref:System.String.Format%2A> メソッドを使用して適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-190">Formatting is applied by using the <xref:System.String.Format%2A> method.</span></span> <span data-ttu-id="b1a1a-191">左中かっこの後に続く数値は、そのメソッドで使用される構文の一部であり、プレースホルダーが使用する一連の値のいずれかを示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-191">The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use.</span></span> <span data-ttu-id="b1a1a-192">各セルにはフィールド値が1つしかないため、左中かっこの後の数値は0にのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-192">Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.</span></span>  
  
 <span data-ttu-id="b1a1a-193">次の表に、数値フィールドの標準の書式設定文字を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-193">The following table lists the standard format characters for numeric fields.</span></span> <span data-ttu-id="b1a1a-194">これらの書式指定文字の大文字と小文字は区別されません。ただし、`X`では、指定された場合に16進文字が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-194">These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified.</span></span> <span data-ttu-id="b1a1a-195">表示する有効桁数や小数点以下の桁数を指定するために、ほとんどの書式設定文字に数字を追加できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-195">You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-196">ほとんどの場合、書式設定はサーバーのカルチャ設定によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-196">In most cases, formatting depends on the server's culture setting.</span></span> <span data-ttu-id="b1a1a-197">例として、`en-US`のカルチャ設定があります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-197">The examples are for a culture setting of `en-US`.</span></span>  
  
|<span data-ttu-id="b1a1a-198">書式指定文字</span><span class="sxs-lookup"><span data-stu-id="b1a1a-198">Format character</span></span>|<span data-ttu-id="b1a1a-199">説明</span><span class="sxs-lookup"><span data-stu-id="b1a1a-199">Description</span></span>|<span data-ttu-id="b1a1a-200">例</span><span class="sxs-lookup"><span data-stu-id="b1a1a-200">Example</span></span>|  
|----------------------|-----------------|-------------|  
|<span data-ttu-id="b1a1a-201">`C` または `c`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-201">`C` or `c`</span></span>|<span data-ttu-id="b1a1a-202">通貨書式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-202">Displays numeric values in currency format.</span></span> <span data-ttu-id="b1a1a-203">小数点以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-203">You can specify the number of decimal places.</span></span>|<span data-ttu-id="b1a1a-204">形式: `{0:C}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-204">Format: `{0:C}`</span></span><br /><br /> <span data-ttu-id="b1a1a-205">123.456 -> $123.46</span><span class="sxs-lookup"><span data-stu-id="b1a1a-205">123.456 -> $123.46</span></span><br /><br /> <span data-ttu-id="b1a1a-206">形式: `{0:C3}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-206">Format: `{0:C3}`</span></span><br /><br /> <span data-ttu-id="b1a1a-207">123.456  -> $123.456</span><span class="sxs-lookup"><span data-stu-id="b1a1a-207">123.456  -> $123.456</span></span>|  
|<span data-ttu-id="b1a1a-208">`D` または `d`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-208">`D` or `d`</span></span>|<span data-ttu-id="b1a1a-209">整数値を10進形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-209">Displays integer values in decimal format.</span></span> <span data-ttu-id="b1a1a-210">数字の数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-210">You can specify the number of digits.</span></span> <span data-ttu-id="b1a1a-211">(型は "decimal" と呼ばれますが、数値は整数として書式設定されます)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-211">(Although the type is referred to as "decimal", the numbers are formatted as integers.)</span></span>|<span data-ttu-id="b1a1a-212">形式: `{0:D}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-212">Format: `{0:D}`</span></span><br /><br /> <span data-ttu-id="b1a1a-213">1234 -> 1234</span><span class="sxs-lookup"><span data-stu-id="b1a1a-213">1234 -> 1234</span></span><br /><br /> <span data-ttu-id="b1a1a-214">形式: `{0:D6}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-214">Format: `{0:D6}`</span></span><br /><br /> <span data-ttu-id="b1a1a-215">1234  -> 001234</span><span class="sxs-lookup"><span data-stu-id="b1a1a-215">1234  -> 001234</span></span>|  
|<span data-ttu-id="b1a1a-216">`E` または `e`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-216">`E` or `e`</span></span>|<span data-ttu-id="b1a1a-217">指数 (指数) 形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-217">Displays numeric values in scientific (exponential) format.</span></span> <span data-ttu-id="b1a1a-218">小数点以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-218">You can specify the number of decimal places.</span></span>|<span data-ttu-id="b1a1a-219">形式: `{0:E}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-219">Format: `{0:E}`</span></span><br /><br /> <span data-ttu-id="b1a1a-220">1052.0329112756 -> 1.052033E+003</span><span class="sxs-lookup"><span data-stu-id="b1a1a-220">1052.0329112756 -> 1.052033E+003</span></span><br /><br /> <span data-ttu-id="b1a1a-221">形式: `{0:E2}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-221">Format: `{0:E2}`</span></span><br /><br /> <span data-ttu-id="b1a1a-222">-1052.0329112756 -> -1.05e+003</span><span class="sxs-lookup"><span data-stu-id="b1a1a-222">-1052.0329112756 -> -1.05e+003</span></span>|  
|<span data-ttu-id="b1a1a-223">`F` または `f`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-223">`F` or `f`</span></span>|<span data-ttu-id="b1a1a-224">固定形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-224">Displays numeric values in fixed format.</span></span> <span data-ttu-id="b1a1a-225">小数点以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-225">You can specify the number of decimal places.</span></span>|<span data-ttu-id="b1a1a-226">形式: `{0:F}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-226">Format: `{0:F}`</span></span><br /><br /> <span data-ttu-id="b1a1a-227">1234.567 -> 1234.57</span><span class="sxs-lookup"><span data-stu-id="b1a1a-227">1234.567 -> 1234.57</span></span><br /><br /> <span data-ttu-id="b1a1a-228">形式: `{0:F3}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-228">Format: `{0:F3}`</span></span><br /><br /> <span data-ttu-id="b1a1a-229">1234.567 -> 1234.567</span><span class="sxs-lookup"><span data-stu-id="b1a1a-229">1234.567 -> 1234.567</span></span>|  
|<span data-ttu-id="b1a1a-230">`G` または `g`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-230">`G` or `g`</span></span>|<span data-ttu-id="b1a1a-231">一般的な形式で数値を表示します (固定小数点表記または指数表記のうち、最もコンパクトな形式)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-231">Displays numeric values in general format (the most compact of either fixed-point or scientific notation).</span></span> <span data-ttu-id="b1a1a-232">有効桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-232">You can specify the number of significant digits.</span></span>|<span data-ttu-id="b1a1a-233">形式: `{0:G}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-233">Format: `{0:G}`</span></span><br /><br /> <span data-ttu-id="b1a1a-234">-123.456 -> -123.456</span><span class="sxs-lookup"><span data-stu-id="b1a1a-234">-123.456 -> -123.456</span></span><br /><br /> <span data-ttu-id="b1a1a-235">形式: `{0:G2}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-235">Format: `{0:G2}`</span></span><br /><br /> <span data-ttu-id="b1a1a-236">-123.456 -> -120</span><span class="sxs-lookup"><span data-stu-id="b1a1a-236">-123.456 -> -120</span></span>|  
|<span data-ttu-id="b1a1a-237">`N` または `n`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-237">`N` or `n`</span></span>|<span data-ttu-id="b1a1a-238">数値形式で数値を表示します (グループの区切り記号とオプションの負の符号を含む)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-238">Displays numeric values in number format (including group separators and optional negative sign).</span></span> <span data-ttu-id="b1a1a-239">小数点以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-239">You can specify the number of decimal places.</span></span>|<span data-ttu-id="b1a1a-240">形式: `{0:N}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-240">Format: `{0:N}`</span></span><br /><br /> <span data-ttu-id="b1a1a-241">1234.567 -> 1,234.57</span><span class="sxs-lookup"><span data-stu-id="b1a1a-241">1234.567 -> 1,234.57</span></span><br /><br /> <span data-ttu-id="b1a1a-242">形式: `{0:N4}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-242">Format: `{0:N4}`</span></span><br /><br /> <span data-ttu-id="b1a1a-243">1234.567 -> 1,234.5670</span><span class="sxs-lookup"><span data-stu-id="b1a1a-243">1234.567 -> 1,234.5670</span></span>|  
|<span data-ttu-id="b1a1a-244">`P` または `p`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-244">`P` or `p`</span></span>|<span data-ttu-id="b1a1a-245">パーセント形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-245">Displays numeric values in percent format.</span></span> <span data-ttu-id="b1a1a-246">小数点以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-246">You can specify the number of decimal places.</span></span>|<span data-ttu-id="b1a1a-247">形式: `{0:P}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-247">Format: `{0:P}`</span></span><br /><br /> <span data-ttu-id="b1a1a-248">1 -> 100.00%</span><span class="sxs-lookup"><span data-stu-id="b1a1a-248">1 -> 100.00%</span></span><br /><br /> <span data-ttu-id="b1a1a-249">形式: `{0:P1}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-249">Format: `{0:P1}`</span></span><br /><br /> <span data-ttu-id="b1a1a-250">.5 -> 50.0%</span><span class="sxs-lookup"><span data-stu-id="b1a1a-250">.5 -> 50.0%</span></span>|  
|<span data-ttu-id="b1a1a-251">`R` または `r`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-251">`R` or `r`</span></span>|<span data-ttu-id="b1a1a-252">ラウンドトリップ形式で <xref:System.Single>、<xref:System.Double>、または `BigInteger` 値を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-252">Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.</span></span>|<span data-ttu-id="b1a1a-253">形式: `{0:R}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-253">Format: `{0:R}`</span></span><br /><br /> <span data-ttu-id="b1a1a-254">123456789.12345678 -> 123456789.12345678</span><span class="sxs-lookup"><span data-stu-id="b1a1a-254">123456789.12345678 -> 123456789.12345678</span></span>|  
|<span data-ttu-id="b1a1a-255">`X` または `x`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-255">`X` or `x`</span></span>|<span data-ttu-id="b1a1a-256">整数値を16進形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-256">Displays integer values in hexadecimal format.</span></span> <span data-ttu-id="b1a1a-257">数字の数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-257">You can specify the number of digits.</span></span>|<span data-ttu-id="b1a1a-258">形式: `{0:X}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-258">Format: `{0:X}`</span></span><br /><br /> <span data-ttu-id="b1a1a-259">255 -> FF</span><span class="sxs-lookup"><span data-stu-id="b1a1a-259">255 -> FF</span></span><br /><br /> <span data-ttu-id="b1a1a-260">形式: `{0:x4}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-260">Format: `{0:x4}`</span></span><br /><br /> <span data-ttu-id="b1a1a-261">255  -> 00ff</span><span class="sxs-lookup"><span data-stu-id="b1a1a-261">255  -> 00ff</span></span>|  
  
 <span data-ttu-id="b1a1a-262">その他のカルチャ値の書式を示す詳細および例については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-262">For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="b1a1a-263">また、カスタムの数値書式指定文字列を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-263">You can also create custom numeric format strings.</span></span> <span data-ttu-id="b1a1a-264">詳細については、「[カスタム数値形式文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-264">For more information, see [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 <span data-ttu-id="b1a1a-265">次の表に、<xref:System.DateTime> フィールドの書式文字の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-265">The following table lists format characters for <xref:System.DateTime> fields.</span></span> <span data-ttu-id="b1a1a-266">これらの書式指定のほとんどは、カルチャの設定によって異なる出力になります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-266">Most of these formatting specifications result in a different output depending on culture settings.</span></span> <span data-ttu-id="b1a1a-267">例としては、`en-US`のカルチャ設定を使用した <xref:System.DateTime> 値 6/15/2009 1:45:30 PM が挙げられます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-267">The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.</span></span>  
  
|<span data-ttu-id="b1a1a-268">書式指定文字</span><span class="sxs-lookup"><span data-stu-id="b1a1a-268">Format character</span></span>|<span data-ttu-id="b1a1a-269">説明</span><span class="sxs-lookup"><span data-stu-id="b1a1a-269">Description</span></span>|<span data-ttu-id="b1a1a-270">例</span><span class="sxs-lookup"><span data-stu-id="b1a1a-270">Example</span></span>|  
|----------------------|-----------------|-------------|  
|`d`|<span data-ttu-id="b1a1a-271">短い形式の日付パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-271">Short date pattern.</span></span>|<span data-ttu-id="b1a1a-272">形式: `{0:d}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-272">Format: `{0:d}`</span></span><br /><br /> <span data-ttu-id="b1a1a-273">6/15/2009 1:45:30 PM-> 6/15/2009</span><span class="sxs-lookup"><span data-stu-id="b1a1a-273">6/15/2009 1:45:30 PM -> 6/15/2009</span></span>|  
|`D`|<span data-ttu-id="b1a1a-274">長い形式の日付パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-274">Long date pattern.</span></span>|<span data-ttu-id="b1a1a-275">形式: `{0:D}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-275">Format: `{0:D}`</span></span><br /><br /> <span data-ttu-id="b1a1a-276">6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009</span><span class="sxs-lookup"><span data-stu-id="b1a1a-276">6/15/2009 1:45:30 PM ->Monday, June 15, 2009</span></span>|  
|`f`|<span data-ttu-id="b1a1a-277">完全な日付と時刻のパターン (短い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-277">Full date/time pattern (short time).</span></span>|<span data-ttu-id="b1a1a-278">形式: `{0:f}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-278">Format: `{0:f}`</span></span><br /><br /> <span data-ttu-id="b1a1a-279">6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 1:45 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-279">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM</span></span>|  
|`F`|<span data-ttu-id="b1a1a-280">完全な日付と時刻のパターン (長い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-280">Full date/time pattern (long time).</span></span>|<span data-ttu-id="b1a1a-281">形式: `{0:F}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-281">Format: `{0:F}`</span></span><br /><br /> <span data-ttu-id="b1a1a-282">6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 1:45:30 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-282">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM</span></span>|  
|`g`|<span data-ttu-id="b1a1a-283">一般の日付と時刻のパターン (短い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-283">General date/time pattern (short time).</span></span>|<span data-ttu-id="b1a1a-284">形式: `{0:g}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-284">Format: `{0:g}`</span></span><br /><br /> <span data-ttu-id="b1a1a-285">6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-285">6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM</span></span>|  
|`G`|<span data-ttu-id="b1a1a-286">一般の日付と時刻のパターン (長い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-286">General date/time pattern (long time).</span></span>|<span data-ttu-id="b1a1a-287">形式: `{0:G}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-287">Format: `{0:G}`</span></span><br /><br /> <span data-ttu-id="b1a1a-288">6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-288">6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM</span></span>|  
|<span data-ttu-id="b1a1a-289">`M` または `m`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-289">`M` or `m`</span></span>|<span data-ttu-id="b1a1a-290">月日パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-290">Month/day pattern.</span></span>|<span data-ttu-id="b1a1a-291">形式: `{0:M}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-291">Format: `{0:M}`</span></span><br /><br /> <span data-ttu-id="b1a1a-292">6/15/2009 1:45:30 PM-> 6 月15日</span><span class="sxs-lookup"><span data-stu-id="b1a1a-292">6/15/2009 1:45:30 PM -> June 15</span></span>|  
|<span data-ttu-id="b1a1a-293">`O` または `o`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-293">`O` or `o`</span></span>|<span data-ttu-id="b1a1a-294">ラウンドトリップする日付と時刻のパターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-294">Round-trip date/time pattern.</span></span>|<span data-ttu-id="b1a1a-295">形式: `{0:o}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-295">Format: `{0:o}`</span></span><br /><br /> <span data-ttu-id="b1a1a-296">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000</span><span class="sxs-lookup"><span data-stu-id="b1a1a-296">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000</span></span>|  
|<span data-ttu-id="b1a1a-297">`R` または `r`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-297">`R` or `r`</span></span>|<span data-ttu-id="b1a1a-298">RFC1123 パターン (詳細については、「<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-298">RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).</span></span>|<span data-ttu-id="b1a1a-299">形式: `{0:R}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-299">Format: `{0:R}`</span></span><br /><br /> <span data-ttu-id="b1a1a-300">6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT</span><span class="sxs-lookup"><span data-stu-id="b1a1a-300">6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT</span></span>|  
|`s`|<span data-ttu-id="b1a1a-301">並べ替え可能な日付と時刻のパターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-301">Sortable date/time pattern.</span></span>|<span data-ttu-id="b1a1a-302">形式: `{0:s}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-302">Format: `{0:s}`</span></span><br /><br /> <span data-ttu-id="b1a1a-303">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30</span><span class="sxs-lookup"><span data-stu-id="b1a1a-303">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30</span></span>|  
|`t`|<span data-ttu-id="b1a1a-304">短い形式の時刻パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-304">Short time pattern.</span></span>|<span data-ttu-id="b1a1a-305">形式: `{0:t}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-305">Format: `{0:t}`</span></span><br /><br /> <span data-ttu-id="b1a1a-306">6/15/2009 1:45:30 PM-> 1:45 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-306">6/15/2009 1:45:30 PM -> 1:45 PM</span></span>|  
|`T`|<span data-ttu-id="b1a1a-307">長い形式の時刻パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-307">Long time pattern.</span></span>|<span data-ttu-id="b1a1a-308">形式: `{0:T}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-308">Format: `{0:T}`</span></span><br /><br /> <span data-ttu-id="b1a1a-309">6/15/2009 1:45:30 PM-> 1:45:30 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-309">6/15/2009 1:45:30 PM -> 1:45:30 PM</span></span>|  
|`u`|<span data-ttu-id="b1a1a-310">並べ替え可能な日付と時刻のパターン (世界時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-310">Universal sortable date/time pattern.</span></span>|<span data-ttu-id="b1a1a-311">形式: `{0:u}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-311">Format: `{0:u}`</span></span><br /><br /> <span data-ttu-id="b1a1a-312">6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z</span><span class="sxs-lookup"><span data-stu-id="b1a1a-312">6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z</span></span>|  
|`U`|<span data-ttu-id="b1a1a-313">完全な日付と時刻のパターン (世界時刻)。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-313">Universal full date/time pattern.</span></span>|<span data-ttu-id="b1a1a-314">形式: `{0:U}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-314">Format: `{0:U}`</span></span><br /><br /> <span data-ttu-id="b1a1a-315">6/15/2009 1:45:30 PM-> 月曜日、6月15日、2009 8:45:30 PM</span><span class="sxs-lookup"><span data-stu-id="b1a1a-315">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM</span></span>|  
|<span data-ttu-id="b1a1a-316">`Y` または `y`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-316">`Y` or `y`</span></span>|<span data-ttu-id="b1a1a-317">年月パターン。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-317">Year month pattern.</span></span>|<span data-ttu-id="b1a1a-318">形式: `{0:Y}`</span><span class="sxs-lookup"><span data-stu-id="b1a1a-318">Format: `{0:Y}`</span></span><br /><br /> <span data-ttu-id="b1a1a-319">6/15/2009 1:45:30 PM-> 6 月、2009</span><span class="sxs-lookup"><span data-stu-id="b1a1a-319">6/15/2009 1:45:30 PM -> June, 2009</span></span>|  
  
 <span data-ttu-id="b1a1a-320">その他のカルチャ値の書式を示す詳細および例については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-320">For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span> <span data-ttu-id="b1a1a-321">また、カスタムの日付と時刻の書式指定文字列を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-321">You can also create custom date and time format strings.</span></span> <span data-ttu-id="b1a1a-322">詳細については、「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-322">For more information, see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-323">このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=191889)できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-323">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=191889).</span></span>  
  
 <span data-ttu-id="b1a1a-324">次の例では、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを使用して、フィールドの値のカスタム表示形式を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-324">The following example shows how to use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values of a field.</span></span>  
  
  
  
 <span data-ttu-id="b1a1a-325">次の例では、この例によって生成される出力の1つの行を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-325">The following example shows one row of the output that is produced by this example.</span></span>  
  
|<span data-ttu-id="b1a1a-326">ProductID</span><span class="sxs-lookup"><span data-stu-id="b1a1a-326">ProductID</span></span>|<span data-ttu-id="b1a1a-327">Name</span><span class="sxs-lookup"><span data-stu-id="b1a1a-327">Name</span></span>|<span data-ttu-id="b1a1a-328">ProductNumber</span><span class="sxs-lookup"><span data-stu-id="b1a1a-328">ProductNumber</span></span>|<span data-ttu-id="b1a1a-329">ListPrice</span><span class="sxs-lookup"><span data-stu-id="b1a1a-329">ListPrice</span></span>|<span data-ttu-id="b1a1a-330">[太さ]</span><span class="sxs-lookup"><span data-stu-id="b1a1a-330">Weight</span></span>|<span data-ttu-id="b1a1a-331">ModifiedDate</span><span class="sxs-lookup"><span data-stu-id="b1a1a-331">ModifiedDate</span></span>|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="b1a1a-332">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="b1a1a-332">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="b1a1a-333">指定したセルの値の格納に使用する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-333">A <see cref="T:System.Collections.IDictionary" /> used to store the values of the specified cell.</span></span></param>
        <param name="cell"><span data-ttu-id="b1a1a-334">取得する値を格納している <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-334">The <see cref="T:System.Web.UI.WebControls.TableCell" /> that contains the values to retrieve.</span></span></param>
        <param name="rowState"><span data-ttu-id="b1a1a-335"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-335">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <param name="includeReadOnly"><span data-ttu-id="b1a1a-336">読み込み専用のフィールドの値を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-336"><see langword="true" /> to include the values of read-only fields; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1a1a-337">指定した <see cref="T:System.Collections.IDictionary" /> オブジェクトに、指定した <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトの値を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-337">Fills the specified <see cref="T:System.Collections.IDictionary" /> object with the values from the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-338"><xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトの指定された <xref:System.Web.UI.WebControls.TableCell> オブジェクトからフィールドの値を取得するための便利な方法として提供されています。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-338">The <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-339">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-339">This method is used primarily by control developers.</span></span>  
  
 <span data-ttu-id="b1a1a-340">このメソッドに戻り値はありません。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-340">This method does not have a return value.</span></span> <span data-ttu-id="b1a1a-341">代わりに、フィールド値は、`dictionary` パラメーターに渡された <xref:System.Collections.IDictionary?displayProperty=nameWithType> オブジェクトを介して参照によって返されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-341">Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object passed in for the `dictionary` parameter.</span></span> <span data-ttu-id="b1a1a-342">メソッドが呼び出された後、<xref:System.Collections.IDictionary?displayProperty=nameWithType> オブジェクトを反復処理してフィールド値にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-342">After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object to access the field values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-343"><xref:System.Web.UI.WebControls.TableCell> オブジェクトに読み取り専用フィールド値が含まれている場合は、これらの値を含めるために、`includeReadOnly` パラメーターに `true` を渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-343">If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue"><span data-ttu-id="b1a1a-344">書式を変換するフィールド値。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-344">The field value to format.</span></span></param>
        <param name="encode"><span data-ttu-id="b1a1a-345">値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-345"><see langword="true" /> to encode the value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1a1a-346"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-346">Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="b1a1a-347"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> で指定した書式に変換するフィールド値。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-347">The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-348"><xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティによって指定された形式にフィールド値を変換するために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-348">The <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span> <span data-ttu-id="b1a1a-349">フィールド値が null の場合は、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティの値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-349">If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-350">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-350">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-351"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタム書式設定ルーチンを実行できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-351">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom formatting routine.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1a1a-352">デザイナーで <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを表示するときにフィールド値に使用される値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-352">Retrieves the value used for a field's value when rendering the <see cref="T:System.Web.UI.WebControls.BoundField" /> object in a designer.</span></span></summary>
        <returns><span data-ttu-id="b1a1a-353">デザイナーでフィールド値として表示する値。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-353">The value to display in the designer as the field's value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-354"><xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> メソッドは、デザイナーで <xref:System.Web.UI.WebControls.BoundField> オブジェクトを表示するときにフィールドに表示する値を決定するために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-354">The <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer.</span></span> <span data-ttu-id="b1a1a-355">デザイン時にデータソースから実際のデータを取得できない場合は、このメソッドによって返される値が代わりに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-355">If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-356">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-356">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-357"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドして、デザイナーのフィールドに表示する別の値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-357">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to return a different value to display for the field in a designer.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer"><span data-ttu-id="b1a1a-358">フィールド値のコンテナー。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-358">The container for the field value.</span></span></param>
        <summary><span data-ttu-id="b1a1a-359"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドされているフィールドの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-359">Retrieves the value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="b1a1a-360"><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドされているフィールドの値。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-360">The value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-361"><xref:System.Web.UI.WebControls.BoundField.GetValue%2A> メソッドは、フィールドの値を決定するために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-361">The <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> method is a helper method used to determine the value of a field.</span></span> <span data-ttu-id="b1a1a-362"><xref:System.Web.UI.WebControls.BoundField> オブジェクトがデザイナーに表示されていて、デザイン時にフィールド値を決定できない場合は、実際のフィールド値ではなく、<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> メソッドから返された値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-362">If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-363">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-363">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b1a1a-364"><paramref name="controlContainer" /> パラメーターによって指定されたコンテナーが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-364">The container specified by the <paramref name="controlContainer" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1a1a-365">または</span><span class="sxs-lookup"><span data-stu-id="b1a1a-365">-or-</span></span> 
<span data-ttu-id="b1a1a-366"><paramref name="controlContainer" /> パラメーターで指定されたコンテナーにデータ項目がありません。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-366">The container specified by the <paramref name="controlContainer" /> parameter does not have a data item.</span></span>  
  
<span data-ttu-id="b1a1a-367">または</span><span class="sxs-lookup"><span data-stu-id="b1a1a-367">-or-</span></span> 
<span data-ttu-id="b1a1a-368">データ フィールドが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-368">The data field was not found.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-369"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドして、フィールドの値を決定するカスタムルーチンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-369">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to provide a custom routine to determine a field's value.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-370">データ コントロールのヘッダーに表示するテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-370">Gets or sets the text that is displayed in the header of a data control.</span></span></summary>
        <value><span data-ttu-id="b1a1a-371">データ コントロールのヘッダーに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-371">The text displayed in the header of a data control.</span></span> <span data-ttu-id="b1a1a-372">既定値は空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-372">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-373"><xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> プロパティを使用して、わかりやすい名前のデータコントロール内のフィールドを識別します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-373">Use the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property to identify a field in a data control with a friendly name.</span></span> <span data-ttu-id="b1a1a-374"><xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> プロパティの最も一般的なアプリケーションは、<xref:System.Web.UI.WebControls.GridView> または <xref:System.Web.UI.WebControls.DetailsView> コントロールのデータバインドフィールドにわかりやすい列名を提供することです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-374">The most common application of the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-375">フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-375">Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="b1a1a-376">フィールド値を <see langword="true" /> オブジェクトに表示する前に HTML エンコードする場合は <see cref="T:System.Web.UI.WebControls.BoundField" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-376"><see langword="true" /> if field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b1a1a-377">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-377">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-378"><xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを使用して、フィールド値を <xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示する前に、それぞれの文字列形式に HTML エンコードするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-378">Use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-379">たとえば、このプロパティが `true`場合、文字列値 "\<script >" が "&lt;スクリプト&gt;" として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-379">For example, if this property is `true`, a string value of "\<script>" would be rendered as "&lt;script&gt;".</span></span> <span data-ttu-id="b1a1a-380">このプロパティが `false`場合、文字列は変更されずに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-380">If this property is `false`, the string would be rendered unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-381">HTML エンコードフィールド値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-381">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="b1a1a-382">このプロパティは、可能な場合は常に有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-382">This property should be enabled whenever possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-383">次のコード例では、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される前にフィールド値が HTML エンコードされないようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-383">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-384"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> プロパティを <see cref="T:System.Web.UI.WebControls.BoundField" /> 値に適用することで作成されるテキストを表示するときに、HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-384">Gets or sets a value that indicates whether text that is created by applying the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property to the <see cref="T:System.Web.UI.WebControls.BoundField" /> value should be HTML encoded when it is displayed.</span></span></summary>
        <value><span data-ttu-id="b1a1a-385">テキストを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-385"><see langword="true" /> if the text should be HTML-encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b1a1a-386">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-386">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-387">HTML エンコード値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-387">HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="b1a1a-388">HTML エンコードは、ブラウザーに HTML コードを表示する場合にも便利です。たとえば、ページに改行 (`<br/>` 要素) を挿入する代わりに、文字列 "\<br/>" を表示することができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-388">HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string "\<br/>" instead of inserting a line break (`<br/>` element) in the page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-389">このプロパティは、ASP.NET 3.5 で新しく追加されたものです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-389">This property is new in ASP.NET 3.5.</span></span> <span data-ttu-id="b1a1a-390">このプロパティを `false` に設定すると、3.5 より前のバージョンの ASP.NET で <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティの既定の動作が復元されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-390">Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5.</span></span> <span data-ttu-id="b1a1a-391">詳細については、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-391">For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (enableSorting As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><span data-ttu-id="b1a1a-392">並べ替えがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-392"><see langword="true" /> if sorting is supported; otherwise, <see langword="false" />.</span></span></param>
        <param name="control"><span data-ttu-id="b1a1a-393"><see cref="T:System.Web.UI.WebControls.BoundField" /> を所有しているデータ コントロール。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-393">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></param>
        <summary><span data-ttu-id="b1a1a-394"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-394">Initializes the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="b1a1a-395">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-395"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-396"><xref:System.Web.UI.WebControls.BoundField.Initialize%2A> メソッドは、フィールドが行コレクションに追加される前に、<xref:System.Web.UI.WebControls.BoundField> オブジェクトが関連付けられているデータコントロールによって呼び出され、フィールドのインスタンスに対する基本的なオブジェクトの初期化を実行します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-396">The <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection.</span></span> <span data-ttu-id="b1a1a-397"><xref:System.Web.UI.WebControls.DetailsView> や <xref:System.Web.UI.WebControls.GridView> などのデータコントロールは、`CreateRow` などの他のメソッドを呼び出して、データを含む特定の行を作成する前に、`CreateChildControls` メソッドで <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-397">Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.</span></span>  
  
 <span data-ttu-id="b1a1a-398"><xref:System.Web.UI.WebControls.TableCell> オブジェクトを使用して <xref:System.Web.UI.WebControls.BoundField> オブジェクトの基本初期化を実行するカスタムデータバインドコントロールを作成する場合は、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-398">Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="b1a1a-399"><xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドのデータまたはコントロールを <xref:System.Web.UI.WebControls.TableCell> オブジェクトに読み込む前に、<xref:System.Web.UI.WebControls.BoundField>派生型でオブジェクトの初期化が必要な場合は、このメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-399">Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="b1a1a-400">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-400">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</span></span></param>
        <param name="cellType"><span data-ttu-id="b1a1a-401"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-401">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</span></span></param>
        <param name="rowState"><span data-ttu-id="b1a1a-402"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-402">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <param name="rowIndex"><span data-ttu-id="b1a1a-403">行の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-403">The zero-based index of the row.</span></span></param>
        <summary><span data-ttu-id="b1a1a-404">指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-404">Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-405"><xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField>派生型によって実装され、テーブルを使用してユーザーインターフェイス (UI) を表示するデータコントロールの <xref:System.Web.UI.WebControls.TableCell> オブジェクトにテキストとコントロールを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-405">The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI).</span></span> <span data-ttu-id="b1a1a-406">これらのデータコントロールは、コントロールの `CreateChildControls` メソッドが呼び出されたときに、完全なテーブル構造を行ごとに作成します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-406">These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called.</span></span> <span data-ttu-id="b1a1a-407"><xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> メソッドは、<xref:System.Web.UI.WebControls.DetailsView> や <xref:System.Web.UI.WebControls.GridView>などのデータコントロールの `InitializeRow` メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-407">The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.</span></span>  
  
 <span data-ttu-id="b1a1a-408"><xref:System.Web.UI.WebControls.TableCell> オブジェクトを使用してデータまたはコントロールを含むテーブル構造のセルを初期化するカスタムデータバインドコントロールを作成する場合は、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-408">Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls.</span></span> <span data-ttu-id="b1a1a-409"><xref:System.Web.UI.WebControls.BoundField>派生クラスを記述する場合は、このメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-409">Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="b1a1a-410">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-410">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</span></span></param>
        <param name="rowState"><span data-ttu-id="b1a1a-411"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-411">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="b1a1a-412">指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-412">Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-413"><xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクト内のセルを初期化するために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-413">The <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-414"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタム初期化ルーチンを実行できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-414">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom initialization routine.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="b1a1a-415">復元するコントロールの状態を表します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-415">Represents the control state to be restored.</span></span></param>
        <summary><span data-ttu-id="b1a1a-416">このフィールドの、以前保存したビューステート情報を復元します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-416">Restores the previously stored view-state information for this field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-417">フィールド値が null の場合にフィールドに表示するキャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-417">Gets or sets the caption displayed for a field when the field's value is null.</span></span></summary>
        <value><span data-ttu-id="b1a1a-418">フィールド値が null の場合にフィールドに表示するキャプション。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-418">The caption displayed for a field when the field's value is null.</span></span> <span data-ttu-id="b1a1a-419">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-419">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-420">フィールドの値がデータソースに null として格納されることがあります。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-420">Sometimes a field's value is stored as null in the data source.</span></span> <span data-ttu-id="b1a1a-421"><xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを設定することによって、null 値を持つフィールドに表示するカスタムキャプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-421">You can specify a custom caption to display for fields that have a null value by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="b1a1a-422">このプロパティが設定されていない場合、null フィールド値は空の文字列 ("") として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-422">If this property is not set, null field values are displayed as empty strings ("").</span></span> <span data-ttu-id="b1a1a-423">データバインドコントロールでレコードが更新または挿入されるときに、ユーザーがデータバインドコントロールのフィールドに対して、このプロパティによって指定された値 (空の文字列以外) を入力した場合、その値は自動的にデータソースで null に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-423">When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-424">空の文字列フィールド値を null 値に変換するには、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-424">To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-425">次のコード例では、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> プロパティを使用して、null フィールド値に対して表示するカスタムキャプションを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-425">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property to specify a custom caption to display for null field values.</span></span>  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b1a1a-426">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-426">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="b1a1a-427">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-427">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b1a1a-428"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのフィールドの値をバインドします。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-428">Binds the value of a field to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-429"><xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> メソッドは、データソースのフィールドの値を <xref:System.Web.UI.WebControls.BoundField> オブジェクト内の対応するセルにバインドするために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-429">The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b1a1a-430">フィールド値のバインド先のコントロールが <see cref="T:System.Web.UI.WebControls.TextBox" /> と <see cref="T:System.Web.UI.WebControls.TableCell" /> のどちらでもありません。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-430">The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.TextBox" /> or a <see cref="T:System.Web.UI.WebControls.TableCell" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-431"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスを拡張するときに、このメソッドをオーバーライドしてカスタムバインディングルーチンを実行できます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-431">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom binding routine.</span></span></para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-432">編集モードでフィールドの値を変更できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-432">Gets or sets a value indicating whether the value of the field can be modified in edit mode.</span></span></summary>
        <value><span data-ttu-id="b1a1a-433">編集モードでフィールド値を変更できないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-433"><see langword="true" /> to prevent the value of the field from being modified in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b1a1a-434">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-434">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-435"><xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示される値が変更されないようにするには、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-435">Use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified.</span></span> <span data-ttu-id="b1a1a-436">データバインドコントロールが編集モードの場合、読み取り専用のフィールドは、編集コントロールを使用せずにプレーンテキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-436">When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-437"><xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティは編集モードにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-437">The <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property applies only to edit mode.</span></span> <span data-ttu-id="b1a1a-438">フィールドが挿入モードで表示されないようにするには、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-438">To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1a1a-439">次のコード例は、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに表示されるキーフィールドの値が編集モードで変更されないようにする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-439">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-440"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトで HTML エンコーディングがサポートされるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-440">Gets a value indicating whether HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="b1a1a-441"><see langword="true" /> で HTML エンコーディングがサポートされる場合は、必ず <see cref="T:System.Web.UI.WebControls.BoundField" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-441">Always returns <see langword="true" /> to indicate that HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-442"><xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> プロパティは、クラスによって HTML エンコーディングがサポートされているかどうかを判断するために、<xref:System.Web.UI.WebControls.BoundField> クラスおよび派生クラスによって使用されるヘルパープロパティです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-442">The <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-443"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスから派生する場合、このプロパティをオーバーライドして、クラスで HTML エンコーディングがサポートされているかどうかを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-443">When deriving from the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this property to indicate whether HTML encoding is supported by the class.</span></span></para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-444">"this" 式を表します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-444">Represents the "this" expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-445">このフィールドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトをデータソースのフィールドではなく、データソース自体にバインドする必要があることを示すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-445">This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source.</span></span> <span data-ttu-id="b1a1a-446">この場合、オブジェクトの `ToString` 値がフィールドに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-446">In this case, the object's `ToString` value will be displayed in the field.</span></span>  
  
 <span data-ttu-id="b1a1a-447">このフィールドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-447">This field is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1a1a-448">コントロールがクライアントの入力を検証するかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-448">Gets or sets a value that determines whether the control validates client input or not.</span></span></summary>
        <value><span data-ttu-id="b1a1a-449">コントロールがクライアントの入力を検証するかどうかを決定する値。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-449">A value that determines whether the control validates client input or not.</span></span> <span data-ttu-id="b1a1a-450">既定では、 <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />です。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-450">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1a1a-451"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-451">Determines whether the controls contained in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object support callbacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a1a-452"><xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> メソッドは、<xref:System.Web.UI.WebControls.BoundField> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを判断するために使用されるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-452">The <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks.</span></span> <span data-ttu-id="b1a1a-453">このメソッドは、コールバックがサポートされていることを示す空のメソッド (コードを含まないメソッド) として実装されています。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-453">This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1a1a-454">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-454">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1a1a-455"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスから派生したクラスは、このメソッドをオーバーライドして、フィールドに含まれるコントロールがコールバックをサポートするかどうかを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-455">Classes that derive from the <see cref="T:System.Web.UI.WebControls.BoundField" /> class can override this method to indicate whether the controls contained by the field support callbacks.</span></span> <span data-ttu-id="b1a1a-456">コールバックがサポートされていることを示すには、例外をスローしない空のメソッドとしてこのメソッドを実装します。それ以外の場合は、コールバックがサポートされていない理由を説明する便利なメッセージを含む例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b1a1a-456">To indicate that callbacks are supported, implement this method as an empty method that does not throw an exception; otherwise, throw an exception with a useful message describing why callbacks are not supported.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
