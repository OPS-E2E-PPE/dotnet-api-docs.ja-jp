<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f625c845b8d1d3d15c8877764d75ed20455ce31" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106291" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロール内の 1 つのノードを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> コントロールは、ノードで構成されます。 ツリー内の各エントリはノードと呼ばれ、<xref:System.Web.UI.WebControls.TreeNode> オブジェクトによって表されます。 他のノードを含むノードは、*親ノード*と呼ばれます。 別のノードに含まれるノードは、*子ノード*と呼ばれます。 子ノードを持たないノードは、*リーフノード*と呼ばれます。 他のノードに含まれていないノードが、他のすべてのノードの先祖であるノードが*ルートノード*です。 ノードには親と子の両方を指定できますが、ルートノード、親ノード、およびリーフノードは相互に排他的です。 ノードのビジュアルおよび動作プロパティのいくつかは、ノードが*ルート*ノード、*親*ノード、または*リーフ*ノードのどちらであるかによって決まります。  
  
 一般的なツリーにはルートノードが1つしかありませんが、<xref:System.Web.UI.WebControls.TreeView> コントロールを使用すると、複数のルートノードをツリー構造に追加できます。 これは、製品カテゴリの一覧のように、単一のメインルートノードを表示せずに項目の一覧を表示する場合に便利です。  
  
 ノードは、主に、<xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティの2つのプロパティにデータを格納します。 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティの値が <xref:System.Web.UI.WebControls.TreeView> コントロールに表示され、<xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティを使用して、ノードに関する追加データ (ポストバックイベントの処理に使用されるデータなど) が格納されます。 ノードは、ノードからのパスを <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティのルートノードにも格納します。 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティは、ノードのルートノードを基準とした相対的な位置を示します。  
  
> [!NOTE]
>  同じレベルのノードは、それぞれ <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティに一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.TreeView> コントロールは、同じレベルの同じ値を持つ異なるノードを区別できません。 このシナリオでは、値が重複しているノードをユーザーがクリックすると、<xref:System.Web.UI.WebControls.TreeView> コントロールの最初に表示されるノードが選択されます。  
  
 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトは、カスタマイズまたは非表示にできる次の4つのユーザーインターフェイス (UI) 要素で構成されています。  
  
-   ノードが展開されているか、折りたたまれているか、または展開できないかを示すために使用される展開ノードインジケーターアイコン。  
  
-   ノードに関連付けられているオプションのチェックボックス。  
  
-   省略可能なノードイメージ。  
  
-   ノードテキスト。  
  
 <xref:System.Web.UI.WebControls.TreeView> クラスの <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>、および <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> の各プロパティを設定することによって、展開、折りたたみ、および展開できないノードインジケーターのカスタムイメージを指定できます。 展開ノードインジケーターアイコンは、<xref:System.Web.UI.WebControls.TreeView> クラスの <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> プロパティを `false`に設定することによって、完全に非表示にすることもできます。  
  
 ノードの横にチェックボックスを表示するには、<xref:System.Web.UI.WebControls.TreeView> クラスの <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティを設定します。 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティが `TreeNodeType.Node`以外の値に設定されている場合は、指定したノードの種類の横にチェックボックスが表示されます。 ノードの <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> プロパティを設定することによって、個々のノードのチェックボックスを選択的に上書きできます。 チェックボックスが表示されたら、[<xref:System.Web.UI.WebControls.TreeNode.Checked%2A>] プロパティを使用して、チェックボックスがオンになっているかどうかを確認します。  
  
 ノードに画像を表示するには、[<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>] プロパティを設定します。 このイメージは、ノードテキストの横に表示されます。  
  
 <xref:System.Web.UI.WebControls.TreeView> コントロールのノードのテキストは、選択モードまたはナビゲーションモードの2つのモードのいずれかになります。 既定では、ノードは選択モードになっています。 ノードをナビゲーションモードにするには、ノードの <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを空の文字列 ("") 以外の値に設定します。 ノードを選択モードにするには、ノードの <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを空の文字列に設定します。  
  
> [!NOTE]
>  一部のインターネットブラウザーでは、<xref:System.Web.UI.WebControls.TreeView> コントロールのパフォーマンスに影響する可能性がある制限があります。 たとえば、Microsoft Internet Explorer 6.0 では、URL 文字の制限である2067文字が投稿されます。 ノードの URL の文字数がその数値よりも大きい場合、そのノードを展開すると失敗し、例外はスローされません。  
  
 既定では、選択モードのノードをクリックすると、そのページがサーバーにポストバックされ、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントが発生します。 必要に応じて、ノードの `SelectAction` プロパティを設定して、発生させる別のイベントを指定することもできます。 詳細については、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> を参照してください。 選択モードでクリックされたノードを確認するには、<xref:System.Web.UI.WebControls.TreeView> コントロールの <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティを使用します。  
  
 ノードがナビゲーションモードの場合は、そのノードのすべての選択イベントが無効になります。 ナビゲーションモードでノードをクリックすると、指定した URL にユーザーがリダイレクトされます。 必要に応じて、[<xref:System.Web.UI.WebControls.TreeNode.Target%2A>] プロパティを設定して、リンクされたコンテンツを表示するウィンドウまたはフレームを指定することもできます。  
  
 <xref:System.Web.UI.WebControls.TreeNode> クラスには、ノードの状態を格納するために使用されるいくつかのプロパティが含まれています。 ノードが選択されているかどうかを判断するには、<xref:System.Web.UI.WebControls.TreeNode.Selected%2A> プロパティを使用します。 ノードが展開されているかどうかを確認するには、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> プロパティは、ノードがデータにバインドされているかどうかを判断するために使用されます。 ノードがデータにバインドされている場合は、<xref:System.Web.UI.WebControls.TreeNode.DataItem%2A> プロパティを使用して基になるデータ項目にアクセスできます。  
  
 クラスには、ツリー内の他のノードに対するノードの相対的な位置を特定するのに役立ついくつかのプロパティが用意されています。 ノードの深さを確認するには、<xref:System.Web.UI.WebControls.TreeNode.Depth%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティを使用すると、ノードの一覧を現在のノードからルートノードに取得できます。 ノードの親ノードを特定するには、<xref:System.Web.UI.WebControls.TreeNode.Parent%2A> プロパティを使用します。 子ノードには、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> コレクションを使用してアクセスします。  
  
 場合によっては、ユーザー入力に依存するデータサイズやカスタムコンテンツによってツリー構造を静的に定義するのは現実的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView> コントロールは動的なノードの作成をサポートしています。 ノードは、展開されたときに実行時に設定できます。 非同期的に作成されたノードを永続化すると、予期しない動作が発生することに注意してください。 たとえば、バックグラウンドワーカースレッドを使用してノードを非同期に設定した場合、コントロールがページライフサイクルの残りの部分を処理しても、すぐにノードツリーが設定されないことがあります。 ポストバック時に、ノードの作成が遅延すると、コントロールのビューステートが読み込まれてもノードツリーが完全に設定されていない場合に問題が発生する可能性があります。  動的ノードの作成の詳細については、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> プロパティを参照してください。  
  
 <xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値の一覧については、<xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> コンストラクターを参照してください。  
  
   
  
## Examples  
 次のコード例では、フレームを設定する方法を示します。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 宣言型の構文を使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールに <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを作成する方法を次のコード例に示します。 この例は、前の例のフレームセット内で、目次を表示するために使用されます。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>テキストや値を使用せずに、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、既定値を使用して <xref:System.Web.UI.WebControls.TreeNode> クラスの新しいインスタンスを初期化します。  
  
> [!NOTE]
>  このコンストラクターを使用すると、<xref:System.Web.UI.WebControls.TreeNode> オブジェクトのすべてのプロパティが既定値に設定されます。 オブジェクトを作成した後に、必要に応じてプロパティを設定してください。  
  
   
  
## Examples  
 次のコード例は、このコンストラクターを使用して、ノードを <xref:System.Web.UI.WebControls.TreeView> コントロールに動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">このノードの <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールに表示されるテキスト。</param>
        <summary>テキストを指定して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text` パラメーターで指定されたテキストを使用して <xref:System.Web.UI.WebControls.TreeNode> クラスの新しいインスタンスを初期化します。  
  
 次の表は、<xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値を示しています。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|`text` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、このコンストラクターを使用して、ノードを <xref:System.Web.UI.WebControls.TreeView> コントロールに動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">このノードの <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールに表示されるテキスト。</param>
        <param name="value">ノードに関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <summary>テキストと値を指定して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text` パラメーターと `value` パラメーターで指定されたテキストと値を使用して、<xref:System.Web.UI.WebControls.TreeNode> クラスの新しいインスタンスを初期化します。  
  
 次の表に、<xref:System.Web.UI.WebControls.TreeNode>のインスタンスのプロパティの初期値を示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|`value` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、このコンストラクターを使用して、ノードを <xref:System.Web.UI.WebControls.TreeView> コントロールに動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">新しい <see cref="T:System.Web.UI.WebControls.TreeView" /> を格納する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="isRoot"><see langword="true" /> がルート ノードである場合は <see cref="T:System.Web.UI.WebControls.TreeNode" />。それ以外の場合は <see langword="false" />。</param>
        <summary>所有者を指定して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">このノードの <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールに表示されるテキスト。</param>
        <param name="value">ノードに関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <param name="imageUrl">ノードの隣に表示されるイメージへの URL。</param>
        <summary>テキスト、値、およびイメージの URL を指定して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text`、`value`、および `imageUrl` の各パラメーターによって指定されたテキスト、値、およびイメージの URL を使用して、<xref:System.Web.UI.WebControls.TreeNode> クラスの新しいインスタンスを初期化します。  
  
 次の表に、<xref:System.Web.UI.WebControls.TreeNode>のインスタンスのプロパティの初期値を示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|`value` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|`imageUrl` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、このコンストラクターを使用して、ノードを <xref:System.Web.UI.WebControls.TreeView> コントロールに動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">このノードの <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールに表示されるテキスト。</param>
        <param name="value">ノードに関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <param name="imageUrl">ノードの隣に表示されるイメージへの URL。</param>
        <param name="navigateUrl">ノードがクリックされたときのリンク先 URL。</param>
        <param name="target">ノードがクリックされたときに、リンク先 Web ページの内容を表示するウィンドウまたはフレーム。</param>
        <summary>テキスト、値、イメージの URL、ナビゲーション URL、および表示先を指定して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text`、`value`、`imageUrl`、`navigateUrl`、および `target` の各パラメーターによって指定されたテキスト、値、イメージとナビゲーションの Url、および表示ターゲットをそれぞれ使用して、<xref:System.Web.UI.WebControls.TreeNode> クラスの新しいインスタンスを初期化します。  
  
 次の表に、<xref:System.Web.UI.WebControls.TreeNode>のインスタンスのプロパティの初期値を示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|`value` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|`imageUrl` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|`navigateUrl` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|`target` パラメーターの値。|  
  
   
  
## Examples  
 次のコード例は、このコンストラクターを使用して、ノードを <xref:System.Web.UI.WebControls.TreeView> コントロールに動的に追加する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードのチェック ボックスがオンかオフかを示す値を取得または設定します。</summary>
        <value>ノードのチェック ボックスがオンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードにチェックボックスが表示されている場合、[<xref:System.Web.UI.WebControls.TreeNode.Checked%2A>] プロパティは、チェックボックスをオンにするかどうかを指定するためによく使用されます。 ノードに関連付けられているチェックボックスをオンにすると、ノードが <xref:System.Web.UI.WebControls.TreeView> コントロールの <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> コレクションに自動的に追加されます。 また、[<xref:System.Web.UI.WebControls.TreeNode.Checked%2A>] プロパティを使用して、チェックボックスがオンになっているかどうかを判断することもできます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> コレクションを反復処理することで、チェックボックスをオンにする <xref:System.Web.UI.WebControls.TreeView> コントロール内のノードを決定するのが一般的です。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.Checked%2A> プロパティを使用して、ノードのチェックボックスをオンにするかどうかを指定する方法を示します。 ノードのチェックボックスを、深さが1から選択された状態に初期化します。 この例を正しく動作させるには、次のサンプル XML データを、web.xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のノードの第 1 レベルの子ノードを格納する <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> コレクションを取得します。</summary>
        <value>現在のノードの第 1 レベルの子ノードを格納する <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のノードの第1レベルの子ノードを含む <xref:System.Web.UI.WebControls.TreeNodeCollection> コレクションを取得するには、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティを使用します。 このコレクションは、一般に、すべての第1レベルの子ノードを反復処理したり、現在のノードの特定の第1レベルの子ノードにアクセスしたりするために使用されます。  
  
 また、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティを使用して、現在のノードの第1レベルの子ノードをプログラムで管理することもできます。 コレクションに対して <xref:System.Web.UI.WebControls.TreeNode> オブジェクトの追加、挿入、削除、および取得を行うことができます。 コレクションに対する更新は、次回ページを更新したときに、<xref:System.Web.UI.WebControls.TreeView> コントロールに自動的に反映されます。  
  
 ツリーの下位にある子ノードにアクセスするには、次のレベルの子ノードの <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティを使用して、ノードレベルを下に移動します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティを使用してツリーを走査する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.TreeNode" /> インスタンスのプロパティを使用して、<see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを作成します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.WebControls.TreeNode" /> インスタンスのプロパティを使用した <see cref="T:System.Web.UI.WebControls.TreeNode" /> の新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、<xref:System.Web.UI.WebControls.TreeNode>によって実装された <xref:System.ICloneable> インターフェイスをサポートするヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のツリー ノードを折りたたみます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> メソッドを使用して、現在のノードを簡単に折りたたみます。  
  
> [!NOTE]
>  別の方法として、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを `false`に設定することもできます。  
  
 現在のノードとそのすべての子ノードを折りたたむには、<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> メソッドの使用を検討してください。  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> により、ツリー全体のすべてのノードが折りたたまれます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのノードをプログラムによって折りたたむ方法を示しています。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のノードとそのすべての子ノードを折りたたみます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> メソッドを使用すると、現在のノードとそのすべての子ノードを簡単に折りたたむことができます。  
  
> [!NOTE]
>  別の方法として、現在のノードとその子ノードの <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを `false`に設定することもできます。  
  
 現在のノードのみを折りたたむには、<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> メソッドの使用を検討してください。  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> により、ツリー全体のすべてのノードが折りたたまれます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロール内のノードとそのすべての子ノードをプログラムによって折りたたむ方法を示しています。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードがデータ バインディングによって作成されたかどうかを示す値を取得します。</summary>
        <value>ノードがデータ バインディングによって作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> プロパティは、ノードがデータバインディングによって作成されたかどうかをプログラムで判断するために使用されます。 動的コンテンツと静的コンテンツは同じノード内に混在させることができないため、このプロパティは、ノードに静的コンテンツが含まれているかどうかを判断するために <xref:System.Web.UI.WebControls.TreeView> コントロールを動的に設定するときに一般的に使用されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにバインドされたデータ項目を取得します。</summary>
        <value>コントロールにバインドされたデータ項目を表す <see cref="T:System.Object" />。 既定値は <see langword="null" /> で、ノードがどのデータ項目にもバインドされていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> コントロールが、<xref:System.Web.UI.WebControls.XmlDataSource> オブジェクトなどのデータソースにバインドされている場合、このプロパティは、この特定のノードにバインドされているデータ項目に設定されます。 このプロパティは、通常、データ項目の値にアクセスするために使用されます。  
  
> [!NOTE]
>  このプロパティは、データバインディングが発生した後にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードにバインドされたデータへのパスを取得します。</summary>
        <value>ノードにバインドされたデータへのパス。 この値は、<see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールがバインドされた階層データ ソースのコントロールから取得されます。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> プロパティ値は、通常、<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のノードにバインドされているデータへのパスを指定するときに使用されます。 次に、このメソッドは、指定されたパスにあるデータを格納する <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> オブジェクトを返します。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの深さを取得します。</summary>
        <value>ノードの深さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードの深さを確認するには、<xref:System.Web.UI.WebControls.TreeNode.Depth%2A> プロパティを使用します。 深さは、ノードとルートノードの間の階層のレベル数を表します。 たとえば、ルートノードの深さは0です。 ルートノードの子は、深さが1になります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.Depth%2A> プロパティを使用してノードの深さを決定する方法を示します。 深さが1であるすべてのノードを選択された状態に初期化します。 この例を正しく動作させるには、次のサンプル XML データを、web.xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のツリー ノードを展開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のノードを簡単に展開するには、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A> メソッドを使用します。  
  
> [!NOTE]
>  別の方法として、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを `true`に設定することもできます。  
  
 現在のノードとそのすべての子ノードを展開するには、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> メソッドの使用を検討してください。  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> により、ツリー全体のすべてのノードが展開されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのノードをプログラムによって展開する方法を示しています。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のノードとそのすべての子ノードを展開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のノードとそのすべての子ノードを簡単に展開するには、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> メソッドを使用します。  
  
> [!NOTE]
>  別の方法として、現在のノードとその子ノードの <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを `true`に設定することもできます。  
  
 現在のノードのみを展開するには、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A> メソッドの使用を検討してください。  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> により、ツリー全体のすべてのノードが展開されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロール内のノードおよびそのすべての子ノードをプログラムによって展開する方法を示します。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードが展開されているかどうかを示す値を取得または設定します。</summary>
        <value>ノードが展開されている場合は <see langword="true" />。ノードが展開されてない場合は <see langword="false" /> または <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードが展開されているかどうかを指定または確認するには、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを使用します。  
  
 ノードを展開したり折りたたんだりするには、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A> メソッドと <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> メソッドをそれぞれ呼び出します。 また、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> および <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> メソッドをそれぞれ呼び出して、ノードとそのすべての子ノードを展開または折りたたむこともできます。  
  
 <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティは3つの状態のプロパティであるため、 C#次のコードスニペットではコンパイルエラーが発生します。  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.Net は、`Boolean` 値を `NullableBoolean`に暗黙的にキャストC#しますが、ではキャストされません。 したがって、プロパティの状態を明示的に確認することをお勧めします。 たとえば、次のコード例では、Visual Basic C#し、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。  
  
 次の Visual Basic コード例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。 この例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティが `True`に設定されているかどうかをテストします。したがって、`Nothing` と `False` は `If` ステートメントを通過します。  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 このC#コード例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。 この例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティが `True`に設定されているかどうかをテストします。したがって、`Null` と `False` は `If` ステートメントを通過します。  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを使用して、プログラムでノードを展開する方法を示しています。 これにより、深さが1であるすべてのノードが拡張された状態に初期化されます。 ルートノードが展開されると、その子ノードは既に展開されていることに注意してください。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの隣に表示されるイメージのツールヒントのテキストを取得または設定します。</summary>
        <value>ノードの隣に表示されるイメージのツールヒントのテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードの横に画像が表示される場合 (<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> プロパティが設定されている場合)、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> プロパティを使用して、ユーザーがマウスポインターを画像の上に置いたときに表示されるツールヒントを指定します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> プロパティを使用して、ノードの横に表示されるイメージのツールヒントテキストを指定する方法を示します。 この例を正しく動作させるには、独自のイメージを提供する必要があります。  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの隣に表示されるイメージへの URL を取得または設定します。</summary>
        <value>ノードの隣に表示されるカスタム イメージへの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールの現在のノードのカスタムイメージを指定します。 このイメージはノードの横に表示され、クライアントのブラウザーがその形式をサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にすることができます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> プロパティを使用してノードのカスタムイメージを提供する方法を示しています。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>コントロールがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ビューステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">ノードの状態を表す <see cref="T:System.Object" />。</param>
        <summary>以前に保存したノードのビューステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> は、以前に保存したノードのビューステートを読み込むために使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ビューステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードがクリックされたときの移動先 URL を取得または設定します。</summary>
        <value>ノードがクリックされたときの移動先 URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードのテキストは、選択モードまたはナビゲーションモードの2つのモードのいずれかになります。 既定では、ノードは選択モードになっています。 ノードをナビゲーションモードにするには、ノードの <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを空の文字列以外の値に設定します。  
  
 ノードがナビゲーションモードの場合は、そのノードのすべての選択イベントが無効になります。 ナビゲーションモードでノードをクリックすると、指定した URL にユーザーがリンクされます。 必要に応じて、[<xref:System.Web.UI.WebControls.TreeNode.Target%2A>] プロパティを設定して、リンクされたコンテンツを表示するウィンドウまたはフレームを指定することもできます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、フレームを設定する方法を示します。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを使用して、ノードがクリックされたときにリンクする URL を指定する方法を示しています。 この例は、前の例のフレームセット内で、目次を表示するために使用されます。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のノードの親ノードを取得します。</summary>
        <value>現在のノードの親ノードを表す <see cref="T:System.Web.UI.WebControls.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> プロパティは、現在のノードの親ノードを表す <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを返します。 通常、親ノードを決定したり、親ノードのプロパティにアクセスしたりするために使用されます。  
  
> [!NOTE]
>  ルートノードに親ノードがありません。  
  
 現在のノードの子ノードにアクセスするには、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Parent%2A> プロパティを使用して、現在のノードの親ノードの <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティにアクセスする方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードにデータが動的に設定されるかどうかを示す値を取得または設定します。</summary>
        <value>ノードにデータが動的に設定される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、ユーザー入力に依存するデータサイズやカスタムコンテンツによってツリー構造を静的に定義するのは現実的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView> コントロールは動的なノードの作成をサポートしています。 ノードの <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> プロパティが `true`に設定されている場合、ノードが展開されると、そのノードは実行時にポストバックイベントによって設定されます。 ノードを動的に設定するには、ノードを設定するイベント処理メソッドを <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> イベントに対して定義する必要があります。  
  
 サポートされているブラウザーでは、クライアント側のノードの作成も利用できます。 これを有効にすると、ノードの展開時にクライアント上のノードを動的に設定することが <xref:System.Web.UI.WebControls.TreeView> コントロールに許可されます。これにより、サーバーにポストバックする必要がなくなります。 クライアント側のノードの作成の詳細については、「<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>」を参照してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> プロパティを使用して、ノードに動的に値が設定されることを示す方法を示します。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロール開発者がノードに追加表示を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コントロールの開発者が、ノードのレンダリング後にレンダリングを追加することによってオーバーライドできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロール開発者がノードに追加表示を追加できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コントロールの開発者が、ノードがレンダリングされる前にレンダリングを追加することによってオーバーライドできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ノードの現在のビューステートを保存します。</summary>
        <returns>ノードの保存された状態を格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> メソッドは、その状態を保存するためにノードによって呼び出されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ビューステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの現在のノードを選択します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Select%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールの現在のノードを選択します。  
  
 **メモ**別の方法として、[<xref:System.Web.UI.WebControls.TreeNode.Selected%2A>] プロパティを `true`に設定して、現在のノードを選択することもできます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Select%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールでノードを選択する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの選択時に発生させる 1 つ以上のイベントを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> 値のいずれか 1 つです。 既定では、 <see langword="TreeNodeSelectAction.Select" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> コントロールのノードのテキストは、選択モードまたはナビゲーションモードの2つのモードのいずれかになります。 既定では、ノードは選択モードになっています。 ノードをナビゲーションモードにするには、ノードの <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを空の文字列 ("") 以外の値に設定します。 ノードを選択モードにするには、ノードの <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティを空の文字列に設定します。  
  
> [!NOTE]
>  ノードがナビゲーションモードの場合、そのノードの選択イベントは無効になります。 ノードをクリックすると、そのページがサーバーにポストバックされてイベントが発生するのではなく、指定した URL にユーザーがリダイレクトされます。  
  
 ノードが選択モードのときは、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティを使用して、ノードが選択されたときに発生するイベントを指定します。 利用可能なオプションの一覧を次の表に示します。  
  
|選択操作|説明|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|ノードの展開と折りたたみを切り替えます。 必要に応じて、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> イベントまたは <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> イベントを発生させます。|  
|`TreeNodeSelectAction.None`|ノードの選択時にイベントは発生しません。|  
|`TreeNodeSelectAction.Select`|ノードの選択時に <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントを発生させます。|  
|`TreeNodeSelectAction.SelectExpand`|ノードが選択されたときに、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> と <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> の両方のイベントを発生させます。 ノードは展開されているだけで、折りたたまれていません。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティが `TreeNodeSelectAction.None`に設定されたノードに対してはレンダリングされません。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティを使用して、ノードがクリックされたときに発生するイベントを指定する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードが選択されているかどうかを示す値を取得または設定します。</summary>
        <value>ノードが選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードが選択されているかどうかを指定または確認するには、<xref:System.Web.UI.WebControls.TreeNode.Selected%2A> プロパティを使用します。  
  
> [!NOTE]
>  このプロパティは、ノードが選択されているかどうかを判断するために使用できますが、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティを使用する方が一般的です。  
  
 このプロパティを使用する場合、<xref:System.Web.UI.WebControls.TreeView> コントロールで一度に選択できるノードは1つだけです。  
  
> [!NOTE]
>  別の方法として、<xref:System.Web.UI.WebControls.TreeNode.Select%2A> メソッドを使用してノードを選択することもできます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Selected%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールでノードを選択する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの隣にチェック ボックスが表示されるどうかを示す値を取得または設定します。</summary>
        <value>チェック ボックスを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> コントロールを使用すると、ノードのイメージの横にチェックボックスを表示できます。 現在のノードのチェックボックスを表示または非表示にするには、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> プロパティを使用します。  
  
 <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> プロパティを使用してチェックボックスを表示することもできますが、<xref:System.Web.UI.WebControls.TreeView> コントロールの <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> プロパティを使用する方が一般的です。 ただし、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> プロパティは、プロパティによって指定されたすべてのノード型に影響します。したがって、多くの場合、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> プロパティは、個々のノードの設定を上書きするために使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> プロパティは3つの状態のプロパティであるため、 C#次のコードスニペットではコンパイルエラーが発生します。  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 VB.Net は、`Boolean` 値を `NullableBoolean`に暗黙的にキャストC#しますが、ではキャストされません。 したがって、プロパティの状態を明示的に確認することをお勧めします。 たとえば、次のコード例では、Visual Basic C#し、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。  
  
 次の Visual Basic コード例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。 この例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティが `True`に設定されているかどうかをテストします。したがって、`Nothing` と `False` は `If` ステートメントを通過します。  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 このC#コード例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティの値を明示的にテストします。 この例では、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティが `True`に設定されているかどうかをテストします。したがって、`Null` と `False` は `If` ステートメントを通過します。  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのノードのチェックボックスをプログラムで表示および非表示にする方法を示します。 この例を正しく動作させるには、次のサンプル XML データを、"books .xml" という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 次のコードは、前の例の XML データのサンプルです。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトのコピーを作成します。</summary>
        <returns><see cref="T:System.Object" /> オブジェクトのコピーを表す <see cref="T:System.Web.UI.WebControls.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A> メソッドは、それ自体のコピーを作成するために <xref:System.Web.UI.WebControls.TreeNode> クラスによって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />」をご覧ください。</summary>
        <value>ノードがビューステートへの変更を保存しているかどうかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 このメソッドは、<xref:System.Web.UI.WebControls.TreeNode> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存されたビューステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>前回保存されたノードのビューステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートの変更を <see cref="T:System.Object" /> に保存します。</summary>
        <returns>ビュー ステートの変化を格納している <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートへの変更を追跡するように <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトに指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドがサーバーコントロールで呼び出されると、<xref:System.Web.UI.Control.IsTrackingViewState%2A> プロパティは `true`を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードに関連付けられている Web ページの内容を表示する対象のウィンドウまたはフレームを取得または設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 値は、次の表に示すアンダースコア (_) から始まる特殊な値を除き、大文字小文字を区別しない A から Z の範囲の文字で始まる必要があります。  
  
 <list type="table"><listheader><term> 対象の値 
 </term><description> 説明 
 </description></listheader><item><term><see langword="_blank" /></term><description> フレームなしの新しいウィンドウに内容を表示します。  
  
 </description></item><item><term><see langword="_parent" /></term><description> 直前のフレームセットの親に内容を表示します。  
  
 </description></item><item><term><see langword="_search" /></term><description> 検索ペインに内容を表示します。  
  
 </description></item><item><term><see langword="_self" /></term><description> フォーカスのあるフレームに内容を表示します。  
  
 </description></item><item><term><see langword="_top" /></term><description> 最大化されたフレームなしのウィンドウに内容を表示します。  
  
 </description></item></list><block subset="none" type="note"><para>  
 ブラウザーのドキュメントを参照して、<see langword="_search" /> 値がサポートされているかどうか確認してください。 たとえば、Microsoft Internet Explorer 5.0 以降では <see langword="_search" /> ターゲット値がサポートされています。  
  
</para></block>  
  
 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ノードがクリックされたときに、そのノードにリンクされている Web コンテンツを表示するウィンドウまたはフレームを指定するには、<xref:System.Web.UI.WebControls.TreeNode.Target%2A> プロパティを使用します。  
  
> [!NOTE]
>  このプロパティを設定すると、<xref:System.Web.UI.WebControls.TreeView> コントロールの <xref:System.Web.UI.WebControls.TreeView.Target%2A> プロパティがオーバーライドされます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNode.Target%2A> プロパティは、`target` 属性としてレンダリングされます。 `anchor` 要素の `target` 属性は、XHTML 1.1 ドキュメント型定義では許可されていません。 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトに対してレンダリングされた出力が XHTML 1.1 に準拠している必要がある場合は、<xref:System.Web.UI.WebControls.TreeNode.Target%2A> プロパティを設定しないでください。 詳細については、「 [Visual Studio と ASP.NET の XHTML 標準](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)」を参照してください。  
>   
>  アクセス可能な Web ページを作成する場合は、<xref:System.Web.UI.WebControls.TreeNode.Target%2A> プロパティを使用して別のウィンドウを対象にしないようにすることを強くお勧めします。 詳細については、「 [ASP.NET Accessibility](https://docs.microsoft.com/previous-versions/aspnet/ms228011(v=vs.100))」を参照してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次の例のフレームを設定する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.Target%2A> プロパティを使用して、リンクされたコンテンツを表示するフレームを指定する方法を示します。 この例は、前の例のフレームセット内で、目次を表示するために使用されます。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのノードに表示されるテキストを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのノードに表示されるテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのノードに表示されるテキストを指定または決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティに `null`が含まれている場合、`get` アクセサーは <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティの値を返します。 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティに `null`が含まれている場合は、<xref:System.String.Empty> が返されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティを使用して、ノードのテキストを指定する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ノードを展開した状態または折りたたんだ状態に切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> メソッドを使用して、ノードの展開された状態と折りたたまれた状態を切り替えます。 たとえば、ノードが折りたたまれている場合は、<xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> メソッドを呼び出すと、ノードが拡張され、その逆も同様になります。  
  
> [!NOTE]
>  別の方法として、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> プロパティを直接設定することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのルートノードの展開された状態と折りたたまれた状態の間で切り替える方法を示します。  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このノードのツールヒントのテキストを取得または設定します。</summary>
        <value>ノードのツールヒントのテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> プロパティを使用して、ノードのツールヒントテキストを指定します。 ツールヒントのテキストは、マウスポインターがノードの上にあるときに表示されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのノードにツールヒントを提供する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ノードに対するビューステートの変更の追跡と保存を始める開始点にマークを付けます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ビューステートの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの補足データ (ポストバック イベントを処理するために使用するデータなど) を格納するために使用される、非表示の値を取得または設定します。</summary>
        <value>ノードに関する非表示の補足データ。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティは、ノードに関連付けられている追加データを格納することによって、<xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティを補完するために使用されます。 この値はコントロールには表示されず、通常、ポストバックイベントを処理するためのデータを格納するために使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティに `null`が含まれている場合、`get` アクセサーは <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティの値を返します。 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティに `null`が含まれている場合は、<xref:System.String.Empty> が返されます。  
  
> [!NOTE]
>  同じレベルのノードは、それぞれ <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティに一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.TreeView> コントロールは、同じレベルの同じ値を持つ異なるノードを区別できません。 このシナリオでは、値が重複しているノードをユーザーがクリックすると、<xref:System.Web.UI.WebControls.TreeView> コントロールの最初に表示されるノードが選択されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティを使用してキーフィールドを格納する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ルート ノードから現在のノードまでのパスを取得します。</summary>
        <value>ルート ノードから現在のノードまでのパスを構成するノードの値のコンマ区切りのリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティには、ルートノードから現在のノードへのパスを形成するノード値の区切り記号で区切られたリストが含まれます。 ノード値を区切るために使用する区切り文字を指定するには、<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> プロパティを使用します。 この値は、個々の値のリストを解析する場合、または <xref:System.Web.UI.WebControls.TreeView> クラスの <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> メソッドに引数として渡す場合によく使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView> コントロールに表示される値によっては、競合を防ぐために区切り文字を変更する必要がある場合があります。 たとえば、区切り記号をコンマに設定した場合、表示される値にはコンマを含めることはできません。それ以外の場合、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティを正確に解析することはできません。  
  
> [!NOTE]
>  同じレベルのノードは、それぞれ <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティに一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.TreeView> コントロールは、同じレベルの同じ値を持つ異なるノードを区別できません。 このシナリオでは、値が重複しているノードをユーザーがクリックすると、<xref:System.Web.UI.WebControls.TreeView> コントロールの最初に表示されるノードが選択されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティを解析する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
