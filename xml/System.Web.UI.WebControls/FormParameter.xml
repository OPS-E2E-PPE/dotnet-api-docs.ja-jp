<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8362afa3c85285133603433a7da33c2aeb7354d7" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107071" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>パラメーター オブジェクトに HTTP 要求の <see cref="P:System.Web.HttpRequest.Form" /> フィールドの値をバインドします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter> クラスを使用すると、<xref:System.Web.HttpRequest.Form%2A> コレクション内のフォーム変数の値を、パラメーター化されたクエリまたはコマンドで使用されるパラメーターにバインドできます。 パラメーターにデータをバインドするコントロールは、<xref:System.Web.UI.WebControls.FormParameter> が指定されていても、対応するフォーム変数が渡されなかった場合に、例外をスローすることがあります。 また、対応する値を指定せずにフォーム変数を渡すと、データが表示されない場合もあります。 必要に応じて、このような状況を回避するために <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> を設定します。

 <xref:System.Web.UI.WebControls.FormParameter> クラスは、<xref:System.Web.UI.WebControls.Parameter> クラスから継承されたフォーム変数に加えて、バインド先のフォーム変数の名前を識別する <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> プロパティを提供します。

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> は、フォーム要素によって渡された値をどのような方法でも検証しません。生の値が使用されます。 ほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter> の値は、使用しているデータソースコントロールによって公開されている `Selecting`、`Updating`、`Inserting`、`Deleting` イベントなどのイベントを処理することによって、データソースコントロールによって使用される前に検証できます。 パラメーターの値が検証テストに合格しなかった場合は、関連付けられている <xref:System.ComponentModel.CancelEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、データ操作を取り消すことができます。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールと単純な ASP.NET Web ページを使用してデータベースにデータを挿入する方法を示します。 データテーブル内の現在のデータが <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示されます。 新しいレコードを追加するには、<xref:System.Web.UI.WebControls.TextBox> コントロールに値を入力し、ボタンをクリックします。 このボタンがクリックされると、指定された値がデータベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList> が更新されます。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの名前のない新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.FormParameter> オブジェクトは、そのすべてのプロパティの既定値で初期化されます。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> は <xref:System.String.Empty?displayProperty=nameWithType>に初期化されます。 さらに、<xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティが <xref:System.String.Empty?displayProperty=nameWithType>に初期化され、<xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティが <xref:System.TypeCode.Object?displayProperty=nameWithType>に初期化され、<xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが <xref:System.Data.ParameterDirection.Input>に初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが null に初期化されます (`Nothing` では Visual Basic)。



## Examples

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> は、フォーム要素によって渡された値をどのような方法でも検証しません。生の値が使用されます。 ほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter> の値は、使用しているデータソースコントロールによって公開されている `Selecting`、`Updating`、`Inserting`、`Deleting` イベントなどのイベントを処理することによって、データソースコントロールによって使用される前に検証できます。 パラメーターの値が検証テストに合格しなかった場合は、関連付けられている <xref:System.ComponentModel.CancelEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、データ操作を取り消すことができます。

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">現在のインスタンスの初期化元になる <see cref="T:System.Web.UI.WebControls.FormParameter" /> インスタンス。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> パラメーターで指定されたインスタンスの値を使用して、<paramref name="original" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> コンストラクターは、<xref:System.Web.UI.WebControls.FormParameter> インスタンスの複製に使用する `protected` コピーコンストラクターです。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>、<xref:System.Web.UI.WebControls.Parameter.Name%2A>、および <xref:System.Web.UI.WebControls.Parameter.Type%2A> を含む <xref:System.Web.UI.WebControls.FormParameter>の値はすべて、新しいインスタンスに転送されます。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。 既定では、 <see cref="F:System.String.Empty" />です。</param>
        <summary>バインド先のフォーム変数フィールドを識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの名前付きの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.FormParameter> オブジェクトは、パラメーターのバインド先のフォーム変数を識別する、指定されたパラメーター名と文字列を使用して初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Type%2A> と <xref:System.Web.UI.WebControls.Parameter.Direction%2A> のプロパティは既定値で初期化されます。



## Examples

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> は、フォーム要素によって渡された値をどのような方法でも検証しません。生の値が使用されます。 ほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter> の値は、使用しているデータソースコントロールによって公開されている `Selecting`、`Updating`、`Inserting`、`Deleting` イベントなどのイベントを処理することによって、データソースコントロールによって使用される前に検証できます。 パラメーターの値が検証テストに合格しなかった場合は、関連付けられている <xref:System.ComponentModel.CancelEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、データ操作を取り消すことができます。

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="dbType">パラメーターのデータベース型。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。</param>
        <summary>バインド先のフォーム変数フィールドを識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">パラメーターが表す型。 既定では、 <see cref="F:System.TypeCode.Object" />です。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。 既定では、 <see cref="F:System.String.Empty" />です。</param>
        <summary>バインド先のフォーム変数を識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの厳密に型指定された名前付きの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.FormParameter> オブジェクトは、指定されたパラメーター名、<xref:System.Web.UI.WebControls.Parameter.Type%2A>、およびパラメーターのバインド先のフォーム変数を識別する文字列で初期化されます。 既定値を使用して初期化されるのは、<xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティと <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> プロパティだけです。



## Examples

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> は、フォーム要素によって渡された値をどのような方法でも検証しません。生の値が使用されます。 ほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter> の値は、使用しているデータソースコントロールによって公開されている `Selecting`、`Updating`、`Inserting`、`Deleting` イベントなどのイベントを処理することによって、データソースコントロールによって使用される前に検証できます。 パラメーターの値が検証テストに合格しなかった場合は、関連付けられている <xref:System.ComponentModel.CancelEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、データ操作を取り消すことができます。

 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.FormParameter" /> インスタンスの複製を返します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.WebControls.FormParameter" /> とまったく同じインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> メソッドは、<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> コピーコンストラクターを呼び出して、現在のインスタンスの値を使用して <xref:System.Web.UI.WebControls.FormParameter> クラスの新しいインスタンスを初期化します。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">要求の現在の <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control"><see cref="T:System.Web.UI.Control" /> を使用したページに関連付けられている <see cref="T:System.Web.UI.WebControls.FormParameter" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> オブジェクトの値を更新して返します。</summary>
        <returns>パラメーターの更新された現在の値を表すオブジェクト。 コンテキストまたは要求が null (Visual Basic の場合は <see langword="Nothing" />) の場合、<see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドは null を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter> は、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> メソッドが呼び出されるたびにフォーム変数にバインドしようとします。

 `context` パラメーターは、要求から指定されたフォームフィールドの値を取得するために、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> メソッドによって使用されます。 `control` パラメーターは無視されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのバインド先のフォーム変数の名前を取得または設定します。</summary>
        <value>パラメーターのバインド先のフォーム変数を識別する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> は、<xref:System.Web.HttpRequest.Form%2A> コレクションで渡される名前と値のペアを識別します。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> プロパティは、ペアの名前を識別しますが、<xref:System.Web.UI.WebControls.FormParameter> は実行時に対応する値にバインドされます。 予期されるフォーム変数文字列の名前と値のペアがコレクション内の ASP.NET Web ページに渡されない場合、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> メソッドは、パラメーターを <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティの値 (設定されている場合) にバインドします。 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> が設定されていない場合、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> メソッドは、パラメーターを値にバインドできません。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用してフィルター選択されたデータを表示する方法と、中間層ビジネスオブジェクトからデータを取得するための <xref:System.Web.UI.WebControls.FormParameter> と、結果を表示するための <xref:System.Web.UI.WebControls.GridView> コントロールを示しています。

 このコード例は、<xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView> コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および [送信] ボタンで構成されています。 既定では、<xref:System.Web.UI.WebControls.TextBox> に Northwind Traders の従業員の1つの名前が設定されます。 <xref:System.Web.UI.WebControls.GridView> には、<xref:System.Web.UI.WebControls.TextBox>の名前で識別される従業員に関する情報が表示されます。 別の従業員のデータを取得するには、<xref:System.Web.UI.WebControls.TextBox> に従業員の氏名を入力し、ボタンをクリックします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>によって取得されるデータをフィルター処理するために使用する式を指定します。 このプロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターのプレースホルダーは、<xref:System.Web.UI.WebControls.TextBox> コントロールの値にバインドされた <xref:System.Web.UI.WebControls.FormParameter> です。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトを示しています。 この例は、2つの基本クラスで構成されています。 `EmployeeLogic` クラスはビジネスロジックをカプセル化し、`NorthwindEmployee` クラスは、データ層からデータを読み込んで保持するために必要な基本機能のみを含むモデルクラスです。 わかりやすくするために、`EmployeeLogic` クラスはデータ層からデータを取得するのではなく、静的なデータセットを作成します。 また、この例では、サンプルでは、Northwind Traders の従業員の完全な名前を入力してフィルター処理を示すため、この例にも役立ちます。 完全な作業例については、提供されている ASP.NET コード例でこれらのクラスをコンパイルして使用する必要があります。

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> は、フォーム要素によって渡された値をどのような方法でも検証しません。生の値が使用されます。 ほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter> の値は、使用しているデータソースコントロールによって公開されている `Selecting`、`Updating`、`Inserting`、`Deleting` イベントなどのイベントを処理することによって、データソースコントロールによって使用される前に検証できます。 パラメーターの値が検証テストに合格しなかった場合は、関連付けられている <xref:System.ComponentModel.CancelEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、データ操作を取り消すことができます。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターでのクライアントの入力が検証されるかどうかを示す値を取得または設定します。</summary>
        <value>クライアントの入力が検証される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
