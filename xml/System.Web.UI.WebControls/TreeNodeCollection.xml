<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0bc83891df2755267230683c36bec66d85d4ad4" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78761291" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールに含まれる <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> クラスは、<xref:System.Web.UI.WebControls.TreeView> コントロール内の <xref:System.Web.UI.WebControls.TreeNode> オブジェクトのコレクションを格納および管理するために使用されます。 <xref:System.Web.UI.WebControls.TreeView> コントロールは、その2つのプロパティの <xref:System.Web.UI.WebControls.TreeNodeCollection> クラスを使用します。 ルートノードは、<xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと選択したノードの <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> プロパティに格納されます。 <xref:System.Web.UI.WebControls.TreeNodeCollection> コレクションは、子ノード (存在する場合) を格納するために、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティにも使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> クラスは、コレクション内の項目にアクセスするためのいくつかの方法をサポートしています。  
  
-   <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> インデクサーを使用して、特定の0から始まるインデックスで <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを直接取得します。  
  
-   <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> メソッドを使用して、コレクションの反復処理に使用できる列挙子を作成します。  
  
-   コレクションを反復C#処理するには、`foreach` () または `For Each` (Visual Basic) を使用します。  
  
-   <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、コレクションの内容を <xref:System.Array> オブジェクトにコピーします。  
  
 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを追加および削除することで、プログラムによって <xref:System.Web.UI.WebControls.TreeNodeCollection> を管理できます。 ノードをコレクションに追加するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> または <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> メソッドを使用します。 コレクションからノードを削除するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>、<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>、または <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> メソッドを使用します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView> コントロールがデータソースにバインドされている場合、バインドが発生するたびに <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> と <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> のコレクションが自動的に設定されます。 バインド間のコレクションに対する変更はすべて失われます。 これらの変更を保持するには、データソースを更新するか、バインドするたびに手動でコレクションを再構築します。  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> には、コレクション自体に関する情報を取得できるようにするプロパティとメソッドが含まれています。 コレクション内の項目の数を確認するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> プロパティを使用します。 コレクションに特定の <xref:System.Web.UI.WebControls.TreeNode> オブジェクトが含まれているかどうかを確認するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> メソッドを使用します。 コレクション内の <xref:System.Web.UI.WebControls.TreeNode> オブジェクトのインデックスを取得するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例では、プログラムを使用してノードをに追加し、<xref:System.Web.UI.WebControls.TreeNodeCollection>から削除する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティが <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>既定値を使用して、<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、既定値を使用して <xref:System.Web.UI.WebControls.TreeNodeCollection> クラスの新しいインスタンスを初期化します。 このコンストラクターは、親ノード (または所有者) が不要なルートノードのコレクションを作成するときによく使用されます。  
  
> [!NOTE]
>  非ルートノードのコレクションを作成する場合は、このコンストラクターではなく `owner` パラメーターを受け取るオーバーロードされたコンストラクターを使用して、親ノードを指定する必要があります。  
  
 このコンストラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">コレクションの親ノードを表す <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>親ノード (または所有者) を指定して、<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、指定された親ノード (または所有者) を使用して <xref:System.Web.UI.WebControls.TreeNodeCollection> クラスの新しいインスタンスを初期化します。 このコンストラクターは、通常、親ノードを指定する必要がある非ルートノードのコレクションを作成するときに使用されます。  
  
> [!NOTE]
>  ルートノードのコレクションを作成する場合は、ルートノードに親ノードがないため、パラメーターなしのコンストラクターを使用することを検討してください。  
  
 このコンストラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">追加する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトを <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトの末尾に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> メソッドを使用して、指定した <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNodeCollection>の末尾に追加します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> を使用すると、null 参照 (Visual Basic では Nothing)、および重複する <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを追加できます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> メソッドを使用して、特定のインデックスの <xref:System.Web.UI.WebControls.TreeNodeCollection> に <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを挿入することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> メソッドを使用して、プログラムで <xref:System.Web.UI.WebControls.TreeNodeCollection>にノードを追加する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティがそれぞれ <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトを挿入する位置の、0 から始まるインデックス。</param>
        <param name="child">追加する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトを、<see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトの指定したインデックス位置に挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> メソッドを使用して、指定した <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを、指定した0から始まるインデックス位置にある <xref:System.Web.UI.WebControls.TreeNodeCollection> に挿入します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> を使用すると、null 参照 (Visual Basic では Nothing)、および重複する <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを挿入できます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> メソッドを使用して <xref:System.Web.UI.WebControls.TreeNodeCollection> の末尾に <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを追加することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> メソッドを使用して、プログラムで <xref:System.Web.UI.WebControls.TreeNodeCollection>にノードを追加する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティがそれぞれ <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> が <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトを空にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> メソッドを使用して、すべての <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNodeCollection>から削除します。  
  
> [!NOTE]
>  コレクションから個々のノードを削除するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> または <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例は、<xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection>をプログラムによって空にする方法を示しています。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティが <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">検索する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトがコレクション内にあるかどうかを確認します。</summary>
        <returns>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトがコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNode> オブジェクトが <xref:System.Web.UI.WebControls.TreeNodeCollection>に含まれているかどうかを確認します。 このメソッドは、コレクションに対してノードの追加や削除などのタスクを実行する前に、<xref:System.Web.UI.WebControls.TreeNode> オブジェクトが存在するかどうかをテストするためによく使用されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> メソッドを使用して、選択したノードが <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> コレクション内にあるかどうかを確認する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティは <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray"><see cref="T:System.Web.UI.WebControls.TreeNode" /> の項目のコピー先となる、インデックス番号が 0 から始まる <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトの配列。</param>
        <param name="index">コピーされたコンテンツが格納される配列の格納開始位置。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> のすべての項目を互換性のある 1 次元の <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト配列にコピーします。コピー先の配列の指定したインデックスからコピーが開始されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、指定した0から始まる <xref:System.Array?displayProperty=nameWithType> オブジェクトに <xref:System.Web.UI.WebControls.TreeNodeCollection> の内容をコピーします。 項目は、コピー先の配列の指定したインデックスを開始位置としてコピーされます。 <xref:System.Array?displayProperty=nameWithType> オブジェクトを使用すると、配列構文を使用して <xref:System.Web.UI.WebControls.TreeNodeCollection>内の項目にアクセスできます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> メソッドを使用して、コレクション内の項目にアクセスするために使用できる列挙子を作成することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection> の値を配列にコピーする方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティは <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクト内の項目の数を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 内の項目数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection>内の項目の数を確認するには、<xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> プロパティを使用します。 このプロパティは、コレクションの上限を決定するためにコレクションを反復処理する場合によく使用されます。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> プロパティは、コレクションが空であるかどうかを判断するためにもよく使用されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection>内の項目の数を確認する方法を示します。 次に、<xref:System.Web.UI.WebControls.TreeView> コントロールのプリオーダートラバーサルを実行して、各ノードのテキストを表示します。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトを反復処理するために使用できる列挙子を返します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> を反復処理するために使用できる列挙子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection>内の各項目を取得するために簡単に反復処理できる列挙子を作成します。 列挙子で現在ポイントされている項目を取得するには、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> プロパティを使用します。 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> メソッドを使用して、次の項目に移動します。 列挙子をコレクションの先頭に戻す必要がある場合は、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> メソッドを使用します。  
  
> [!NOTE]
>  列挙子を作成した後、または <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> メソッドを使用した後は、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。 それ以外の場合、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> プロパティによって表される項目は定義されません。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、コレクション内の項目にアクセスするために使用できる <xref:System.Array?displayProperty=nameWithType> オブジェクトを作成することもできます。 別の方法として、`foreach` または `For Each` 構造体を使用してコレクションを反復処理する方法もあります。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView> コントロールのルートノードを含む列挙子を作成する方法を示します。  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">検索する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトのインデックスを確認します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 内に <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクト内の指定した <xref:System.Web.UI.WebControls.TreeNode> オブジェクトの0から始まるインデックスを確認します。 ノードがコレクション内にない場合、このメソッドは-1 を返します。  
  
> [!NOTE]
>  指定したノードがコレクション内で複数回出現する場合は、最初に見つかった位置のインデックスが返されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> メソッドを使用して、ルートノードのインデックスを決定する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティは <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
        <value><see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> プロパティは、<xref:System.Web.UI.WebControls.TreeNodeCollection> へのアクセスが同期されている (スレッドセーフである) かどうかを示すために使用されます。 このプロパティは <xref:System.Collections.ICollection?displayProperty=nameWithType> クラスから派生し、常に `false`を返すようにオーバーライドされます。  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> プロパティの詳細については、<xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスの <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">取得する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトの 0 から始まるインデックス番号。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト内の指定したインデックス位置にある <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNode" /> 内の指定したインデックス位置の <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインデクサーを使用して、配列表記を使用して、指定したインデックス位置にある <xref:System.Web.UI.WebControls.TreeNodeCollection> から <xref:System.Web.UI.WebControls.TreeNode> オブジェクトにアクセスします。 インデクサーを使用すると、コレクション内の <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを直接変更または置き換えることができます。 コレクションは0から始まります。  
  
   
  
## Examples  
 次の例は、インデクサーを使用して <xref:System.Web.UI.WebControls.TreeNodeCollection>内の要素にアクセスする方法を示しています。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティが <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">削除する <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトを <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> メソッドを使用して、指定したノードをコレクションから削除します。 その後、そのノードに続くすべての項目が上に移動され、空いた位置に格納されます。 移動した項目のインデックスも更新されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> には、null 参照 (Visual Basic では Nothing) と重複する <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを含めることができます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> メソッドを使用して、特定のインデックス位置にあるノードを削除することもできます。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> メソッドを使用して、コレクション内のすべてのノードを削除することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> メソッドを使用して、プログラムによって <xref:System.Web.UI.WebControls.TreeNodeCollection>からノードを削除する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティがそれぞれ <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除するノードの、0 から始まるインデックス位置。</param>
        <summary>指定したインデックス位置にある <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトを <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> メソッドを使用して、指定した0から始まるインデックス位置にある <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNodeCollection>から削除します。 その後、そのノードに続くすべての項目が上に移動され、空いた位置に格納されます。 移動した項目のインデックスも更新されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection> には、null 参照 (Visual Basic では Nothing) と重複する <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを含めることができます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> メソッドを使用して、特定の <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを削除することもできます。 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> メソッドを使用して、コレクション内のすべてのノードを削除することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> メソッドを使用して、プログラムによって <xref:System.Web.UI.WebControls.TreeNodeCollection>からノードを削除する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティと <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> プロパティがそれぞれ <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value><see cref="T:System.Object" /> へのアクセスを同期するために使用できる <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> プロパティは、同期 (スレッド処理) コードと共に使用できる、同期されたバージョンの <xref:System.Web.UI.WebControls.TreeNodeCollection> を提供します。  
  
> [!CAUTION]
>  このクラスの <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> プロパティは常に `false`を返します。これは、<xref:System.Web.UI.WebControls.TreeNodeCollection> クラスが同期されていない (スレッドセーフではない) ことを示します。  
  
 コードを同期するには、<xref:System.Web.UI.WebControls.TreeNodeCollection> 自体に直接ではなく、<xref:System.Web.UI.WebControls.TreeNodeCollection>の <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> オブジェクトに対して操作を実行する必要があります。 これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。 具体的には、<xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを同時に変更している可能性のある他のスレッドとの適切な同期を維持します。  
  
> [!NOTE]
>  この実装で返されるオブジェクトは、コレクションに <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを格納するために使用される <xref:System.Collections.ArrayList?displayProperty=nameWithType> オブジェクトです。  
  
 コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。 コレクションが同期されている場合でも、他のスレッドがコレクションを変更する場合があるため、列挙子が例外をスローする原因になります。 列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。  
  
 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> プロパティの詳細については、<xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスの <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="treeNodeCollection.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" /> の項目のコピー先の、インデックス番号が 0 から始まる <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクト。</param>
        <param name="index">コピーされたコンテンツが格納される配列の格納開始位置。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトのすべての項目を、互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー先の配列の指定したインデックスからコピーが開始されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、指定した0から始まる <xref:System.Array?displayProperty=nameWithType> オブジェクトに <xref:System.Web.UI.WebControls.TreeNodeCollection> の内容をコピーします。 項目は、コピー先の配列の指定したインデックスを開始位置としてコピーされます。 <xref:System.Array?displayProperty=nameWithType> オブジェクトを使用すると、配列構文を使用して <xref:System.Web.UI.WebControls.TreeNodeCollection>内の項目にアクセスできます。  
  
 別の方法として、<xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> メソッドを使用して、コレクション内の項目にアクセスするために使用できる列挙子を作成することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection> の値を配列にコピーする方法を示します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティは <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクトを返すことに注意してください。  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> が <see cref="T:System.Web.UI.WebControls.TreeNode" /> オブジェクトの配列ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IStateManager.IsTrackingViewState : bool" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>コントロールがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit&#xA;override this.System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit" Usage="treeNodeCollection.System.Web.UI.IStateManager.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存されたビューステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> オブジェクトが前回保存したビューステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj&#xA;override this.System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj" Usage="treeNodeCollection.System.Web.UI.IStateManager.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートへの変更を <see cref="T:System.Object" /> に保存します。</summary>
        <returns>ビュー ステートの変化を格納している <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit&#xA;override this.System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit" Usage="treeNodeCollection.System.Web.UI.IStateManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートへの変更を追跡するように <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> に指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドがサーバーコントロールで呼び出されると、<xref:System.Web.UI.Control.IsTrackingViewState%2A> プロパティは `true`を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
