<Type Name="ListViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.ListViewUpdatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="988ba3756b956869634e31e97317b1a038b188bf" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78732518" /></Metadata><TypeSignature Language="C#" Value="public class ListViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListView> コントロールは、<xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> メソッドが呼び出されたとき、またはコントロールの Update ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.ListView> コントロールが項目を更新した後に、<xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントを発生させます。 (Update ボタンは、`CommandName` プロパティが "Update" に設定されているボタンです)。これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できるようになります。たとえば、更新操作の結果を確認することができます。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> オブジェクトがイベント処理メソッドに渡されます。 このオブジェクトを使用すると、更新された項目の数を特定し、発生した可能性のある例外を取得できます。 更新操作によって影響を受けた項目の数を確認するには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用します。 例外が発生したかどうかを確認するには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを設定することによって、イベント処理メソッドで例外が処理されたかどうかを示すことができます。 元のフィールド値には、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> プロパティを使用してアクセスできます。 更新されたフィールド値にアクセスするには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> プロパティを使用します。

 既定では、<xref:System.Web.UI.WebControls.ListView> の項目は更新操作後に読み取り専用モードに戻ります。 更新操作中に発生した例外を処理する場合は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを `true`に設定することによって、<xref:System.Web.UI.WebControls.ListView> 項目を編集モードに保つことができます。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> オブジェクトを使用して、更新操作中に例外が発生したかどうかを判断する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewUpdatedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewUpdatedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.ListViewUpdatedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">更新操作の影響を受けた行の数。</param>
        <param name="exception">更新操作が実行されたときに発生した例外。 例外が発生していない場合は、<see langword="null" /> を使用します。</param>
        <summary><see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラスの新しいインスタンスを初期化します。

> [!NOTE]
>  このコンストラクターは、主に、イベントを発生させるときにコントロールの開発者によって使用されます。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラスのインスタンスのプロパティの初期値を次の表に示します。

|プロパティ|初期値|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>|`e` パラメーターに格納されている <xref:System.Exception?displayProperty=nameWithType> オブジェクト。|
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>|`false`。|
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>|`false`。|

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作の影響を受けた行の数を取得します。</summary>
        <value>更新操作の影響を受けた行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用して、データソースから返される更新操作の影響を受ける行の数を決定します。 通常、更新される項目は1つだけであるため、このプロパティには通常、値0または1が含まれます。

 更新操作中に、例外を発生させないエラーが発生することがあります。 その場合は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用して、項目が更新されたことを確認できます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用して、項目が更新されたことを確認する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作中に例外が発生した場合は、その例外を取得します。</summary>
        <value>更新操作中に発生した例外。例外が発生しなかった場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 更新操作中に発生した例外 (存在する場合) を確認するには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> プロパティを使用します。 例外が発生しなかった場合、このプロパティは `null`を返します。

> [!NOTE]
>  例外が発生し、イベントハンドラーで例外を処理する場合は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを `true`に設定します。 それ以外の場合は、<xref:System.Web.UI.WebControls.ListView> コントロールによって例外が再スローされます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> プロパティを使用して、更新操作中に例外が発生したかどうかを判断する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作中に発生した例外がイベント ハンドラーで処理されたかどうかを示す値を取得または設定します。</summary>
        <value>イベント ハンドラーで例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 更新操作中に例外が発生した場合は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを使用して、イベントの発生時に例外を処理したかどうかを示します。 このプロパティが `true`に設定されている場合、例外は処理済みと見なされ、<xref:System.Web.UI.WebControls.ListView> コントロールによって再スローされることはありません。 このプロパティが `false`に設定されている場合、<xref:System.Web.UI.WebControls.ListView> コントロールは例外を再スローします。 発生した例外を特定するには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> プロパティを使用します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを使用して、例外がイベントハンドラーで処理されたことを示す方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作後に <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールを編集モードのまま維持するかどうかを示す値を取得または設定します。</summary>
        <value>更新操作後にコントロールを編集モードのまま維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 既定では、更新操作の後に、<xref:System.Web.UI.WebControls.ListView> コントロールが読み取り専用モードに戻ります。 <xref:System.Web.UI.WebControls.ListView> コントロールを編集モードのままにするように指定するには、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを `true` に設定します。 これにより、ユーザーが入力した値も保持されます。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを使用して、例外が発生したときに <xref:System.Web.UI.WebControls.ListView> コントロールを編集モードに保つ方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新された項目の新しい値が格納されているディクショナリを取得します。</summary>
        <value>更新された項目の新しい値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> プロパティを使用して、更新された項目の新しいフィールド値にアクセスします。 たとえば、これらの値を使用して、更新された項目のログを保持することができます。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> プロパティは、<xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスを実装するオブジェクトを返します。 オブジェクトには、更新された項目のフィールドを表す <xref:System.Collections.DictionaryEntry> オブジェクトが格納されます。

> [!NOTE]
>  ショートカットとして、<xref:System.Collections.Specialized.IOrderedDictionary> オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることができます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新された項目の元の値が格納されているディクショナリを取得します。</summary>
        <value>更新された項目の元の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> プロパティを使用して、更新された項目の元のフィールド値にアクセスします。 たとえば、これらの値を使用して、更新された項目のログを保持することができます。

 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> プロパティは、<xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスを実装するオブジェクトを返します。 オブジェクトには、更新された項目のフィールドを表す <xref:System.Collections.DictionaryEntry> オブジェクトが格納されます。

> [!NOTE]
>  ショートカットとして、<xref:System.Collections.Specialized.IOrderedDictionary> オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることができます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">テクノロジの概要: ListView コントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
