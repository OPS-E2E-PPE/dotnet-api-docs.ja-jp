<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7320fb225c5253d3c856178fb64b78938fb153e8" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246918" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET Web ページにメニューを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [メニュー項目](#menu_items)  
  
-   [静的データ](#static_data)  
  
-   [バインド (データに)](#binding_to_data)  
  
-   [ユーザーインターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、ASP.NET Web ページにメニューを表示するために使用され、多くの場合、Web サイト内を移動するための <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールと組み合わせて使用されます。 <xref:System.Web.UI.WebControls.Menu> コントロールは、次の機能をサポートしています。  
  
-   コントロールのメニュー項目を階層データソースにバインドできるようにするデータバインディング。  
  
-   <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールとの統合によるサイトナビゲーション。  
  
-   <xref:System.Web.UI.WebControls.Menu> オブジェクトモデルへのプログラムによるアクセス。メニューを動的に作成したり、メニュー項目を設定したり、プロパティを設定したりできます。  
  
-   テーマ、ユーザー定義の画像、スタイル、およびユーザー定義のテンプレートを使用して、カスタマイズ可能な外観を実現します。  
  
 ユーザーがメニュー項目をクリックすると、<xref:System.Web.UI.WebControls.Menu> コントロールは、リンクされた Web ページに移動するか、単にサーバーにポストバックすることができます。 メニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>] プロパティが設定されている場合、<xref:System.Web.UI.WebControls.Menu> コントロールはリンクページに移動します。それ以外の場合は、処理のためにページをサーバーにポストバックします。 既定では、リンクページは、<xref:System.Web.UI.WebControls.Menu> コントロールと同じウィンドウまたはフレームに表示されます。 リンクされたコンテンツを別のウィンドウまたはフレームに表示するには、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティを使用します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティは、コントロールのすべてのメニュー項目に影響します。 個々のメニュー項目のウィンドウまたはフレームを指定するには、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトの [<xref:System.Web.UI.WebControls.MenuItem.Target%2A>] プロパティを直接設定します。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、静的メニューと動的メニューの2種類のメニューが表示されます。 静的メニューは、常に <xref:System.Web.UI.WebControls.Menu> コントロールに表示されます。 既定では、ルートレベル (レベル 0) のメニュー項目が静的メニューに表示されます。 静的メニュー内に追加のメニューレベル (静的サブメニュー) を表示するには、[<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>] プロパティを設定します。 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティによって指定された値よりも高いレベルのメニュー項目 (存在する場合) は、動的メニューに表示されます。 動的メニューは、ユーザーが動的サブメニューを含む親メニュー項目の上にマウスポインターを置いたときにのみ表示されます。 動的メニューは、一定の期間が経過すると自動的に非表示になります。 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> プロパティを使用して、期間を指定します。  
  
> [!NOTE]
>  ユーザーがメニューの外部をクリックしても、動的メニューは消えます。  
  
 動的メニューに表示されるレベルの数を制限するには、<xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティを設定します。 指定された値よりも大きいメニューレベルは破棄されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロール内で使用するように設計されていません。 <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールの外部のページにのみ追加できます。 <xref:System.Web.UI.UpdatePanel> コントロールは、ポストバックを使用してページ全体を更新するのではなく、ページの選択された領域を更新するために使用されます。 詳細については、「 [UpdatePanel コントロールの概要](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100))」および「[部分ページレンダリングの概要](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))」を参照してください。  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>メニュー項目  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトによって表されるメニュー項目のツリーで構成されます。 最上位レベルのメニュー項目 (レベル 0) は、ルートメニュー項目と呼ばれます。 親メニュー項目を持つメニュー項目は、子メニュー項目と呼ばれます。 すべてのルートメニュー項目は、<xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションに格納されます。 子メニュー項目は、親メニュー項目の <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションに格納されます。  
  
 各メニュー項目には、<xref:System.Web.UI.WebControls.MenuItem.Text%2A> と <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティがあります。 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティの値は <xref:System.Web.UI.WebControls.Menu> コントロールに表示されますが、<xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティは、メニュー項目に関連付けられたポストバックイベントに渡されるデータなど、メニュー項目に関する追加データを格納するために使用されます。 クリックすると、[<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>] プロパティで示されている別の Web ページにメニュー項目を移動できます。  
  
> [!NOTE]
>  メニュー項目に対して [<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>] プロパティが設定されていない場合、<xref:System.Web.UI.WebControls.Menu> コントロールは、メニュー項目がクリックされたときに処理のためにページをサーバーに送信するだけです。  
  
 また、必要に応じて、<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> プロパティを設定して、メニュー項目に画像を表示することもできます。  
  
 メニュー項目の詳細については、「<xref:System.Web.UI.WebControls.MenuItem>」を参照してください。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>静的データ  
 <xref:System.Web.UI.WebControls.Menu> コントロールの最も単純なデータモデルは、静的メニュー項目です。 宣言型の構文を使用して静的メニュー項目を表示するには、まず、<xref:System.Web.UI.WebControls.Menu> コントロールの開始タグと終了タグの間で `<Items>` タグを開始および終了します。 次に、開始タグと終了 `<Items>` タグの間に `<asp:MenuItem>` 要素を入れ子にして、メニュー構造を作成します。 各 `<asp:MenuItem>` 要素は、コントロールのメニュー項目を表し、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトにマップされます。 各メニュー項目のプロパティを設定するには、`<asp:MenuItem>` 要素の属性を設定します。 サブメニュー項目を作成するには、親メニュー項目の開始タグ `<asp:MenuItem>` 終了タグの間に追加の `<asp:MenuItem>` 要素を入れ子にします。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>バインド (データに)  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.WebControls.XmlDataSource> コントロールや <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールなど、任意の階層データソースコントロールを使用できます。 階層データソースコントロールにバインドするには、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> プロパティをデータソースコントロールの <xref:System.Web.UI.Control.ID%2A> 値に設定します。 <xref:System.Web.UI.WebControls.Menu> コントロールは、指定されたデータソースコントロールに自動的にバインドします。 これは、データにバインドするために推奨される方法です。  
  
 各データ項目に複数のプロパティ (複数の属性を持つ XML 要素など) が含まれているデータソースにバインドする場合、既定では、データ項目の `ToString` メソッドによって返される値がメニュー項目に表示されます。 XML 要素の場合、メニュー項目には、メニューツリーの基になる構造を示す要素名が表示されますが、それ以外の場合はあまり便利ではありません。 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションを使用してメニュー項目のバインドを指定することで、メニュー項目を特定のデータ項目プロパティにバインドできます。 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションには、データ項目とそのバインド先のメニュー項目との間のリレーションシップを定義する <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトが含まれます。 バインドの条件と、ノードに表示するデータ項目のプロパティを指定できます。 メニュー項目のバインドの詳細については、「<xref:System.Web.UI.WebControls.MenuItemBinding>」を参照してください。  
  
 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> または <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> プロパティを空の文字列 ("") に設定することによって、<xref:System.Web.UI.WebControls.Menu> コントロールに空のノードを作成することはできません。 これらのプロパティを空の文字列に設定しても、プロパティを設定しない場合と同じ効果があります。 その場合、<xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティを使用して既定のバインディングを作成します。 詳細については、「[データベースへのバインド](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))」を参照してください。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>ユーザーインターフェイスのカスタマイズ  
 <xref:System.Web.UI.WebControls.Menu> コントロールの外観をカスタマイズするには、さまざまな方法があります。 最初に、<xref:System.Web.UI.WebControls.Menu.Orientation%2A> プロパティを設定して、<xref:System.Web.UI.WebControls.Menu> コントロールを水平方向または垂直方向のどちらに表示するかを指定できます。 メニュー項目の種類ごとに異なるスタイル (フォントサイズや色など) を指定することもできます。  
  
 カスケードスタイルシート (CSS) を使用してコントロールの外観をカスタマイズする場合は、インラインスタイルまたは別の CSS ファイルを使用しますが、両方は使用しません。 インラインスタイルと別の CSS ファイルの両方を使用すると、予期しない結果が発生する可能性があります。 コントロールでのスタイルシートの使用の詳細については、「 [Web サーバーコントロールと CSS スタイル](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)」を参照してください。  
  
 次の表に、使用可能なメニュー項目のスタイルを示します。  
  
|メニュー項目のスタイルプロパティ|説明|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|マウスポインターが上に置かれているときの動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|個々の動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|動的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|現在選択されている動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|マウスポインターが上に置かれているときの静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|個々の静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|現在選択されている静的メニュー項目のスタイル設定。|  
  
 個々のスタイルプロパティを設定する代わりに、次のスタイルコレクションを使用して、メニュー項目に適用されるスタイルをそのレベルに基づいて指定できます。  
  
|レベルスタイルのコレクション|説明|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|メニュー項目のスタイルをレベル基準で制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|レベルベースで選択されたメニュー項目のスタイルを制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|レベルベースのサブメニュー項目のスタイルを制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
  
 コレクションの最初のスタイルは、メニューツリーの最初の深さのレベルにあるメニュー項目のスタイルに対応します。 コレクションの2番目のスタイルは、メニューツリーの2番目の深さのレベルにあるメニュー項目のスタイルに対応します。 これは、サブメニューがあるかどうかに関係なく、特定の深さのメニュー項目が同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するために最もよく使用されます。  
  
> [!NOTE]
>  前の表に示したレベルスタイルのコレクションのいずれかを使用して <xref:System.Web.UI.WebControls.Menu> コントロールのスタイルを定義すると、これらのスタイル設定によって個々のメニュー項目のスタイルプロパティがオーバーライドされます。  
  
 コントロールの外観を変更するもう1つの方法は、<xref:System.Web.UI.WebControls.Menu> コントロールに表示されるイメージをカスタマイズすることです。 次の表に示すプロパティを設定することによって、コントロールのさまざまな部分に独自のカスタムイメージを指定できます。  
  
|Image プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|他のメニュー項目と区別するために、動的メニュー項目の下部に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|メニュー項目にサブメニューがあることを示すために、動的メニュー項目に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|他のメニュー項目と区別するために、動的メニュー項目の上部に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|メニュー項目の下部に表示されるイメージで、ユーザーが下にスクロールして追加のメニュー項目を表示できることを示します。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|メニュー項目の上部に表示されるイメージで、ユーザーがスクロールして追加のメニュー項目を表示できることを示します。|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|他のメニュー項目と区別するために、静的メニュー項目の下部に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|サブメニューがあることを示すために静的メニュー項目に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|他のメニュー項目と区別するために、静的メニュー項目の上部に表示されるオプションのイメージ。|  
  
 ユーザーインターフェイス (UI) を完全に制御するには、次のテンプレートプロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロール用に独自のカスタムテンプレートを定義します。  
  
|テンプレートプロパティ|説明|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|動的メニュー項目に表示するカスタムコンテンツを含むテンプレート。|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|静的メニュー項目に表示するカスタムコンテンツを含むテンプレート。|  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> と <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> の各プロパティをそれぞれ設定することによって、親メニュー項目を基準とした動的メニューの垂直方向および水平方向の位置を制御できます。 静的メニュー内の静的サブメニュー項目のインデントを制御するには、<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> プロパティを使用します。  
  
<a name="events"></a>   
## <a name="events"></a>イベント  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、プログラミングできるいくつかのイベントが用意されています。 これにより、イベントが発生するたびにカスタムルーチンを実行できます。 次の表に、サポートされているイベントの一覧を示します。  
  
|イベント|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|メニュー項目がクリックされたときに発生します。 このイベントは、通常、<xref:System.Web.UI.WebControls.Menu> コントロールをページ上の別のコントロールと同期するために使用されます。|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|メニュー項目がデータにバインドされたときに発生します。 このイベントは、通常、メニュー項目を <xref:System.Web.UI.WebControls.Menu> コントロールに表示する前に変更するために使用されます。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>アクセシビリティ  
 ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))と[ASP.NET のコントロールとアクセシビリティ](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=192868)できます。  
  
 次のコード例は、宣言型の構文を使用して静的メニュー項目を含む <xref:System.Web.UI.WebControls.Menu> コントロールを作成する方法を示しています。  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu> コントロールを <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールにバインドする方法を示しています。 この例を正しく動作させるには、次のサンプルのサイトマップデータを、Web.config という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 前の例のサイトマップデータの例を次に示します。  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.Menu> クラスの新しいインスタンスを作成し、初期化します。 <xref:System.Web.UI.WebControls.Menu> コントロールをページに動的に追加するには、新しい <xref:System.Web.UI.WebControls.Menu> オブジェクトを作成し、そのプロパティを設定して、<xref:System.Web.UI.WebControls.PlaceHolder>などのコンテナーコントロールの <xref:System.Web.UI.Control.Controls%2A> コレクションに追加します。  
  
   
  
## Examples  
 コンストラクターを使用して <xref:System.Web.UI.WebControls.Menu> コントロールをページに動的に追加する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML のコンテンツを表示する出力ストリーム。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに表示する必要のある HTML 属性およびスタイルを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティを <xref:System.String.Empty>にリセットします。 このメンバーは、主に、<xref:System.Web.UI.WebControls.Menu> クラスからカスタムコントロールを派生するときに、コントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.WebControls.Menu" /> を取得します。</summary>
        <value>子コントロールを格納している <see cref="T:System.Web.UI.ControlCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Controls%2A> プロパティを使用すると、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.ControlCollection> クラスのインスタンスにプログラムでアクセスできます。 コレクションにコントロールを追加したり、コレクションからコントロールを削除したり、コレクション内のサーバーコントロールを反復処理したりできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの子コントロールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、主に、<xref:System.Web.UI.WebControls.Menu> クラスからカスタムコントロールを派生するときに、コントロールの開発者によって使用されます。  
  
 このメソッドは、<xref:System.Web.UI.WebControls.CompositeDataBoundControl> および <xref:System.Web.UI.WebControls.CompositeControl>から派生したコントロールを含む、合成ベースの実装を使用するコントロールに通知するために、ASP.NET インフラストラクチャによって呼び出されます。 ポストバックまたはレンダリングの準備として、そこに含まれる子コントロールを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールにバインドします。 このメソッドは継承できません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> クラスからカスタムコントロールを派生させるときに使用されます。  
  
 データソースから <xref:System.Web.UI.WebControls.Menu> コントロールにデータをバインドするには、<xref:System.Web.UI.WebControls.Menu.DataBind%2A> メソッドを使用します。 このメソッドは、コントロールのアクティブテンプレート内のすべてのデータバインディング式を解決します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>データバインドコントロールは、<see cref="M:System.Web.UI.WebControls.Menu.DataBind" />ではなく <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> をオーバーライドする必要があります。 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> がオーバーライドされると、<see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> イベントと <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> イベントが間違った順序で発生します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目とそのバインド先のメニュー項目との間の関係を定義する <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> オブジェクトのコレクションを取得します。</summary>
        <value>データ項目とそのバインド先のメニュー項目との間の関係を表す <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションには、データ項目とそのバインド先のメニュー項目との間のリレーションシップを定義する <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトが含まれます。 各データ項目に複数のプロパティ (複数の属性を持つ XML 要素など) が含まれているデータソースにバインドする場合、既定では、データ項目の `ToString()` メソッドによって返される値がメニュー項目に表示されます。 XML 要素の場合、メニュー項目には、ツリーの基になる構造を示す要素名が表示されますが、それ以外の場合はあまり役に立ちません。 メニュー項目のバインドを指定することによって、メニュー項目を特定のデータ項目プロパティにバインドできます。  
  
 データ項目とメニュー項目の間のリレーションシップを定義する場合は、バインドの条件とバインド先のデータ項目のプロパティの両方を指定する必要があります。 条件は、データ項目をメニュー項目にバインドするタイミングを示します。 条件は、深さ、データメンバー、またはその両方で指定できます。 この深さは、バインドされるメニューレベルを指定します。 たとえば、深さを0に指定すると、レベル0のツリー構造内のすべてのメニュー項目は、メニュー項目のバインディングを使用してバインドされます。 データメンバーは、基になるデータソースのデータ項目の種類を指定しますが、データソースによって異なる情報を表すことができます。 たとえば、XML 要素のデータメンバーは、要素の名前を指定します。  
  
 競合する複数の <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトが定義されている場合、<xref:System.Web.UI.WebControls.Menu> コントロールは次の優先順位でメニュー項目のバインディングを適用します。  
  
1.  深度とデータメンバーの両方を定義する <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクト。  
  
2.  深さのみを定義する <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクト。  
  
3.  データメンバーのみを定義する <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクト。  
  
4.  深さもデータメンバーも定義しない <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクト。  
  
 バインド条件が確立されたら、データ項目の属性またはフィールドにバインドできる <xref:System.Web.UI.WebControls.MenuItem> オブジェクトのプロパティをバインドできますが、 たとえば、メニュー項目の <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティを XML 要素の text 属性にバインドするには、<xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトの <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> プロパティを設定します。 また、静的な値にバインドすることもできます。 <xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトの <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> プロパティを設定した場合、<xref:System.Web.UI.WebControls.MenuItemBinding> オブジェクトが適用されるすべてのメニュー項目で同じ静的なテキスト値が共有されます。 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトのプロパティを値にバインドする方法の詳細については、「<xref:System.Web.UI.WebControls.MenuItemBinding>」を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションはプログラムによって設定できますが、通常は宣言によって設定されます。 メニュー項目のバインドを指定するには、まず、<xref:System.Web.UI.WebControls.Menu> コントロールの開始タグと終了タグの間の `<DataBindings>` タグの開始と終了を入れ子にします。 次に、指定する各メニュー項目のバインドの開始タグと終了 `<DataBindings>` の間に `<asp:MenuItemBinding>` 要素を配置します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションを使用して、<xref:System.Web.UI.WebControls.XmlDataSource> コントロールのフィールドと <xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目の間のリレーションシップを定義する方法を示します。 この例を正しく動作させるには、次のサンプル XML データを、Map .xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 前の例のサイトマップデータの例を次に示します。  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがメニューの上から離れた後で動的メニューを表示しておく時間を取得または設定します。</summary>
        <value>マウス ポインターがメニューの上から離れた後で動的メニューを表示しておく時間 (ミリ秒単位)。 既定値は 500 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、マウスポインターがメニューの上に置かれていないときに、特定の期間が経過すると、動的メニューが自動的に表示されなくなります。 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> プロパティを使用して、期間を指定します。  
  
> [!NOTE]
>  ユーザーがメニューの外側をクリックすると、動的メニューがすぐに表示されなくなります。  
  
 このプロパティを-1 に設定して、動的メニューを自動的に非表示にしないように指定することもできます。 この場合、動的メニュー項目は、ユーザーがメニューの外側をクリックしたときにのみ表示されなくなります。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> プロパティを使用して、ユーザーがマウスポインターをメニューから2秒以上離れた位置に移動した後に、動的メニューが非表示になるように指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が -1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>他のメニュー項目と区別するために各動的メニュー項目の下部に表示するイメージの URL を取得または設定します。</summary>
        <value>各動的メニュー項目の下部に表示される区切り線イメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> プロパティを使用して、各動的メニュー項目の下部に表示するオプションのカスタムイメージを指定します。 このイメージは、メニュー項目間の区切り記号として機能します。通常は、線のイメージです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> プロパティを設定して、各動的メニュー項目の上部に区分線イメージを表示することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> プロパティを使用して、各動的メニュー項目の下部に区分線イメージを表示する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがあることを示す組み込みイメージを表示するかどうかを示す値を取得または設定します。</summary>
        <value>サブメニューのある動的メニュー項目に対して組み込みイメージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニュー項目にサブメニューが含まれている場合、ユーザーがメニュー項目の上にマウスポインターを置くことでメニューを展開できることを示すイメージを表示できます。 このイメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティが設定されている場合、そのイメージは組み込みのイメージをオーバーライドします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティが設定されておらず、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティが `false`に設定されている場合、イメージは表示されません。  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> プロパティを設定して、イメージの代替テキストを指定できます。 このテキストは、ユーザーがマウスポインターをイメージの上に置いたときにツールヒントとして表示されます。 このテキストは、支援技術デバイスにも、コントロールをより使いやすくするために使用できるイメージの説明を提供します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティを使用して、動的メニュー項目にサブメニューがあることを示すイメージを非表示にする方法を示します。 画像を非表示にするには、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティも空の文字列 ("") に設定する必要があります。  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューを横方向にシフトするピクセル数を、親メニュー項目に対する相対値として取得または設定します。</summary>
        <value>動的メニューを親メニュー項目に対して相対的に横方向にシフトするピクセル数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 親メニュー項目に対して相対的な動的メニューの水平位置を調整するには、<xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> プロパティを使用します。 このプロパティは、<xref:System.Web.UI.WebControls.Menu> コントロールが垂直方向と水平方向のどちらで表示されるか (<xref:System.Web.UI.WebControls.Menu.Orientation%2A> のプロパティで指定) によって異なりますが、動的メニューの位置に影響します。 次の表では、その違いについて説明します。  
  
|[方向]|説明|  
|-----------------|-----------------|  
|[水平方向]|既定では、動的メニューは親メニュー項目のすぐ下に表示されます。 このプロパティを設定すると、動的メニューの位置がこの基本位置から水平方向にシフトされます。|  
|Vertical|既定では、動的メニュー項目は、その親メニュー項目の横に表示されます。 このプロパティを設定すると、動的メニューとその親メニュー項目の間の水平方向の間隔が制御されます。|  
  
> [!NOTE]
>  このプロパティを負の値に設定して、動的メニューを負の方向にシフトさせることができます。 垂直メニューを表示している場合、負の値を指定すると、動的メニューとその親メニュー項目が重複します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> プロパティを使用して、動的メニューとその親メニュー項目の間に5ピクセルの間隔を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが上に置かれているときの動的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>マウス ポインターが上に置かれているときの動的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マウスポインターが上に置かれているときの動的メニュー項目の外観を制御するには、<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティ (`DynamicHoverStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`DynamicHoverStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 動的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> プロパティを使用して、ユーザーがマウスポインターを上に置いたときに、動的メニュー項目の背景色を薄いスカイブルーに変更する方法を示しています。  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的に表示されるすべてのメニュー項目と共に表示される追加テキストを取得または設定します。</summary>
        <value>すべてのメニュー項目と共に表示される追加のテキストまたは文字。 このプロパティの既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、モバイルデバイスに表示されるメニューの動的メニュー項目を書式設定するテキストを挿入できます。 <xref:System.Web.UI.WebControls.Menu> コントロールは、静的および動的なメニュー項目を表示するためのテンプレートをサポートしています。 モバイルデバイスの場合、テンプレートは無視されるため、このプロパティを使用すると、テンプレートを使用せずにメニュー項目に書式を適用するための文字またはテキストを追加できます。  
  
> [!NOTE]
>  このプロパティを使用するときに一貫した書式設定を実現するには、静的メニュー項目と動的メニュー項目の間で書式設定を同一にする場合は、<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> プロパティも設定する必要があります。  
  
 テンプレートの書式設定とこのプロパティの両方が適用されている場合、モバイルデバイスのテンプレートの書式設定は無視されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> プロパティと <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> プロパティを使用して、各メニュー項目にテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューに表示されるカスタム コンテンツを格納しているテンプレートを取得または設定します。</summary>
        <value>動的メニューのカスタム コンテンツを格納している <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニューの組み込みレンダリングを使用する代わりに、<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> プロパティを使用して動的メニュー項目の外観を独自に定義することができます。 動的メニュー項目のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.Menu> コントロールの開始タグと終了タグの間に `<DynamicItemTemplate>` タグを配置します。 次に、開始タグと終了 `<DynamicItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。 動的メニューのスタイルは、<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> プロパティを使用してさらに制御できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューの中のメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>動的メニューの中のメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニュー内のメニュー項目の外観を制御するには、<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`DynamicMenuItemStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`DynamicMenuItemStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 動的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> プロパティを使用して、動的メニューのメニュー項目に薄いスカイブルーの背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューの外観を設定できる <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>動的メニューのスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニューの外観を制御するには、<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`DynamicMenuStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`DynamicMenuStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 動的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> プロパティを使用して、動的メニューの薄いスカイブルーの背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキストを取得または設定します。</summary>
        <value>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージの代替テキストを指定するには、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> プロパティを使用します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 イメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティを設定します。  
  
> [!NOTE]
>  このプロパティは、組み込みイメージとカスタムイメージの両方に適用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> プロパティを使用して、動的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキストを指定する方法を示します。 このテキストは、ユーザーがマウスポインターをイメージの上に置いたときにツールヒントとして表示されます。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがある場合に、動的メニュー項目に表示されるカスタム イメージの URL を取得または設定します。</summary>
        <value>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的メニュー項目にサブメニューが含まれている場合、ユーザーがメニュー項目の上にマウスポインターを置くことでメニューを展開できることを示すイメージを表示できます。 このイメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティが設定されている場合、そのイメージは組み込みのイメージをオーバーライドします。  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティが設定されておらず、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティが `false`に設定されている場合、イメージは表示されません。  
  
> [!NOTE]
>  このプロパティを設定する場合は、円記号 (\\) の代わりにスラッシュ記号 (/) を使用します。 パスに円記号を使用すると、指定したイメージは表示されません。  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> プロパティを設定して、イメージの代替テキストを指定できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> プロパティを使用して、メニュー項目にサブメニューがあることを示すために動的メニュー項目に表示するカスタムイメージを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した動的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>選択された動的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> プロパティを使用して、ユーザーがメニューから動的メニュー項目を選択したときの外観を制御します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`DynamicSelectedStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`DynamicSelectedStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 動的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> プロパティを使用して、選択した動的メニュー項目の薄い青の背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>他のメニュー項目と区別するために各動的メニュー項目の上部に表示するイメージの URL を取得または設定します。</summary>
        <value>各動的メニュー項目の上部に表示される区切り線イメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> プロパティを使用して、各動的メニュー項目の上部に表示するオプションのカスタムイメージを指定します。 このイメージは、メニュー項目間の区切り記号として機能します。通常は、線のイメージです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> プロパティを設定して、各動的メニュー項目の下部に区分線イメージを表示することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> プロパティを使用して、各動的メニュー項目の上部に区分線イメージを表示する方法を示します。  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューを縦方向にシフトするピクセル数を、親メニュー項目に対する相対値として取得または設定します。</summary>
        <value>動的メニューを親メニュー項目に対して相対的に縦方向にシフトするピクセル数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 親メニュー項目に対して相対的な動的メニューの垂直位置を調整するには、<xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> プロパティを使用します。 このプロパティは、<xref:System.Web.UI.WebControls.Menu> コントロールが垂直方向と水平方向のどちらで表示されるか (<xref:System.Web.UI.WebControls.Menu.Orientation%2A> のプロパティで指定) によって異なりますが、動的メニューの位置に影響します。 次の表では、その違いについて説明します。  
  
|[方向]|説明|  
|-----------------|-----------------|  
|[水平方向]|既定では、動的メニューは、その親メニュー項目の直下に表示されます。 このプロパティを設定すると、動的メニューとその親メニュー項目の間の垂直方向の間隔が制御されます。|  
|Vertical|既定では、上部の端がアラインされている親メニュー項目の横に、動的メニュー項目が表示されます。 このプロパティを設定すると、動的メニューの位置がこの基本位置から垂直方向にシフトされます。|  
  
> [!NOTE]
>  このプロパティを負の値に設定して、動的メニューを負の方向にシフトさせることができます。 水平メニューを表示している場合は、負の値を指定すると、動的メニューとその親メニュー項目が重複します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> プロパティを使用して、動的メニューを親メニュー項目の上部から10ピクセル下にシフトする方法を示しています。  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メニュー コントロールがデータ バインディングを必要とするかどうかと、<see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> メソッドを呼び出す前に有効なデータ ソース コントロールが指定されるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">取得するメニュー項目の値パス。</param>
        <summary>指定した値パスにあるメニュー項目を取得します。</summary>
        <returns>指定した値パスにあるメニュー項目を表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールから <xref:System.Web.UI.WebControls.MenuItem> オブジェクトを取得します。 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトを取得するには、メニュー項目のメニューパスを指定する必要があります。 メニューパスは、ルートメニュー項目から現在のメニュー項目へのパスを形成する、区切られた値の文字列です。 区切り文字を特定するには、<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.FindItem%2A> メソッドを使用して、指定した値パスにある <xref:System.Web.UI.WebControls.Menu> コントロールからメニュー項目を取得する方法を示します。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのデザイン時状態を取得します。</summary>
        <returns><see cref="T:System.Collections.IDictionary" /> コントロールのデザイン時状態を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> メソッドは、<xref:System.Web.UI.WebControls.Menu> コントロールの現在のデザイン時の状態を取得するために使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET で、メニューで使用されるスタイルのカスケード スタイル シート (CSS: Cascading Style Sheet) 定義のブロックをレンダリングするかどうかを示す値を取得または設定します。</summary>
        <value>ASP.NET で、メニューで使用されるスタイルの CSS 定義のブロックをレンダリングするかどうかを示す値。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、CSS スタイルを使用してブラウザーでの外観を制御します。 既定では、使用する CSS クラスの CSS 定義を含む `style` 要素がレンダリングされます。 通常、次の状況では、このプロパティを `false` に設定します。  
  
-   メニューの外観をカスタマイズするために、独自の CSS 定義を提供する場合。 次に、ページに独自の CSS 定義のブロックを提供するか、定義を含む外部 CSS ファイルへのリンクを含める必要があります。  
  
-   既定の外観を維持しながら、生成された CSS 定義を別のファイルで保持することをお勧めします。 次に、ファイルとそのファイルへのリンクを指定する必要があります。  
  
 どちらの場合でも、プロパティを `true`に設定し、ページを実行し、ブラウザーでページを表示することで、<xref:System.Web.UI.WebControls.Menu> コントロールが生成する既定の CSS ブロックのコピーを取得できます。 ブラウザーでページソースを表示し、CSS ブロックをコピーして、ページマークアップまたは別のファイルに貼り付けることができます。  
  
 このプロパティを `false`に設定した場合、スタイルプロパティを設定することはできません。 たとえば、マークアップに `DynamicHoverStyle-ForeColor` 属性を追加したり、コードで `DynamicHoverStyle.ForeColor` プロパティを設定したりすることはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> コントロールのすべてのメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> コントロールのすべてのメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> プロパティ (コレクション) を使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのすべてのメニュー項目を含む <xref:System.Web.UI.WebControls.MenuItemCollection> オブジェクトを取得します。 このコレクションは、すべてのメニュー項目をすばやく反復処理したり、特定のメニュー項目にアクセスしたりするためによく使用されます。  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションを使用して、プログラムでメニュー項目を管理することもできます。 <xref:System.Web.UI.WebControls.MenuItem> コレクションオブジェクトを追加、挿入、削除、および取得できます。 コレクションの更新は、サーバーへの次のラウンドトリップ後に、<xref:System.Web.UI.WebControls.Menu> コントロールに自動的に反映されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を走査する方法を示しています。  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目のテキストを折り返すかどうかを示す値を取得または設定します。</summary>
        <value>メニュー項目のテキストを折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 各メニュー項目に表示されるテキストを折り返すかどうかを指定するには、<xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> プロパティを使用します。 テキストが領域不足になると、自動的に分割され、次の行に続きます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールでのテキストの折り返しを有効にする方法を示します。  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいてメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいてメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 個々のスタイルプロパティ (<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>など) の代わりに <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションを使用して、メニューの個々のレベルにあるメニュー項目のスタイルを制御します。 このコレクションに含まれるスタイルは、メニューレベルに基づいてメニュー項目に適用されます。 コレクションの最初のスタイルは、メニューの最初のレベルのメニュー項目のスタイルに対応します。 コレクションの2番目のスタイルは、メニューの2番目のレベルのメニュー項目のスタイルに対応します。 このコレクションは、サブメニューがあるかどうかに関係なく、特定のレベルのメニュー項目が同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するためによく使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションを使用して特定のレベルに対してスタイルが定義されている場合、そのレベルのメニュー項目のメニュー項目のスタイル設定がオーバーライドされます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションを使用して、そのレベルに基づいて <xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目にスタイル設定を適用する方法を示しています。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいて選択されたメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいて選択されたメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションは、メニューの個々のレベルで選択したメニュー項目のスタイルを制御するために、<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> プロパティと <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> プロパティの代わりに使用します。 このコレクションに含まれるスタイルは、メニューレベルに基づいて選択されたメニュー項目に適用されます。 コレクションの最初のスタイルは、メニューの最初のレベルで選択されているメニュー項目のスタイルに対応します。 コレクション内の2番目のスタイルは、メニューの2番目のレベルで選択されているメニュー項目のスタイルに対応します。 このコレクションは、サブメニューがあるかどうかに関係なく、特定のレベルのメニュー項目が同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するためによく使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを使用して特定のレベルに対してスタイルが定義されている場合、そのレベルの <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> と <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> のプロパティはオーバーライドされます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを使用して、そのレベルに基づいて <xref:System.Web.UI.WebControls.Menu> コントロールの選択されたメニュー項目にスタイル設定を適用する方法を示します。  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのサブメニュー項目のレベルに基づいて静的メニューのサブメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのサブメニュー項目のレベルに基づいて静的メニューのサブメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 個々のスタイルプロパティ (<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>など) の代わりに <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを使用して、静的メニューに表示される静的サブメニュー項目のスタイルを個々のレベルで制御します。 このコレクションに含まれるスタイルは、メニューレベルに基づいて静的サブメニュー項目に適用されます。 コレクションの最初のスタイルは、静的メニューに表示される最初の静的サブメニューレベルのスタイルに対応します。 コレクションの2番目のスタイルは、静的メニューに表示される2番目のサブメニューレベルのスタイルに対応します。 このコレクションは、サブメニューがあるかどうかに関係なく、特定のレベルのメニュー項目が同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するためによく使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを使用して特定のレベルに対してスタイルが定義されている場合は、そのレベルでの静的なサブメニュー項目のスタイル設定よりも優先されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを使用して、そのレベルに基づいて <xref:System.Web.UI.WebControls.Menu> コントロールの静的メニューに表示されるサブメニュー項目にスタイル設定を適用する方法を示します。  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューに表示するメニュー レベルの数を取得または設定します。</summary>
        <value>動的メニューに表示するメニュー レベルの数。 既定値は 3 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューに複数のメニューレベルを表示するには、[<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>] プロパティを1より大きい値に設定します。 このプロパティを0より大きい値に設定することにより、動的メニューに追加のレベルを表示することもできます。 たとえば、静的メニューに2つのメニューレベルを表示した場合 ([<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>] プロパティを2に設定)、このプロパティを3に設定すると、3つのメニューレベルが動的メニューに表示されます。 それ以外のメニューレベルはすべて破棄されます (存在する場合)。  
  
> [!NOTE]
>  このプロパティを0に設定すると、動的メニューを使用せずに、<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティによって指定されたレベルまでのフラットメニューが表示されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティを使用して、動的メニューに表示するメニューレベルの数を1に制限する方法を示します。 ルートメニューレベルのみが表示されます。  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> プロパティは、0 未満の値が設定されています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目がクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントは、<xref:System.Web.UI.WebControls.Menu> コントロールでメニュー項目がクリックされたときに発生します。 これにより、このイベントが発生するたびに、ページ上の別のコントロールと同期するなど、カスタムルーチンを実行するイベントハンドラーを提供できます。  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> オブジェクトがイベントハンドラーに渡されます。これにより、イベントを発生させたメニュー項目のプロパティにアクセスできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、ユーザーが選択したメニュー項目のテキストを表示する <xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントのイベントハンドラーを作成する方法を示しています。  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド名を格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この読み取り専用フィールドには、メニュー項目へのアクセスに使用するコマンドの名前が含まれています。 既定値は "Click" です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目がデータにバインドされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> イベントは、メニュー項目が <xref:System.Web.UI.WebControls.Menu> コントロールのデータにバインドされている場合に発生します。 これにより、このイベントが発生するたびにカスタムコンテンツの追加や、レンダリング前にメニュー項目の変更などのカスタムルーチンを実行するイベントハンドラーを提供できます。  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> オブジェクトがイベントハンドラーに渡されます。これにより、イベントを発生させたメニュー項目のプロパティにアクセスできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu> コントロールに表示される前に `Home` メニュー項目のテキストを変更する <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> イベントのイベントハンドラーを作成する方法を示しています。  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソースです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのイベントをページのユーザー インターフェイス (UI) サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは <xref:System.Web.UI.Control.OnBubbleEvent%2A> をオーバーライドします。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.Control.DataBinding" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データが <xref:System.Web.UI.WebControls.Menu> コントロールにバインドされると、<xref:System.Web.UI.Control.DataBinding> イベントが発生します。 このメソッドは、コントロールに関連付けられているデータバインディングロジックを実行するように、コントロールに通知します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A>メソッドは、派生クラスがデリゲートをアタッチせずにイベントを処理できるようにします。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 このメソッドは、通常、<xref:System.Web.UI.WebControls.Menu> クラスを拡張するときにコントロールの開発者によって使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドによって通知された場合、Web サーバーコントロールはインスタンスを作成および設定するために必要な初期化手順を実行する必要があります。 サーバーコントロールのライフサイクルのこの段階では、コントロールのビューステートはまだ設定されていません。 また、このメソッドが呼び出されたときに、このコントロールの子または親であるかどうかに関係なく、別のサーバーコントロールにアクセスすることはできません。 他のサーバーコントロールを作成し、アクセスできる状態にすることは保証されていません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> メソッドは、<xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントを発生させるために <xref:System.Web.UI.WebControls.Menu> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.Menu> クラスを拡張するときに、コントロールの開発者によって使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> メソッドは、<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> イベントを発生させるために <xref:System.Web.UI.WebControls.Menu> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.Menu> クラスを拡張するときに、コントロールの開発者によって使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> メソッドは、<xref:System.Web.UI.Control.PreRender> イベントを発生させるために <xref:System.Web.UI.WebControls.Menu> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.Menu> クラスを拡張するときに、コントロールの開発者によって使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの表示方向を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 列挙値のいずれか。 既定では、 <see langword="Orientation.Vertical" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールを表示する方向を指定します。 次の表に、使用可能な指示を示します。  
  
|[方向]|説明|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu> コントロールは水平方向に表示されます。|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu> コントロールが垂直方向に表示されます。|  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.Orientation%2A> プロパティを使用して水平メニューを表示する方法を示しています。  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目のパスの区切り文字を取得または設定します。</summary>
        <value>メニュー項目のパスの区切り文字。 既定値はスラッシュ記号 (/) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.MenuItem> オブジェクトによって表される各メニュー項目には、メニュー項目の位置を指定する <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティがあります。 値のパスは、ルートメニュー項目から現在のメニュー項目までのパスを形成する、区切られた値の文字列です。 メニューパス内の値を区切るために使用する区切り文字を指定するには、<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> プロパティを使用します。 この値は、通常、個々の値のリストを解析するときに使用されます。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールに表示されるテキストによっては、競合を防ぐために区切り文字を変更する必要がある場合があります。 たとえば、区切り記号をコンマに設定した場合、表示されるテキストにはコンマを使用できません。それ以外の場合、<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティを正確に解析することはできません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> プロパティを使用して、メニュー項目の値パスの区切り文字をコンマに変更する方法を示しています。  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースの項目を <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> メソッドは、データソース内の項目を <xref:System.Web.UI.WebControls.Menu> コントロールにバインドするために、<xref:System.Web.UI.WebControls.Menu> コントロールによって呼び出されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡されるイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>フォームがサーバーにポストされたときに発生するイベントを処理します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントのブラウザーにメニュー コントロールをレンダリングします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>タグ属性を追加し、コントロールの開始タグのマークアップを、ブラウザーまたはデバイスに出力される出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> メソッドは、タグ属性を追加し、クライアントブラウザーの応答ストリームに出力される出力ストリームに、コントロールの開始タグのマークアップを書き込みます。  
  
 カスタム動作を実装する場合は <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> をオーバーライドします。たとえば、`<table><tr><td>`などのコントロールコンテンツの前に複数のタグを応答ストリームに書き込む場合などです。 このメソッドは、<xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> メソッドをオーバーライドして <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを追加します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>このメンバーは <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" /> をオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> メソッドをオーバーライドして、開始タグと終了タグの間にコントロールの内容を表示します。 このメソッドの既定の実装では、すべての子コントロールがレンダリングされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>最終マークアップを実行し、コントロールの HTML 終了タグを、ブラウザーまたはデバイスに出力される出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.UI.WebControls.Menu> のサブメニューと <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを表示するために <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> をオーバーライドします。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールが、HTML <see langword="table" /> 要素およびインライン スタイルをレンダリングするか、または <see langword="listitem" /> 要素およびカスケード スタイル シート (CSS: Cascading Style Sheet) スタイルをレンダリングするかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールが、HTML <see langword="table" /> 要素およびインライン スタイルをレンダリングするか、または <see langword="listitem" /> 要素およびカスケード スタイル シート (CSS: Cascading Style Sheet) スタイルをレンダリングするかを示す値。 既定値は <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> プロパティの値によって、メニューコントロールが <xref:System.Web.UI.WebControls.Menu> コントロールのマークアップをレンダリングする方法が決まります。  
  
 ASP.NET 3.5 以前のバージョンでは、<xref:System.Web.UI.WebControls.Menu> コントロールは HTML `table` 要素とインラインスタイルを使用して、ブラウザーのメニューの外観を指定します。 ASP.NET 4 以降のバージョンでは、既定で <xref:System.Web.UI.WebControls.Menu> コントロールは HTML `listitem` 要素とカスケードスタイルシート (CSS) スタイルを使用します。  
  
 このプロパティを設定しない場合、<xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> プロパティによって示される ASP.NET のバージョンに適したマークアップをレンダリングします。 <xref:System.Web.UI.WebControls.Menu> コントロールでは、次の規則を使用します。  
  
-   <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティの値が `3.5`場合、<xref:System.Web.UI.WebControls.Menu> コントロールは HTML `table` 要素とインラインスタイルを使用します。  
  
-   <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティの値が `4.0` 以上の場合、<xref:System.Web.UI.WebControls.Menu> コントロールでは HTML `listitem` 要素と CSS スタイルが使用されます。  
  
 このプロパティは、旧バージョンとの互換性のために用意されています。 <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティが、コントロールが ASP.NET 4 以降と互換性のある HTML を生成するように指定しているにもかかわらず、以前の動作を使用する例外として <xref:System.Web.UI.WebControls.Menu> コントロールが必要な場合は、このプロパティを <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>に設定できます。 たとえば、テキストを右から左に表示する Web ページがある場合は、このプロパティを <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> に設定することをお勧めします。一部のブラウザーでは、右から左に記述するテキストに対して <xref:System.Web.UI.WebControls.MenuRenderingMode.List> モードのマークアップが正しく表示されないためです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのプロパティの状態を保存します。</summary>
        <returns>コントロールの状態データを格納しているオブジェクト。 状態に何の変更も加えられていない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.UI.Control.EnableViewState%2A> プロパティが `false`に設定されている場合でも、永続化する必要がある <xref:System.Web.UI.WebControls.Menu> コントロールのプロパティの状態を保存するために使用されます。 <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> メソッドは、コントロールの操作 (インデックスやキーワードなど) に不可欠な状態データを考慮しており、コントロールのビューステートデータとは別のものです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの状態を保存します。</summary>
        <returns><see cref="T:System.Object" /> コントロールの状態を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがメニューをスクロール ダウンして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL を取得または設定します。</summary>
        <value>ユーザーがメニューをスクロール ダウンして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、.NET 4.0 のレンダリングモードではサポートされていません。 このプロパティが必要な場合は、ページのコードに次のコードを追加することで、メニューを .NET 3.5 のレンダリングモードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 [<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>] プロパティを使用して、各動的メニューの下部に表示するカスタムイメージを指定し、ユーザーが別のメニュー項目をスクロールダウンできることを示します。  
  
> [!NOTE]
>  このプロパティが設定されていない場合は、内部の既定のイメージが使用されます。  
  
 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティを設定して、イメージの代替テキストを指定できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> プロパティを使用して、ユーザーが追加のメニュー項目を動的メニューで下にスクロールできることを示すカスタムイメージを表示する方法を示します。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> プロパティで指定されているイメージの代替テキストを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> プロパティで指定されているイメージの代替テキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、.NET 4.0 のレンダリングモードではサポートされていません。 このプロパティが必要な場合は、ページのコードに次のコードを追加することで、メニューを .NET 3.5 のレンダリングモードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 動的メニュー項目にメニューの下部に追加の項目が含まれている場合、ユーザーが下にスクロールして追加のメニュー項目を表示できることを示す画像が表示されます。 このイメージの代替テキストを指定するには、<xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティを使用します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティを使用して、ユーザーが追加のメニュー項目を動的メニューで下にスクロールできることを示すために使用されるイメージの代替テキストを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがメニューをスクロール アップして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL を取得または設定します。</summary>
        <value>ユーザーがメニューをスクロール アップして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、.NET 4.0 のレンダリングモードではサポートされていません。 このプロパティが必要な場合は、ページのコードに次のコードを追加することで、メニューを .NET 3.5 のレンダリングモードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 [<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>] プロパティを使用して、各動的メニューの上部に表示するカスタムイメージを指定し、ユーザーが追加のメニュー項目を上にスクロールできることを示します。  
  
> [!NOTE]
>  このプロパティが設定されていない場合は、内部の既定のイメージが使用されます。  
  
 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティを設定して、イメージの代替テキストを指定できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> プロパティを使用してカスタムイメージを表示する方法を示しています。これは、ユーザーが追加のメニュー項目を動的メニュー内で上にスクロールできることを示しています。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> プロパティで指定されているイメージの代替テキストを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> プロパティで指定されているイメージの代替テキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、.NET 4.0 のレンダリングモードではサポートされていません。 このプロパティが必要な場合は、ページのコードに次のコードを追加することで、メニューを .NET 3.5 のレンダリングモードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 動的メニュー項目にメニューの上部に追加の項目が含まれている場合は、ユーザーがスクロールして追加のメニュー項目を表示できることを示す画像が表示されます。 このイメージの代替テキストを指定するには、<xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティを使用します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティを使用して、ユーザーが追加のメニュー項目の動的メニュー内を上にスクロールできることを示すために使用されるイメージの代替テキストを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたメニュー項目を取得します。</summary>
        <value>選択されたメニュー項目を表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティを使用して、ユーザーが選択したメニュー項目を確認します。  
  
> [!NOTE]
>  ショートカットとして、[<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A>] プロパティを使用して、選択したメニュー項目のテキストを直接確認することもできます。  
  
 ユーザーが <xref:System.Web.UI.WebControls.Menu> コントロールからメニュー項目を選択すると、<xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントが発生します。これにより、イベントハンドラーを指定してカスタムルーチンを実行できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールで選択されているメニュー項目を決定する方法を示しています。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたメニュー項目の値を取得します。</summary>
        <value>選択されたメニュー項目の値。 既定値は <see cref="F:System.String.Empty" /> です。現在選択されているメニュー項目がないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ショートカットとして <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> プロパティを使用して、選択したメニュー項目のテキストを決定します。 選択したメニュー項目の他のプロパティにアクセスするには、<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールで選択されているメニュー項目のテキストを確認する方法を示します。  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールを表示するための状態データを格納している <see cref="T:System.Collections.IDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのデザイン時データを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.UI.Control.SetDesignModeState%2A> をオーバーライドします。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.Menu> コントロールを拡張するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataBound">ノードをデータ バインドとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> メソッドは、指定された <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> プロパティを設定するために、派生クラスによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.MenuItem" /> のデータ項目。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> メソッドは、指定された <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> プロパティを設定するために、派生クラスによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.MenuItem" /> のデータ パス。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> メソッドは、指定された <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> プロパティを設定するために、派生クラスによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リンクの一覧をスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキストを取得または設定します。</summary>
        <value>リンクの一覧をスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを使用して、スクリーンリーダーによって読み取られる非表示イメージの代替テキストを指定して、リンクの一覧をスキップする機能を提供します。 指定したテキストによって、補助技術デバイスに、非表示のスキップリンクイメージの説明が表示されます。この画像を使用して、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、スクリーンリーダーがコントロール全体をスキップする手段として、<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを提供します。 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティが設定されている場合は、代替テキストを含む非表示のイメージがレンダリングされ、ユーザーはコントロールの末尾に移動するオプションを使用できるようになります。 スクリーンリーダーは代替テキストを読み上げるので、イメージは1ピクセルの領域のみを占有します。 ページのレンダリングをピクセル単位で正確に制御するには、<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを空の文字列 ("") に設定し、メニューをスキップするための独自のメカニズムを提供します。 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティは、既定では空の文字列に設定されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを使用して、スクリーンリーダーによって読み取られる非表示イメージの代替テキストを指定して、リンクの一覧をスキップする方法を示します。  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各静的メニュー項目の下部に区切り線として表示されるイメージの URL を取得または設定します。</summary>
        <value>各静的メニュー項目の下部に区切り線として表示されるイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> プロパティを使用して、メニュー項目間の区切り記号として機能する各静的メニュー項目の下部に表示するカスタムイメージを指定します。  
  
> [!NOTE]
>  別の方法として、<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> プロパティを設定して、各静的メニュー項目の上部に区分線イメージを表示することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> プロパティを使用して、各静的メニュー項目の下部に表示する区切り記号イメージを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューに表示するメニュー レベルの数を取得または設定します。</summary>
        <value>静的メニューに表示するメニュー レベルの数。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューに表示するメニューレベルの数を指定するには、<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを使用します。 指定した値より下のすべてのメニューレベルが動的メニューに表示されます。 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティを設定して、動的メニューに表示するメニューレベルの数を制限することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを使用して、静的メニューに最初の2つのメニューレベルを表示する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値が 1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示す組み込みイメージを表示するかどうかを示す値を取得または設定します。</summary>
        <value>サブメニューのある静的メニュー項目に対して組み込みイメージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティの値に関係なく、そのイメージは組み込みイメージをオーバーライドします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されておらず、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティが `false`に設定されている場合、イメージは表示されません。  
  
 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティを設定して、イメージの代替テキストを指定できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを使用して、静的メニュー項目にサブメニューがあることを示すイメージを非表示にする方法を示します。 画像を非表示にするには、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティも空の文字列 ("") に設定する必要があります。  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが上に置かれているときの静的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>マウス ポインターが上に置かれているときの静的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マウスポインターが上に置かれているときの静的メニュー項目の外観を制御するには、<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティ (`StaticHoverStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`StaticHoverStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 静的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> プロパティを使用して、ユーザーがマウスポインターを上に置いたときに、静的メニュー項目の背景色を薄いスカイブルーに変更する方法を示しています。  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的に表示されるすべてのメニュー項目と共に表示される追加テキストを取得または設定します。</summary>
        <value>すべてのメニュー項目と共に表示される追加のテキストまたは文字。 このプロパティの既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、メニュー内の静的メニュー項目の書式を設定するテキストを挿入できます。 これは、モバイルデバイスに特に便利です。 <xref:System.Web.UI.WebControls.Menu> コントロールは、静的および動的なメニュー項目を表示するためのテンプレートをサポートしていますが、モバイルデバイスではテンプレートは無視されます。 このプロパティを使用すると、文字またはテキストを追加したり、テンプレートを使用せずにモバイルデバイスとデスクトップデバイスの両方のメニュー項目に書式を適用することができます。  
  
> [!NOTE]
>  このプロパティを使用するときに一貫した書式設定を実現するには、静的メニュー項目と動的メニュー項目の間で書式設定を同一にする場合は、<xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> プロパティも設定する必要があります。  
  
 テンプレートの書式設定とこのプロパティの両方が適用されている場合、モバイルデバイスのテンプレートの書式設定は無視されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> プロパティと <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> プロパティを使用して、各メニュー項目にテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューに表示されるカスタム コンテンツを格納しているテンプレートを取得または設定します。</summary>
        <value>静的メニューのカスタム コンテンツを格納している <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的なメニューに組み込まれたレンダリングを使用する代わりに、<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> プロパティを使用して、静的メニュー項目の独自のユーザーインターフェイス (UI) を定義できます。 静的メニュー項目のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.Menu> コントロールの開始タグと終了タグの間に `<StaticTemplate>` タグを配置します。 次に、開始タグと終了 `<StaticTemplate>` タグの間にテンプレートの内容を一覧表示できます。 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> プロパティを使用して、静的メニューのスタイルをさらに制御できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューの中のメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューの中のメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューのメニュー項目の外観を制御するには、<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`StaticMenuItemStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`StaticMenuItemStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 静的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> プロパティを使用して、静的メニューのメニュー項目に薄いスカイブルーの背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューの外観を設定できる <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューのスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューの外観を制御するには、<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`StaticMenuStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`StaticMenuStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 静的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>)  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> プロパティを使用して、静的なメニュー全体に薄いスカイブルーの背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示すために使用されるポップアウト イメージの代替テキストを取得または設定します。</summary>
        <value>ポップアウト イメージの代替テキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージの代替テキストを指定するには、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティを使用します。  
  
 イメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティを設定します。  
  
> [!NOTE]
>  このプロパティは、組み込みイメージとカスタムイメージの両方に適用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティを使用して、静的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキストを指定する方法を示します。 このテキストは、ユーザーがマウスポインターをイメージの上に置いたときにツールヒントとして表示されます。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示すために表示されるイメージの URL を取得または設定します。</summary>
        <value>静的メニュー項目にサブメニューがあることを示すために表示されるイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージを表示するには、次の2つの方法があります。  
  
-   組み込みイメージを使用するには、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` に設定します (既定)。  
  
-   カスタムイメージを指定するには、<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティの値に関係なく、そのイメージは組み込みイメージをオーバーライドします。  
  
 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されておらず、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティが `false`に設定されている場合、イメージは表示されません。  
  
> [!NOTE]
>  このプロパティを設定する場合は、円記号 (\\) の代わりにスラッシュ記号 (/) を使用します。 パスに円記号を使用すると、指定したイメージは表示されません。  
  
 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティを設定して、イメージの代替テキストを指定できます。  
  
   
  
## Examples  
 メニュー項目にサブメニューがある場合に静的メニュー項目に表示するカスタムイメージを指定するために <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティを使用する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した静的メニューのメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューの中の選択されたメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューでユーザーが選択したメニュー項目の外観を制御するには、<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのプロパティ (`StaticSelectedStyle-ForeColor`など) です。 プロパティは、`Property.Subproperty` (`StaticSelectedStyle.ForeColor`など) の形式でプログラムによって設定することもできます。  
  
 静的メニュー項目のスタイルプロパティは、次の順序で適用されます。  
  
1.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>)  
  
2.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
3.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>) <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションが定義されている場合は、この時点で適用され、その他のメニュー項目スタイルプロパティはオーバーライドされます。  
  
4.  [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>)  
  
> [!IMPORTANT]
>  次のような重大な変更。  
  
 4.0 .NET Framework する前に、.aspx ファイルで `<asp:Menu>` コントロールを定義するときに、ユーザーは `StaticSelectedStyle-CssClass` プロパティを設定して、選択したコントロール項目の CSS クラスを設定できます。 たとえば、ユーザーは次のようにメニューコントロールを持つことができます。  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 メニューコントロールは次のようにレンダリングされます。  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 ただし、.NET Framework 4.0 以降では、選択したメニュー項目は `StaticSelectedStyle-CssClass`で指定されたクラスではなく、常に `selected` CSS クラスに設定されます。 したがって、上記の ASP.NET コードは次のようにレンダリングされます。  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> プロパティを使用して、選択した静的メニュー項目に薄い青の背景色を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューのサブメニューをインデントする間隔をピクセル単位で取得または設定します。</summary>
        <value>静的メニューのサブメニューをインデントする間隔をピクセル単位で表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的メニューに複数のメニューレベルが表示される場合 (<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティが1より大きい値に設定されている場合) は、<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> プロパティを使用して、静的メニュー内のサブメニュー項目をインデントするピクセル数を指定します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> プロパティを使用して、静的メニューのサブメニュー項目を10ピクセルずつインデントする方法を示します。  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した <see cref="T:System.Web.UI.WebControls.Unit" /> の値が 0 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各静的メニュー項目の上部に区切り線として表示されるイメージの URL を取得または設定します。</summary>
        <value>各静的メニュー項目の上部に区切り線として表示されるイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> プロパティを使用して、メニュー項目間の区切り記号として機能する各静的メニュー項目の上部に表示するカスタムイメージを指定します。  
  
> [!NOTE]
>  または、<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> プロパティを設定して、各静的メニュー項目の下部に区分線のイメージを表示することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> プロパティを使用して、各静的メニュー項目の上部に表示する区切り記号イメージを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡されるイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>フォームがサーバーにポストされたときに発生するイベントを処理します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.Menu" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールに関連付けられている <xref:System.Web.UI.HtmlTextWriterTag> 値を確認するには、<xref:System.Web.UI.WebControls.Menu.TagKey%2A> プロパティを使用します。 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目に関連付けられている Web ページの内容を表示する対象のウィンドウまたはフレームを取得または設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目がクリックされたときに、メニュー項目にリンクされている Web コンテンツを表示するウィンドウまたはフレームを指定するには、<xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティを使用します。 値は、次の表に示すアンダースコア (_) から始まる特殊な値を除き、大文字小文字を区別しない A から Z の範囲の文字で始まる必要があります。  
  
|対象の値|説明|  
|------------------|-----------------|  
|`_blank`|フレームなしの新しいウィンドウに内容を表示します。|  
|`_parent`|直前のフレームセットの親に内容を表示します。|  
|`_search`|検索ペインに内容を表示します。|  
|`_self`|フォーカスのあるフレームに内容を表示します。|  
|`_top`|最大化されたフレームなしのウィンドウに内容を表示します。|  
  
> [!NOTE]
>  ブラウザーのドキュメントを参照して、`_search` 値がサポートされているかどうか確認してください。  たとえば、Internet Explorer バージョン5.0 以降では `_search` ターゲット値がサポートされています。  
  
 このプロパティは、<xref:System.Web.UI.WebControls.Menu> コントロールのすべてのメニュー項目に適用されます。 各 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの [<xref:System.Web.UI.WebControls.MenuItem.Target%2A>] プロパティを直接設定することにより、このプロパティを選択的にオーバーライドできます。  
  
> [!NOTE]
> <xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティは、対象の属性としてレンダリングされます。 XHTML 1.1 strict ドキュメント型定義では、アンカー要素の target 属性は許可されません。 レンダリングされた出力が XHTML またはアクセシビリティ標準に準拠している必要がある場合は、<xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティを設定しないでください。 詳細については、「 [Visual studio での XHTML 標準」および「ASP.NET](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)) 」および「 [visual studio と ASP.NET のアクセシビリティ](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))」を参照してください。  
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティを使用して、ユーザーがメニュー項目をクリックしたときに、各メニュー項目にリンクされているコンテンツを新しいウィンドウに表示するように指定する方法を示します。  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールに対するビューステートの変更を追跡し、コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに保存できるようにします。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
