<Type Name="PagedDataSource" FullName="System.Web.UI.WebControls.PagedDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eff31be400a60b0c36520753b175bff5b523172d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78762508" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PagedDataSource" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagedDataSource&#xA;Implements ICollection, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagedDataSource sealed : System::Collections::ICollection, System::ComponentModel::ITypedList" />
  <TypeSignature Language="F#" Value="type PagedDataSource = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>データ バインド コントロール (<see cref="T:System.Web.UI.WebControls.DataGrid" />、<see cref="T:System.Web.UI.WebControls.GridView" />、<see cref="T:System.Web.UI.WebControls.DetailsView" />、<see cref="T:System.Web.UI.WebControls.FormView" /> など) でページングを実行できるようにするためのプロパティをカプセル化します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource> クラスは、<xref:System.Web.UI.WebControls.DataGrid>、<xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>などのデータソースコントロールがページングを実行できるようにするプロパティをカプセル化します。 このクラスは、カスタムデータバインドコントロールにページングサポートを提供するときに、コントロールの開発者によって使用されます。  
  
 このクラスは、現在のページに属するデータを列挙するために最適なメソッドを使用します。 基になるデータソースがインデックス付きアクセス (<xref:System.Array?displayProperty=nameWithType> や <xref:System.Collections.IList?displayProperty=nameWithType>など) をサポートしている場合、このクラスはそれを使用します。 それ以外の場合は、<xref:System.Collections.IEnumerable.GetEnumerator%2A> メソッドによって作成された列挙子を使用します。  
  
 <xref:System.Web.UI.WebControls.PagedDataSource>のインスタンスの初期プロパティ値の一覧については、<xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> コンストラクターを参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagedDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PagedDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.PagedDataSource> クラスの新しいインスタンスを作成し、初期化します。  
  
 次の表に、<xref:System.Web.UI.WebControls.PagedDataSource>のインスタンスのプロパティの初期値を示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|  
|<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|10|  
|<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールでカスタム ページングが有効かどうかを示す値を取得または設定します。</summary>
        <value>カスタム ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> プロパティを使用して、カスタムページングが有効になっているかどうかを示します。 カスタムページングは、<xref:System.Web.UI.WebControls.DataGrid> コントロールによって提供されるオプションの種類のページングです。 ASP.NET バージョン2.0 のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>など) では、サーバー側のページングが使用され、カスタムページングはサポートされていません。 カスタムページングとサーバー側のページングは相互に排他的です。 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> を `true`に設定した場合は、<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> が `false`に設定されていることを確認してください。  
  
 カスタムページングの詳細については、「<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールでページングが有効かどうかを示す値を取得または設定します。</summary>
        <value>ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインドコントロールでページングを有効にするかどうかを指定するには、<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> プロパティを使用します。 ASP.NET バージョン2.0 のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>など) も、サーバー側のページング機能を使用して、自動ページング機能を提供します。 サーバー側のページングの詳細については、「<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>」を参照してください。 <xref:System.Web.UI.WebControls.DataGrid> コントロールを使用する場合は、独自のカスタムページングロジックを指定することもできます。 カスタムページングの詳細については、「<xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>」および「<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType>」を参照してください。  
  
 データバインドコントロールのページングサポートの詳細については、データバインドコントロールの `AllowPaging` プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowServerPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowServerPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowServerPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー側ページングが有効かどうかを示す値を取得または設定します。</summary>
        <value>サーバー側ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET バージョン2.0 のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.FormView>など) は、サーバー側のページングによって自動ページング機能を提供します。 ASP.NET 2.0 データバインドコントロールを使用する場合は、このプロパティを `true`に設定します。  
  
> [!NOTE]
>  サーバー側のページングとカスタムページングは相互に排他的です。 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> を `true`に設定した場合は、<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> が `false`に設定されていることを確認してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="pagedDataSource.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">データ ソースの項目のコピー先の、インデックス番号が 0 から始まる <see cref="T:System.Array" />。</param>
        <param name="index">指定した <see cref="T:System.Array" /> 内の、内容のコピー開始位置。</param>
        <summary>指定した <see cref="T:System.Array" /> にデータ ソースのすべての項目をコピーします。コピー操作は、<see cref="T:System.Array" /> 内の指定したインデックス位置から始まります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、指定したインデックスを開始位置として、指定した <xref:System.Array?displayProperty=nameWithType>にデータソースの内容をコピーします。 <xref:System.Array?displayProperty=nameWithType> は、多くの場合、データソース内の項目を反復処理するために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースの中で使用する項目の数を取得します。</summary>
        <value>データ ソースの中で使用する項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> プロパティを使用して、データソースから使用する項目の数を決定します。 返される値は、ページングが有効かどうか、およびカスタムページングが使用されているかどうかによって異なります。  
  
-   ページングが無効になっている場合 ([<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>] プロパティを `false`) に設定すると、<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティの値が返されます。  
  
-   ページングが有効になっている場合 (<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを `true`に設定)、カスタムページングが有効になっている場合 (<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティを `true`に設定すると)、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティの値が返されます。  
  
-   ページングが有効になっている場合 ([<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>] プロパティを `true`に設定)、<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> プロパティが [`false`] に設定されている場合は、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティの値が返されます。  
  
-   ページングが有効になっている場合 ([<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>] プロパティを `true`に設定すると)、カスタムページングは無効になり (<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティを設定することによって `false`)、<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> プロパティが `true`に設定されます。 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティの値は、返される前に <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> プロパティの値から減算されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティに `null`が含まれている場合は、0が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページのインデックスを取得または設定します。</summary>
        <value>現在のページのインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のページのインデックスを指定または確認するには、<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ DataSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Collections.IEnumerable with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースを取得または設定します。</summary>
        <value>データ ソースを表す <see cref="T:System.Collections.IEnumerable" /> 実装オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングされるデータソースを指定または特定するには、<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataSourceCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内の項目の数を取得します。</summary>
        <value>データ ソース内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソース内の項目の数を確認するには、<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティを使用します。 カスタムページングまたはサーバー側ページングが使用されている場合は、<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティの値が返されます。それ以外の場合は、データソース内の項目の合計数が返されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティに `null`が含まれている場合は、0が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">データ ソースが <see cref="T:System.Collections.ICollection" /> 実装オブジェクトではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="FirstIndexInPage">
      <MemberSignature Language="C#" Value="public int FirstIndexInPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstIndexInPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstIndexInPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstIndexInPage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstIndexInPage : int" Usage="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページに表示される最初のレコードのインデックスを取得します。</summary>
        <value>ページに表示される最初のレコードのインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のページの最初の項目のインデックスを確認するには、<xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> プロパティを使用します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティが `false`に設定されている場合、または <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> または <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> プロパティが `true`に設定されている場合、または <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティに `null`が含まれている場合は、0が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="pagedDataSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースのすべての項目を格納している <see cref="T:System.Collections.IEnumerator" /> 実装オブジェクトを返します。</summary>
        <returns>データ ソースのすべての項目を格納している <see cref="T:System.Collections.IEnumerator" /> 実装オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、データソース内の各項目を取得するために反復処理できる <xref:System.Collections.IEnumerator?displayProperty=nameWithType> を作成します。 列挙子の現在位置にある項目にアクセスするには、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> プロパティを使用します。 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> メソッドを使用して、コレクション内の次の項目に移動します。 列挙子を初期位置に移動するには、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> メソッドを使用します。  
  
> [!NOTE]
>  最初に列挙子を取得する場合、または <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> メソッドを使用して列挙子をコレクション内の最初の項目に移動する場合は、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。 それ以外の場合、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> プロパティによって表される項目は定義されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pagedDataSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">返されるリスト名を格納する <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。 この値は、<see langword="null" /> でもかまいません。</param>
        <summary>データ バインドに使用される各項目のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</summary>
        <returns>データ バインドに使用される各項目のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> メソッドを使用して、データのバインドに使用される各項目のプロパティを表す <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> を作成します。 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティが `null` の場合、または実装された <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> オブジェクトでない場合は、`null` が返されます。 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> 方法の詳細については、「<xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="pagedDataSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">返されるリスト名を格納する <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。 この値は、<see langword="null" /> でもかまいません。</param>
        <summary>リストの名前を返します。 このメソッドは、このクラスに適用されません。</summary>
        <returns>常に <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> から継承され、このクラスには適用されません。 すべてのケースに対して <xref:System.String.Empty?displayProperty=nameWithType> を返すように実装されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ページングが有効かどうかを示す値を取得します。</summary>
        <value>カスタム ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティを使用して、カスタムページングが有効かどうかを判断します。  
  
> [!NOTE]
>  このプロパティで `true`を返すには、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティと <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> プロパティの両方を `true` する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstPage">
      <MemberSignature Language="C#" Value="public bool IsFirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページが最初のページかどうかを示す値を取得します。</summary>
        <value>現在のページが最初のページの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のページが最初のページかどうかを判断するには、<xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      </Docs>
    </Member>
    <Member MemberName="IsLastPage">
      <MemberSignature Language="C#" Value="public bool IsLastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページが最後のページかどうかを示す値を取得します。</summary>
        <value>現在のページが最後のページの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のページが最後のページかどうかを判断するには、<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      </Docs>
    </Member>
    <Member MemberName="IsPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページングが有効かどうかを示す値を取得します。</summary>
        <value>ページングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングが有効かどうかを確認するには、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを使用します。  
  
> [!NOTE]
>  このプロパティが `true`を返すようにするには、<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> プロパティを `true` し、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティを0に設定することはできません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースが読み取り専用かどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、常にデータソースが変更可能であることを示す `false`を常に返すように実装されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー側ページング サポートが有効かどうかを示す値を取得します。</summary>
        <value>ページングが有効であり、<see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> プロパティでサーバー側ページングが指定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サーバー側のページングは、<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> プロパティと <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> プロパティの両方が `true`に設定されており、データソースによって取得されるデータの量を1ページに表示できない場合に有効になります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは <xref:System.Collections.ICollection?displayProperty=nameWithType> クラスから派生し、このクラスがスレッドセーフでないことを示すために常に `false` を返すようにオーバーライドされます。  
  
 <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> プロパティの詳細については、<xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスの <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のすべての項目を表示するために必要なページの合計数を取得します。</summary>
        <value>データ ソース内のすべての項目を表示するために必要なページ数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> プロパティを使用して、データソース内のすべての項目を表示するために必要なページ数を決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティが `null`の場合は、0が返されます。 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティが `false` に設定されている場合、または <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティが0以下に設定されている場合は、1が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 ページに表示される項目数を取得または設定します。</summary>
        <value>1 ページに表示される項目数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1ページに表示する項目の数を指定または決定するには、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value>コレクションへのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装で返されるオブジェクトは、<xref:System.Web.UI.WebControls.PagedDataSource> オブジェクト自体です。  
  
 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> プロパティの詳細については、<xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスの <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="VirtualCount">
      <MemberSignature Language="C#" Value="public int VirtualCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualCount : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ページングを使用している場合のデータ ソース内の仮想項目数を取得または設定します。</summary>
        <value>カスタム ページングを使用している場合のデータ ソース内の仮想項目数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムページングまたはサーバー側のページングを使用してデータソース内の項目の仮想数を決定する場合は、<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティの詳細については、「<xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      </Docs>
    </Member>
  </Members>
</Type>
