<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e6e4f425938ebcb8847ed190584e88300c7ac13" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73396727" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスを使用して構築した電子メール メッセージに埋め込まれる項目を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> は、メールメッセージに埋め込む項目を表します。 これらの埋め込みアイテムは、会社のロゴなどのイメージファイルにすることができます。 各埋め込み項目は、識別子とパスによって指定されます。  
  
 埋め込みオブジェクトが電子メールメッセージファイル内に正しく表示されるようにするには、次の条件が満たされている必要があります。  
  
-   メールメッセージは HTML 形式です。  
  
-   この項目は、イメージファイル (.jpg、.gif、.bmp など) です。  
  
-   <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> プロパティで指定されている HTML 形式の本文ファイルには、次の構文を使用したイメージファイルへの参照が含まれています。  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> がメールメッセージに追加され、以前に指定したすべての要件を満たしていない場合は、メールメッセージの添付ファイルとして表示される可能性が最も高くなります。 項目がメールメッセージの識別子によって参照されていても、埋め込みアイテムとして含まれていない場合は、メールが表示されると、破損した添付ファイルとして表示されます。  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> には、単一のメールメッセージの <xref:System.Web.UI.WebControls.EmbeddedMailObject> オブジェクトのコレクションが格納されます。 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> は、メールメッセージを作成するために <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトの <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> プロパティによって使用されます。  
  
 埋め込みオブジェクトを許可するメールメッセージは、<xref:System.Web.UI.WebControls.MailDefinition> プロパティを宣言によって設定することによって、次の Web コントロールで構成できます。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.EmbeddedMailObject> オブジェクトと <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> オブジェクトの値は、ビューステートに格納されません。 これにより、悪意のあるユーザーがサーバーのパス情報を検出するのを防ぐことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、`SendingMail`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法: 単純なフォーム認証を実装する](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功した場合、`SendingMail` イベントハンドラーのコードは、ユーザーに電子メールメッセージを送信して変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail .htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザーアカウント名またはパスワードを電子メールで送信することは、セキュリティ上の脅威になる可能性があります。 通常、電子メールメッセージはプレーンテキストで送信され、特別なネットワーク "スニッフィング" アプリケーションで読み取ることができます。  セキュリティを強化するには、「[ログインコントロールのセキュリティ保護](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)」で説明されている軽減策を使用します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 埋め込み項目の識別子を取得または設定するには、<xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> プロパティを使用します。 埋め込みアイテムへのパスを取得または設定するには、<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> プロパティを使用します。 どちらのプロパティも、メールメッセージに項目を正しく埋め込むように設定する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">メール メッセージに埋め込む項目の ID として使用する名前。 詳細については、「<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />」を参照してください。</param>
        <param name="path">メール メッセージに埋め込む項目を取得するために使用するパス。 詳細については、「<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />」を参照してください。</param>
        <summary>識別名とオブジェクトを読み込むパスを指定して、<see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> コントロールを使用し、`SendingMail`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> イベントのイベントハンドラーを含む ASP.NET ページのコードビハインドの例を示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法: 単純なフォーム認証を実装する](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功した場合、`SendingMail` イベントハンドラーのコードは、ユーザーに電子メールメッセージを送信して変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。  
  
 次のコード例は、.aspx ページの使用方法を示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 次のコード例は、分離コードファイルの使用方法を示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail .htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザーアカウント名またはパスワードを電子メールメッセージで送信することは、セキュリティ上の脅威になる可能性があります。 通常、電子メールメッセージはプレーンテキストで送信され、特別なネットワーク "スニッフィング" アプリケーションで読み取ることができます。  セキュリティを強化するには、「[ログインコントロールのセキュリティ保護](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)」で説明されている軽減策を使用します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスを使用して構築したメール メッセージに埋め込まれる項目の ID として使用する名前を取得または設定します。</summary>
        <value>メール メッセージに埋め込まれる項目の ID を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> プロパティは、<xref:System.Web.UI.WebControls.MailDefinition> クラスを使用して宣言によって構築されたメールメッセージに埋め込む項目の識別子を指定します。 識別子は、次の構文を使用して、<xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> プロパティに含まれる項目を、<xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> プロパティで指定されたファイルの本文内の適切な場所にマップするために使用されます。  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 通常、この項目はイメージファイルです。 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> プロパティの既定値は空の文字列です。  
  
 埋め込み画像に対してメールメッセージの代替テキストプロパティを設定するには、ユーザー補助機能の設計がベストプラクティスです。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、`SendingMail`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法: 単純なフォーム認証を実装する](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功した場合、`SendingMail` イベントハンドラーのコードは、ユーザーに電子メールメッセージを送信して変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail .htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザーアカウント名またはパスワードを電子メールメッセージで送信することは、セキュリティ上の脅威になる可能性があります。 電子メールメッセージはプレーンテキストで送信され、特別なネットワーク "スニッフィング" アプリケーションで読み取ることができます。  セキュリティを強化するには、「[ログインコントロールのセキュリティ保護](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)」で説明されている軽減策を使用します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスを使用して構築したメール メッセージに埋め込む項目を取得するために使用するパスを取得または設定します。</summary>
        <value>メール メッセージに埋め込む項目へのパスを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> プロパティは、<xref:System.Web.UI.WebControls.MailDefinition> オブジェクトを使用して宣言によって構築されたメールメッセージに埋め込む項目へのパスを指定します。 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> のファイルパスは、C:\MyServer\Banner.gif. などのパスにする必要があります。 通常、埋め込み項目はイメージファイルです。 画像ファイルがメールメッセージの識別子によって参照されていても、メッセージに含まれていない場合、電子メールメッセージが表示されると、画像が壊れた添付ファイルとして表示されます。  
  
 埋め込み画像に対してメールメッセージの代替テキストプロパティを設定するには、ユーザー補助機能の設計がベストプラクティスです。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、`SendingMail`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法: 単純なフォーム認証を実装する](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功した場合、`SendingMail` イベントハンドラーのコードは、ユーザーに電子メールメッセージを送信して変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail .htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザーアカウント名またはパスワードを電子メールメッセージで送信することは、セキュリティ上の脅威になる可能性があります。 通常、電子メールメッセージはプレーンテキストで送信され、特別なネットワーク "スニッフィング" アプリケーションで読み取ることができます。  セキュリティを強化するには、「[ログインコントロールのセキュリティ保護](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)」で説明されている軽減策を使用します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
  </Members>
</Type>
