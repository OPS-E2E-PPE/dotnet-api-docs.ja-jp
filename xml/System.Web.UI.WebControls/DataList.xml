<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a27921b39a3c26635ba46bb5e5f622ecd24252cf" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107201" /></Metadata><TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>テンプレートを使用して項目を表示するデータ連結リスト コントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [テンプレート](#templates)  
  
-   [DataList コントロールの外観のカスタマイズ](#customizing_the_appearance_of_the_datalist_control)  
  
-   [方向とレイアウトの表示](#display_direction_and_layout)  
  
-   [セキュリティ](#security)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 テンプレートで定義されたデータバインドリストを表示するには、<xref:System.Web.UI.WebControls.DataList> コントロールを使用します。 <xref:System.Web.UI.WebControls.DataList> コントロールでは、の選択と編集がサポートされています。  
  
<a name="templates"></a>   
## <a name="templates"></a>テンプレート  
 <xref:System.Web.UI.WebControls.DataList> コントロールの内容は、テンプレートを使用して操作できます。 次の表に、サポートされているテンプレートを示します。  
  
|テンプレート名|説明|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>内の交互の項目のコンテンツとレイアウトを提供します。 定義されていない場合は、`ItemTemplate` が使用されます。|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>で現在編集中の項目のコンテンツとレイアウトを提供します。 定義されていない場合は、`ItemTemplate` が使用されます。|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>のフッターセクションのコンテンツとレイアウトを提供します。 定義されていない場合、フッターセクションは表示されません。|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>のヘッダーセクションのコンテンツとレイアウトを提供します。 定義されていない場合、ヘッダーセクションは表示されません。|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|<xref:System.Web.UI.WebControls.DataList>内の項目のコンテンツとレイアウトを提供する必須テンプレート。|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>で現在選択されている項目のコンテンツとレイアウトを提供します。 定義されていない場合は、<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> が使用されます。|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|定義されている場合、<xref:System.Web.UI.WebControls.DataList>内の項目間の区切り記号のコンテンツとレイアウトを提供します。 定義されていない場合、区切り記号は表示されません。|  
  
 少なくとも、<xref:System.Web.UI.WebControls.DataList> コントロールに項目を表示するには、<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> を定義する必要があります。 追加のテンプレートを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールに対してカスタムの外観を提供できます。  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>DataList コントロールの外観のカスタマイズ  
 <xref:System.Web.UI.WebControls.DataList> コントロールの外観は、コントロールのさまざまな部分のスタイルプロパティを設定することによってカスタマイズできます。 次の表は、さまざまなスタイルプロパティを示しています。  
  
|Style プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールで編集される項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールのフッターのスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールのヘッダーのスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールの項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールで選択されている項目のスタイルを指定します。|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールの項目間の区切り記号のスタイルを指定します。|  
  
 コントロールのさまざまな部分の表示と非表示を切り替えることもできます。 表示または非表示にする部分を制御するプロパティを次の表に示します。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールのフッターセクションの表示と非表示を切り替えます。|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|<xref:System.Web.UI.WebControls.DataList> コントロールのヘッダーセクションの表示と非表示を切り替えます。|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>方向とレイアウトの表示  
 <xref:System.Web.UI.WebControls.DataList> コントロールの表示方向は、縦または横にすることができます。 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティを設定して、表示の方向を指定します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールのレイアウトは、<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> プロパティを使用して制御されます。 このプロパティを `RepeatLayout.Table` に設定すると <xref:System.Web.UI.WebControls.DataList> がテーブル形式で表示されますが、`RepeatLayout.Flow` ではテーブル構造を使用せずに <xref:System.Web.UI.WebControls.DataList> が表示されます。  
  
<a name="security"></a>   
## <a name="security"></a>セキュリティ  
 `DataList` コントロールには、ユーザーが情報を入力できるようにするコントロールを含めることができます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。  
  
 セキュリティの詳細については、「[標準コントロールをセキュリティ](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)で保護する」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList> コントロールを使用して、データソースの項目の一覧を表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証</related>
    <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.DataList> クラスの新しいインスタンスを作成し、初期化します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList> クラスの新しいインスタンスを作成して初期化する方法を示しています。  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの交互の項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの交互の項目のスタイル プロパティを表す <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目にカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 代替項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<AlternatingItemStyle>` タグを配置します。 その後、開始 `<AlternatingItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目に対して異なる背景色を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 内の交互の項目のテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールの交互の項目のテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目の内容を制御するには、<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> プロパティを使用します。 交互の項目の外観は、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティによって制御されます。  
  
 交互の項目のテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<AlternatingItemTemplate>` タグを配置します。 次に、開始タグと終了 `<AlternatingItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目の内容を制御する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> コントロールの項目に対して <see cref="T:System.Web.UI.WebControls.DataList" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Cancel` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを `-1` (項目の選択を解除) に設定し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataList> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 `Cancel` ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目に対して行われたすべての編集をキャンセルします。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Cancel` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataList.CancelCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">コントロールのデータ ソースを使用する場合は <see langword="true" />。コントロールがビューステートから再作成されるため、データ バインドされないことを示す場合は <see langword="false" />。</param>
        <summary>指定されたデータ ソースを使用するかしないかにかかわらず、データ リスト コントロールを表示するために使用されるコントロール階層を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList> コントロールからカスタム実装を派生させる場合に、主にコントロールの開発者によって使用されます。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList.CreateItem%2A> メソッドと <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドを使用して、データリストに含まれるヘッダー、フッター、区切り記号、およびデータバインド項目を表す <xref:System.Web.UI.WebControls.DataListItem> コントロールを作成します。 データリストのデータバインド項目には、<xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションを使用してアクセスできます。 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> コレクションを使用して、ヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスできます。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドをオーバーライドして <xref:System.Web.UI.WebControls.DataListItem> コントロールを作成または <xref:System.Web.UI.WebControls.DataList> コントロールに追加する方法をカスタマイズします。 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.DataListItem> コントロールのテンプレートをカスタマイズします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのスタイル関連プロパティを実装するために <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールが内部で使用する既定のスタイル オブジェクトを作成します。</summary>
        <returns>コントロールの既定のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.TableStyle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> メソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.DataList> コントロールからカスタム実装を派生させることによって使用されます。  
  
   
  
## Examples  
 次のコード例は、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.DataList> コントロールにセルの空白を含まない水平グリッド線を常に表示する方法を示しています。  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">作成した項目を配置するための <see cref="T:System.Web.UI.WebControls.DataList" /> 内の指定の場所。</param>
        <param name="itemType">作成する項目について指定した型を表す <see cref="T:System.Web.UI.WebControls.ListItemType" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataListItem" /> オブジェクトを作成します。</summary>
        <returns>リスト項目の指定した型で作成された <see cref="T:System.Web.UI.WebControls.DataListItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> メソッドは、主にコントロールの開発者が、<xref:System.Web.UI.WebControls.DataList> コントロールのカスタム実装を作成することによって使用されます。 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> メソッドは機能的には、<xref:System.Web.UI.WebControls.DataListItem>の <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> コンストラクターを呼び出すことと同じです。 <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> と <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> のプロパティは、指定された値を使用して新しい <xref:System.Web.UI.WebControls.DataListItem> に対して初期化されますが、項目は <xref:System.Web.UI.WebControls.DataList>に挿入されません。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList.CreateItem%2A> メソッドと <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドを使用して、データリストに含まれるヘッダー、フッター、区切り記号、およびデータバインド項目を表す <xref:System.Web.UI.WebControls.DataListItem> コントロールを作成します。 データリストのデータバインド項目には、<xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションを使用してアクセスできます。 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> コレクションを使用して、ヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスできます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>独自の派生 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 型を作成する場合、または <see cref="T:System.Web.UI.WebControls.DataListItem" /> の作成時に追加のメンバープロパティを設定する場合は、このメソッドをオーバーライドします。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> コントロールの項目に対して <see cref="T:System.Web.UI.WebControls.DataList" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Delete` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントの一般的なハンドラーは、選択された項目をデータソースから削除し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Delete`] ボタンをクリックすると、<xref:System.Web.UI.WebControls.DataList> コントロール内の選択した項目が削除されます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Delete` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataList.DeleteCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Edit" /> コントロールの項目に対して <see cref="T:System.Web.UI.WebControls.DataList" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Edit` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを選択された行に設定し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
> [!CAUTION]
>  テキストは、<xref:System.Web.UI.WebControls.DataList> コントロールに表示される前に HTML エンコードされません。 これにより、テキスト内の HTML タグ内にスクリプトを埋め込むことができるようになります。 コントロールの値がユーザー入力からのものである場合は、必ず値を検証してセキュリティの脆弱性を減らしてください。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.EditCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Edit`] ボタンをクリックしたときに、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目を編集できます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Edit" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Edit` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataList.EditCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の編集対象として選択された項目のインデックス番号を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の編集対象として選択された項目のインデックス番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを使用して、編集する項目をプログラムで指定します。 このプロパティを使用して、編集対象として選択した項目のインデックスを確認することもできます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティは0から始まります。  
  
 項目の選択を解除するには、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを `-1`に設定します。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティは、コントロールの状態に格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを使用して、ユーザーが編集対象として選択した項目を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see langword="0" /> 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの編集対象として選択された項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの編集対象として選択された項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで編集するために選択した項目のカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 編集対象として選択した項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<EditItemStyle>` タグを配置します。 その後、開始 `<EditItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> プロパティを使用して、ユーザーが編集のために選択した項目に対して異なる外観を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の編集対象として選択された項目のテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロール内の編集のために選択された項目のテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの編集対象として選択された項目の内容を制御します。 編集対象として選択された項目の外観は、<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> プロパティによって制御されます。  
  
 編集対象として選択した項目のテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<EditItemTemplate>` タグを配置します。 次に、開始タグと終了 `<EditItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> プロパティを使用して、ユーザーが編集対象として選択した項目の内容を制御する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Table" /> コントロールの各テンプレート内で定義された <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの行を抽出して表示するかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> コントロールの各テンプレート内で定義された <see cref="T:System.Web.UI.WebControls.Table" /> コントロールの行を抽出して表示する場合は <see cref="T:System.Web.UI.WebControls.DataList" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールの内容は、テンプレートを使用して指定します。 通常は、テンプレートに表示するコントロールを一覧表示します。 また、テンプレートに <xref:System.Web.UI.WebControls.Table> コントロールを配置して、テーブルの行を表示することもできます。  
  
 <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの各テンプレートで定義されている <xref:System.Web.UI.WebControls.Table> コントロールの行を抽出して表示するかどうかを指定します。 <xref:System.Web.UI.WebControls.DataList> コントロールのテンプレートから抽出されたすべての行は、1つのテーブルに表示されます。 これにより、他の小さなテーブルから1つのテーブルを作成しながら、<xref:System.Web.UI.WebControls.DataList> コントロールの機能を維持することができます。  
  
> [!NOTE]
>  このプロパティが `true`に設定されている場合は、<xref:System.Web.UI.WebControls.DataList> コントロールに含める各テンプレートに対して、適切な形式の <xref:System.Web.UI.WebControls.Table> コントロールを提供する必要があります。 テーブルの行だけが表示されます。 テンプレート内の他のすべてのコンテンツは無視されます。 この機能を正しく動作させるには、<xref:System.Web.UI.WebControls.Table> コントロールを使用する必要があります。 <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> コントロールは、このプロパティと互換性がありません。  
  
 テンプレート内の <xref:System.Web.UI.WebControls.Table> コントロールのセルを作成する場合は、<xref:System.Web.UI.WebControls.TableCell> オブジェクトの <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> プロパティを使用して、セルがまたがる列の数を制御できます。 また、<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> プロパティを使用して、セルがまたがる行の数を制御することもできます。  
  
> [!NOTE]
>  このプロパティが `true`に設定されている場合、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>、および <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> の各プロパティは、<xref:System.Web.UI.WebControls.DataList> コントロールの外観には影響しません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールのテンプレートで定義されている <xref:System.Web.UI.WebControls.Table> コントロールの行を抽出して表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールのフッター セクションのスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター セクションのスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールのフッターセクションにカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティのスタイル設定を継承します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティにも赤いフォントが表示されます。 これにより、1つのスタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 継承されたスタイルの設定をオーバーライドするには、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティに青いフォントを指定できます。  
  
 フッターセクションのカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<FooterStyle>` タグを配置します。 その後、開始 `<FooterStyle>` タグ内にスタイル属性を一覧表示できます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> プロパティを `true` に設定する必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールのフッターセクションにカスタムの背景色を指定する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールのフッター セクションのテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールのフッター セクションのテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フッターセクションの内容を制御するには、<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> プロパティを使用します。 フッターセクションの外観は、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティによって制御されます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> プロパティを `true` に設定する必要があります。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティのスタイル設定を継承します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティにも赤いフォントが表示されます。 これにより、1つのスタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 継承されたスタイルの設定をオーバーライドするには、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティに青いフォントを指定できます。  
  
 フッターセクションのテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<FooterTemplate>` タグを配置します。 次に、開始タグと終了 `<FooterTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールのフッターセクションの内容を制御する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> プロパティが <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> に設定されているときの <see langword="RepeatLayout.Table" /> コントロールのグリッド線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 列挙値のいずれか。 既定値は <see langword="None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールのグリッド線のスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList.GridLines%2A> プロパティを使用します。 次の表に、使用可能なスタイルを示します。  
  
|スタイル|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|グリッド線がありません。|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|水平グリッド線を表示します。|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|垂直グリッド線を表示します。|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|水平グリッド線と垂直グリッド線の両方を表示します。|  
  
> [!NOTE]
>  このプロパティは、<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> プロパティが `RepeatLayout.Table`に設定されている場合にのみ適用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.GridLines%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの垂直および水平のグリッド線を表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの見出しセクションのスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの見出しセクションのスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの見出しにカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 見出しセクションのカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<HeaderStyle>` タグを配置します。 その後、開始 `<HeaderStyle>` タグ内にスタイル属性を一覧表示できます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> プロパティを `true` に設定する必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの見出しセクションにカスタムの背景色を指定する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの見出しセクションのテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールの見出しセクションのテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> プロパティを使用して、見出しセクションの内容を制御します。 ヘッダーセクションの外観は、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティによって制御されます。  
  
> [!NOTE]
>  このプロパティを表示するには、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> プロパティを `true` に設定する必要があります。  
  
 見出しセクションのテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<HeaderTemplate>` タグを配置します。 次に、開始タグと終了 `<HeaderTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの見出しセクションの内容を制御する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">初期化する <see cref="T:System.Web.UI.WebControls.DataListItem" />。</param>
        <summary>リスト項目の型に対して指定したテンプレートおよびスタイルに基づいて、<see cref="T:System.Web.UI.WebControls.DataListItem" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.DataList> コントロールを拡張するために使用されます。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList.CreateItem%2A> メソッドと <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドを使用して、データリストに含まれるヘッダー、フッター、区切り記号、およびデータバインド項目を表す <xref:System.Web.UI.WebControls.DataListItem> コントロールを作成します。 データリストのデータバインド項目には、<xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションを使用してアクセスできます。 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> コレクションを使用して、ヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスできます。  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> メソッドをオーバーライドして <xref:System.Web.UI.WebControls.DataListItem> コントロールを作成または <xref:System.Web.UI.WebControls.DataList> コントロールに追加する方法をカスタマイズします。 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.DataListItem> コントロールのテンプレートをカスタマイズします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの任意のボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールで任意のボタンがクリックされたときに発生し、カスタム `CommandName` 値を持つボタンコントロールがある場合によく使用されます。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList> コントロールから項目を選択するために、<xref:System.Web.UI.WebControls.DataList.ItemCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールに項目が作成されたときにサーバーで発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントは、ラウンドトリップ中とデータがコントロールにバインドされているときの両方で、<xref:System.Web.UI.WebControls.DataList> コントロールの項目が作成されたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントは、通常、<xref:System.Web.UI.WebControls.DataList> コントロールの行の内容と外観を制御するために使用されます。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目の作成順序を表示するために、<xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントのハンドラーを指定してコーディングする方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目が <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールにデータ連結されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> イベントは、項目が <xref:System.Web.UI.WebControls.DataList> コントロールにデータバインドされた後に発生します。 このイベントは、データ項目がクライアントに表示される前に、そのデータ項目にアクセスする最後の機会を提供します。 このイベントが発生すると、データ項目は使用できなくなります。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ItemDataBound> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目がコントロールにバインドされている順序を表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール内の個別の項目を表す <see cref="T:System.Web.UI.WebControls.DataListItem" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> コントロール内の個別の項目を表す <see cref="T:System.Web.UI.WebControls.DataListItem" /> オブジェクトのコレクションを格納している <see cref="T:System.Web.UI.WebControls.DataList" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目をプログラムで制御するには、<xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションを使用します。 <xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションには、コレクションに対して項目を追加または削除するメソッドは用意されていません。 ただし、<xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントのハンドラーを指定することによって、項目の内容を制御できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションには、データソースにバインドされている項目のみが含まれます。 ヘッダー、フッター、および区切り記号はコレクションに含まれません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.Items%2A> コレクションを使用して <xref:System.Web.UI.WebControls.DataList> コントロールに項目を表示する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの項目にカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<ItemStyle>` タグを配置します。 その後、開始 `<ItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
 また、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目に対して異なる外観を提供することもできます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して異なる背景色を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの項目のテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールの項目のテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目の内容を制御するには、<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.DataList> コントロールの項目の外観は、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティによって制御されます。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目のテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<ItemTemplate>` タグを配置します。 次に、開始タグと終了 `<ItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
 必要に応じて、<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの交互の項目に対して異なる外観を提供できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの項目の内容を制御する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.DataList" /> の状態を表すオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に .NET Framework インフラストラクチャによって使用されます。独自に作成したコードから直接使用するためのものではありません。  ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> メソッドによって保存された前回のページ要求から、<xref:System.Web.UI.WebControls.DataList> コントロールのビューステート情報を復元します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とビューステートのサンプル</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソースです。</param>
        <param name="e">イベントのデータ。</param>
        <summary>サーバー コントロールのイベントをページの UI サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Cancel` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを `-1` (項目の選択を解除) に設定し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.CancelCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 `Cancel` ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目に対して行われたすべての編集をキャンセルします。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">標準コントロールのセキュリティ保護</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)">方法: HTML エンコーディングを文字列に適用して Web アプリケーションのスクリプト攻略を防止する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET Web ページでのユーザー入力の検証の概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Delete` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントの一般的なハンドラーは、選択された項目をデータソースから削除し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.DeleteCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Delete`] ボタンをクリックすると、<xref:System.Web.UI.WebControls.DataList> コントロール内の選択した項目が削除されます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.EditCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールの項目に対して `Edit` ボタンがクリックされたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> イベントの一般的なハンドラーは、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティを選択された行に設定し、データを <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドします。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.EditCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Edit`] ボタンをクリックしたときに、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目を編集できます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> コントロールの <see cref="T:System.Web.UI.WebControls.DataList" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.OnInit%2A> メソッドは、インスタンスを作成および設定するために必要な初期化手順を実行するように <xref:System.Web.UI.WebControls.DataList> コントロールに通知します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> イベントは、<xref:System.Web.UI.WebControls.DataList> コントロールで任意のボタンがクリックされると発生します。このイベントは、<xref:System.Web.UI.WebControls.DataList> コントロールにカスタム `CommandName` 値 (`Add`など) があるボタンコントロールがある場合によく使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList> コントロールから項目を選択するために、<xref:System.Web.UI.WebControls.DataList.ItemCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントは、ラウンドトリップ中とデータがコントロールにバインドされているときの両方で、<xref:System.Web.UI.WebControls.DataList> コントロールの項目が作成されたときに発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントは、通常、<xref:System.Web.UI.WebControls.DataList> コントロールの行の内容と外観を制御するために使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目の作成順序を表示するために、<xref:System.Web.UI.WebControls.DataList.ItemCreated> イベントのハンドラーを指定してコーディングする方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> イベントは、項目が <xref:System.Web.UI.WebControls.DataList> コントロールにデータバインドされた後に発生します。 このイベントは、データ項目がクライアントに表示される前に、そのデータ項目にアクセスする最後の機会を提供します。 このイベントが発生すると、データ項目は使用できなくなります。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ItemDataBound> イベントのハンドラーを指定してコードを記述し、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目がコントロールにバインドされている順序を表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントのカスタムハンドラーを提供するには、<xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントは、項目の [`Update`] ボタンがクリックされると発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントの一般的なハンドラーによってデータが更新され、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティが `-1` に設定され (項目の選択が解除されます)、データが <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドされます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Update`] ボタンをクリックしたときにユーザーが入力した新しい値を使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目を更新できます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void PrepareControlHierarchy ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareControlHierarchy() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareControlHierarchy ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareControlHierarchy();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールに表示するコントロール階層を準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList> コントロールからカスタムコントロールを派生させるときに、主にコントロールの開発者によって使用されます。  
  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> は、コントロール階層を準備し、子コントロールがレンダリングされる前に <xref:System.Web.UI.WebControls.DataListItem> コントロールに含まれるスタイルを設定します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> メソッドをオーバーライドして、<see cref="T:System.Web.UI.WebControls.DataList" /> に含まれるコントロールがレンダリングされる前にスタイルをカスタマイズします。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内のリスト項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> メソッドは、<xref:System.Web.UI.WebControls.DataList> コントロールからカスタムコントロールを派生させるときに、主にコントロールの開発者によって使用されます。  
  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> メソッドは、含まれている <xref:System.Web.UI.WebControls.DataListItem> コントロールを含む、<xref:System.Web.UI.WebControls.DataList> コントロールの内部コンテンツをレンダリングします。  
  
   
  
## Examples  
 次のコード例では、一部のテキストが <xref:System.Web.UI.WebControls.DataList> オブジェクトよりも前になるように、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> メソッドをオーバーライドする方法を示します。  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールに表示する列数を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールに表示する列数。 既定値は <see langword="0" /> で、<see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の項目は <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" /> プロパティの値に基づいて 1 つの行または列で表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールに項目を表示する列の数を指定します。 たとえば、このプロパティを `5`に設定すると、<xref:System.Web.UI.WebControls.DataList> コントロールによって項目が5つの列に表示されます。  
  
> [!NOTE]
>  このプロパティが `0`に設定されている場合、<xref:System.Web.UI.WebControls.DataList> コントロールは <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティの値に基づいて、その項目を1つの行または列に表示します。 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティが `RepeatDirection.Horizontal`に設定されている場合、項目は1行に表示されます。 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティが `RepeatDirection.Vertical`に設定されている場合、項目は1つの列に表示されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールに表示する列の数を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された列数が負の値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールを水平または垂直のどちらで表示するかを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 値のいずれか 1 つです。 既定では、 <see langword="Vertical" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの表示方向を指定します。  
  
> [!NOTE]
>  表示される列の数は、常に <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> プロパティによって決まります。  
  
 このプロパティが `RepeatDirection.Vertical`に設定されている場合、一覧内の項目は、すべての項目が表示されるまで、上から下、左から右に読み込まれた列に表示されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> プロパティが `3`に設定されている場合、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目は、次の表に示すように、3つの列に表示されます。  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 このプロパティが `RepeatDirection.Horizontal`に設定されている場合、一覧内の項目は、すべての項目が表示されるまで、左から右、次に上から下へ読み込まれた行に表示されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> プロパティが `3`に設定されている場合、<xref:System.Web.UI.WebControls.DataList> コントロールの項目は、次の表に示すように、それぞれ3つの項目の行に表示されます。  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールを表示する方向を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が、<see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールをテーブル レイアウトまたはフロー レイアウトのどちらで表示するかを取得または設定します。</summary>
        <value>コントロールをテーブル レイアウトまたはフロー レイアウトのどちらで表示するかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロール内の項目をテーブルに表示するかどうかを指定します。 <xref:System.Web.UI.WebControls.DataList> コントロールでサポートされている <xref:System.Web.UI.WebControls.RepeatLayout> 値は <xref:System.Web.UI.WebControls.RepeatLayout.Table> と <xref:System.Web.UI.WebControls.RepeatLayout.Flow>だけです。  
  
 このプロパティが `RepeatLayout.Table`に設定されている場合、一覧内の項目はテーブルに表示されます。 このプロパティが `RepeatLayout.Flow`に設定されている場合、一覧内の項目はテーブル構造なしで表示されます。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールがテーブルに表示されている場合は、<xref:System.Web.UI.WebControls.DataList.GridLines%2A> プロパティを使用して、グリッド線のスタイルを指定できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールのレイアウトスタイルを指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が、サポートされている <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> 値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、コントロールのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataList" /> ビューステートへの変更を格納するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ビューステートは、サーバーコントロールのプロパティの値を累積したものです。 これらの値は、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティ (<xref:System.Web.UI.StateBag> クラスのインスタンス) に自動的に配置されます。 <xref:System.Web.UI.Control.ViewState%2A> プロパティの値は、サーバーコントロールのライフサイクルの保存状態の段階後に文字列オブジェクトに保存されます。 詳細については、「 [ASP.NET Page ライフサイクルの概要](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)」を参照してください。  
  
 ビューステートが保存されると、この文字列オブジェクトは、非表示の HTML input 要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> メソッドをオーバーライドし、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティを変更することで、効率を向上させることができます。 詳細については、「[カスタム ASP.NET サーバーコントロールの開発](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)」および「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とビューステートのサンプル</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Select" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Select` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataList.SelectCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の選択された項目のインデックスを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の選択された項目のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目をプログラムで指定するには、<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> プロパティを使用します。 このプロパティを使用して、選択した項目のインデックスを確認することもできます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> プロパティは0から始まります。  
  
 項目の選択を解除するには、<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> プロパティを `-1`に設定します。  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> プロパティは、コントロールの状態に格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が <see langword="-1" /> 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の選択された項目を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataListItem" /> コントロール内の選択された項目を表す <see cref="T:System.Web.UI.WebControls.DataList" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールで選択された項目を表す <xref:System.Web.UI.WebControls.DataListItem> オブジェクトを取得するには、<xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> プロパティを使用します。 このオブジェクトを使用して、選択したアイテムのプロパティにアクセスできます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> プロパティを使用して、選択した項目の内容を <xref:System.Web.UI.WebControls.DataList> コントロールに表示する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の選択された項目のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロール内の選択された項目のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目のカスタムスタイルを指定します。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目スタイルプロパティは、階層を使用して1つの項目スタイルプロパティから別の項目スタイルプロパティに継承されます。 階層の下位に設定されている項目スタイルプロパティは、階層内の項目スタイルプロパティによって継承されます。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに赤いフォントを指定した場合、<xref:System.Web.UI.WebControls.DataList> コントロール内のその他のすべての項目スタイルプロパティにも赤いフォントが使用されます。 これにより、1つの項目スタイルプロパティを設定することによって、コントロールに共通の外観を提供できます。 階層内の上位にある項目スタイルプロパティの継承されたスタイル設定をオーバーライドするには、そのスタイルプロパティを設定します。 たとえば、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> プロパティに指定されている赤いフォントをオーバーライドして、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> プロパティに青いフォントを指定できます。 次の表は、階層の順序を上位から最低の順に示しています。  
  
|［優先順位］|Style プロパティ|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 選択した項目のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<SelectedItemStyle>` タグを配置します。 その後、開始 `<SelectedItemStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目に対してカスタムの背景色を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロール内の選択された項目のテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロール内の選択された項目のテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選択した項目の内容を制御するには、<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> プロパティを使用します。 選択した項目の外観は、<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> プロパティによって制御されます。  
  
 選択した項目のテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<SelectedItemTemplate>` タグを配置します。 次に、開始タグと終了 `<SelectedItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択された項目の内容を制御する方法を示しています。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたデータ リスト項目のキー フィールドの値を取得します。</summary>
        <value>選択されたデータ リスト項目のキー フィールドの値。 既定値は <see langword="null" /> です。現在選択されているデータ リスト項目がないことを示します。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> プロパティが設定されていません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの各項目間の区切り記号のスタイル プロパティを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの各項目間の区切り記号のスタイル プロパティを格納している <see cref="T:System.Web.UI.WebControls.DataList" /> オブジェクト。 既定値は空の <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの各項目間の区切り記号のカスタムスタイルを指定します。 区切り記号を使用すると、<xref:System.Web.UI.WebControls.DataList> コントロール内の各項目の間にカスタムコンテンツを持つ要素を配置できます。 調整できる共通スタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置などがあります。 別のスタイルを指定すると、<xref:System.Web.UI.WebControls.DataList> コントロールの外観が向上します。  
  
 区切り記号のカスタムスタイルを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<SeparatorStyle>` タグを配置します。 その後、開始 `<SeparatorStyle>` タグ内にスタイル属性を一覧表示できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの各項目間の区切り記号のカスタム背景色を指定する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールの項目間の区切り記号のテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールの項目間の区切り記号のテンプレートを格納している <see cref="T:System.Web.UI.WebControls.DataList" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールの項目間の区切り記号の内容を制御するには、<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> プロパティを使用します。 区切り記号を使用すると、<xref:System.Web.UI.WebControls.DataList> コントロール内の各項目の間にカスタムコンテンツを持つ要素を配置できます。 <xref:System.Web.UI.WebControls.DataList> コントロールの項目間の区切り記号の外観は、<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> プロパティによって制御されます。  
  
 区切り記号のテンプレートを指定するには、<xref:System.Web.UI.WebControls.DataList> コントロールの開始タグと終了タグの間に `<SeparatorTemplate>` タグを配置します。 次に、開始タグと終了 `<SeparatorTemplate>` タグの間にテンプレートの内容を一覧表示できます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールの各項目間の区切り記号の内容を制御する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールにフッター セクションを表示するかどうかを示す値を取得または設定します。</summary>
        <value>フッター セクションを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。ただし、このプロパティは <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> プロパティが <see langword="null" /> でないときにだけチェックされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールにフッターセクションを表示するかどうかを指定するには、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> プロパティを使用します。  
  
 フッターセクションの外観を制御するには、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> プロパティを設定します。 フッターセクションの内容は、<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> プロパティによって制御されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールにフッターセクションを表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールにヘッダー セクションを表示するかどうかを示す値を取得または設定します。</summary>
        <value>ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。ただし、このプロパティは <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> プロパティが <see langword="null" /> でないときにだけチェックされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールにヘッダーセクションを表示するかどうかを指定するには、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> プロパティを使用します。  
  
 ヘッダーセクションの外観を制御するには、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> プロパティを設定します。 ヘッダーセクションの内容は、<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> プロパティによって制御されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.DataList> コントロールにヘッダーセクションを表示する方法を示します。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 列挙値のいずれか。</param>
        <param name="repeatIndex">リスト コントロール内の項目のインデックス。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />」をご覧ください。</summary>
        <returns>リスト コントロール内の指定したインデックス位置にある指定した項目の型のスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataList> のインスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />」をご覧ください。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataList> のインスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />」をご覧ください。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Web.UI.WebControls.DataList> インスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />」をご覧ください。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataList> のインスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">項目の種類。</param>
        <param name="repeatIndex">項目のインデックス。</param>
        <param name="repeatInfo">項目のレンダリングに使用する情報。</param>
        <param name="writer">項目のレンダリングに使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataList> のインスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IRepeatInfoUser::RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />」をご覧ください。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataList> のインスタンスが <xref:System.Web.UI.WebControls.IRepeatInfoUser> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールを表示するために使用する HTML タグを取得します。</summary>
        <value><see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> が <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> に設定されている場合は <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" /> タグを返します。それ以外の場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> タグを返します。 既定では、 <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList> コントロールに関連付けられている <xref:System.Web.UI.HtmlTextWriterTag> 値を確認するには、<xref:System.Web.UI.WebControls.DataList.TagKey%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.DataList.TagKey%2A> プロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> コントロールに対するビューステートの変更を追跡し、コントロールの <see cref="P:System.Web.UI.Control.ViewState" /> プロパティに保存できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> メソッドは、コントロールのビューステートの一部として、コントロールへの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とビューステートのサンプル</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> コントロールの項目に対して <see cref="T:System.Web.UI.WebControls.DataList" /> ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントは、項目の [`Update`] ボタンがクリックされると発生します。  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントの一般的なハンドラーによってデータが更新され、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> プロパティが `-1` に設定され (項目の選択が解除されます)、データが <xref:System.Web.UI.WebControls.DataList> コントロールに再バインドされます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
 イベントの処理の詳細については、「[方法: Web フォームアプリケーションでイベントを使用する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.DataList.UpdateCommand> イベントのハンドラーを指定し、コーディングする方法を示しています。 [`Update`] ボタンをクリックしたときにユーザーが入力した新しい値を使用して、<xref:System.Web.UI.WebControls.DataList> コントロールで選択した項目を更新できます。  
  
> [!NOTE]
>  次のコードサンプルでは、単一ファイルのコードモデルを使用して、分離コードファイルに直接コピーした場合、正しく機能しない可能性があります。 このコードサンプルは、.aspx 拡張子を持つ空のテキストファイルにコピーする必要があります。 Web フォームコードモデルの詳細については、「 [ASP.NET Web Forms Page Code model](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">方法 : Web フォーム アプリケーションでイベントを利用する</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET Web ページコードモデル</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> コマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Update` コマンド名を表すには、<xref:System.Web.UI.WebControls.DataList.UpdateCommandName> フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>
