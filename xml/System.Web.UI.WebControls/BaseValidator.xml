<Type Name="BaseValidator" FullName="System.Web.UI.WebControls.BaseValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abefcf7fb7aaff5a65a7e953df130494ea4268bb" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77244851" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseValidator : System.Web.UI.WebControls.Label, System.Web.UI.IValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseValidator extends System.Web.UI.WebControls.Label implements class System.Web.UI.IValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseValidator&#xA;Inherits Label&#xA;Implements IValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseValidator abstract : System::Web::UI::WebControls::Label, System::Web::UI::IValidator" />
  <TypeSignature Language="F#" Value="type BaseValidator = class&#xA;    inherit Label&#xA;    interface IValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IValidator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ErrorMessage")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>検証コントロールのための抽象基底クラスとして使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator> クラスは、すべての検証コントロールの中核となる実装を提供します。 検証コントロールは、関連付けられた入力コントロールでユーザー入力を検証するために使用されます。 検証に失敗した値をユーザーが入力すると、検証コントロールによってエラーメッセージが表示されます。 検証コントロールは入力コントロールから分離されているため、入力コントロールを基準として、ページ上の任意の場所にエラーメッセージを配置できます。 ASP.NET は、特定の種類の検証を実行する複数の検証コントロールを提供します。 次の表では、これらのコントロールについて説明します。

|検証コントロール|説明|
|------------------------|-----------------|
|<xref:System.Web.UI.WebControls.CompareValidator>|<xref:System.Web.UI.WebControls.CompareValidator.Operator%2A?displayProperty=nameWithType> プロパティを <xref:System.Web.UI.WebControls.ValidationCompareOperator.DataTypeCheck?displayProperty=nameWithType>に設定することによって、別の入力コントロールに入力された値、定数値、または適切なデータ型に対して値を検証します。|
|<xref:System.Web.UI.WebControls.CustomValidator>|ユーザー指定のカスタム検証ルーチンを使用して値を検証します。|
|<xref:System.Web.UI.WebControls.RangeValidator>|値が値の範囲内にあるかどうかを検証します。|
|<xref:System.Web.UI.WebControls.RegularExpressionValidator>|正規表現を使用して値を検証します。|
|<xref:System.Web.UI.WebControls.RequiredFieldValidator>|必須フィールドに値が入力されたことを検証します。|

 検証コントロールは、サーバー上の関連付けられている入力コントロールを常に検証します。 また、検証コントロールには、スクリプト対応のブラウザー (Microsoft Internet Explorer バージョン4.0 以降など) がクライアントで検証を実行できるようにする、完全なクライアント側実装もあります。 クライアント側の検証では、サーバーに送信される前にユーザー入力をチェックすることにより、検証プロセスを強化します。 これにより、フォームが送信される前にクライアントでエラーが検出されるため、サーバー側の検証に必要な情報のラウンドトリップが回避されます。

 複数の検証コントロールを個々の入力コントロールと共に使用して、さまざまな条件を検証できます。 たとえば、<xref:System.Web.UI.WebControls.TextBox> コントロールに複数の検証コントロールを適用できます。 <xref:System.Web.UI.WebControls.RangeValidator> コントロールを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールに入力された値がセットの範囲内にあることを確認し、ユーザーが値を入力できるように <xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールを使用できます。

 ASP.NET には、サーバーにポストバックできるコントロールが多数用意されています。 これらのコントロールのいずれかの `CausesValidation` プロパティが `true`に設定されている場合、コントロールがサーバーにポストバックされるときに検証が実行されます。 次のコントロールには、サーバーにポストバックする機能があります。

-   <xref:System.Web.UI.WebControls.BulletedList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.Button?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ImageButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.LinkButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

> [!NOTE]
>  これらのコントロールの一部は、`AutoPostBack` プロパティが `true`に設定されている場合にのみサーバーにポストバックされます。

 これらのコントロールには `ValidationGroup` のプロパティがあり、このプロパティを設定すると、コントロールがサーバーへのポストバックをトリガーしたときに、指定したグループ内の検証コントロールのみが検証されます。 検証コントロールをグループ化するには、各検証コントロールの <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> プロパティを同じ値に設定します。

 入力コントロールを検証コントロールに関連付けるには、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティを使用します。 検証が失敗したときに検証コントロールに表示するテキストを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.ValidationSummary> コントロールを使用して、ページで検証に失敗したすべてのコントロールの概要を表示することもできます。 <xref:System.Web.UI.WebControls.ValidationSummary> コントロールに表示するテキストを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを設定せずに <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを設定した場合は、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティの値も検証コントロールに表示されます。

 検証コントロールを使用する場合は、処理を実行する前に、常にサーバー側の検証の結果を確認する必要があります。 ポストバック後、イベントメソッドが呼び出される前に、ページはバリデーターコントロールを呼び出し、結果を <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> プロパティに集計します。 (`Validate` メソッドを使用して、バリデーターコントロールを明示的に呼び出すこともできます)。独自のコードでは、入力を処理する前に、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> プロパティが `true` を返すことを確認する必要があります。 検証チェックに失敗した場合、スクリプト対応のブラウザーでもクライアントでポストバックが発生しない可能性がありますが、検証済みデータを処理する前に、サーバーコード内の <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> も確認する必要があります。

 また、手動で検証を実行することもできます。 ページのすべての検証コントロールを検証するには、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを使用します。 個々の検証コントロールは、コントロールの <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドを使用して検証できます。

> [!NOTE]
>  `Page_Load` メソッドで <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> プロパティを使用する場合は、まず <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを明示的に呼び出す必要があります。 検証は、ページの <xref:System.Web.UI.Control.Load?displayProperty=nameWithType> イベントの後、`Click` または `Command` イベントのイベントハンドラーの前に行われるため、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドが呼び出されるまで、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> プロパティは更新されません。 別の方法として、`Page_Load` メソッドの代わりに、`Click` イベントまたは `Command` イベントのイベントハンドラーにコードを配置することもできます。

 すべての Web サーバーコントロールで検証コントロールがサポートされるわけではありません。 検証コントロールを使用して検証できる標準コントロールは次のとおりです。

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.FileUpload?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=nameWithType>

> [!NOTE]
>  入力コントロールを検証するには、<xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=nameWithType> 属性をコントロールに適用する必要があります。

> [!NOTE]
>  <xref:System.Web.UI.UpdatePanel> コントロール内の <xref:System.Web.UI.WebControls.BaseValidator> から派生した検証コントロールを使用する場合は、検証コントロールとそれが関連付けられているコントロールが同じパネル内にあることを確認してください。 部分ページ更新に <xref:System.Web.UI.UpdatePanel> コントロールを使用する方法の詳細については、「[部分ページレンダリングの概要](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))」を参照してください。

 検証が失敗した場合は、[<xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A>] プロパティを `true`に設定して、関連付けられている入力コントロールにフォーカスを設定できます。

 <xref:System.Web.UI.WebControls.BaseValidator>のインスタンスの初期プロパティ値の一覧については、<xref:System.Web.UI.WebControls.BaseValidator.%23ctor%2A> コンストラクターを参照してください。

## <a name="accessibility"></a>アクセシビリティ
 ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))と[ASP.NET のコントロールとアクセシビリティ](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。



## Examples
 次のコード例は、複数の検証コントロールを使用して、ユーザーが <xref:System.Web.UI.WebControls.TextBox> コントロールに有効な値を入力することを確認する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BaseValidator" /> クラスから継承する場合は、次のメンバーをオーバーライドする必要があります: <see cref="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" />。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.CustomValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
    <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BaseValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターは直接呼び出されません。 このクラスを継承する検証コントロールは、独自のコンストラクターからこのコンストラクターを呼び出して、基本プロパティを初期化できます。

 次の表に、<xref:System.Web.UI.WebControls.BaseValidator>のインスタンスのプロパティの初期値を示します。

|プロパティ|初期値|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>|`true`|
|<xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A>|<xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType>|
|<xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A>|`true`|
|<xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A>|`false`|

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RangeValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.RequiredFieldValidator.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールに表示する必要のある HTML 属性およびスタイルを、指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender%2A> メソッドは、コントロールの HTML タグにコントロールの属性を表示するために使用されます。 通常、このメソッドは、派生クラスのコントロール開発者によってオーバーライドされ、コントロールの <xref:System.Web.UI.HtmlTextWriter> 出力ストリームに適切な属性とスタイルを挿入します。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> メソッドをオーバーライドする場合は、必ず基底クラスの対応するメソッドを呼び出してください。 それ以外の場合、基底クラスに含まれる属性はレンダリングされません。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedControlID">
      <MemberSignature Language="C#" Value="public override string AssociatedControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.AssociatedControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AssociatedControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssociatedControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedControlID : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.AssociatedControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティはサポートされていません。</summary>
        <value>このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティはサポートされていません。 このプロパティは、基本 <xref:System.Web.UI.WebControls.Label> クラスでのみサポートされています。

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このプロパティを設定しようとしました。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Label.AssociatedControlID" />
      </Docs>
    </Member>
    <Member MemberName="CheckControlValidationProperty">
      <MemberSignature Language="C#" Value="protected void CheckControlValidationProperty (string name, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckControlValidationProperty(string name, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckControlValidationProperty (name As String, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckControlValidationProperty(System::String ^ name, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.CheckControlValidationProperty : string * string -&gt; unit" Usage="baseValidator.CheckControlValidationProperty (name, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">検証対象となるコントロール。</param>
        <param name="propertyName">このメソッドを使用して例外がスローされた場合に、例外の原因を説明する追加テキスト。</param>
        <summary>指定されたコントロールがページにあるかどうか、および指定されたコントロールに検証プロパティが含まれているかどうかを検査します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty%2A> メソッドは、指定されたコントロールがページ上にあり、検証プロパティが含まれているかどうかを確認するために、主に <xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A> メソッドによって使用されるヘルパーメソッドです。 このメソッドは、結果を報告する値を返しません。 代わりに、検証が失敗したときに例外がスローされます。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定したコントロールが見つかりません。

または

指定したコントロールには、関連付けられている <see cref="T:System.Web.UI.ValidationPropertyAttribute" /> 属性がないため、検証コントロールで検証できません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected virtual bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="abstract member ControlPropertiesValid : unit -&gt; bool&#xA;override this.ControlPropertiesValid : unit -&gt; bool" Usage="baseValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定されたコントロールが有効なコントロールであるかどうかを判断します。</summary>
        <returns><see langword="true" /> で指定されたコントロールが有効なコントロールである場合は <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A> メソッドは、<xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A> プロパティによって、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティに有効な入力コントロールが含まれているかどうかを判断するために主に使用されるヘルパーメソッドです。 有効な入力コントロールにするには、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティをなんらかの値に設定し、その値が検証をサポートするページ上のコントロールである必要があります。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで値が指定されていません。

または

<see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定された入力コントロールがページ上にありません。

または

<see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定した入力コントロールには、関連付けられている <see cref="T:System.Web.UI.ValidationPropertyAttribute" /> 属性がないため、検証コントロールで検証できません。</exception>
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      </Docs>
    </Member>
    <Member MemberName="ControlToValidate">
      <MemberSignature Language="C#" Value="public string ControlToValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToValidate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToValidate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToValidate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToValidate : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証対象の入力コントロールを取得または設定します。</summary>
        <value>検証対象の入力コントロール。 既定値は <see cref="F:System.String.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証する入力コントロールを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティを使用します。 このプロパティは、<xref:System.Web.UI.WebControls.CustomValidator> コントロールを除くすべての検証コントロールの入力コントロールの ID に設定する必要があります。これは、空白のままにすることができます。 有効な入力コントロールを指定しない場合は、ページが表示されるときに例外がスローされます。 ID は、検証コントロールと同じコンテナー内のコントロールを参照する必要があります。 これは、同じページまたはユーザーコントロールに存在するか、テンプレートコントロールと同じテンプレートに含まれている必要があります。

 検証可能な標準コントロールは次のとおりです。

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.FileUpload?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=nameWithType>

> [!NOTE]
>  入力コントロールを検証するには、<xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=nameWithType> 属性をコントロールに適用する必要があります。

 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティによって指定された入力コントロールにテキストが含まれていない場合、<xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールを除くすべての検証コントロールは検証に合格します。 <xref:System.Web.UI.WebControls.CustomValidator> コントロールを使用している場合、クライアント側とサーバー側の検証関数はどちらも呼び出されません。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティを使用して、検証する入力コントロールを指定する方法を示しています。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.ValidationPropertyAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <altmember cref="T:System.Web.UI.WebControls.CustomValidator" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected virtual bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="abstract member DetermineRenderUplevel : unit -&gt; bool&#xA;override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>検証コントロールでクライアント側の検証を実行できるかどうかを判断します。</summary>
        <returns>検証コントロールでクライアント側の検証を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel%2A> メソッドは、主に、クライアントのブラウザーがクライアントスクリプトをサポートするかどうかを判断するために <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> プロパティによって使用されるヘルパー関数です。 このプロパティが `true`を返すようにするには、次の条件が満たされている必要があります。

-   ブラウザーでクライアントスクリプトが有効になっています。

-   <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> プロパティに格納されている <xref:System.Web.HttpBrowserCapabilitiesBase> オブジェクトの <xref:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion%2A> プロパティは、1以降です。

-   <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> プロパティに格納されている <xref:System.Web.HttpBrowserCapabilitiesBase> オブジェクトの <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> プロパティは1.2 以降です。

    > [!NOTE]
    >  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidatorDisplay Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidatorDisplay Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As ValidatorDisplay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidatorDisplay Display { System::Web::UI::WebControls::ValidatorDisplay get(); void set(System::Web::UI::WebControls::ValidatorDisplay value); };" />
      <MemberSignature Language="F#" Value="member this.Display : System.Web.UI.WebControls.ValidatorDisplay with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidatorDisplay</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証コントロールにエラー メッセージを表示するときの動作を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ValidatorDisplay" /> 値のいずれか 1 つです。 既定値は <see langword="Static" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証コントロールのエラーメッセージの表示動作を指定するには、<xref:System.Web.UI.WebControls.BaseValidator.Display%2A> プロパティを使用します。 次の表に、使用できるさまざまな値を示します。

|どのように表示されるか|説明|
|----------------------|-----------------|
|`None`|検証メッセージがインラインで表示されることはありません。|
|`Static`|検証メッセージの領域は、ページレイアウトで割り当てられます。|
|`Dynamic`|検証が失敗した場合、検証メッセージの領域はページに動的に追加されます。|

> [!NOTE]
>  表示の動作は、クライアント側の検証が実行されるかどうかによって異なります。 クライアント側の検証がアクティブでない場合 (ブラウザーでサポートされていないか、または <xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType> page ディレクティブまたは <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> プロパティを使用して無効にされているため)、`ValidatorDisplay.Static` と `ValidatorDisplay.Dynamic` は同じように動作します。エラーメッセージは、表示されている場合にのみ、領域を使います。 メッセージが表示されていないときにその領域を動的に割り当てる機能 (`ValidatorDisplay.Dynamic`) は、クライアント側の検証でのみ機能します。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.BaseValidator.Display%2A> プロパティを使用して、検証が失敗したときに検証メッセージの領域が Web ページに動的に追加されるように指定する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が、<see cref="T:System.Web.UI.WebControls.ValidatorDisplay" /> 値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidatorDisplay" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント側での検証を有効にするかどうかを示す値を取得または設定します。</summary>
        <value>クライアント側の検証が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> プロパティを使用して、クライアント側の検証を有効にするかどうかを指定します。

 検証コントロールは、常にサーバーで検証を実行します。 また、DHTML でサポートされているブラウザー (Microsoft Internet Explorer 4.0 以降など) がクライアントで検証を実行できるようにする、完全なクライアント側実装もあります。 クライアント側の検証では、サーバーに送信される前にユーザー入力をチェックすることにより、検証プロセスを強化します。 これにより、フォームが送信される前にクライアントでエラーが検出されるため、サーバー側の検証に必要な情報のラウンドトリップが回避されます。

 既定では、この値は `true`に設定されます。これにより、ブラウザーがサポートしている場合にクライアント側の検証が有効になります。 クライアント側の検証はコントロールごとに無効にすることができます。 これは、クライアントの動的更新でページのレイアウトに関する問題が発生した場合や、検証が行われる前に一部のサーバーコードを実行する場合に便利です。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> プロパティを使用してクライアント側の検証を無効にし、ランダムな数値をサーバーで生成できるようにする方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証コントロールを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>検証コントロールを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証コントロールを有効にするかどうかを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティを使用します。 このプロパティを `false`に設定することによって、検証コントロールを無効にすることができます。

 <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> または <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティを `false` に設定すると、検証が実行されなくなります。 これにより、<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティは常に `true`に評価されます。

 <xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティは、<xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> プロパティとは少し異なります。 検証コントロールの <xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType> プロパティが `true`に設定されていても、<xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティが [`false`] に設定されている場合、検証コントロールはクライアント側の検証に対して引き続き表示されますが、無効の状態になります。 その後、DHTML スクリプトを使用して、クライアントで検証コントロールを再び有効にすることができます。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティを使用して、サーバー側コードを使用して Web ページ上の検証コントロールを有効または無効にする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator.Enabled Example/VB/sourcevb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.BaseValidator.Enabled%2A> プロパティを使用して、クライアント側のコードを使用して Web ページ上の検証コントロールを有効または無効にする方法を示しています。

<!-- TODO: review snippet reference  [!CODE [Classic BaseValidator.Enabled Example2#1](Classic BaseValidator.Enabled Example2#1)]  -->

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IValidator.ErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証が失敗したときに <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示されるエラー メッセージのテキストを取得または設定します。</summary>
        <value>検証が失敗したときに <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示されるエラー メッセージ。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ValidationSummary> コントロールを使用する場合は、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを使用して、現在の検証コントロールの検証が失敗したときに <xref:System.Web.UI.WebControls.ValidationSummary> コントロールに表示するテキストを指定します。 検証コントロール自体に表示するテキストを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを設定せずに <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを設定した場合は、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティの値も検証コントロールに表示されます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> and [ASP.NET グローバリゼーション And ローカライゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ValidationSummary> コントロールと <xref:System.Web.UI.WebControls.RequiredFieldValidator> および <xref:System.Web.UI.WebControls.CompareValidator> コントロールに対して異なるメッセージを指定する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.Text" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected abstract bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="abstract member EvaluateIsValid : unit -&gt; bool" Usage="baseValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラス内でオーバーライドされた場合、このメソッドには、入力コントロールの値が有効かどうかを判断するコードが含まれます。</summary>
        <returns>入力コントロールの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティによって指定された入力コントロールの値が有効かどうかを確認します。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドは、入力コントロールの値が有効かどうかを返すために、派生クラスで実装する必要があります。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.Validate" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証が失敗したときに表示されるメッセージの色を取得または設定します。</summary>
        <value>検証が失敗したときに表示されるメッセージの色を表す <see cref="T:System.Drawing.Color" />。 既定では、 <see cref="P:System.Drawing.Color.Red" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証が失敗したときに検証コントロールに表示されるメッセージのカスタムテキストの色を指定するには、<xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A> プロパティを使用します。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A> プロパティを使用して、検証メッセージを青色で表示する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[Classic BaseValidator.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BaseValidator.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic BaseValidator.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BaseValidator.ForeColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="GetControlRenderID">
      <MemberSignature Language="C#" Value="protected string GetControlRenderID (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetControlRenderID(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetControlRenderID (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetControlRenderID(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetControlRenderID : string -&gt; string" Usage="baseValidator.GetControlRenderID name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">クライアント ID の取得元となるコントロールの名前。</param>
        <summary>指定したコントロールのクライアント ID を取得します。</summary>
        <returns>指定したコントロールのクライアント ID。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.GetControlRenderID%2A> メソッドを使用して、指定したコントロールのクライアント ID を取得します。 詳細については、<xref:System.Web.UI.Control.ClientID%2A> を参照してください。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="GetControlValidationValue">
      <MemberSignature Language="C#" Value="protected string GetControlValidationValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetControlValidationValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetControlValidationValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetControlValidationValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetControlValidationValue : string -&gt; string" Usage="baseValidator.GetControlValidationValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">値の取得対象となる入力コントロールの名前。</param>
        <summary>指定した入力コントロールに関連付けられている値を取得します。</summary>
        <returns>指定した入力コントロールに関連付けられている値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.GetControlValidationValue%2A> メソッドを使用して、コントロールの種類に関係なく、指定した入力コントロールに関連付けられている値を取得します。 たとえば、このメソッドを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールの値を取得したり、<xref:System.Web.UI.WebControls.ListBox> コントロールから選択した項目の値を取得したりできます。 指定したコントロールが見つからない場合は `null` が返されます。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetValidationProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetValidationProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetValidationProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetValidationProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetValidationProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.BaseValidator.GetValidationProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">取得対象となる検証プロパティのコントロールを表す <see cref="T:System.Object" />。</param>
        <summary>コントロールの検証プロパティが存在する場合に、そのプロパティを判断します。</summary>
        <returns>コントロールの検証プロパティを格納する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.GetValidationProperty%2A> メソッドは、指定された入力コントロールの検証プロパティを取得するヘルパー関数です。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="IsUnobtrusive">
      <MemberSignature Language="C#" Value="protected bool IsUnobtrusive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnobtrusive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.IsUnobtrusive" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsUnobtrusive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsUnobtrusive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnobtrusive : bool" Usage="System.Web.UI.WebControls.BaseValidator.IsUnobtrusive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが控え目な JavaScript を生成するかどうかを示す値を取得します。</summary>
        <value>コントロールが控え目な JavaScript を生成する場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティは、<xref:System.Web.UI.Page.UnobtrusiveValidationMode%2A> プロパティ値が <xref:System.Web.UI.UnobtrusiveValidationMode.None>の場合に `false` を返します。それ以外の場合、このプロパティは `true` を返します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.IsValid" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IValidator.IsValid</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられている入力コントロールの検証が成功したかどうかを示す値を取得または設定します。</summary>
        <value>関連付けられている入力コントロールの検証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティを使用して、関連付けられている入力コントロールが検証に合格するかどうかを判断します。

> [!CAUTION]
>  このプロパティの既定値は `true`であるため、検証を実行する前にこのプロパティに対してクエリを実行すると、`true` が返されます。 たとえば、ページの <xref:System.Web.UI.Control.Load?displayProperty=nameWithType> イベントでこのプロパティを使用しようとすると、このような状況が発生する可能性があります。

 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティは、<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドが呼び出された場合にのみ評価されます。 ページ上の各検証コントロールに対して <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドを個別に呼び出すことも、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを使用して一度にすべてのメソッドを呼び出すこともできます。 `CausesValidation` プロパティが `true` に設定されたボタンコントロールも、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを呼び出します。

> [!NOTE]
>  検証が行われた後に、このプロパティの値を手動で変更できます。 これにより、必要に応じて検証結果をオーバーライドできます。

 ページの [<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>] プロパティは `true` に設定されています。これは、ページ上の各検証コントロールの <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティも [`true`] に設定されている場合のみです。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティを使用して、関連付けられた入力コントロールが検証に合格するかどうかを判断する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[BaseValidatorIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseValidatorIsValid/CS/basevalidatorisvalidcs.aspx#1)]
 [!code-aspx-vb[BaseValidatorIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseValidatorIsValid/VB/basevalidatorisvalidvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="E:System.Web.UI.Control.Load" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.Validate" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="baseValidator.OnInit e" />
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、基本コントロールの <xref:System.Web.UI.Control.OnInit%2A> メソッドを呼び出すと、次の条件に該当する場合に <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティを <xref:System.Drawing.Color.Red%2A> に設定します。

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティがまだ設定されていません。

-   <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティは、`4.0`よりも前のバージョンの ASP.NET を示します。 既定では、ASP.NET 4 以降のバージョンの検証コントロールでは、エラーは赤で表示されません。 検証コントロールの外観を制御する方法の詳細については、「 [ASP.NET Web ページでのユーザー入力の検証](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。

 このメソッドは、ページに検証コントロールも登録します。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="baseValidator.OnPreRender e" />
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、クライアントブラウザーを確認し、レンダリングの前に互換性のために検証コントロールを構成するためにオーバーライドされています。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.BaseValidator.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="baseValidator.OnUnload e" />
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.Control.Unload" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、ページ上の検証コントロールの登録を解除するためにオーバーライドされました。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.BaseValidator.OnUnload%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.Control.Unload" />
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PropertiesValid">
      <MemberSignature Language="C#" Value="protected bool PropertiesValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertiesValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PropertiesValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool PropertiesValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesValid : bool" Usage="System.Web.UI.WebControls.BaseValidator.PropertiesValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定したコントロールが有効なコントロールかどうかを示す値を取得します。</summary>
        <value><see langword="true" /> で指定されたコントロールが有効なコントロールである場合は <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティに有効な入力コントロールが含まれているかどうかを確認するには、<xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A> プロパティを使用します。 有効な入力コントロールにするには、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティをページ上のコントロールに設定する必要があります。

> [!NOTE]
>  このプロパティは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで値が指定されていません。

または

<see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定された入力コントロールがページ上にありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterValidatorCommonScript">
      <MemberSignature Language="C#" Value="protected void RegisterValidatorCommonScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterValidatorCommonScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterValidatorCommonScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterValidatorCommonScript();" />
      <MemberSignature Language="F#" Value="member this.RegisterValidatorCommonScript : unit -&gt; unit" Usage="baseValidator.RegisterValidatorCommonScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアント側での検証用のコードをページに登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript%2A> メソッドを使用して、クライアント側の検証を実行するためにページにコードを登録します。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの <see cref="E:System.Web.UI.Control.PreRender" /> イベントハンドラーでこのメソッドを呼び出して、クライアント側の検証を実行するコードを登録します。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="RegisterValidatorDeclaration">
      <MemberSignature Language="C#" Value="protected virtual void RegisterValidatorDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterValidatorDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterValidatorDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterValidatorDeclaration();" />
      <MemberSignature Language="F#" Value="abstract member RegisterValidatorDeclaration : unit -&gt; unit&#xA;override this.RegisterValidatorDeclaration : unit -&gt; unit" Usage="baseValidator.RegisterValidatorDeclaration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>配列名 <see langword="Page_Validators" /> を使用して、ECMAScript 配列宣言を登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration%2A> メソッドを使用して、`Page_Validators`配列名を使用して ECMAScript 配列宣言を登録します。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseValidator.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納する <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントに コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.Render%2A> メソッドは、検証コントロールの HTML マークアップを生成するために使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderUplevel">
      <MemberSignature Language="C#" Value="protected bool RenderUplevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderUplevel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RenderUplevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RenderUplevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderUplevel : bool" Usage="System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントのブラウザーが "上位レベル" の表示機能をサポートしているかどうかを示す値を取得します。</summary>
        <value>ブラウザーが "上位レベル" の表示機能をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 クライアントのブラウザーが "上位レベル" の表示をサポートしているかどうかを判断するには、<xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> プロパティを使用します。 ブラウザーで "上位レベル" の表示をサポートするには、Microsoft Internet Explorer ドキュメントオブジェクトモデル (DOM) バージョン4以降および ECMAScript バージョン1.2 以降がサポートされている必要があります。

> [!NOTE]
>  このプロパティは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="SetFocusOnError">
      <MemberSignature Language="C#" Value="public bool SetFocusOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetFocusOnError" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.SetFocusOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property SetFocusOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetFocusOnError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetFocusOnError : bool with get, set" Usage="System.Web.UI.WebControls.BaseValidator.SetFocusOnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証が失敗したときに <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> プロパティで指定されたコントロールにフォーカスが設定されるかどうかを示す値を取得または設定します。</summary>
        <value>検証が失敗したときに <see langword="true" /> プロパティで指定されたコントロールにフォーカスを設定する場合は <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 この検証コントロールが失敗したときに、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティによって指定されたコントロールにフォーカスを自動的に設定するかどうかを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A> プロパティを使用します。 これにより、ユーザーは適切なコントロールをすばやく更新できます。

 複数の検証コントロールが失敗し、このプロパティが `true`に設定されている場合、最初の検証コントロールの <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> プロパティで指定されたコントロールがフォーカスを受け取ります。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証が失敗したときに検証コントロール内に表示されるテキストを取得または設定します。</summary>
        <value>検証が失敗したときに検証コントロール内に表示されるテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証が失敗したときに検証コントロールに表示するテキストを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.ValidationSummary> コントロールを使用して、ページで検証に失敗したすべてのコントロールの概要を表示することもできます。 <xref:System.Web.UI.WebControls.ValidationSummary> コントロールに表示するテキストを指定するには、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> プロパティを設定せずに <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティを設定した場合は、<xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティの値も検証コントロールに表示されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseValidator.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="baseValidator.Validate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IValidator.Validate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられている入力コントロールの検証を実行し、<see cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" /> プロパティを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドを使用して、関連付けられている入力コントロールに対して検証を実行します。 このメソッドを使用すると、入力コントロールに対してプログラムで検証を実行できます。 <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> プロパティは、検証結果と共に自動的に更新されます。



## Examples
 派生クラスで使用される <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドの例については、「<xref:System.Web.UI.WebControls.CompareValidator> クラスの概要」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
        <altmember cref="M:System.Web.UI.WebControls.BaseValidator.EvaluateIsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この検証コントロールが属する検証グループの名前を取得または設定します。</summary>
        <value>この検証コントロールが属する検証グループの名前。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET には、サーバーにポストバックできるコントロールが多数用意されています。 これらのコントロールのいずれかの `CausesValidation` プロパティが `true`に設定されている場合、コントロールがサーバーにポストバックされるときに検証が実行されます。 次のコントロールには、サーバーにポストバックする機能があります。

-   <xref:System.Web.UI.WebControls.BulletedList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.Button?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.DropDownList?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ImageButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.LinkButton?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.ListBox?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=nameWithType>

-   <xref:System.Web.UI.WebControls.TextBox?displayProperty=nameWithType>

> [!NOTE]
>  これらのコントロールの一部は、`AutoPostBack` プロパティが `true`に設定されている場合にのみサーバーにポストバックされます。

 これらのコントロールには `ValidationGroup` のプロパティがあり、このプロパティを設定すると、コントロールがサーバーへのポストバックをトリガーしたときに、指定したグループ内の検証コントロールのみが検証されます。 検証コントロールを検証グループに割り当てるには、<xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> プロパティを使用します。 <xref:System.Web.UI.Page> クラスは、<xref:System.Web.UI.Page.GetValidators%2A> メソッドと、<xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> 入力パラメーターを受け取る <xref:System.Web.UI.Page.Validate%2A> メソッドも公開します。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A> プロパティを使用して、検証コントロールをグループに割り当てる方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[BaseValidatorValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseValidatorValidationGroup/CS/BaseValidatorValidationGroupcs.aspx#1)]
 [!code-aspx-vb[BaseValidatorValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseValidatorValidationGroup/VB/BaseValidatorValidationGroupvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.ValidationGroup" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="M:System.Web.UI.Page.GetValidators(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
