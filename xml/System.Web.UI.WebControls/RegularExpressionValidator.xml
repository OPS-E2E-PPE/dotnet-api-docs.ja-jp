<Type Name="RegularExpressionValidator" FullName="System.Web.UI.WebControls.RegularExpressionValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="998f13f301fd0a4ea6167dd42ac8d4710623e94b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78762136" /></Metadata><TypeSignature Language="C#" Value="public class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RegularExpressionValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionValidator : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type RegularExpressionValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RegularExpressionValidator runat="server" ErrorMessage="RegularExpressionValidator"&gt;&lt;/{0}:RegularExpressionValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RegularExpressionValidator runat=server ErrorMessage="RegularExpressionValidator"&gt;&lt;/{0}:RegularExpressionValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7076b-101">関連付けられた入力コントロールの値が正規表現で指定されたパターンに一致するかどうかを検証します。</span><span class="sxs-lookup"><span data-stu-id="7076b-101">Validates whether the value of an associated input control matches the pattern specified by a regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7076b-102"><xref:System.Web.UI.WebControls.RegularExpressionValidator> コントロールは、入力コントロールの値が正規表現で定義されているパターンと一致するかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="7076b-102">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> control checks whether the value of an input control matches a pattern defined by a regular expression.</span></span> <span data-ttu-id="7076b-103">この種類の検証では、電子メールアドレス、電話番号、郵便番号など、文字の予測可能なシーケンスを確認できます。</span><span class="sxs-lookup"><span data-stu-id="7076b-103">This type of validation allows you to check for predictable sequences of characters, such as those in email addresses, telephone numbers, and postal codes.</span></span>

> [!NOTE]
>  <span data-ttu-id="7076b-104">入力コントロールが空の場合、検証は成功します。</span><span class="sxs-lookup"><span data-stu-id="7076b-104">Validation succeeds if the input control is empty.</span></span> <span data-ttu-id="7076b-105">関連付けられている入力コントロールに値が必要な場合は、<xref:System.Web.UI.WebControls.RegularExpressionValidator> コントロールに加えて、<xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="7076b-105">If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control.</span></span>

 <span data-ttu-id="7076b-106">サーバー側とクライアント側の両方の検証は、ブラウザーがクライアント側の検証をサポートしていない場合、またはクライアント側の検証が明示的に無効になっている場合 (<xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> プロパティを `false`に設定した場合) には実行されません。</span><span class="sxs-lookup"><span data-stu-id="7076b-106">Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).</span></span>

 <span data-ttu-id="7076b-107">正規表現の検証の実装は、クライアント上ではサーバーとは少し異なります。</span><span class="sxs-lookup"><span data-stu-id="7076b-107">The regular-expression validation implementation is slightly different on the client than on the server.</span></span> <span data-ttu-id="7076b-108">クライアントでは、JScript の正規表現の構文が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-108">On the client, JScript regular-expression syntax is used.</span></span> <span data-ttu-id="7076b-109">サーバーでは、<xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 構文が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-109">On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax is used.</span></span> <span data-ttu-id="7076b-110">JScript の正規表現構文は <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 構文のサブセットであるため、クライアントとサーバーの両方で同じ結果を得るために、JScript の正規表現構文を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7076b-110">Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.</span></span>

> [!NOTE]
>  <span data-ttu-id="7076b-111"><xref:System.Web.UI.UpdatePanel> コントロール内で <xref:System.Web.UI.WebControls.RegularExpressionValidator> コントロールを使用する場合は、検証コントロールとそれが関連付けられているコントロールが同じパネル内にあることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-111">When you use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel.</span></span> <span data-ttu-id="7076b-112">部分ページ更新に <xref:System.Web.UI.UpdatePanel> コントロールを使用する方法の詳細については、「[部分ページレンダリングの概要](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-112">For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).</span></span>

 <span data-ttu-id="7076b-113">検証コントロールの詳細については、「<xref:System.Web.UI.WebControls.BaseValidator>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-113">For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.</span></span> <span data-ttu-id="7076b-114">正規表現の詳細については、「 [.NET Framework 正規表現](~/docs/standard/base-types/regular-expressions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-114">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>

## <a name="accessibility"></a><span data-ttu-id="7076b-115">ユーザー補助</span><span class="sxs-lookup"><span data-stu-id="7076b-115">Accessibility</span></span>
 <span data-ttu-id="7076b-116">ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))と[ASP.NET のコントロールとアクセシビリティ](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-116">For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) and [ASP.NET Controls and Accessibility](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140)).</span></span>



## Examples
 <span data-ttu-id="7076b-117">次の例では、<xref:System.Web.UI.WebControls.RegularExpressionValidator> コントロールを使用して、5桁の郵便番号を検証する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7076b-117">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control to validate a five-digit postal code.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7076b-118">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7076b-118">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7076b-119">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-119">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7076b-120">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-120">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
    <related type="Article" href="~/docs/standard/base-types/regular-expressions.md"><span data-ttu-id="7076b-121">.NET Framework の正規表現</span><span class="sxs-lookup"><span data-stu-id="7076b-121">.NET Framework Regular Expressions</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7076b-122"><see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7076b-122">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="regularExpressionValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="7076b-123">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7076b-123">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span></span></param>
        <summary><span data-ttu-id="7076b-124">コントロールに表示する必要のある HTML 属性およびスタイルを、指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="7076b-124">Adds to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object the HTML attributes and styles that need to be rendered for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="7076b-125">次のコード例は、<xref:System.Web.UI.WebControls.RegularExpressionValidator> のエラーメッセージが常に太字で表示されるように、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> メソッドをオーバーライドする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7076b-125">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> method in a custom server control so that the <xref:System.Web.UI.WebControls.RegularExpressionValidator> error message always displays as bold.</span></span>

 [!code-csharp[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorender.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorender.vb#2)]

 <span data-ttu-id="7076b-126">次のコード例は、前の例で定義した `CustomRegularExpressionValidatorAddAttributesToRender` コントロールを Web フォームページに使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7076b-126">The following code example demonstrates how to use the use the `CustomRegularExpressionValidatorAddAttributesToRender` control, defined in the preceding example, on a Web Forms page.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7076b-127">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7076b-127">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7076b-128">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-128">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7076b-129">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-129">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorendervb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="regularExpressionValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7076b-130">入力コントロールの値が有効であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="7076b-130">Indicates whether the value in the input control is valid.</span></span></summary>
        <returns><span data-ttu-id="7076b-131">入力コントロールの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7076b-131"><see langword="true" /> if the value in the input control is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="7076b-132">次のコード例では、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.RegularExpressionValidator>内の一致文字列に対して常に値が式と照合されるようにする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7076b-132">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> method in a custom server control so that it always checks the value against the expression for a match in a <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7076b-133">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7076b-133">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7076b-134">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-134">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7076b-135">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-135">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalid.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalid.vb#2)]

 <span data-ttu-id="7076b-136">次のコード例は、前の例で定義した `CustomRegularExpressionValidatorEvaluateIsValid` コントロールを Web フォームページに使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7076b-136">The following code example demonstrates how to use the `CustomRegularExpressionValidatorEvaluateIsValid` control, defined in the preceding example, on a Web Forms page.</span></span>

 [!code-aspx-csharp[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalidvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public int? MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MatchTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : Nullable&lt;int&gt; with get, set" Usage="System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7076b-137">操作がタイムアウトする前に 1 つの一致操作を実行する最大時間間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7076b-137">Gets or set the maximum time interval to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="7076b-138">操作がタイムアウトする前に 1 つの一致操作を実行する最大時間間隔。</span><span class="sxs-lookup"><span data-stu-id="7076b-138">The maximum time interval to execute a single matching operation before the operation times out.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationExpression">
      <MemberSignature Language="C#" Value="public string ValidationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationExpression : string with get, set" Usage="System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7076b-139">フィールドの検証に使用するパターンを決定する正規表現を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7076b-139">Gets or sets the regular expression that determines the pattern used to validate a field.</span></span></summary>
        <value><span data-ttu-id="7076b-140">フィールドの書式の検証に使用する正規表現を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="7076b-140">A string that specifies the regular expression used to validate a field for format.</span></span> <span data-ttu-id="7076b-141">既定値は、<see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="7076b-141">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7076b-142">このプロパティを使用して、社会保障番号、電子メールアドレス、電話番号、郵便番号など、文字の予測可能なシーケンスを確認するために使用するパターンを指定します。</span><span class="sxs-lookup"><span data-stu-id="7076b-142">Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, email addresses, telephone numbers, and postal codes.</span></span>

 <span data-ttu-id="7076b-143"><xref:System.Web.UI.WebControls.RegularExpressionValidator> では、空の文字列の検証は実行されません。</span><span class="sxs-lookup"><span data-stu-id="7076b-143">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string.</span></span> <span data-ttu-id="7076b-144">テストする文字列が空の場合は、<xref:System.Web.UI.WebControls.RequiredFieldValidator> と <xref:System.Web.UI.WebControls.RegularExpressionValidator>を使用します。</span><span class="sxs-lookup"><span data-stu-id="7076b-144">If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>

 <span data-ttu-id="7076b-145">正規表現の詳細については、「 [.NET Framework 正規表現](~/docs/standard/base-types/regular-expressions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-145">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>

> [!NOTE]
>  <span data-ttu-id="7076b-146">パターンマッチングのコンストラクトで問題が発生した場合は、"^ (" および ") $" を使用して式をラップしてみてください。</span><span class="sxs-lookup"><span data-stu-id="7076b-146">If you experience problems with pattern matching constructs, try wrapping the expression with "^(" and ")$".</span></span> <span data-ttu-id="7076b-147">たとえば、"a ab&#124;" は "^ (a&#124;ab) $" になります。</span><span class="sxs-lookup"><span data-stu-id="7076b-147">For example, "a&#124;ab" becomes "^(a&#124;ab)$".</span></span>

 <span data-ttu-id="7076b-148">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="7076b-148">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="7076b-149">詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-149">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="7076b-150">次の例では、<xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> プロパティを使用して、5桁の数字を持つフィールドを検証する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7076b-150">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> property to validate a field with five numeric digits.</span></span> <span data-ttu-id="7076b-151"><xref:System.Web.UI.WebControls.Button> コントロールがクリックされると、結果の <xref:System.Web.UI.WebControls.Button.OnClick%2A> イベントハンドラーは <xref:System.Web.UI.Page> の <xref:System.Web.UI.Page.IsValid%2A> プロパティをチェックして、<xref:System.Web.UI.WebControls.TextBox> 内のテキストが正規表現に適合するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7076b-151">When the <xref:System.Web.UI.WebControls.Button> control is clicked, the resulting <xref:System.Web.UI.WebControls.Button.OnClick%2A> event handler checks the <xref:System.Web.UI.Page.IsValid%2A> property of the <xref:System.Web.UI.Page> to determine whether the text in the <xref:System.Web.UI.WebControls.TextBox> satisfies the regular expression.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7076b-152">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7076b-152">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7076b-153">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7076b-153">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7076b-154">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7076b-154">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7076b-155">正規表現の書式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7076b-155">The regular expression is not properly formed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
