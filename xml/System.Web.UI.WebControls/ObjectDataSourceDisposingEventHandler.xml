<Type Name="ObjectDataSourceDisposingEventHandler" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="479b480f5c6cef6e071f87497a64f4b96ae14c9f" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83949428" /></Metadata><TypeSignature Language="C#" Value="public delegate void ObjectDataSourceDisposingEventHandler(object sender, ObjectDataSourceDisposingEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectDataSourceDisposingEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ObjectDataSourceDisposingEventHandler(sender As Object, e As ObjectDataSourceDisposingEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ObjectDataSourceDisposingEventHandler(System::Object ^ sender, ObjectDataSourceDisposingEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventHandler = delegate of obj * ObjectDataSourceDisposingEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="24e37-101">イベントのソースである <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</span><span class="sxs-lookup"><span data-stu-id="24e37-101">The source of the event, the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</span></span></param>
    <param name="e"><span data-ttu-id="24e37-102">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="24e37-102">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="24e37-103"><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> コントロールの <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="24e37-103">Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> event of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24e37-104"><xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="24e37-104">When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="24e37-105">イベント ハンドラーにイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="24e37-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="24e37-106">イベント ハンドラーは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="24e37-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="24e37-107">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="24e37-107">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24e37-108">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="24e37-108">This section contains two code examples.</span></span> <span data-ttu-id="24e37-109">最初のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="24e37-109">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="24e37-110">2番目のコード例では、最初のコード例で使用している中間層ビジネスオブジェクトの例を示します。</span><span class="sxs-lookup"><span data-stu-id="24e37-110">The second code example provides an example middle-tier business object that the first code example uses.</span></span>  
  
 <span data-ttu-id="24e37-111">次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="24e37-111">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="24e37-112">Web ページで実行されるすべてのデータ操作に対して、(時間またはリソースの観点から) 非常に高価なビジネスオブジェクトを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="24e37-112">You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</span></span> <span data-ttu-id="24e37-113">高価なオブジェクトを操作する方法の1つとして、そのインスタンスを1回作成した後、データ操作ごとに作成して破棄するのではなく、後続の操作用にキャッシュする方法があります。</span><span class="sxs-lookup"><span data-stu-id="24e37-113">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span> <span data-ttu-id="24e37-114">この例は、このパターンを示しています。</span><span class="sxs-lookup"><span data-stu-id="24e37-114">This example demonstrates this pattern.</span></span> <span data-ttu-id="24e37-115"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理することで、最初にオブジェクトのキャッシュをチェックし、インスタンスがまだキャッシュされていない場合にのみ、インスタンスを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="24e37-115">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache first for an object, and then create an instance, only if one is not already cached.</span></span> <span data-ttu-id="24e37-116">次に、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理して、ビジネスオブジェクトを破棄するのではなく、将来使用するためにキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="24e37-116">Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="24e37-117">この例では、<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> クラスの <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> プロパティを `true`に設定して、インスタンスで <xref:System.IDisposable.Dispose%2A> を呼び出さないように <xref:System.Web.UI.WebControls.ObjectDataSource> に指示します。</span><span class="sxs-lookup"><span data-stu-id="24e37-117">In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 <span data-ttu-id="24e37-118">次のコード例では、前のコード例で使用している中間層ビジネスオブジェクトの例を示します。</span><span class="sxs-lookup"><span data-stu-id="24e37-118">The following code example provides an example middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="24e37-119">このコード例は、`EmployeeLogic` クラスによって定義される基本的なビジネスオブジェクトで構成されています。これは、状態を維持し、ビジネスロジックをカプセル化するクラスです。</span><span class="sxs-lookup"><span data-stu-id="24e37-119">The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic.</span></span> <span data-ttu-id="24e37-120">完全な作業例を実行するには、このコードをライブラリとしてコンパイルし、ASP ページからこれらのクラスを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24e37-120">For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
  </Docs>
</Type>
