<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8908247ae8714939e2af48491b856334f089179" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106512" /></Metadata><TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アプリケーション変数、ユーザー ID とユーザー選択、および他のデータにバインドするためにデータ ソース コントロールで使用する機構を提供します。 ASP.NET のすべてのパラメーター型の基底クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> クラスは、パラメーター化された SQL クエリのパラメーター、フィルター式、または ASP.NET データソースコントロールがデータを選択、フィルター処理、または変更するために使用するビジネスオブジェクトメソッド呼び出しのパラメーターを表します。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、<xref:System.Web.UI.WebControls.ParameterCollection> オブジェクトに含まれています。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは実行時に評価され、データを操作するためにデータソースコントロールによって使用される任意のメソッドに、それらが表す変数の値をバインドします。  
  
 データソースとデータバインドコントロールを使用して <xref:System.Web.UI.WebControls.Parameter> から派生したクラスを使用して、Web ベースのデータアプリケーションを構築します。 これらのパラメータークラスは、Web アプリケーションで検出された特定の種類の値を SQL クエリ文字列、ビジネスオブジェクトメソッドのパラメーターなどのプレースホルダーにバインドするために、データソースコントロールによって使用されます。 次の表に、ASP.NET に含まれるパラメーターの型を示します。  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Web サーバーコントロールの任意のパブリックプロパティをバインドします。|  
|<xref:System.Web.UI.WebControls.FormParameter>|フォームフィールドをバインドします。|  
|<xref:System.Web.UI.WebControls.SessionParameter>|セッション状態フィールドをバインドします。|  
|<xref:System.Web.UI.WebControls.RouteParameter>|ルート URL パラメーターをバインドします。|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Cookie フィールドをバインドします。|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|クエリ文字列パラメーターをバインドします。|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|プロファイルフィールドをバインドします。|  
  
 独自のカスタムパラメーター型を実装する場合は、基本 <xref:System.Web.UI.WebControls.Parameter> クラスを拡張します。  
  
 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは非常に単純です。 <xref:System.Web.UI.WebControls.Parameter.Name%2A> と <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティを持ち、宣言によって表現でき、複数の HTTP 要求にわたって状態を追跡できます。 パラメーターが値にバインドされていても、値が実行時に `null` に評価される場合、すべてのパラメーターは <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティをサポートします。  
  
 データソースコントロールで <xref:System.Web.UI.WebControls.Parameter> オブジェクトのコレクションを使用すると、コレクション内での順序が重要になる場合があります。 パラメーターの使用方法の詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」および「 [ObjectDataSource コントロールでのパラメーター](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)の使用」を参照してください。  
  
   
  
## Examples  
 次の例では、SQL クエリの W`here` 句で <xref:System.Web.UI.WebControls.DropDownList> コントロールの選択された値を使用する方法を示します。 この例では、<xref:System.Web.UI.WebControls.ControlParameter> クラスから派生した <xref:System.Web.UI.WebControls.ControlParameter> クラスを使用します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 要素は、"@Title" という名前のパラメーターを持つクエリを定義します。ここで、`DropDownList1` の値を指定します。 <xref:System.Web.UI.WebControls.ControlParameter> 要素は、"@Title" プレースホルダーが `DropDownList1` コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティの値に置き換えられることを指定します。 <xref:System.Web.UI.WebControls.ControlParameter> 要素が <xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションに追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 次の例は前の例と似ていますが、マークアップではなくコードを使用しています。 ページが初めて読み込まれるとき、<xref:System.Web.UI.WebControls.DropDownList> コントロールには値が選択されておらず、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが使用されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 次のコードは、前の例のページの分離コードクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張して、データバインディングシナリオでデータソースコントロールやその他のコントロールが使用できる新しいパラメーター型を作成する方法を示しています。 データソースコントロールでは、`StaticParameter` パラメーターを使用して、Web フォームページで宣言されている任意のオブジェクト (通常は文字列) の値にバインドできます。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データソースコントロールでのパラメーターの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しい既定のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、そのすべてのプロパティの既定値で初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティが <xref:System.String.Empty?displayProperty=nameWithType>に初期化され、<xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティが <xref:System.TypeCode.Object?displayProperty=nameWithType>に初期化され、<xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが <xref:System.Data.ParameterDirection.Input>に初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが `null`に初期化されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <summary>名前を指定して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、その他のプロパティの指定された `name` と既定値を使用して初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティが <xref:System.TypeCode.Object?displayProperty=nameWithType>に初期化され、<xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが <xref:System.Data.ParameterDirection.Input>に初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが `null`に初期化されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張するクラスから <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> コンストラクターを呼び出して、インスタンスの <xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティを初期化する方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">現在のインスタンスの初期化の基になる <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンス。</param>
        <summary>指定した元のインスタンスの値を使用して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> コンストラクターは、<xref:System.Web.UI.WebControls.Parameter> インスタンスの複製に使用する `protected` コピーコンストラクターです。 <xref:System.Web.UI.WebControls.Parameter.Name%2A>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>、および <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> の各プロパティの値は、すべて新しいインスタンスに転送されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張するクラスから <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> コンストラクターを呼び出して、クラスの適切なオブジェクト複製動作を実装する方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="dbType">パラメーターのデータベース型。</param>
        <summary>指定した名前とデータベース型を使用して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、指定された `name` および `dbType` パラメーター、およびその他のプロパティの既定値を使用して初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが <xref:System.Data.ParameterDirection.Input>に初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが `null`に初期化されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">プロパティの型を表す <see cref="T:System.TypeCode" />。</param>
        <summary>名前と型を指定して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、指定された `name` および `type` パラメーター、およびその他のプロパティの既定値によって初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが <xref:System.Data.ParameterDirection.Input>に初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが `null`に初期化されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張するクラスから <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> コンストラクターを呼び出して、インスタンスの <xref:System.Web.UI.WebControls.Parameter.Name%2A> および <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティを初期化する方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの名前。</param>
        <param name="dbType"><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスのデータベース型。</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" /> の呼び出し時に、<see cref="T:System.Web.UI.WebControls.Parameter" /> がまだ初期化されていない値にバインドされている場合は、<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> インスタンスの既定値。</param>
        <summary>指定した名前、指定したデータベース型、およびその <see cref="T:System.Web.UI.WebControls.Parameter" /> プロパティに指定した値を使用して、<see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> インスタンスの <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは <xref:System.Data.ParameterDirection.Input>に初期化されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">プロパティの型を表す <see cref="T:System.TypeCode" />。</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" /> の呼び出し時に、<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> がまだ初期化されていない値にバインドされている場合に、パラメーターの既定値として使用する文字列。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> プロパティに指定した名前、型、文字列を使用して、<see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> コンストラクターを使用して作成された <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、指定された `name` パラメーターと `type` パラメーターを使用して初期化され、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティ値が割り当てられます。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは <xref:System.Data.ParameterDirection.Input> に初期化されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> コンストラクターを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> メソッドを呼び出す前に <xref:System.Web.UI.WebControls.AccessDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> コレクションに更新パラメーターオブジェクトを追加する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの複製を返します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> とまったく同じインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> メソッドは、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> コピーコンストラクターを呼び出して、現在のインスタンスの値を使用して <xref:System.Web.UI.WebControls.Parameter> クラスの新しいインスタンスを初期化します。  
  
 <xref:System.Web.UI.WebControls.Parameter> クラスを拡張する場合、<xref:System.Web.UI.WebControls.Parameter.Clone%2A> メソッドをオーバーライドして、派生クラスの新しいインスタンスにコピーする必要がある任意の状態を含めることができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張するクラスから <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> コンストラクターを呼び出して、クラスの適切なオブジェクト複製動作を実装する方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">等価な <see cref="T:System.Data.DbType" /> 値に変換する <see cref="T:System.TypeCode" /> 値。</param>
        <summary><see cref="T:System.Data.DbType" /> 値を等価な <see cref="T:System.TypeCode" /> 値に変換します。</summary>
        <returns>指定した <see cref="T:System.TypeCode" /> 値と等価な <see cref="T:System.Data.DbType" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Data.DbType> 値に対応する値が見つからない場合に <xref:System.TypeCode.Object> インスタンスを返します。 同等の型を持たないデータベースの種類には、<xref:System.Data.DbType.Guid>、<xref:System.Data.DbType.Binary>、および <xref:System.Data.DbType.DateTimeOffset>があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのバインド先の値が <see langword="null" /> の場合に、その値を <see cref="F:System.String.Empty" /> に変換する必要があるかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> のバインド先の値が <see cref="T:System.Web.UI.WebControls.Parameter" /> の場合に、その値を <see langword="null" /> に変換する必要がある場合は <see cref="F:System.String.Empty" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーターの <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> プロパティが変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">等価な <see cref="T:System.TypeCode" /> 値に変換する <see cref="T:System.Data.DbType" /> 値。</param>
        <summary><see cref="T:System.TypeCode" /> 値を等価な <see cref="T:System.Data.DbType" /> 値に変換します。</summary>
        <returns>指定した <see cref="T:System.Data.DbType" /> 値と等価な <see cref="T:System.TypeCode" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、対応するが見つからない場合に <xref:System.Data.DbType.Object> のインスタンスを返します。 同等の種類のデータベースを持たない型には、<xref:System.TypeCode.DBNull> と <xref:System.TypeCode.Empty>が含まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのデータベース型を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスのデータベース型。 既定値は <see cref="F:System.Data.DbType.Object" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース型は、厳密に型指定されたパラメーターを作成するために使用できます。これにより、Web アプリケーションと基になるコードまたはデータベーステーブルの値の間で値が正しく変換されます。  
  
 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> プロパティを設定してパラメーターのデータベースの種類を変更すると、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティを <see cref="T:System.Data.DbType" /> 列挙値にない値に設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの既定値を指定します。<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドの呼び出し時に、パラメーターはこの値にバインドされ、初期化前の状態に戻されます。</summary>
        <value>バインド先の値を解決できない場合や、初期化前の状態に戻す場合に、<see cref="T:System.Web.UI.WebControls.Parameter" /> の既定値として使用する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティは、パラメーターが値にバインドされていても、<xref:System.Web.UI.WebControls.Parameter> オブジェクトが評価されるときに値が `null` または解決できないシナリオで使用されます。  
  
 パラメーターの <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティが変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して1つのデータレコードを取得し、それを <xref:System.Web.UI.WebControls.DetailsView> コントロールに表示する方法を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、`EmployeeLogic` クラスの `GetEmployee` メソッドを呼び出すことによって特定の従業員レコードを取得します。 `GetEmployee` メソッドには employee ID パラメーターが必要です。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクション内の <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトを使用して、この例の `GetEmployee` メソッドに ID を渡します。  
  
 `EmployeeLogic` クラスと `GetEmployee` メソッドの実装例については、<xref:System.Web.UI.WebControls.ObjectDataSource> クラスの概要に関するトピックを参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトを使用して値をコントロールにバインドするかどうか、またはそのコントロールを使用して値を変更できるかどうかを示します。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 値のいずれか 1 つです。 既定では、<see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> は <see cref="F:System.Data.ParameterDirection.Input" /> に設定されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは現在、<xref:System.Web.UI.WebControls.Parameter> クラスでは使用されておらず、将来使用するために予約されています。  
  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは、<xref:System.Web.UI.WebControls.Parameter> インスタンスがバインドされる値と <xref:System.Web.UI.WebControls.Parameter> オブジェクト自体との間のデータフローの方向を表します。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティの既定値である <xref:System.Data.ParameterDirection.Input>は、<xref:System.Web.UI.WebControls.Parameter> オブジェクトが <xref:System.Web.UI.WebControls.Parameter> オブジェクトにバインドされている値から、データフローが常に一方向になるという最も一般的なシナリオについて説明します。 基になる値に加えられた変更は、<xref:System.Web.UI.WebControls.Parameter> オブジェクトによって反映されますが、<xref:System.Web.UI.WebControls.Parameter> オブジェクトに加えられた変更は、基になるデータによって反映されません。 出力パラメーターを使用する場合は、<xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティを <xref:System.Data.ParameterDirection.InputOutput> または <xref:System.Data.ParameterDirection.Output> に設定できます。また、ストアドプロシージャからの戻り値を使用する場合は、<xref:System.Data.ParameterDirection.ReturnValue> することもできます。  
  
 パラメーターの <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティが変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例では、ストアドプロシージャで出力パラメーターと戻り値パラメーターとして使用する場合に、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>、および <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティを設定する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">要求の現在の <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">パラメーターのバインド先の <see cref="T:System.Web.UI.Control" />。 パラメーターがコントロールにバインドされていない場合、<paramref name="control" /> パラメーターは無視されます。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの値を更新して返します。</summary>
        <returns>パラメーターの更新された現在の値を表す <see langword="object" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> メソッドの既定の実装では、常に `null` が返されます。 <xref:System.Web.UI.WebControls.Parameter> クラスから派生したクラスは、<xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> メソッドをオーバーライドして、更新されたパラメーター値を返します。 たとえば、<xref:System.Web.UI.WebControls.ControlParameter> オブジェクトは、バインドされているコントロールの値を返します。一方、<xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトは <xref:System.Web.HttpRequest> オブジェクトから現在の名前と値のペアを取得します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.Parameter> クラスから派生したクラスの正しい値を返す方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Data.DbType" /> インスタンスの CLR 型と等価な <see cref="T:System.Web.UI.WebControls.Parameter" /> 値を取得します。</summary>
        <returns>現在の <see cref="T:System.Data.DbType" /> インスタンスの CLR 型と等価な <see cref="T:System.Web.UI.WebControls.Parameter" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> プロパティは、まだ設定されていないか、または <xref:System.Data.DbType.Object>に設定されている必要があります。 このメソッドは、CLR 型が設定されていても、<xref:System.Web.UI.WebControls.Parameter.DbType%2A> プロパティが設定されていない場合にのみ使用することを目的としています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> プロパティが <see cref="F:System.Data.DbType.Object" /> 以外の値に既に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Object" /> の状態を表す <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に .NET Framework インフラストラクチャによって使用されます。独自に作成したコードから直接使用するためのものではありません。 ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。  
  
 このメソッドは、<xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> メソッドによって保存された前回のページ要求から、<xref:System.Web.UI.WebControls.Parameter> オブジェクトのビューステート情報を復元します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの名前を取得または設定します。</summary>
        <value>パラメーターの名前。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> オブジェクトに名前を付ける必要はありません。ただし、データソースコントロールでは、パラメーター名を使用して、コレクション内の <xref:System.Web.UI.WebControls.Parameter> オブジェクトを、SQL クエリまたはビジネスメソッドシグネチャのパラメーターと照合することがあります。 たとえば、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの名前を使用して、パラメーター化された SQL クエリのプレースホルダーと一致させることができます。 同様に、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールは <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> コレクション内の <xref:System.Web.UI.WebControls.Parameter> オブジェクトの名前を使用して、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティのプレースホルダーと一致させることができます。 場合によっては、名前が使用されず、<xref:System.Web.UI.WebControls.Parameter> オブジェクトが <xref:System.Web.UI.WebControls.ParameterCollection> コレクションに追加される順序がより重要になります。 詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」および「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。  
  
 パラメーターの名前が変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して、中間層のビジネスオブジェクトからデータを取得し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して結果を表示する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロール、<xref:System.Web.UI.WebControls.GridView> コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および [送信] ボタンで構成されています。 既定では、<xref:System.Web.UI.WebControls.TextBox> コントロールには、`Northwind` 従業員の1つの名前が設定されます。 <xref:System.Web.UI.WebControls.GridView> コントロールには、<xref:System.Web.UI.WebControls.TextBox> コントロールの名前で識別される従業員に関する情報が表示されます。 別の従業員のデータを取得するには、<xref:System.Web.UI.WebControls.TextBox> コントロールに従業員の氏名を入力し、ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって取得されるデータをフィルター処理するために使用する式を指定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターの型はスペースを含む可能性がある文字列型であるため、パラメータープレースホルダーは単一引用符で囲まれています。 パラメーターの型が数値または日付型の場合、外接する引用符は必要ありません。  
  
 このコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> クラスの <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティ用に用意されている、より大きな例の一部です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> オブジェクトを格納する <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションの <see cref="T:System.Web.UI.WebControls.Parameter" /> メソッドを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> オブジェクトが <xref:System.Web.UI.WebControls.ParameterCollection> コレクションに含まれていない場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドを呼び出すと無効になります。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトが <xref:System.Web.UI.WebControls.ParameterCollection> コレクションに含まれている場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> によって、コレクションの <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> イベントが発生します。  
  
 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションがデータソースコントロールに含まれている場合、<xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> イベントによってデータソースコントロールの <xref:System.Web.UI.IDataSource.DataSourceChanged> イベントが発生し、データバインドコントロールは再バインドされます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドを呼び出して、パラメーターの状態が変化したときに <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> イベントを発生させる方法を示しています。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Object" /> ビューステートへの変更を格納する <see cref="T:System.Web.UI.WebControls.Parameter" />。 オブジェクトに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ビューステートは、サーバーコントロールのプロパティの値を累積したものです。 これらの値は、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティ (<xref:System.Web.UI.StateBag> クラスのインスタンス) に自動的に配置されます。 このプロパティの値は、サーバーコントロールのライフサイクルの状態の保存ステージの後に文字列オブジェクトに保存されます。  
  
 ビューステートが保存されると、この文字列オブジェクトは、HTML `hidden` 要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、このメソッドをオーバーライドし、サーバーコントロールの <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> プロパティを変更することで、効率を向上させることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの状態がビューステートで記録されるように、このオブジェクトをマークします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A> メソッドは、<xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> メソッドによって直接呼び出され、<xref:System.Web.UI.WebControls.Parameter> オブジェクトにマークを付けて、その状態がビューステートに記録されるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのサイズを取得または設定します。</summary>
        <value>整数として表されたパラメーターのサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Size%2A> の値が変更されると、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの複製を返します。</summary>
        <returns>現在のオブジェクトのコピーである <see cref="T:System.Web.UI.WebControls.Parameter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> メソッドは、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> コンストラクターを呼び出して、現在のインスタンスの値を使用して <xref:System.Web.UI.WebControls.Parameter> クラスの新しいインスタンスを初期化します。  
  
 <xref:System.Web.UI.WebControls.Parameter> クラスを拡張する場合、<xref:System.Web.UI.WebControls.Parameter.Clone%2A> メソッドをオーバーライドして、派生クラスの新しいインスタンスにコピーする必要がある任意の状態を含めることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Object" /> の状態を表す <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> メソッドによって保存された前回のページ要求から、<xref:System.Web.UI.WebControls.Parameter> オブジェクトのビューステート情報を復元します。  
  
 このメソッドは、主にコントロールの開発者によって使用されます。 このメソッドをオーバーライドすると、カスタムサーバーコントロールがビューステートを復元する方法を制御できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Object" /> オブジェクトのビューステートへの変更を格納する <see cref="T:System.Web.UI.WebControls.Parameter" />。 オブジェクトに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ビューステートは、サーバーコントロールのプロパティの値を累積したものです。 これらの値は、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティ (<xref:System.Web.UI.StateBag> クラスのインスタンス) に自動的に配置されます。 このプロパティの値は、サーバーコントロールのライフサイクルの状態の保存ステージの後に文字列オブジェクトに保存されます。  
  
 ビューステートが保存されると、この文字列オブジェクトは、HTML `hidden` 要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、このメソッドをオーバーライドし、サーバーコントロールの <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> プロパティを変更することで、効率を向上させることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="P:System.Web.UI.Control.ViewState" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスの値を、それと等価の文字列形式に変換します。</summary>
        <returns>このインスタンスの値の文字列形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.ToString%2A> メソッドは、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティを返します。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトに名前がない場合、<xref:System.Web.UI.WebControls.Parameter.ToString%2A> は <xref:System.String.Empty?displayProperty=nameWithType>を返します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.Parameter.Name%2A> や <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティなど、<xref:System.Web.UI.WebControls.Parameter> オブジェクトのさまざまなプロパティにアクセスする方法を示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="P:System.Web.UI.Control.ViewState" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの型を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> の型。 既定値は <see cref="F:System.TypeCode.Object" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型は、厳密に型指定されたパラメーターを作成するために使用できます。これにより、Web アプリケーションと基になるコードの間で値が正しく変換されます。  
  
 パラメーターの型が変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例では、ストアドプロシージャで出力パラメーターと戻り値パラメーターとして使用する場合に、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>、および <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティを設定する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">パラメーターの型が <see cref="T:System.TypeCode" /> 値ではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">パラメーターを使用した SqlDataSource および AccessDataSource コントロールの使用</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">ObjectDataSource コントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>同一のページに対する複数の要求にわたって、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートを保存し、復元できるようにする状態情報のディクショナリを取得します。</summary>
        <value><see cref="T:System.Web.UI.StateBag" /> オブジェクトのビューステート情報を格納している <see cref="T:System.Web.UI.WebControls.Parameter" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーターのビューステートは、すべてのプロパティ値を累積したものです。 これらの値を HTTP 要求間で保持するために、ASP.NET サーバーコントロールは、プロパティ値を格納するために、<xref:System.Web.UI.StateBag> クラスのインスタンスであるこのプロパティを使用します。 値は、後続の要求が処理されるときに、HTML `hidden` の入力要素に変数として渡されます。 既定では、すべてのサーバーコントロールに対してビューステートが有効になっています。  
  
 ディクショナリとその使用方法の詳細については、「[コレクションとデータ構造体](~/docs/standard/collections/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、ビューステートオブジェクトを使用して、<xref:System.Web.UI.WebControls.Parameter> クラスを拡張するクラスにパラメーターオブジェクトの状態を格納する方法を示します。 このコード例は、<xref:System.Web.UI.WebControls.Parameter> クラスの概要に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
