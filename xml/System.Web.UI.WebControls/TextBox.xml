<Type Name="TextBox" FullName="System.Web.UI.WebControls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="860eef0e7e17273b67437f86e67ed89a51a93a92" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978451" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackDataHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackDataHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits WebControl&#xA;Implements IPostBackDataHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackDataHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit WebControl&#xA;    interface IPostBackDataHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class TextBox : System.Web.UI.WebControls.WebControl, System.Web.UI.IEditableTextControl, System.Web.UI.IPostBackDataHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IEditableTextControl, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.ITextControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits WebControl&#xA;Implements IEditableTextControl, IPostBackDataHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Web::UI::WebControls::WebControl, System::Web::UI::IEditableTextControl, System::Web::UI::IPostBackDataHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit WebControl&#xA;    interface IPostBackDataHandler&#xA;    interface IEditableTextControl&#xA;    interface ITextControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IEditableTextControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TextBoxControlBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true, "Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー入力用のテキスト ボックス コントロールを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 このトピックの内容:

-   [はじめに](#introduction)

-   [宣言型の構文](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>はじめに
 <xref:System.Web.UI.WebControls.TextBox> サーバーコントロールは、ユーザーがテキストを入力できるようにする入力コントロールです。 既定では、コントロールの [<xref:System.Web.UI.WebControls.TextBox.TextMode%2A>] プロパティは [`TextBoxMode.SingleLine`] に設定され、単一行のテキストボックスが表示されます。 ただし、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用して、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティの値をそれぞれ `TextBoxMode.MultiLine` または `TextBoxMode.Password`に変更することで、ユーザー入力をマスクする複数行テキストボックスまたはテキストボックスを表示することもできます。 <xref:System.Web.UI.WebControls.TextBox> コントロールに表示されるテキストは、<xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティを使用して指定されるか、決定されます。

 <xref:System.Web.UI.WebControls.TextBox> コントロールには、コントロールの外観を制御できるいくつかのプロパティが含まれています。 テキストボックスの表示幅は、<xref:System.Web.UI.WebControls.TextBox.Columns%2A> プロパティによって決まります。 <xref:System.Web.UI.WebControls.TextBox> コントロールが複数行テキストボックスである場合、表示される行の数は、<xref:System.Web.UI.WebControls.TextBox.Rows%2A> プロパティによって決まります。 <xref:System.Web.UI.WebControls.TextBox> コントロール内で折り返されるテキストを表示するには、<xref:System.Web.UI.WebControls.TextBox.Wrap%2A> プロパティを `true`に設定します。

 また、いくつかのプロパティを設定して、<xref:System.Web.UI.WebControls.TextBox> コントロールでのデータの入力方法を指定することもできます。 コントロールに表示されるテキストが変更されないようにするには、<xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> プロパティを `true`に設定します。 ユーザー入力を指定した文字数に制限する場合は、<xref:System.Web.UI.WebControls.TextBox.MaxLength%2A> プロパティを設定します。

 <xref:System.Web.UI.WebControls.TextBox>のインスタンスの初期プロパティ値の一覧については、<xref:System.Web.UI.WebControls.TextBox.%23ctor%2A> コンストラクターを参照してください。

> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を受け入れることができます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 コントロールに入力テキストを表示する前に、検証コントロールを使用してユーザー入力を検証することができます。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 詳細については、「[標準コントロールのセキュリティ保護](https://docs.microsoft.com/previous-versions/aspnet/ms178270(v=vs.100))」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「 [ASP.NET Web ページでのユーザー入力の検証](https://docs.microsoft.com/previous-versions/aspnet/7kh55542(v=vs.100))」を参照してください。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>宣言型の構文

```
<asp:TextBox
    AccessKey="string"
    AutoCompleteType="None|Disabled|Cellular|Company|Department|
        DisplayName|Email|FirstName|Gender|HomeCity|HomeCountryRegion|
        HomeFax|HomePhone|HomeState|HomeStreetAddress|HomeZipCode|
        Homepage|JobTitle|LastName|MiddleName|Notes|Office|Pager|
        BusinessCity|BusinessCountryRegion|BusinessFax|BusinessPhone|
        BusinessState|BusinessStreetAddress|BusinessUrl|
        BusinessZipCode|Search"
    AutoPostBack="True|False"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CausesValidation="True|False"
    Columns="integer"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    MaxLength="integer"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnTextChanged="TextChanged event handler"
    OnUnload="Unload event handler"
    ReadOnly="True|False"
    Rows="integer"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    Text="string"
    TextMode="SingleLine|MultiLine|Password"
    ToolTip="string"
    ValidationGroup="string"
    Visible="True|False"
    Width="size"
    Wrap="True|False"
/>
```



## Examples
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=192423)できます。

 次のコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用してユーザー入力を取得する方法を示しています。 ユーザーが **[追加]** ボタンをクリックすると、テキストボックスに入力した値の合計が表示されます。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Columns" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.Wrap" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab354bc1-f23a-48fc-93d8-d4d7c1b7396f">TextBox Web サーバーコントロールの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">スクリプト攻略の概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.TextBox> クラスの新しいインスタンスを作成し、初期化します。

 次の表は、<xref:System.Web.UI.WebControls.TextBox>のインスタンスの初期プロパティ値を示しています。

|プロパティ|初期値|
|--------------|-------------------|
|`TagKey`|`HtmlTextWriterTag.Input`|



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox.%23ctor%2A> コンストラクターを使用して <xref:System.Web.UI.WebControls.TextBox> コントロールをページに動的に追加する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBox Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBox Constructor/CS/textboxctorcs.aspx#1)]
 [!code-aspx-vb[TextBox Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBox Constructor/VB/textboxctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="textBox.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> インスタンスに表示する必要のある HTML 属性およびスタイルを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、主にコントロールの開発者が、<xref:System.Web.UI.WebControls.TextBox> コントロールの <xref:System.Web.UI.HtmlTextWriter> 出力ストリームに追加の属性とスタイルを挿入するために使用されます。 このメソッドは、<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> をオーバーライドします。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロールテキストが常に太字で表示されるように、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.TextBox.AddAttributesToRender%2A> メソッドをオーバーライドする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/CS/custom_textbox_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/VB/custom_textbox_addattributestorendervb.aspx#1)]

 [!code-csharp[CustomTextBoxAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/CS/custom_textbox_addattributestorender.cs#2)]
 [!code-vb[CustomTextBoxAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddAttributesToRender/VB/custom_textbox_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="textBox.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">解析された要素を表す <see cref="T:System.Object" />。</param>
        <summary>リテラル コントロールだけを <see cref="P:System.Web.UI.WebControls.TextBox.Text" /> プロパティとして追加できるようにオーバーライドされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例は、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.TextBox.AddParsedSubObject%2A> メソッドをオーバーライドして、解析されたオブジェクトが <xref:System.Web.UI.WebControls.Literal> コントロールの場合に、常に <xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティを解析済みオブジェクトの `Text` プロパティに設定する方法を示しています。それ以外の場合は、例外をスローします。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/CS/custom_textbox_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/VB/custom_textbox_addparsedsubobjectvb.aspx#1)]

 [!code-csharp[CustomTextBoxAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/CS/custom_textbox_addparsedsubobject.cs#2)]
 [!code-vb[CustomTextBoxAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxAddParsedSubObject/VB/custom_textbox_addparsedsubobject.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="obj" /> が <see cref="T:System.Web.UI.LiteralControl" /> 型ではありません。</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.AutoCompleteType AutoCompleteType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.AutoCompleteType AutoCompleteType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.AutoCompleteType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoCompleteType As AutoCompleteType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::AutoCompleteType AutoCompleteType { System::Web::UI::WebControls::AutoCompleteType get(); void set(System::Web::UI::WebControls::AutoCompleteType value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteType : System.Web.UI.WebControls.AutoCompleteType with get, set" Usage="System.Web.UI.WebControls.TextBox.AutoCompleteType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoCompleteType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールのオートコンプリートの動作を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.AutoCompleteType" /> コントロールのオートコンプリート動作を示す <see cref="T:System.Web.UI.WebControls.TextBox" /> 列挙値の 1 つ。 既定値は <see cref="F:System.Web.UI.WebControls.AutoCompleteType.None" />にする必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データ入力を支援するために、Microsoft Internet Explorer 5 以降、および他のいくつかのブラウザーでは、オートコンプリートと呼ばれる機能がサポートされています。 オートコンプリートでは、テキストボックスを監視し、ユーザーが入力した値の一覧を作成します。 ユーザーが後でテキストボックスに戻ったときに、一覧が表示されます。 ユーザーは、以前に入力した値を再入力するのではなく、単にこの一覧から値を選択できます。 <xref:System.Web.UI.WebControls.TextBox> コントロールのオートコンプリート機能の動作を制御するには、<xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.AutoCompleteType?displayProperty=nameWithType> 列挙体は、<xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> プロパティに適用できる値を表すために使用されます。

> [!NOTE]
>  すべてのブラウザーがオートコンプリート機能をサポートしているわけではありません。 ブラウザーで互換性を確認してください。

 既定では、<xref:System.Web.UI.WebControls.TextBox> コントロールの <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> プロパティは `AutoCompleteType.None`に設定されています。 この設定では、<xref:System.Web.UI.WebControls.TextBox> コントロールは、異なるページ間で同じ <xref:System.Web.UI.Control.ID%2A> プロパティを持つ他の <xref:System.Web.UI.WebControls.TextBox> コントロールとリストを共有します。 <xref:System.Web.UI.Control.ID%2A> プロパティの代わりに、カテゴリに基づいて <xref:System.Web.UI.WebControls.TextBox> コントロール間でリストを共有することもできます。 <xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> プロパティをいずれかのカテゴリ値 (`AutoCompleteType.FirstName`、`AutoCompleteType.LastName`など) に設定すると、同じカテゴリのすべての <xref:System.Web.UI.WebControls.TextBox> コントロールが同じリストを共有します。 <xref:System.Web.UI.WebControls.TextBox> コントロールのオートコンプリート機能を無効にするには、<xref:System.Web.UI.WebControls.TextBox.AutoCompleteType%2A> プロパティを `AutoCompleteType.Disabled`に設定します。

 オートコンプリート機能の構成と有効化の詳細については、ブラウザーのドキュメントを参照してください。 たとえば、Internet Explorer version 5 以降でオートコンプリート機能を有効にするには、**[ツール]** メニューの **[インターネットオプション]** を選択し、**[コンテンツ]** タブを選択します。オートコンプリート機能のさまざまなブラウザーオプションを表示および変更するには、**[オートコンプリート]** ボタンをクリックします。

 Internet Explorer のオートコンプリート機能の詳細については、 [MSDN ライブラリ](https://go.microsoft.com/fwlink/?linkid=37118)の「 [HTML フォームでのオートコンプリートの使用](https://go.microsoft.com/fwlink/?LinkId=163828)」を参照してください。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.AutoCompleteType> 列挙体を使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールのオートコンプリートカテゴリを指定する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[AutoCompleteType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AutoCompleteType/CS/AutoCompleteTypecs.aspx#1)]
 [!code-aspx-vb[AutoCompleteType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AutoCompleteType/VB/AutoCompleteTypevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.AutoCompleteType" /> 列挙値の 1 つではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.AutoCompleteType" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBack">
      <MemberSignature Language="C#" Value="public virtual bool AutoPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.AutoPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPostBack : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.AutoPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールがフォーカスを失ったときに、サーバーへの自動ポストバックが発生するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールがフォーカスを失った場合に自動ポストバックが発生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox> コントロールがフォーカスを失ったときにサーバーへの自動ポストバックを実行するかどうかを指定するには、<xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.TextBox> コントロールで ENTER キーまたは TAB キーを押すことは、フォーカスを変更する最も一般的な方法です。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.TextBox> コントロールの親コンテナーに既定のボタンとしてマークされたボタンが含まれている場合 (たとえば、コンテナーの <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> または <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A> プロパティが設定されている場合)、自動ポストバックに応答して既定のボタンの `Click` イベントは発生しません。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールがフォーカスを失ったときにテキストボックスに入力された値の合計を自動的に表示する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBoxAutoPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxAutoPostBack/CS/textboxautopostbackcs.aspx#1)]
 [!code-aspx-vb[TextBoxAutoPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxAutoPostBack/VB/textboxautopostbackvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.TextBox.TextChanged" />
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポストバックの発生時に検証を実行するように <see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールを設定した場合に検証を実行するかどうかを示す値を取得または設定します。</summary>
        <value>ポストバックの発生時に検証を実行するように <see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールを設定し、検証を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" />にする必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox> コントロールがポストバックが発生したときに検証するように設定されている場合は、<xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティを使用して、クライアントとサーバーの両方で検証を実行するかどうかを決定します。 ページの検証では、ページ上の検証コントロールに関連付けられている入力コントロールが、検証コントロールによって指定された検証規則に合格するかどうかを判断します。

 既定では、<xref:System.Web.UI.WebControls.TextBox> コントロールは、コントロールがフォーカスを失ったときにページの検証を行いません。 ポストバックが発生したときに検証するように <xref:System.Web.UI.WebControls.TextBox> コントロールを設定するには、<xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティを `true` に設定し、<xref:System.Web.UI.WebControls.TextBox.AutoPostBack%2A> プロパティを `true`に設定します。

 <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティの値が `true`に設定されている場合は、<xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールで検証が行われる検証グループの名前を指定することもできます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.CheckBox.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual int Columns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Columns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Columns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Columns : int with get, set" Usage="System.Web.UI.WebControls.TextBox.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックスの表示幅 (文字単位) を取得または設定します。</summary>
        <value>テキスト ボックスの表示幅 (文字数)。 既定値は 0 です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.TextBox.Columns%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールに2文字の幅を指定する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBox/CS/textboxcs.aspx#1)]
 [!code-aspx-vb[TextBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBox/VB/textboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された幅が 0 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="textBox.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">読み込まれる内容を参照する、ポストされたコレクション内のインデックス。</param>
        <param name="postCollection">サーバーにポストされたコレクション。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールのポストバック データを処理します。</summary>
        <returns>ポストされた内容が前回ポストされた内容と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.LoadPostData%2A> メソッドは、<xref:System.Web.UI.WebControls.TextBox> コントロールのポストバックデータが以前の値と異なるかどうかを確認し、存在する場合はコンテンツを読み込み、`true`を返します。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Web.UI.WebControls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックスに入力できる文字の最大数を取得または設定します。</summary>
        <value>テキスト ボックスに入力できる文字の最大数。 既定値は 0 です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox> コントロールに入力できる文字数を制限するには、<xref:System.Web.UI.WebControls.TextBox.MaxLength%2A> プロパティを使用します。

> [!NOTE]
>  このプロパティは、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティが `TextBoxMode.SingleLine` または `TextBoxMode.Password`に設定されている場合にのみ適用されます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=192423)できます。

 次のコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用してユーザー入力を取得する方法を示しています。 ユーザーが **[追加]** ボタンをクリックすると、テキストボックスに入力した値の合計が表示されます。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された幅が 0 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="textBox.OnPreRender e" />
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="P:System.Web.UI.WebControls.TextBox.AutoPostBack" /> が <see langword="true" /> の場合は、クライアント側で表示する前にポストバック イベントを生成するためのクライアント スクリプトを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例では、カスタム <xref:System.Web.UI.WebControls.TextBox> サーバーコントロールに常に1点の境界線を表示するように <xref:System.Web.UI.WebControls.TextBox.OnPreRender%2A> メソッドをオーバーライドする方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnPreRender/CS/custom_textbox_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnPreRender/VB/custom_textbox_onprerendervb.aspx#1)]

 [!code-csharp[CustomTextBoxOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnPreRender/CS/custom_textbox_onprerender.cs#2)]
 [!code-vb[CustomTextBoxOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnPreRender/VB/custom_textbox_onprerender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント情報を格納する <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TextBox.TextChanged" /> イベントを発生させます。 これにより、イベントを直接処理できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.TextChanged> イベントは、テキストボックスの内容がサーバーへのポスト間で変更されたときに発生します。

> [!NOTE]
>  このイベントが正常に機能するには、<xref:System.Web.UI.WebControls.TextBox> コントロールがサーバーへのポスト間でいくつかの値を保持する必要があります。 このコントロールに対してビューステートが有効になっていることを確認してください。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](/dotnet/standard/events/) を参照してください。

 <xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。



## Examples
 次のコード例は、カスタム <xref:System.Web.UI.WebControls.TextBox> サーバーコントロールが変更されたものとして常にマークするように、<xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A> メソッドをオーバーライドする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxOnTextChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/CS/custom_textbox_ontextchangedcs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxOnTextChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/VB/custom_textbox_ontextchangedvb.aspx#1)]

 [!code-csharp[CustomTextBoxOnTextChanged#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/CS/custom_textbox_ontextchanged.cs#2)]
 [!code-vb[CustomTextBoxOnTextChanged#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxOnTextChanged/VB/custom_textbox_ontextchanged.vb#2)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TextBox.TextChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="textBox.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> コントロールのポストされたデータが変更されたときに、<see cref="T:System.Web.UI.WebControls.TextBox" /> メソッドを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent%2A> メソッドは、<xref:System.Web.UI.WebControls.TextBox> コントロールのポストされたデータが変更された場合に、<xref:System.Web.UI.WebControls.TextBox.OnTextChanged%2A> メソッドを呼び出します。 <xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティが `true`場合、<xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A> プロパティで設定された検証グループのコントロールが検証されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールの内容を変更できるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールの内容を変更できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" />にする必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールの内容を変更できるかどうかを指定します。 このプロパティを `true` に設定すると、ユーザーが値を入力したり、既存の値を変更したりするのを防ぐことができます。 <xref:System.Web.UI.WebControls.TextBox> コントロールのユーザーは、このプロパティを変更できないことに注意してください。開発者のみが実行できます。

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> プロパティが `true` に設定された <xref:System.Web.UI.WebControls.TextBox> コントロールの <xref:System.Web.UI.WebControls.TextBox.Text%2A> 値は、ポストバックが発生したときにサーバーに送信されますが、読み取り専用のテキストボックスに対しては処理は行われません。 これにより、悪意のあるユーザーが読み取り専用の <xref:System.Web.UI.WebControls.TextBox.Text%2A> 値を変更できなくなります。 <xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティの値は、サーバー側コードによって変更されない限り、ポストバックの間でビューステートに保持されます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールに表示されるテキストを変更できないようにする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="textBox.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示される出力を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.TextBox" /> オブジェクトに、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.Render%2A> メソッドは、クライアントでの出力のために、<xref:System.Web.UI.WebControls.TextBox> コントロールの開始タグと終了タグを <xref:System.Web.UI.HtmlTextWriter> オブジェクトにレンダリングします。 <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティが <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>に設定されている場合、<xref:System.Web.UI.WebControls.TextBox> コントロールの内容は HTML `<textarea>` 要素としてレンダリングされます。

 <xref:System.Web.UI.WebControls.TextBox.Render%2A> メソッドは、主に、<xref:System.Web.UI.WebControls.TextBox> コントロールの機能を拡張するコントロールの開発者によって使用されます。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロールが常にイメージと共に表示されるように、カスタムサーバーコントロールの <xref:System.Web.UI.WebControls.TextBox.Render%2A> メソッドをオーバーライドする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxRender/CS/custom_textbox_rendercs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxRender/VB/custom_textbox_rendervb.aspx#1)]

 [!code-csharp[CustomTextBoxRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxRender/CS/custom_textbox_render.cs#2)]
 [!code-vb[CustomTextBoxRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxRender/VB/custom_textbox_render.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Rows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rows : int with get, set" Usage="System.Web.UI.WebControls.TextBox.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行テキスト ボックスに表示されている行の数を取得または設定します。</summary>
        <value>複数行テキスト ボックスの行の数。 既定値は 0 です。2 行のテキスト ボックスが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.Rows%2A> プロパティを使用して、複数行のテキストボックスに表示する行数を指定します。

> [!NOTE]
>  このプロパティは、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティが `TextBoxMode.MultiLine`に設定されている場合にのみ適用されます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.TextBox.Rows%2A> プロパティを使用して、複数行の <xref:System.Web.UI.WebControls.TextBox> コントロールに5行の高さを指定する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が 0 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Columns" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="textBox.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、テキスト ボックスのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Object" /> ビューステートへの変更を格納する <see cref="T:System.Web.UI.WebControls.TextBox" />。 このオブジェクトに関連付けられているビューステートがない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、主にコントロールの開発者によって使用されます。

 ビューステートは、サーバーコントロールのプロパティの値を累積したものです。 これらの値は、サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティ (<xref:System.Web.UI.StateBag> クラスのインスタンス) に自動的に配置されます。 このプロパティの値は、サーバーコントロールのライフサイクルの状態を保存する段階の後、文字列オブジェクトに保持されます。 詳細については、 [IIS 5.0 および6.0 の ASP.NET アプリケーションライフサイクルの概要](https://msdn.microsoft.com/library/de0d8a1c-b1bc-48e1-b246-26e32289a82f)に関するトピックを参照してください。

 ビューステートが保存されると、この文字列オブジェクトは、非表示の HTML input 要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、このメソッドをオーバーライドし、サーバーコントロールの `ViewState` プロパティを変更することで、効率を向上させることができます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="textBox.System.Web.UI.IPostBackDataHandler.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">読み込まれる内容を参照する、ポストされたコレクション内のインデックス。</param>
        <param name="postCollection">サーバーにポストされたコレクション。</param>
        <summary>ポストされたテキスト ボックスの内容が前回ポストされた内容と異なる場合に、その内容を読み込みます。</summary>
        <returns>ポストされた内容が前回ポストされた内容と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.TextBox> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit" Usage="textBox.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスのポストされたデータが変更されると、必ず <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> メソッドを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.TextBox> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TextBox.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックス コントロールの HTML タグを取得します。 このプロパティは保護されています。</summary>
        <value>テキスト ボックスが複数行テキスト ボックスである場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Textarea" />。それ以外の場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Input" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox.TagKey%2A> プロパティを使用してカスタムテキストボックスを作成する方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[CustomTextBoxTagKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxTagKey/CS/custom_textbox_tagkeycs.aspx#1)]
 [!code-aspx-vb[CustomTextBoxTagKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxTagKey/VB/custom_textbox_tagkeyvb.aspx#1)]

 [!code-csharp[CustomTextBoxTagKey#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTextBoxTagKey/CS/custom_textbox_tagkey.cs#2)]
 [!code-vb[CustomTextBoxTagKey#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTextBoxTagKey/VB/custom_textbox_tagkey.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.EncodedInnerDefaultProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true, System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールのテキストの内容を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロール内に表示するテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox> コントロールに表示されるテキストを指定または確認するには、<xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティを使用します。 コントロールで許容される文字数を制限するには、<xref:System.Web.UI.WebControls.TextBox.MaxLength%2A> プロパティを設定します。 テキストが変更されないようにするには、<xref:System.Web.UI.WebControls.TextBox.ReadOnly%2A> プロパティを設定します。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> and [ASP.NET グローバリゼーション And ローカライゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。

 テキストボックスが表示されると、このプロパティの内容は HTML エンコードされます。 たとえば、このプロパティを "\<b > Test\</b >" に設定した場合、ブラウザーでは、"Test" ではなく "\<b > Test\</b >" が太字で表示されます。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用してユーザー入力を取得する方法を示しています。 ユーザーが **[追加]** ボタンをクリックすると、テキストボックスに入力した値の合計が表示されます。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

```csharp
<%@ Page Language="C#" AutoEventWireup="True" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
      protected void AddButton_Click(Object sender, EventArgs e)
      {
         int Answer;
         Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text);
         AnswerMessage.Text = Answer.ToString();
      }
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

```vb
<%@ Page Language="vb" AutoEventWireup="false" %>

<!DOCTYPE html>
<html>

<head>
    <title>TextBox Example</title>
    <script runat="server">
        Protected Sub AddButton_Click(sender As Object, e As EventArgs)
            Dim Answer As Integer
            Answer = Convert.ToInt32(Value1.Text) + Convert.ToInt32(Value2.Text)
            AnswerMessage.Text = Answer.ToString()
        End Sub
    </script>
</head>
<body>
  <form id="form1" runat="server">
    <h3> TextBox Example </h3>
    <p>
        <asp:TextBox ID="Value1" Columns="2" MaxLength="3" Text="1" runat="server"/>
        +
        <asp:TextBox ID="Value2" Columns="2" MaxLength="3" Text="1" runat="server"/>
        =
        <asp:Label ID="AnswerMessage" runat="server"/>
    </p>
    <p>
        <asp:Button ID="AddButton" Text="Add" OnClick="AddButton_Click" runat="server"/>
    </p>
    <p>
        <asp:RequiredFieldValidator ID="Value1RequiredValidator" ControlToValidate="Value1"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RequiredFieldValidator ID="Value2RequiredValidator" ControlToValidate="Value2"
             ErrorMessage="Please enter a value.<br />" Display="Dynamic"
             runat="server"/>
        <asp:RangeValidator ID="Value1RangeValidator" ControlToValidate="Value1"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
        <asp:RangeValidator ID="Value2RangeValidator" ControlToValidate="Value2"
             Type="Integer" MinimumValue="1" MaximumValue="100" Display="Dynamic"
             ErrorMessage="Please enter an integer <br /> between than 1 and 100.<br />"
             runat="server"/>
    </p>
  </form>
</body>
</html>
```

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.MaxLength" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TextBox.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ TextChanged;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IEditableTextControl.TextChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックスの内容がサーバーへのポスト間で変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.TextChanged> イベントは、テキストボックスの内容がサーバーへのポスト間で変更されたときに発生します。 イベントは、ユーザーによってテキストが変更された場合にのみ発生します。テキストがプログラムによって変更された場合、イベントは発生しません。

> [!NOTE]
>  このイベントが正常に機能するには、<xref:System.Web.UI.WebControls.TextBox> コントロールがサーバーへのポスト間でいくつかの値を保持する必要があります。 このコントロールに対してビューステートが有効になっていることを確認してください。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。



## Examples
 次の例では、このイベントを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールの変更に応答する方法を示します。 このコードは、`Text` プロパティが変更されたときに、テキストボックスコントロール (TextBox1 と呼ばれます) の <xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティの内容をラベル (Label1) に表示します。 Web フォームページでのユーザー入力には、悪意のあるクライアントスクリプトが含まれる可能性があります。 既定では、Web フォームページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。 詳細については、「[方法: HTML エンコーディングを文字列に適用](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))する」を参照してください。

```vb

Protected Sub TextBox1_TextChanged(ByVal sender As Object, _
        ByVal e As System.EventArgs) Handles TextBox1.TextChanged
   Label1.Text = Server.HtmlEncode(TextBox1.Text)
End Sub

```

```csharp
protected void TextBox1_TextChanged(object sender, EventArgs e)
{
   Label1.Text = Server.HtmlEncode(TextBox1.Text);
}

```

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TextMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TextBoxMode TextMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TextBoxMode TextMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.TextMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextMode As TextBoxMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TextBoxMode TextMode { System::Web::UI::WebControls::TextBoxMode get(); void set(System::Web::UI::WebControls::TextBoxMode value); };" />
      <MemberSignature Language="F#" Value="member this.TextMode : System.Web.UI.WebControls.TextBoxMode with get, set" Usage="System.Web.UI.WebControls.TextBox.TextMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TextBoxMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールの動作モード (単一行、複数行、またはパスワードなど) を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TextBoxMode" /> 列挙値のいずれか。 既定値は <see langword="SingleLine" />にする必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールの表示方法を指定します。 3つの一般的なオプションは、単一行、複数行、またはパスワードのテキストボックスです。

 <xref:System.Web.UI.WebControls.TextBox> コントロールが複数行モードの場合は、<xref:System.Web.UI.WebControls.TextBox.Rows%2A> プロパティを設定することによって、表示する行数を制御できます。 <xref:System.Web.UI.WebControls.TextBox.Wrap%2A> プロパティを設定して、テキストを折り返すかどうかを指定することもできます。

 <xref:System.Web.UI.WebControls.TextBox> コントロールがパスワードモードの場合、コントロールに入力されたすべての文字がマスクされます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティを使用して複数行のテキストボックスを指定する方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したモードが、<see cref="T:System.Web.UI.WebControls.TextBoxMode" /> 列挙値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TextBoxMode" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.Wrap" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.TextBox.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールがサーバーにポストバックされるときに検証が実行されるコントロールのグループを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TextBox" /> コントロールがサーバーにポストバックされるときに検証が実行されるコントロールのグループ。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループとは別に検証できます。 <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールがサーバーへのポストバック時に検証を行う検証グループの名前を指定します。

 このプロパティは、<xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティが `true`に設定されている場合にのみ効果があります。 <xref:System.Web.UI.WebControls.TextBox.ValidationGroup%2A> プロパティの値を指定すると、<xref:System.Web.UI.WebControls.TextBox> コントロールがサーバーにポストバックするときに、指定したグループの一部である検証コントロールのみが検証されます。 このプロパティの値を指定せず、<xref:System.Web.UI.WebControls.TextBox.CausesValidation%2A> プロパティが `true`に設定されている場合、コントロールがサーバーにポストバックされるときに、検証グループに割り当てられていないページ上のすべての検証コントロールが検証されます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.TextBox.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TextBox.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.TextBox.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行テキスト ボックス内のテキストを右端で折り返して表示するかどうかを示す値を取得または設定します。</summary>
        <value>複数行テキスト ボックス内のテキストを右端で折り返して表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 [<xref:System.Web.UI.WebControls.TextBox.Wrap%2A>] プロパティを使用して、テキストがコントロールの最後に到達したときに、次の行で、複数行の <xref:System.Web.UI.WebControls.TextBox> コントロールに表示されるテキストを自動的に続行するかどうかを指定します。

> [!NOTE]
>  このプロパティは、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A> プロパティが `TextBoxMode.MultiLine`に設定されている場合にのみ適用されます。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.TextBox.Wrap%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.TextBox> コントロールに入力されたテキストをラップする方法を示しています。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[TextBoxMultiLine#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TextBoxMultiLine/CS/multilinetextboxcs.aspx#1)]
 [!code-aspx-vb[TextBoxMultiLine#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TextBoxMultiLine/VB/multilinetextboxvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TextBox.TextMode" />
      </Docs>
    </Member>
  </Members>
</Type>
