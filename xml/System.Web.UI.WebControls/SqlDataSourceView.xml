<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36e0b9775fd1a2501e2c9722af102d0cac8f4c80" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106369" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d2ed7-101"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールをサポートし、データ バインドされたコントロールがリレーショナル データベースに SQL データ操作を実行するためのインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-101">Supports the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-102"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、主に、ページコードのプログラミング可能なオブジェクトとしてではなく、データバインドコントロールによって使用されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-102">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.</span></span>  
  
 <span data-ttu-id="d2ed7-103">ASP.NET データソースコントロールには、データソースビューオブジェクトによって表されるデータのリストが1つ以上含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-103">ASP.NET data source controls contain one or more lists of data, represented by data source view objects.</span></span> <span data-ttu-id="d2ed7-104"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、<xref:System.Web.UI.DataSourceView> クラスを拡張し、それが関連付けられている <xref:System.Web.UI.WebControls.SqlDataSource> コントロールの機能を定義し、データソースコントロールの基本的なデータ機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-104">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control.</span></span> <span data-ttu-id="d2ed7-105"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールのデータ機能を実装します。これには、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 操作、並べ替え、フィルター処理、およびビューステートに保持される設定の管理が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-105">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.</span></span>  
  
 <span data-ttu-id="d2ed7-106"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールによってページの開発者に直接公開されるわけではありませんが、そのプロパティの多くはです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-106">Although the <xref:System.Web.UI.WebControls.SqlDataSourceView> object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are.</span></span> <span data-ttu-id="d2ed7-107">データソースビューで実行される最も基本的な操作は、データ項目の <xref:System.Collections.IEnumerable> コレクションを取得する <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドを使用して、基になるデータベースからデータを取得することです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-107">The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items.</span></span> <span data-ttu-id="d2ed7-108"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、SQL クエリを使用してリレーショナルデータベースからのデータ取得を実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-108">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements data retrieval from relational databases using SQL queries.</span></span> <span data-ttu-id="d2ed7-109">SQL クエリは、柔軟性とセキュリティを向上させるためにパラメーター化できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-109">The SQL queries can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="d2ed7-110">次のデータ取得メソッド、プロパティ、およびイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView> によって実装され、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、開発者やその他の呼び出し元に直接公開されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-110">The following data retrieval methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="d2ed7-111"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-111">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-112"><xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-112">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-113"><xref:System.Web.UI.WebControls.SqlDataSource.Selecting> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-113">The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event</span></span>  
  
-   <span data-ttu-id="d2ed7-114"><xref:System.Web.UI.WebControls.SqlDataSource.Selected> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-114">The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event</span></span>  
  
 <span data-ttu-id="d2ed7-115"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは、SQL コマンドを使用してリレーショナルデータベースのデータを更新することをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-115">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object supports updating data in a relational database using SQL commands.</span></span> <span data-ttu-id="d2ed7-116">SQL コマンドをパラメーター化して、柔軟性とセキュリティを高めることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-116">The SQL commands can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="d2ed7-117"><xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>などのデータバインドコントロールは、<xref:System.Web.UI.WebControls.SqlDataSourceView>を使用して自動的に更新を実行するように構成できますが、他のコントロールは使用できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-117">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="d2ed7-118">次の更新メソッド、プロパティ、およびイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView> によって実装され、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、開発者やその他の呼び出し元に直接公開されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-118">The following update methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="d2ed7-119"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-119">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-120"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-120">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-121"><xref:System.Web.UI.WebControls.SqlDataSource.Updating> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-121">The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event</span></span>  
  
-   <span data-ttu-id="d2ed7-122"><xref:System.Web.UI.WebControls.SqlDataSource.Updated> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-122">The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event</span></span>  
  
 <span data-ttu-id="d2ed7-123"><xref:System.Web.UI.WebControls.SqlDataSourceView> は、リレーショナルデータベースに新しい行のデータを挿入することをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-123">The <xref:System.Web.UI.WebControls.SqlDataSourceView> supports inserting new rows of data into a relational database.</span></span> <span data-ttu-id="d2ed7-124"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> プロパティで指定された SQL コマンドは、柔軟性とセキュリティを向上させるためにパラメーター化できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-124">The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="d2ed7-125"><xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>などのデータバインドコントロールは、<xref:System.Web.UI.WebControls.SqlDataSourceView>を使用して自動的に挿入を実行するように構成できますが、他のコントロールは使用できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-125">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="d2ed7-126">次の insert メソッド、プロパティ、およびイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView> によって実装され、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、開発者やその他の呼び出し元に直接公開されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-126">The following insert methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="d2ed7-127"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-127">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-128"><xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-128">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-129"><xref:System.Web.UI.WebControls.SqlDataSource.Inserting> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-129">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event</span></span>  
  
-   <span data-ttu-id="d2ed7-130"><xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-130">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event</span></span>  
  
 <span data-ttu-id="d2ed7-131"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトでは、リレーショナルデータベースからのデータの削除もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-131">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object also supports deleting data from a relational database.</span></span> <span data-ttu-id="d2ed7-132">他のコマンドと同様に、[<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>] プロパティで指定された SQL コマンドをパラメーター化して、柔軟性とセキュリティを高めることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-132">As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="d2ed7-133"><xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>などのデータバインドコントロールは、<xref:System.Web.UI.WebControls.SqlDataSourceView>を使用して自動的に削除を実行するように構成できますが、他のコントロールは使用できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-133">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="d2ed7-134">次の delete メソッド、プロパティ、およびイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView> によって実装され、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、開発者やその他の呼び出し元に直接公開されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-134">The following delete methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="d2ed7-135"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-135">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-136"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="d2ed7-136">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property</span></span>  
  
-   <span data-ttu-id="d2ed7-137"><xref:System.Web.UI.WebControls.SqlDataSource.Deleting> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-137">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event</span></span>  
  
-   <span data-ttu-id="d2ed7-138"><xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベント</span><span class="sxs-lookup"><span data-stu-id="d2ed7-138">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event</span></span>  
  
 <span data-ttu-id="d2ed7-139">データの取得時にデータをフィルター処理するために使用される句が動的である場合、データの取得はより強力です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-139">Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic.</span></span> <span data-ttu-id="d2ed7-140">言い換えると、静的な WHERE 句を使用する SQL クエリは、柔軟ではなく、WHERE 句の値が、Web フォームページのコントロールに表示される値など、変更できる値にバインドされる SQL クエリとして強力ではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-140">In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page.</span></span> <span data-ttu-id="d2ed7-141">SQL クエリを再構築し、すべてのページ読み込みで <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティを設定するのではなく、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> プロパティを使用して、データの取得に動的フィルターを適用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-141">Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval.</span></span> <span data-ttu-id="d2ed7-142">これらのプロパティは、<xref:System.Web.UI.WebControls.SqlDataSourceView> によって実装され、データバインドコントロールやその他の呼び出し元に対して <xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって直接公開されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-142">These properties are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.</span></span>  
  
 <span data-ttu-id="d2ed7-143"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用して取得したデータを並べ替えるには、ORDER BY 句を追加します。これにより、データを取得するとき、または取得後にメモリ内のデータを並べ替えるときに、データベースの順序が実行されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-143">You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved.</span></span> <span data-ttu-id="d2ed7-144"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドに渡される <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトの <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> プロパティを設定して、並べ替え式を <xref:System.Web.UI.WebControls.SqlDataSourceView> に渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-144">You can supply a sorting expression to the <xref:System.Web.UI.WebControls.SqlDataSourceView> by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method.</span></span> <span data-ttu-id="d2ed7-145"><xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> プロパティの構文は、<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> プロパティの構文と同じです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-145">The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d2ed7-146">ストアドプロシージャを使用してデータを取得する場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティを使用して、ストアドプロシージャ呼び出しの結果の並べ替えに特に使用されるパラメーターを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-146">If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.</span></span>  
  
 <span data-ttu-id="d2ed7-147">複数のユーザーが同時にデータベースを変更できる場合、同時実行の競合が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-147">When more than one user can change the database concurrently, there is the potential for concurrency conflict.</span></span> <span data-ttu-id="d2ed7-148"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> プロパティを使用して同時実行制御を行います。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-148">The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d2ed7-149">この機能は <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> プロパティに実装されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-149">The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d2ed7-150">他の多くの Web サーバーコントロールと同様に、<xref:System.Web.UI.WebControls.SqlDataSourceView> は <xref:System.Web.UI.IStateManager> インターフェイスを実装し、ビューステートを使用してページ要求全体の状態を追跡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-150">Like many other Web server controls, the <xref:System.Web.UI.WebControls.SqlDataSourceView> implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests.</span></span> <span data-ttu-id="d2ed7-151">コントロールのビューステートの追跡を有効にするために、<xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> とプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>、および <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> メソッドの実装が用意されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-151">Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control.</span></span> <span data-ttu-id="d2ed7-152">詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-152">For more information, see [ASP.NET State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="d2ed7-153"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられているデータ ソース コントロール。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-153">The data source control with which the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> is associated.</span></span></param>
        <param name="name"><span data-ttu-id="d2ed7-154">データ ソース ビューを所有するデータ ソース コントロールのスコープ内の、そのデータ ソース ビューの固有の名前。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-154">A unique name for the data source view, within the scope of the data source control that owns it.</span></span></param>
        <param name="context"><span data-ttu-id="d2ed7-155">現在の <see cref="T:System.Web.HttpContext" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-155">The current <see cref="T:System.Web.HttpContext" />.</span></span></param>
        <summary><span data-ttu-id="d2ed7-156">指定した <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールを現在のビューの所有者として設定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-156">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control as the owner of the current view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-157"><xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> コンストラクターは、指定された `name` パラメーターを使用してデータソースビューの新しいインスタンスを返すために、<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-157">The <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter.</span></span> <span data-ttu-id="d2ed7-158"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、一度に1つの <xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトにのみ関連付けられ、常にビュー `Table`に名前を付けます。ただし、この名前付け制限は、<xref:System.Web.UI.WebControls.SqlDataSourceView>ではなく <xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって行われます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-158">The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>.</span></span> <span data-ttu-id="d2ed7-159"><xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> メソッドをオーバーライドして、異なる名前付け規則を持つビューをサポートすることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-159">You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.</span></span>  
  
 <span data-ttu-id="d2ed7-160">`context` パラメーターによって渡される <xref:System.Web.HttpContext> オブジェクトは、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> や <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> プロパティなどのパラメーターオブジェクトにアクセスするために、データソースビューによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-160">The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-161"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="null" /> と評価されたときに、データ取得操作をキャンセルするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-161">Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluates to <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="d2ed7-162"><see langword="true" /> コレクションに格納されているパラメーターが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> と評価されたときに、データ取得操作をキャンセルする場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-162"><see langword="true" />, if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluated to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2ed7-163">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-163">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-164"><xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-164">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-165">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで削除操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-165">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the delete operation.</span></span></summary>
        <value><span data-ttu-id="d2ed7-166">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-166"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-167"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> プロパティは `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-167">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set.</span></span> <span data-ttu-id="d2ed7-168">すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、削除操作が失敗することがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-168">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-169">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで挿入操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-169">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the insert operation.</span></span></summary>
        <value><span data-ttu-id="d2ed7-170">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-170"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-171"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> プロパティは `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-171">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set.</span></span> <span data-ttu-id="d2ed7-172">すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、挿入操作が失敗することがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-172">An insert operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-173">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データのページングがサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-173">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the paging of retrieved data.</span></span></summary>
        <value><span data-ttu-id="d2ed7-174">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-174"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-175"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトはページングをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-175">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-176">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで、一連のデータに加えて行の合計数を取得する操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-176">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</span></span></summary>
        <value><span data-ttu-id="d2ed7-177">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-177"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-178"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトでは、行数の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-178">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-179">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データの並べ替え済みのビューがサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-179">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the retrieved data.</span></span></summary>
        <value><span data-ttu-id="d2ed7-180">並べ替えがサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-180"><see langword="true" />, if sorting is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-181">現在の <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティが <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 値に設定され、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> プロパティは `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-181">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-182">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで更新操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-182">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the update operation.</span></span></summary>
        <value><span data-ttu-id="d2ed7-183">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-183"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-184"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> プロパティは `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-184">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set.</span></span> <span data-ttu-id="d2ed7-185">すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、削除操作が失敗することがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-185">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-186">基になるデータベース内の行のデータが操作中に変更される場合に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールで更新と削除を実行する方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-186">Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</span></span></summary>
        <value><span data-ttu-id="d2ed7-187"><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-187">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span> <span data-ttu-id="d2ed7-188">既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-188">The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-189"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティは、古い値と新しい値のパラメーターが `Update` メソッドに適用されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-189">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method.</span></span> <span data-ttu-id="d2ed7-190">たとえば、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティによって指定されたコマンドが、`Name` と `Number`の列を持つ <xref:System.Data.DataSet> オブジェクトを返し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 値に設定されている場合、更新操作のために `Name` と `Number` に対してパラメーターが作成されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-190">For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the update operation.</span></span> <span data-ttu-id="d2ed7-191"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている場合、`Name`、`Number`、`original_Name`、および `original_Number`に対してパラメーターが作成されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-191">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="d2ed7-192">(元の値のパラメーターの正確な名前は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>によって異なります)。次に、<xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> プロパティで指定されたメソッドに一致するパラメーターがあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-192">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="d2ed7-193">同時実行制御とは、複数のクライアントが同じデータにアクセスして操作しているときに、ストア内でのデータの読み取りと変更の方法を制御するためにデータストアで使用される手法です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-193">Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="d2ed7-194">たとえば、あるクライアントがデータを読み取り、ユーザーに提示し、別のクライアントが同じデータを読み取って別のユーザーに提示する場合などです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-194">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="d2ed7-195">両方のユーザーがデータを更新してデータストレージに送信した場合、両方のクライアントが同じデータに対して異なる値を更新する可能性があるため、予期しない結果が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-195">If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</span></span> <span data-ttu-id="d2ed7-196">これは、競合と見なされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-196">This is considered a conflict.</span></span> <span data-ttu-id="d2ed7-197"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティを <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定することにより、更新操作では、古い値と新しい値を元のデータソースと比較して、競合を検出し、必要に応じて処理することができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-197">By setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.</span></span>  
  
 <span data-ttu-id="d2ed7-198"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-198">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ed7-199">選択した値が <see cref="T:System.Web.UI.ConflictOptions" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-199">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span></exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce"><span data-ttu-id="d2ed7-200">SqlDataSource Web サーバーコントロールの概要</span><span class="sxs-lookup"><span data-stu-id="d2ed7-200">SqlDataSource Web Server Control Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d2ed7-201"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-201">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="d2ed7-202"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-202">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="d2ed7-203"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-203">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-204">基になるデータベースから削除された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-204">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-205"><xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> メソッドを呼び出し、`keys` および `oldValues` パラメーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-205">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-206"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-206">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="d2ed7-207">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-207">-or-</span></span> 
<span data-ttu-id="d2ed7-208"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-208">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-209"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-209">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-210">基になるデータベースからデータを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-210">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="d2ed7-211">データを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-211">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-212">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-212">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span>  
  
 <span data-ttu-id="d2ed7-213">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-213">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="d2ed7-214">たとえば、プロバイダーが <xref:System.Web.UI.WebControls.SqlDataSource> クラスの既定のプロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType>の場合、パラメーターのプレースホルダーは `'@parameterName'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-214">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="d2ed7-215">ただし、プロバイダーが <xref:System.Data.Odbc?displayProperty=nameWithType> または <xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダーは `'?'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-215">However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="d2ed7-216">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-216">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="d2ed7-217">基になるデータベースでストアドプロシージャがサポートされている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> には SQL 文字列またはストアドプロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-217">The <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.</span></span>  
  
 <span data-ttu-id="d2ed7-218"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-218">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-219">次のコード例は、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> テキストを設定して、Northwind データベースの Orders テーブルから注文を削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-219">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table.</span></span> <span data-ttu-id="d2ed7-220">データは Orders テーブルから取得され、<xref:System.Web.UI.WebControls.GridView> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-220">Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-221"><xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> プロパティが `true` に設定されている場合、<xref:System.Web.UI.WebControls.GridView> は **[削除]** ボタンを自動的に表示します。また、**[削除]** ボタンがクリックされると、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> コレクションが自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-221">The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked.</span></span> <span data-ttu-id="d2ed7-222">最後に、この例ではデータを削除するため、削除操作が実行される前にデータベースをディスクにバックアップしようとするイベントハンドラーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-222">Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-223"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-223">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="d2ed7-224"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-224">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="d2ed7-225">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-225">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-226"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-226">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ed7-227">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-227">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-228">削除操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-228">Occurs when a delete operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-229"><xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> イベントを処理して、削除操作の完了後に出力パラメーターの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-229">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event to examine the values of output parameters after a delete operation has completed.</span></span> <span data-ttu-id="d2ed7-230">出力パラメーターは、イベントに関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> オブジェクトから使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-230">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="d2ed7-231">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-231">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-232"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-232">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="d2ed7-233"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-233">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-234"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> プロパティにパラメーター化された SQL クエリが含まれている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> コレクションには、SQL 文字列のパラメータープレースホルダーに対応する <xref:System.Web.UI.WebControls.Parameter> オブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-234">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="d2ed7-235">パラメーター名は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> プロパティの影響を受ける可能性があります。特に、データバインドコントロールの `DataKeyNames` プロパティを使用して指定されたキーなどの主キーを識別する場合、または <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されていて、`oldValues` のセットが対応するデータメソッドに渡される場合の削除と更新のシナリオでは、です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-235">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="d2ed7-236">この場合、書式文字列は `oldValues` コレクション内の各パラメーター名に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-236">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="d2ed7-237">ADO.NET プロバイダーによっては、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> コレクション内のパラメーターの順序が重要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-237">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection might be important.</span></span> <span data-ttu-id="d2ed7-238"><xref:System.Data.OleDb?displayProperty=nameWithType> プロバイダーと <xref:System.Data.Odbc?displayProperty=nameWithType> プロバイダーは、パラメーター化された SQL クエリに含まれるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-238">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="d2ed7-239"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの既定の ADO.NET プロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType> プロバイダーは、パラメーターの名前と SQL クエリのプレースホルダーを照合することによって、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-239">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</span></span> <span data-ttu-id="d2ed7-240">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-240">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-241">次のコード例は、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> テキストを設定して、Northwind データベースから注文を削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-241">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="d2ed7-242">最初に、データは Orders テーブルから取得され、<xref:System.Web.UI.WebControls.DropDownList> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-242">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-243"><xref:System.Web.UI.WebControls.DropDownList> などのデータバインドコントロールを使用する場合は、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> プロパティを明示的に宣言し、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> メソッドを呼び出す必要があります。このような <xref:System.Web.UI.WebControls.GridView> コントロールには、パラメーターが自動的に設定され、データソースコントロールの <xref:System.Web.UI.WebControls.DetailsView>メソッドが呼び出されます。<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A></span><span class="sxs-lookup"><span data-stu-id="d2ed7-243">You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control).</span></span> <span data-ttu-id="d2ed7-244">この例では、<xref:System.Web.UI.WebControls.Button.OnClick%2A> イベントは、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> メソッドを明示的に呼び出すプライベート <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> イベントハンドラーに委任されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-244">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-245">削除操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-245">Occurs before a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-246"><xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> イベントを処理して、アプリケーション固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールで削除操作を実行する前にパラメーター値を変更したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-246">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.</span></span>  
  
 <span data-ttu-id="d2ed7-247">イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-247">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="d2ed7-248">したがって、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> オブジェクトによって公開されている <xref:System.Data.Common.DbCommand> オブジェクトで <xref:System.Data.Common.DbCommand.Cancel%2A> メソッドを呼び出すことによって、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 操作を直接取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-248">Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="d2ed7-249">ただし、操作を取り消すには、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> の [<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>] プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-249">You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="d2ed7-250">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-250">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-251">次のコード例では、削除操作を実行する前に発生する <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> イベントを処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-251">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs.</span></span> <span data-ttu-id="d2ed7-252">この例では、Northwind データベースからデータを削除するので、削除操作が実行される前にデータベースをディスクにバックアップしようとするために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> ハンドラーが追加されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-252">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d2ed7-253"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-253">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="d2ed7-254"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-254">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="d2ed7-255"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-255">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-256">基になるデータベースから削除された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-256">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-257"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、データベースからデータを削除するための継承された <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-257">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database.</span></span> <span data-ttu-id="d2ed7-258">ページ開発者とデータバインドコントロールの作成者は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> メソッドを直接呼び出すことはありません。代わりに、公開されている <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-258">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span>  
  
 <span data-ttu-id="d2ed7-259">`keys` コレクションに含まれる値が評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> コレクションに含まれる値とマージされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-259">The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-260"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている場合、`oldValues` コレクションに含まれる値は <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> プロパティで書式設定され、マージされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-260">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.</span></span>  
  
 <span data-ttu-id="d2ed7-261">削除操作が実行される前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-261">Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event.</span></span> <span data-ttu-id="d2ed7-262">このイベントを処理して、パラメーターの値を確認したり、削除の前にプリプロセスを実行したりできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-262">You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.</span></span>  
  
 <span data-ttu-id="d2ed7-263">削除操作を実行するために、<xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> テキストと関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> プロパティを使用して <xref:System.Data.Common.DbCommand> オブジェクトを構築し、基になるデータベースに対して <xref:System.Data.Common.DbCommand> オブジェクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-263">To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="d2ed7-264">削除操作が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-264">After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event.</span></span> <span data-ttu-id="d2ed7-265">このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-265">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-266"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-266">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="d2ed7-267">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-267">-or-</span></span> 
<span data-ttu-id="d2ed7-268"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-268">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d2ed7-269">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-269">The current user does not have the correct permissions to access to the database.</span></span>  
  
<span data-ttu-id="d2ed7-270">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-270">-or-</span></span> 
<span data-ttu-id="d2ed7-271">コントロールのインスタンスは、<see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールであり、<see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> プロパティに指定されているパスへのアクセスは拒否されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-271">The instance of the control is an <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-272"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-272">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span>  
  
<span data-ttu-id="d2ed7-273">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-273">-or-</span></span> 
<span data-ttu-id="d2ed7-274"><see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールのインスタンスを使用する前に、デザイン時の相対パスがデザイナーによって正しく割り当てられていませんでした。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-274">A design-time relative path was not mapped correctly by the designer before using an instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="d2ed7-275">データベースへの挿入操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用される値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-275">An <see cref="T:System.Collections.IDictionary" /> of values used with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to perform the insert database operation.</span></span> <span data-ttu-id="d2ed7-276">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-276">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d2ed7-277"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-277">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-278">基になるデータベースに挿入された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-278">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-279"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、データベースにデータを挿入するための継承された <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-279">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database.</span></span> <span data-ttu-id="d2ed7-280">ページ開発者とデータバインドコントロールの作成者は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> メソッドを直接呼び出すことはありません。代わりに、公開されている <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-280">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="d2ed7-281">挿入操作が実行される前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-281">Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event.</span></span> <span data-ttu-id="d2ed7-282">このイベントを処理して、パラメーターの値を調べたり、挿入前の前処理を実行したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-282">You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.</span></span>  
  
 <span data-ttu-id="d2ed7-283">挿入操作を実行するために、<xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> テキストと関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> プロパティを使用して <xref:System.Data.Common.DbCommand> オブジェクトを構築し、基になるデータベースに対して <xref:System.Data.Common.DbCommand> オブジェクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-283">To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="d2ed7-284">挿入が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-284">After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event.</span></span> <span data-ttu-id="d2ed7-285">このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-285">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-286"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-286">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d2ed7-287">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-287">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-288"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-288">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="d2ed7-289">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-289">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="d2ed7-290"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-290">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-291">データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-291">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-292"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、データベースからデータを取得するための継承された <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-292">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method to retrieve data from a database.</span></span> <span data-ttu-id="d2ed7-293">ページ開発者とデータバインドコントロールの作成者は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> メソッドを直接呼び出すことはありません。代わりに、公開されている <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-293">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span>  
  
 <span data-ttu-id="d2ed7-294">データの取得が実行される前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-294">Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event.</span></span> <span data-ttu-id="d2ed7-295">このイベントを処理して、パラメーターの値を調べたり、データを取得する前に前処理を実行したりできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-295">You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.</span></span>  
  
 <span data-ttu-id="d2ed7-296">この操作を実行するために、<xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトは <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストと関連付けられている <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>を使用して <xref:System.Data.Common.DbCommand> オブジェクトを構築し、基になるデータベースに対して実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-296">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database.</span></span> <span data-ttu-id="d2ed7-297">操作が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSource.Selected> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-297">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event.</span></span> <span data-ttu-id="d2ed7-298">このイベントを処理して、戻り値、エラーコードを確認し、後処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-298">You can handle this event to examine any return values, error codes, and perform any post-processing.</span></span>  
  
 <span data-ttu-id="d2ed7-299"><xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> が <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>に設定されている場合は <xref:System.Data.DataView> オブジェクトを返し、<xref:System.Data.IDataReader> が <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> に設定されている場合は <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-299">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>.</span></span> <span data-ttu-id="d2ed7-300">データの読み取りが終了したら、<xref:System.Data.IDataReader> オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-300">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 <span data-ttu-id="d2ed7-301"><xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> が <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> に設定されていて、キャッシュが有効になっている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView> はからデータを取得し、データ操作中にデータをキャッシュに保存します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-301">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation.</span></span> <span data-ttu-id="d2ed7-302">キャッシュは、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> と <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> のプロパティの組み合わせによって指定されたキャッシュの動作に基づいて作成、破棄、または更新されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-302">The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d2ed7-303">Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-303">When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="d2ed7-304">別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-304">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="d2ed7-305">データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-305">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="d2ed7-306">複数のユーザーがデータにアクセスすることを想定していて、データベースのセキュリティ構成によってデータの取得を検証する必要がある場合は、キャッシュを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-306">If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.</span></span>  
  
 <span data-ttu-id="d2ed7-307"><xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> が <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> に設定されていて、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> が指定されている場合は、指定された <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> と共に評価され、結果のフィルターはデータ取得操作中にデータの一覧に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-307">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-308"><paramref name="arguments" /> メソッドに渡される <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-308">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span>  
  
<span data-ttu-id="d2ed7-309">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-309">-or-</span></span> 
<span data-ttu-id="d2ed7-310">キャッシュは有効ですが、データ ソースの <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> プロパティが <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-310">Caching is enabled but the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property of the data source is not set to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.</span></span>  
  
<span data-ttu-id="d2ed7-311">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-311">-or-</span></span> 
<span data-ttu-id="d2ed7-312"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> プロパティが設定されていますが、<see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> が <see cref="F:System.Data.CommandType.StoredProcedure" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-312">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> property is set but <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> is not set to <see cref="F:System.Data.CommandType.StoredProcedure" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-313">データ ソースがデータベース接続を作成できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-313">The data source cannot create a database connection.</span></span>  
  
<span data-ttu-id="d2ed7-314">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-314">-or-</span></span>
  
 <span data-ttu-id="d2ed7-315">キャッシュは有効ですが、内部キャッシュとコマンドの種類が一致していません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-315">Caching is enabled but the internal cache and command types do not match.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d2ed7-316">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-316">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="d2ed7-317">クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-317">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="d2ed7-318">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-318">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="d2ed7-319">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-319">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="d2ed7-320">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-320">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="d2ed7-321">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-321">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d2ed7-322"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-322">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-323">基になるデータベースで更新された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-323">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-324"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスは、データベース内のデータを更新するための継承された <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-324">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method to update data in a database.</span></span> <span data-ttu-id="d2ed7-325">ページ開発者とデータバインドコントロールの作成者は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> メソッドを直接呼び出すことはありません。代わりに、公開されている <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-325">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.</span></span>  
  
 <span data-ttu-id="d2ed7-326">`keys` コレクションと `values` コレクションに含まれる値が評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> コレクションに含まれるすべての値とマージされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-326">The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-327"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues>に設定されている場合、`oldValues` コレクションに含まれる値は <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> で書式設定され、さらにマージされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-327">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions.CompareAllValues>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.</span></span>  
  
 <span data-ttu-id="d2ed7-328">更新操作が実行される前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-328">Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event.</span></span> <span data-ttu-id="d2ed7-329">このイベントを処理して、更新前のパラメーターの値を確認し、前処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-329">You can handle this event to examine the values of the parameters and perform any preprocessing before an update.</span></span>  
  
 <span data-ttu-id="d2ed7-330">この操作を実行するために、<xref:System.Web.UI.WebControls.SqlDataSourceView> は <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> テキストと関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> プロパティを使用して <xref:System.Data.Common.DbCommand> オブジェクトを構築し、基になるデータベースに対して <xref:System.Data.Common.DbCommand> オブジェクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-330">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="d2ed7-331">操作が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-331">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event.</span></span> <span data-ttu-id="d2ed7-332">このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-332">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-333"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-333">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="d2ed7-334">または</span><span class="sxs-lookup"><span data-stu-id="d2ed7-334">-or-</span></span> 
<span data-ttu-id="d2ed7-335"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-335">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d2ed7-336">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-336">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-337"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-337">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-338"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> メソッドが呼び出されるときに適用されるフィルター式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-338">Gets or sets a filtering expression that is applied when the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> method is called.</span></span></summary>
        <value><span data-ttu-id="d2ed7-339"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-339">A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-340"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティに使用される構文は、書式設定文字列形式の構文です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-340">The syntax that is used for the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is a format string-style syntax.</span></span> <span data-ttu-id="d2ed7-341"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティにパラメーターを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-341">You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="d2ed7-342">パラメーターの型が文字列または文字の場合は、パラメーターを単一引用符で囲みます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-342">If the type of the parameter is string or character, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="d2ed7-343">パラメーターが数値型の場合、引用符は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-343">Quotation marks are not required, if the parameter is a numeric type.</span></span>  
  
 <span data-ttu-id="d2ed7-344"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> コレクションには、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティで検出されたプレースホルダーに対して評価されるパラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-344">The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="d2ed7-345"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、`DataSet` モードの場合にのみデータのフィルター処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-345">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.</span></span>  
  
 <span data-ttu-id="d2ed7-346"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-346">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is stored in view state.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d2ed7-347">クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-347">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="d2ed7-348">ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataView> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-348">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="d2ed7-349">返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-349">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-350">次のコード例では、Northwind データベースからデータを取得し、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> および <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティを使用してフィルター処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-350">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="d2ed7-351"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティは、データを取得するために <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> メソッドが実行されるたびに適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-351">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="d2ed7-352">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティに、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> コレクションに含まれているフィルターパラメーターのプレースホルダーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-352">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-353">この例では、filter パラメーターは、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティにバインドされた <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-353">In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-354"><xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> プロパティは `true`に設定されているため、<xref:System.Web.UI.WebControls.DropDownList> の選択を変更すると、ページがサーバーにポストされ、<xref:System.Web.UI.WebControls.GridView> コントロールによって、新しいフィルターを使用してデータソースコントロールに再バインドされます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-354">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-355"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> が <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> モードのときに、<see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-355">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property was set when the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in the <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-356">フィルター操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-356">Occurs before a filter operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-357"><xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトがフィルター操作を実行する前に、フィルターパラメーター値に対して検証操作を実行するために <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-357">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation.</span></span> <span data-ttu-id="d2ed7-358"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドを取り消すには、<xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> オブジェクトの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-358">You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`.</span></span> <span data-ttu-id="d2ed7-359">イベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティが設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-359">The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d2ed7-360">クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-360">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="d2ed7-361">ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataView> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-361">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="d2ed7-362">返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-362">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
 <span data-ttu-id="d2ed7-363">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-363">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-364"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-364">Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> string.</span></span></summary>
        <value><span data-ttu-id="d2ed7-365"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-365">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-366"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> コレクション内のパラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> プロパティで指定されているすべてのパラメーターに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-366">The parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="d2ed7-367"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> で指定されたパラメーターのプレースホルダーは、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドが呼び出されたときに、順序に従って評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> コレクション内のパラメーターオブジェクトに一致します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-367">The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d2ed7-368">クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-368">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="d2ed7-369">ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataView> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-369">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="d2ed7-370">返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-370">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-371">次のコード例では、Northwind データベースからデータを取得し、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> および <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティを使用してフィルター処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-371">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="d2ed7-372"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティは、データを取得するために <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> メソッドが実行されるたびに適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-372">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="d2ed7-373">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティに、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> コレクションに含まれているフィルターパラメーターのプレースホルダーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-373">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-374">また、filter パラメーターは、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティにバインドされた <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-374">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-375"><xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> プロパティは `true`に設定されているので、<xref:System.Web.UI.WebControls.DropDownList> の選択を変更すると、ページによってサーバーに情報がポストバックされ、新しいフィルターを使用してデータソースコントロールに再バインドするための <xref:System.Web.UI.WebControls.GridView> コントロールが発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-375">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="d2ed7-376">データベースへの挿入操作の実行に使用する、<see cref="T:System.Collections.IDictionary" /> プロパティのパラメーターの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-376">An <see cref="T:System.Collections.IDictionary" /> of parameters for the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to use to perform the insert database operation.</span></span> <span data-ttu-id="d2ed7-377">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-377">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d2ed7-378"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-378">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-379">基になるデータベースに挿入された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-379">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-380"><xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> メソッドを呼び出し、`values` パラメーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-380">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-381"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-381">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-382"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-382">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-383">基になるデータベースにデータを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-383">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to insert data into the underlying database.</span></span></summary>
        <value><span data-ttu-id="d2ed7-384">データを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-384">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to insert data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-385">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-385">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="d2ed7-386">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-386">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="d2ed7-387">たとえば、プロバイダーが <xref:System.Web.UI.WebControls.SqlDataSource> クラスの既定のプロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType>の場合、パラメーターのプレースホルダーは `'@parameterName'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-387">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="d2ed7-388">ただし、プロバイダーが <xref:System.Data.Odbc?displayProperty=nameWithType> または <xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダーは `'?'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-388">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="d2ed7-389">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-389">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="d2ed7-390">データソースがストアドプロシージャをサポートしている場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-390">The <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="d2ed7-391"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-391">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-392">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-392">This section contains two code examples.</span></span> <span data-ttu-id="d2ed7-393">最初のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用してデータベースにデータを挿入する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-393">The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="d2ed7-394">2番目のコード例では、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して <xref:System.Web.UI.WebControls.GridView> 内の選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-394">The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-395">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用してデータベースにデータを挿入する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-395">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="d2ed7-396">テーブルの現在のデータが <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-396">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-397">新しいレコードを追加するには、<xref:System.Web.UI.WebControls.TextBox> コントロールに値を入力し、**[挿入]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-397">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="d2ed7-398">**[挿入]** ボタンをクリックすると、指定した値がデータベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-398">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 <span data-ttu-id="d2ed7-399">次のコード例は、SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して <xref:System.Web.UI.WebControls.GridView> 内の選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-399">The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-400">初期状態では、データは <xref:System.Web.UI.WebControls.GridView> コントロールに表示され、<xref:System.Web.UI.WebControls.GridView> の選択した行は <xref:System.Web.UI.WebControls.DetailsView> コントロールにも表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-400">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="d2ed7-401"><xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールは、異なるデータソースコントロールを使用します。<xref:System.Web.UI.WebControls.DetailsView> に関連付けられているプロパティには、<xref:System.Web.UI.WebControls.GridView> の選択した行が表示されるように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-401">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="d2ed7-402"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-402">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-403">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-403">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-404">レコードを挿入すると、<xref:System.Web.UI.WebControls.DetailsView> によって <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> コレクションにバインドされた列の値が自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-404">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="d2ed7-405"><xref:System.Web.UI.WebControls.DetailsView> は、ASP.NET 双方向のデータバインディング構文が使用されている場合に、任意の <xref:System.Web.UI.WebControls.BoundField> オブジェクトと <xref:System.Web.UI.WebControls.TemplateField> オブジェクトのパラメーターを使用して、正しいパラメーターを推論できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-405">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="d2ed7-406">この例では、ストアドプロシージャによって返される主キーを処理するために、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> イベントハンドラーに追加のパラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-406">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-407">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-407">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-408"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-408">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="d2ed7-409"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-409">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="d2ed7-410">値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-410">The value is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-411"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-411">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-412">次のコード例は、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して <xref:System.Web.UI.WebControls.GridView> 内の選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-412">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-413"><xref:System.Web.UI.WebControls.GridView> コントロールにはデータのセットが表示され、<xref:System.Web.UI.WebControls.DetailsView> コントロールには特定の行の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-413">The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row.</span></span> <span data-ttu-id="d2ed7-414"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-414">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-415">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-415">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-416">ストアドプロシージャ名は <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> プロパティで設定され、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> プロパティを <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> 値に設定することにより、ストアドプロシージャとして識別されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-416">The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.</span></span>  
  
 <span data-ttu-id="d2ed7-417">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-417">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ed7-418">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-418">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-419">挿入操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-419">Occurs when an insert operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-420">挿入操作が完了した後の出力パラメーターの値を確認するには、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-420">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event to examine the values of output parameters after an insert operation has completed.</span></span> <span data-ttu-id="d2ed7-421">出力パラメーターは、イベントに関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> オブジェクトから使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-421">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="d2ed7-422">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-422">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-423">次のコード例は、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-423">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-424">また、この例では、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、<xref:System.Web.UI.WebControls.GridView>内の選択した行の詳細を表示したり、新しいレコードを挿入するためのフォームとして使用したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-424">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-425">初期状態では、データは <xref:System.Web.UI.WebControls.GridView> コントロールに表示され、<xref:System.Web.UI.WebControls.GridView> の選択した行も <xref:System.Web.UI.WebControls.DetailsView>に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-425">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>.</span></span> <span data-ttu-id="d2ed7-426"><xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールは、異なるデータソースコントロールを使用します。<xref:System.Web.UI.WebControls.DetailsView> に関連付けられているプロパティには、<xref:System.Web.UI.WebControls.GridView> の選択した行が表示されるように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-426">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="d2ed7-427"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-427">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-428">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-428">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-429">レコードを挿入すると、<xref:System.Web.UI.WebControls.DetailsView> によって <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> コレクションにバインドされた列の値が自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-429">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="d2ed7-430"><xref:System.Web.UI.WebControls.DetailsView> は、ASP.NET 双方向のデータバインディング構文が使用されている場合に、任意の <xref:System.Web.UI.WebControls.BoundField> オブジェクトと <xref:System.Web.UI.WebControls.TemplateField> オブジェクトのパラメーターを使用して、正しいパラメーターを推論できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-430">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="d2ed7-431">この例では、ストアドプロシージャによって返される主キーを処理するために、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> イベントハンドラーに追加のパラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-431">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-432">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-432">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-433">挿入操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-433">Occurs before an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-434"><xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> イベントを処理して、アプリケーション固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールが挿入操作を実行する前にパラメーター値を変更したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-434">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.</span></span>  
  
 <span data-ttu-id="d2ed7-435">イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-435">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="d2ed7-436">したがって、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> オブジェクトによって公開されている <xref:System.Data.Common.DbCommand> オブジェクトで <xref:System.Data.Common.DbCommand.Cancel%2A> メソッドを呼び出すことによって、データベース操作を直接取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-436">Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="d2ed7-437">ただし、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> の [<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>] プロパティを `true`に設定して、データベース操作を取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-437">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="d2ed7-438">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-438">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-439">次のコード例は、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-439">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-440">また、この例では、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、<xref:System.Web.UI.WebControls.GridView>内の選択した行の詳細を表示したり、新しいレコードを挿入するためのフォームとして使用したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-440">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-441">初期状態では、データは <xref:System.Web.UI.WebControls.GridView> コントロールに表示され、<xref:System.Web.UI.WebControls.GridView> の選択した行は <xref:System.Web.UI.WebControls.DetailsView> コントロールにも表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-441">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="d2ed7-442"><xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールは、異なるデータソースコントロールを使用します。<xref:System.Web.UI.WebControls.DetailsView> に関連付けられているプロパティには、<xref:System.Web.UI.WebControls.GridView> の選択した行が表示されるように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-442">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="d2ed7-443"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-443">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-444">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-444">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-445">レコードを挿入すると、<xref:System.Web.UI.WebControls.DetailsView> によって <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> コレクションにバインドされた列の値が自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-445">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="d2ed7-446"><xref:System.Web.UI.WebControls.DetailsView> は、任意の <xref:System.Web.UI.WebControls.BoundField> オブジェクトから正しいパラメーターを推論できます。また、ASP.NET 双方向のデータバインディング構文が使用されている場合は、<xref:System.Web.UI.WebControls.TemplateField> オブジェクトのパラメーターを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-446">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="d2ed7-447">この例では、ストアドプロシージャによって返される主キーを処理するために、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> イベントハンドラーに追加のパラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-447">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-448">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-448">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-449"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-449">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="d2ed7-450"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-450">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-451"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> プロパティにパラメーター化された SQL クエリが含まれている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> コレクションには、SQL 文字列のパラメータープレースホルダーに対応する <xref:System.Web.UI.WebControls.Parameter> オブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-451">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="d2ed7-452">ADO.NET プロバイダーによっては、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> コレクション内のパラメーターの順序が重要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-452">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection might be important.</span></span> <span data-ttu-id="d2ed7-453"><xref:System.Data.OleDb?displayProperty=nameWithType> プロバイダーと <xref:System.Data.Odbc?displayProperty=nameWithType> プロバイダーは、パラメーター化された SQL クエリ内のパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-453">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="d2ed7-454"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの既定の ADO.NET プロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType> プロバイダーは、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-454">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="d2ed7-455">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-455">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-456">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-456">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="d2ed7-457">テーブルの現在のデータが <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-457">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-458">新しいレコードを追加するには、<xref:System.Web.UI.WebControls.TextBox> コントロールに値を入力し、**[挿入]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-458">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="d2ed7-459">**[挿入]** ボタンをクリックすると、指定した値がデータベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-459">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-460"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-460">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object is saving changes to its view state.</span></span></summary>
        <value><span data-ttu-id="d2ed7-461">データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-461"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="d2ed7-462">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-462">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="d2ed7-463">データ ソース ビューの、以前保存したビューステートを復元します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-463">Restores the previously saved view state for the data source view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-464">このメソッドは、主に [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] インフラストラクチャによって使用されます。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-464">This method is primarily used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  <span data-ttu-id="d2ed7-465">ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-465">However, control developers can override this method to specify how a custom server control restores its view state.</span></span> <span data-ttu-id="d2ed7-466">詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-466">For more information, see [ASP.NET State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).</span></span>  
  
 <span data-ttu-id="d2ed7-467"><xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> メソッドによって保存された前回のページ要求から、<xref:System.Web.UI.WebControls.SqlDataSourceView> オブジェクトのビューステート情報を復元します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-467">The <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-468"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> メソッドに渡される任意のパラメーター名に適用される書式指定文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-468">Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> method.</span></span></summary>
        <value><span data-ttu-id="d2ed7-469"><paramref name="oldValues" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドに渡される任意の <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> パラメーターの名前に適用される書式指定文字列を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-469">A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> methods.</span></span> <span data-ttu-id="d2ed7-470">既定値は "{0}" です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-470">The default is "{0}".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-471"><xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 書式指定文字列は主キーにのみ適用されます。たとえば、データバインドコントロールの `DataKeyNames` プロパティによって識別されるものや、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定され、`oldValues` のセットが対応するデータメソッドに渡される削除および更新のシナリオなどがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-471">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="d2ed7-472">この場合、書式文字列は `oldValues` コレクション内の各パラメーター名に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-472">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span> <span data-ttu-id="d2ed7-473">詳細については、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-473">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2ed7-474"><xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-474">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-475">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-475">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-476"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> コントロールが削除操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-476">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-477">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-477">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-478">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-478">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-479"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-479">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-480">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-480">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-481">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-481">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-482">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-482">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-483"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> コントロールが削除操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-483">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-484">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-484">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-485">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-485">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-486"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-486">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-487">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-487">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-488">次のコード例は、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 操作が発生する前に発生する <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> イベントの処理方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-488">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs.</span></span> <span data-ttu-id="d2ed7-489">この例では、Northwind データベースからデータを削除するため、削除を実行する前にデータベースをディスクにバックアップするために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> ハンドラーが追加されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-489">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-490">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-490">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-491">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-491">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-492"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> コントロールが選択操作の結果をフィルター処理する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-492">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control filters the results of a select operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-493">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-493">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-494">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-494">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-495"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-495">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-496">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-496">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-497">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-497">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-498">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-498">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-499"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> コントロールが挿入操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-499">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-500">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-500">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-501">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-501">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-502"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-502">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-503">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-503">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-504">次のコード例は、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して <xref:System.Web.UI.WebControls.GridView> 内の選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-504">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-505">初期状態では、データは <xref:System.Web.UI.WebControls.GridView> コントロールに表示され、<xref:System.Web.UI.WebControls.GridView> の選択した行は <xref:System.Web.UI.WebControls.DetailsView> コントロールにも表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-505">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="d2ed7-506"><xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールは、異なるデータソースコントロールを使用します。<xref:System.Web.UI.WebControls.DetailsView> に関連付けられているプロパティには、<xref:System.Web.UI.WebControls.GridView> の選択した行が表示されるように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-506">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="d2ed7-507"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-507">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-508">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-508">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-509">レコードを挿入すると、<xref:System.Web.UI.WebControls.DetailsView> によって <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> コレクションにバインドされた列の値が自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-509">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="d2ed7-510"><xref:System.Web.UI.WebControls.DetailsView> は、ASP.NET 双方向のデータバインディング構文が使用されている場合に、任意の <xref:System.Web.UI.WebControls.BoundField> オブジェクトと <xref:System.Web.UI.WebControls.TemplateField> オブジェクトのパラメーターを使用して、正しいパラメーターを推論できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-510">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="d2ed7-511">この例では、ストアドプロシージャによって返される主キーを処理するために、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> イベントハンドラーに追加のパラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-511">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-512">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-512">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-513">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-513">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-514">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-514">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-515"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> コントロールが挿入操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-515">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-516">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-516">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-517">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-517">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-518"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-518">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-519">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-519">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-520">次のコード例は、Microsoft SQL Server からデータを取得し、それを <xref:System.Web.UI.WebControls.GridView> コントロールに表示し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して <xref:System.Web.UI.WebControls.GridView> 内の選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-520">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="d2ed7-521">初期状態では、データは <xref:System.Web.UI.WebControls.GridView> コントロールに表示され、<xref:System.Web.UI.WebControls.GridView> の選択した行は <xref:System.Web.UI.WebControls.DetailsView> コントロールにも表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-521">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="d2ed7-522"><xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールは、異なるデータソースコントロールを使用します。<xref:System.Web.UI.WebControls.DetailsView> に関連付けられているプロパティには、<xref:System.Web.UI.WebControls.GridView> の選択した行が表示されるように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> プロパティと <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-522">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="d2ed7-523"><xref:System.Web.UI.WebControls.DetailsView> コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが <xref:System.Web.UI.WebControls.DetailsView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-523">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="d2ed7-524">この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-524">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="d2ed7-525">レコードを挿入すると、<xref:System.Web.UI.WebControls.DetailsView> によって <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> コレクションにバインドされた列の値が自動的に設定され、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-525">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="d2ed7-526"><xref:System.Web.UI.WebControls.DetailsView> は、ASP.NET 双方向のデータバインディング構文が使用されている場合に、任意の <xref:System.Web.UI.WebControls.BoundField> オブジェクトと <xref:System.Web.UI.WebControls.TemplateField> オブジェクトのパラメーターを使用して、正しいパラメーターを推論できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-526">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="d2ed7-527">この例では、ストアドプロシージャによって返される主キーを処理するために、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> イベントハンドラーに追加のパラメーターが追加されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-527">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-528">最後に、<xref:System.Web.UI.WebControls.DetailsView> コントロールによってデータベースにデータが挿入された後、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> イベントを処理するために <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> イベントハンドラーが呼び出され、挿入された行の主キーの値が表示されます。また、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドは、データを更新するために明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-528">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-529">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-529">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-530">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-530">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-531"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> コントロールがデータ取得操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-531">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-532">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-532">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-533">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-533">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-534"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-534">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-535">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-535">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-536">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-536">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-537">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-537">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-538"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> コントロールがデータ取得操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-538">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-539">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-539">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-540">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-540">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-541"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-541">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-542">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-542">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-543">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-543">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-544">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-544">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-545"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> コントロールが更新操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-545">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-546">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-546">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-547">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-547">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-548"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-548">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-549">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-549">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-550">次のコード例は、<xref:System.Web.UI.WebControls.GridView> コントロールの ODBC データベースから取得したデータを表示および更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-550">The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-551">レコードが正常に更新されると、イベントハンドラーによって <xref:System.Web.UI.WebControls.SqlDataSource.Updated> イベントが処理され、電子メールメッセージ通知が送信される後処理の手順が実行されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-551">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-552">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-552">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d2ed7-553">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-553">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d2ed7-554"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> コントロールが更新操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-554">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-555">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-555">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d2ed7-556">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-556">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d2ed7-557"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-557">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d2ed7-558">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-558">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-559">次のコード例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用してレコードを更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-559">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="d2ed7-560">この例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用してデータを更新するときに、<xref:System.Data.Common.DbTransaction> オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-560">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2ed7-561">派生クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-561">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-562">パラメーター化された SQL クエリ内のパラメーター プレースホルダーのプレフィックスとして使用される文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-562">Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</span></span></summary>
        <value><span data-ttu-id="d2ed7-563">"@" 文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-563">The "@" string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-564">SQL クエリおよびコマンドは、実行時にクエリにバインドされている値のプレースホルダーが含まれているので、パラメーター化できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-564">SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time.</span></span> <span data-ttu-id="d2ed7-565"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティによって識別される <xref:System.Web.UI.WebControls.SqlDataSource> コントロールに設定されている ADO.NET プロバイダーに応じて、パラメーターは、エイリアスまたは <xref:System.Web.UI.WebControls.ParameterCollection> オブジェクト内での順序によって評価されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-565">Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.</span></span>  
  
 <span data-ttu-id="d2ed7-566"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> が設定されていない場合、または <xref:System.Data.SqlClient?displayProperty=nameWithType>に設定されている場合、パラメーターはエイリアスによって評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> プロパティを使用して、データの取得またはデータ操作の操作中に、<xref:System.Web.UI.WebControls.Parameter> 内の各 <xref:System.Web.UI.WebControls.ParameterCollection> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティにパラメータープレフィックスが追加されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-566">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=nameWithType>, parameters are evaluated by alias and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation.</span></span> <span data-ttu-id="d2ed7-567"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティが <xref:System.Data.OleDb?displayProperty=nameWithType> または <xref:System.Data.Odbc?displayProperty=nameWithType>に設定されている場合、パラメーターは順序に従って評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> プロパティと <xref:System.Web.UI.WebControls.Parameter.Name%2A> プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-567">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=nameWithType> or <xref:System.Data.Odbc?displayProperty=nameWithType>, the parameters are evaluated by order and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.</span></span>  
  
 <span data-ttu-id="d2ed7-568"><xref:System.Web.UI.WebControls.SqlDataSourceView> クラスを拡張する場合は、必要に応じて、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> プロパティをオーバーライドして、`"@"` 文字列以外のプレフィックスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-568">If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property to supply a prefix other than the `"@"` string, if required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability"><span data-ttu-id="d2ed7-569">ビューでサポートされている機能と比較される、<see cref="T:System.Web.UI.DataSourceCapabilities" /> のいずれかの値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-569">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</span></span></param>
        <summary><span data-ttu-id="d2ed7-570"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作に要求される機能と、ビューでサポートされ、<see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> メソッドによって呼び出される機能を比較します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-570">Compares the capabilities that are requested for an <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports and is called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-571"><xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> メソッドは、データバインドコントロールによって要求された各機能を調べ、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドに渡される <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトによって表され、これらの機能をデータソースビューでサポートされている機能と比較するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-571">The <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view.</span></span> <span data-ttu-id="d2ed7-572"><xref:System.Web.UI.DataSourceSelectArguments> オブジェクトによって表され、データソースビューでサポートされていない機能については、<xref:System.NotSupportedException> の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-572">For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-573">データ ソース内で、選択した <paramref name="capability" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-573">The data source does not have the selected <paramref name="capability" /> enabled.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ed7-574">ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールのビューステートへの変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-574">Saves the changes to the view state for the  <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control since the time that the page was posted back to the server.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-575"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-575">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-576"><xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-576">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method is primarily used by control developers.</span></span>  
  
 <span data-ttu-id="d2ed7-577">ビューステートは、サーバーコントロールのプロパティの値を累積したものです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-577">View state is the accumulation of the values of the properties for a server control.</span></span> <span data-ttu-id="d2ed7-578">これらの値は、<xref:System.Web.UI.StateBag> クラスのインスタンスであるサーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> プロパティに自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-578">These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="d2ed7-579">サーバーコントロールの <xref:System.Web.UI.Control.ViewState%2A> 値は、サーバーコントロールのライフサイクルの状態の保存ステージの後に文字列オブジェクトに保持されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-579">The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.</span></span>  
  
 <span data-ttu-id="d2ed7-580">ビューステートが保存されると、サーバー制御のライフサイクルの状態の保存ステージの後に永続化された文字列オブジェクトが、HTML `Hidden` 要素に格納されている変数としてクライアントに返されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-580">When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element.</span></span> <span data-ttu-id="d2ed7-581">カスタムサーバーコントロールを作成する場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> メソッドをオーバーライドし、サーバーコントロールの `ViewState` プロパティを変更することで、効率を向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-581">When you author custom server controls, you can improve efficiency by overriding the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method and modifying the `ViewState` property for your server control.</span></span> <span data-ttu-id="d2ed7-582">詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-582">For more information, see [ASP.NET State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="d2ed7-583">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-583">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="d2ed7-584"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-584">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-585">データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-585">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-586"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> メソッドを呼び出し、`selectArgs` パラメーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-586">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.</span></span>  
  
 <span data-ttu-id="d2ed7-587"><xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティが <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 値に設定されているか、<xref:System.Data.IDataReader> プロパティが <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 値に設定されている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> メソッドは <xref:System.Data.DataView> オブジェクトを返します。<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader></span><span class="sxs-lookup"><span data-stu-id="d2ed7-587">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value.</span></span> <span data-ttu-id="d2ed7-588">データの読み取りが終了したら、<xref:System.Data.IDataReader> オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-588">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-589"><paramref name="selectArgs" /> メソッドに渡される <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-589">The <paramref name="selectArgs" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-590"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-590">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-591">基になるデータベースからデータを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-591">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to retrieve data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="d2ed7-592">データを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-592">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to retrieve data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-593">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-593">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="d2ed7-594">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-594">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="d2ed7-595">たとえば、プロバイダーが <xref:System.Web.UI.WebControls.SqlDataSource> クラスの既定のプロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType>の場合、パラメーターのプレースホルダーは `'@parameterName'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-595">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="d2ed7-596">ただし、プロバイダーが <xref:System.Data.Odbc?displayProperty=nameWithType> または <xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダーは `'?'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-596">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="d2ed7-597">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-597">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="d2ed7-598">データソースがストアドプロシージャをサポートしている場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-598">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d2ed7-599"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティの SQL ステートメントよりもストアドプロシージャを使用する方が安全です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-599">It is more secure to use a stored procedure than a SQL statement for the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property.</span></span>  
  
 <span data-ttu-id="d2ed7-600"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-600">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-601">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-601">This section contains two code examples.</span></span> <span data-ttu-id="d2ed7-602">最初のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストを基本的な SQL クエリに設定し、Microsoft SQL Server データベースからデータを取得して <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-602">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-603">2番目のコード例では、SQL Server データベースからデータを取得して <xref:System.Web.UI.WebControls.DropDownList>に表示するストアドプロシージャの名前に <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-603">The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 <span data-ttu-id="d2ed7-604">次のコード例では、SQL Server データベースからデータを取得して <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示する基本的な SQL クエリに <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-604">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-605"><xref:System.Web.UI.WebControls.DropDownList>で選択したユーザーのアドレスを更新するための単純なインターフェイスとして、<xref:System.Web.UI.WebControls.Button> コントロールと <xref:System.Web.UI.WebControls.TextBox> コントロールが用意されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-605">The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 <span data-ttu-id="d2ed7-606">次のコード例では、SQL Server データベースからデータを取得して <xref:System.Web.UI.WebControls.DropDownList> コントロールに表示するストアドプロシージャの名前に <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-606">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="d2ed7-607">データソースがストアドプロシージャをサポートしている場合は、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティに SQL クエリまたはストアドプロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-607">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-608"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティのテキストが SQL クエリまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-608">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property is a SQL query or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="d2ed7-609"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-609">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="d2ed7-610">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-610">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-611"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-611">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-612">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> テキストをストアドプロシージャの名前に設定し、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> プロパティを <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> 値に設定して Microsoft SQL Server データベースからデータを取得し、それを <xref:System.Web.UI.WebControls.DropDownList>に表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-612">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ed7-613">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-613">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-614">データ取得操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-614">Occurs when a data retrieval operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-615">データ取得操作の完了後に出力パラメーターの値を確認するには、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-615">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> event to examine the values of output parameters after a data retrieval operation has completed.</span></span> <span data-ttu-id="d2ed7-616">出力パラメーターは、イベントに関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> オブジェクトから使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-616">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="d2ed7-617">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-617">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-618">データ取得操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-618">Occurs before a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-619"><xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> イベントを処理して、アプリケーション固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールでデータ取得操作を実行する前にパラメーター値を変更したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-619">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.</span></span>  
  
 <span data-ttu-id="d2ed7-620">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-620">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-621"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-621">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="d2ed7-622"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-622">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-623"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティにパラメーター化された SQL クエリが含まれている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> コレクションには、SQL 文字列のパラメータープレースホルダーに対応する <xref:System.Web.UI.WebControls.Parameter> オブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-623">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="d2ed7-624">ADO.NET プロバイダーによっては、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> コレクション内のパラメーターの順序が重要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-624">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection might be important.</span></span> <span data-ttu-id="d2ed7-625"><xref:System.Data.OleDb?displayProperty=nameWithType> プロバイダーと <xref:System.Data.Odbc?displayProperty=nameWithType> プロバイダーは、パラメーター化された SQL クエリ内のパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-625">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="d2ed7-626"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの既定の ADO.NET プロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType> プロバイダーは、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-626">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="d2ed7-627">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-627">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-628">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティを SQL クエリに設定することによって、Microsoft SQL Server の Northwind データベースからデータを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-628">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query.</span></span> <span data-ttu-id="d2ed7-629">SQL クエリがパラメーター化され、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティのプレースホルダーが、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションに追加された <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトと照合されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-629">The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-630">このようにして、<xref:System.Web.UI.WebControls.ControlParameter> がバインドされている <xref:System.Web.UI.WebControls.DropDownList> コントロールは、<xref:System.Web.UI.WebControls.ListBox> コントロールに表示される内容のフィルターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-630">In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2ed7-631">このパラメーターは WHERE 句で使用されるため、このコード例での <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> プロパティの使用は、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> と <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> の両方のプロパティを使用するのと機能的には同じです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-631">Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-632">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-632">Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></summary>
        <value><span data-ttu-id="d2ed7-633">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-633">The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-634"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティは、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> プロパティに含まれる SQL コマンドがストアドプロシージャの名前である場合にのみ評価されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-634">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure.</span></span> <span data-ttu-id="d2ed7-635">この場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティが設定されていると、ストアドプロシージャの結果の並べ替えに使用されるパラメーターの名前が格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-635">In this case, if the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</span></span>  
  
 <span data-ttu-id="d2ed7-636"><xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> プロパティが設定されている場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティの前に付加されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-636">If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.</span></span>  
  
 <span data-ttu-id="d2ed7-637"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-637">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-638">このメンバーの詳細については、「<see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-638">For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</span></span></summary>
        <value><span data-ttu-id="d2ed7-639">データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-639"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-640">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-640">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ed7-641">このメソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-641">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="d2ed7-642">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-642">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="d2ed7-643">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-643">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-644">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-644">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ed7-645">このメソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-645">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ed7-646">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.SaveViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-646">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-647"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-647">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-648">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-648">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ed7-649">このメソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-649">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ed7-650">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.TrackViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-650">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-651">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-651">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d2ed7-652">このメソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-652">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2ed7-653"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがそのビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-653">Causes the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control and persisted across requests for the same page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="d2ed7-654">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-654">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="d2ed7-655">クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-655">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="d2ed7-656">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-656">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="d2ed7-657">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-657">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="d2ed7-658">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-658">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="d2ed7-659">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-659">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d2ed7-660"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-660">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="d2ed7-661">基になるデータベースで更新された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-661">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-662"><xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> メソッドは、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> メソッドを呼び出し、`keys`、`values`、および `oldValues` パラメーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-662">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters.</span></span> <span data-ttu-id="d2ed7-663">詳細については、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-663">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-664">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用して <xref:System.Web.UI.WebControls.DropDownList> コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-664">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="d2ed7-665">パラメーター化された SQL ステートメントを使用して <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティを設定し、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> コレクションに2つの <xref:System.Web.UI.WebControls.ControlParameter> パラメーターを追加します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-665">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-666">**[送信]** ボタンがクリックされると、<xref:System.Web.UI.WebControls.Button.OnClick%2A> イベントが処理され、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> メソッドが明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-666">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2ed7-667"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-667">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d2ed7-668"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-668">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-669">基になるデータベース内のデータを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-669">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to update data in the underlying database.</span></span></summary>
        <value><span data-ttu-id="d2ed7-670">データを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-670">A SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to update data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-671">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-671">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="d2ed7-672">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-672">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="d2ed7-673">たとえば、プロバイダーが <xref:System.Web.UI.WebControls.SqlDataSource> クラスの既定のプロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType>の場合、パラメーターのプレースホルダーは `'@parameterName'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-673">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="d2ed7-674">ただし、プロバイダーが <xref:System.Data.Odbc?displayProperty=nameWithType> または <xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダーは `'?'`ます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-674">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="d2ed7-675">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-675">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="d2ed7-676">データソースがストアドプロシージャをサポートしている場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-676">The <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="d2ed7-677"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-677">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-678">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-678">This section contains two code examples.</span></span> <span data-ttu-id="d2ed7-679">最初のコード例では、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティを設定し、Microsoft SQL Server データベースのデータを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-679">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-680">2番目のコード例では、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して ODBC データベースのデータを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-680">The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="d2ed7-681">次のコード例では、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールの <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティを設定し、SQL Server データベースのデータを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-681">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-682"><xref:System.Web.UI.WebControls.GridView> コントロールは、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> コレクションに自動的に入力し、<xref:System.Web.UI.WebControls.BoundField> オブジェクトからパラメーターを推論します。また、編集可能な <xref:System.Web.UI.WebControls.GridView> コントロールの**Update**リンクが選択されている場合は、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-682">The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected.</span></span> <span data-ttu-id="d2ed7-683">また、この例では、レコードが更新された後に、電子メールメッセージ通知が送信されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-683">This example also includes some post-processing - after a record is updated, an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 <span data-ttu-id="d2ed7-684">次のコード例は、前のコード例と機能的には同じですが、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して ODBC データベースのデータを更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-684">The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-685"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティは、ODBC の ADO.NET provider、<xref:System.Data.Odbc?displayProperty=nameWithType>、および <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> プロパティが ODBC データソース名 (DSN) の名前に設定されています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-685">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-686"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-686">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="d2ed7-687"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-687">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="d2ed7-688">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-688">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-689"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-689">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d2ed7-690">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-690">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-691">更新操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-691">Occurs when an update operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-692">更新操作が完了した後の出力パラメーターの値を確認するには、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-692">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event to examine the values of output parameters after an update operation has completed.</span></span> <span data-ttu-id="d2ed7-693">出力パラメーターは、イベントに関連付けられている <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> オブジェクトから使用できます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-693">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="d2ed7-694">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-694">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-695">次のコード例は、<xref:System.Web.UI.WebControls.GridView> コントロールの ODBC データベースから取得されたデータを表示および更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-695">The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="d2ed7-696">レコードが正常に更新されると、イベントハンドラーによって <xref:System.Web.UI.WebControls.SqlDataSource.Updated> イベントが処理され、電子メールメッセージ通知が送信される後処理の手順が実行されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-696">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-697"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-697">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="d2ed7-698"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-698">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-699"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> プロパティにパラメーター化された SQL クエリが含まれている場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> コレクションには、SQL 文字列内のパラメータープレースホルダーに対応する <xref:System.Web.UI.WebControls.Parameter> オブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-699">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.</span></span>  
  
 <span data-ttu-id="d2ed7-700">パラメーター名は、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> プロパティの影響を受ける可能性があります。具体的には、`DataKeyNames` プロパティを使用して指定されたキーなどの主キー、または <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている削除と更新のシナリオで、名前が主キーを識別する場合、`oldValues` のセットが対応するデータメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-700">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="d2ed7-701">この場合、書式文字列は `oldValues` コレクション内の各パラメーター名に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-701">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="d2ed7-702">ADO.NET プロバイダーによっては、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> コレクション内のパラメーターの順序が重要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-702">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection might be important.</span></span> <span data-ttu-id="d2ed7-703"><xref:System.Data.OleDb?displayProperty=nameWithType> プロバイダーと <xref:System.Data.Odbc?displayProperty=nameWithType> プロバイダーは、パラメーター化された SQL クエリ内のパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-703">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="d2ed7-704"><xref:System.Web.UI.WebControls.SqlDataSource> コントロールの既定の ADO.NET プロバイダーである <xref:System.Data.SqlClient?displayProperty=nameWithType> プロバイダーは、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-704">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="d2ed7-705">パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-705">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-706">次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用して <xref:System.Web.UI.WebControls.DropDownList> コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-706">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="d2ed7-707">パラメーター化された SQL ステートメントを使用して <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティが設定され、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> コレクションに2つの <xref:System.Web.UI.WebControls.ControlParameter> パラメーターが追加されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-707">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="d2ed7-708">**[送信]** ボタンがクリックされると、<xref:System.Web.UI.WebControls.Button.OnClick%2A> イベントが処理され、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> メソッドが明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-708">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2ed7-709">更新操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-709">Occurs before an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2ed7-710"><xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> イベントを処理して、アプリケーション固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールが更新操作を実行する前にパラメーター値を変更したりします。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-710">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.</span></span>  
  
 <span data-ttu-id="d2ed7-711">イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-711">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="d2ed7-712">したがって、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> オブジェクトによって公開されている <xref:System.Data.Common.DbCommand> オブジェクトの <xref:System.Data.Common.DbCommand.Cancel%2A> メソッドを呼び出すことによって、操作を直接取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-712">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="d2ed7-713">ただし、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> の [<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>] プロパティを `true`に設定して、データベース操作を取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-713">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="d2ed7-714">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-714">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2ed7-715">次のコード例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用してレコードを更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-715">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="d2ed7-716">この例では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用してデータを更新するときに、<xref:System.Data.Common.DbTransaction> オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2ed7-716">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
