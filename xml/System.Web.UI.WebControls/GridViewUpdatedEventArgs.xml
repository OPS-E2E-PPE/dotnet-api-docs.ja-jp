<Type Name="GridViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.GridViewUpdatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29a4c964782db2924e01e41f379ccde35c506743" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83966993" /></Metadata><TypeSignature Language="C#" Value="public class GridViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GridViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GridViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="56ecc-101"><see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-101">Provides data for the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-102"><xref:System.Web.UI.WebControls.GridView> コントロールは、コントロールの [更新] ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.GridView> コントロールがレコードを更新した後に、<xref:System.Web.UI.WebControls.GridView.RowUpdated> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-102">The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record.</span></span> <span data-ttu-id="56ecc-103">(Update ボタンは、`CommandName` プロパティが "Update" に設定されているボタンコントロールです)。更新操作の結果を確認するなど、このイベントが発生するたびにカスタムルーチンを実行できます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-103">(An Update button is a button control whose `CommandName` property is set to "Update".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.</span></span>  
  
 <span data-ttu-id="56ecc-104"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> オブジェクトがイベントハンドラーに渡されます。これにより、影響を受けたレコードの数と発生した可能性のある例外を確認できます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-104">A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred.</span></span> <span data-ttu-id="56ecc-105">更新操作によって影響を受けたレコードの数を確認するには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-105">To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property.</span></span> <span data-ttu-id="56ecc-106">例外が発生したかどうかを確認するには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-106">To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="56ecc-107">また、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを設定して、イベントハンドラーで例外が処理されたかどうかを示すこともできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-107">You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.</span></span>  
  
 <span data-ttu-id="56ecc-108">更新されたレコードのキーフィールドの値にアクセスするには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-108">To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property.</span></span> <span data-ttu-id="56ecc-109"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> プロパティを使用して、元のキー以外のフィールド値にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-109">You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property.</span></span> <span data-ttu-id="56ecc-110"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> のプロパティを使用して、更新されたキー以外のフィールド値にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-110">You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.</span></span>  
  
 <span data-ttu-id="56ecc-111">既定では、更新操作の後に、<xref:System.Web.UI.WebControls.GridView> コントロールが読み取り専用モードに戻ります。</span><span class="sxs-lookup"><span data-stu-id="56ecc-111">By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation.</span></span> <span data-ttu-id="56ecc-112">更新操作中に発生した例外を処理する場合は、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを `true`に設定して、<xref:System.Web.UI.WebControls.GridView> コントロールを編集モードのままにすることができます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-112">When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="56ecc-113">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-113">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="56ecc-114"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="56ecc-114">For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-115">次の例では、更新操作中に例外が発生したかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-115">The following example shows how to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.GridViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.GridViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.GridViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows"><span data-ttu-id="56ecc-116">更新操作の影響を受けた行の数。</span><span class="sxs-lookup"><span data-stu-id="56ecc-116">The number of rows that were affected by the update operation.</span></span></param>
        <param name="e"><span data-ttu-id="56ecc-117">更新操作が実行されたときに発生した例外 (例外が発生した場合)。</span><span class="sxs-lookup"><span data-stu-id="56ecc-117">The exception that was raised when the update operation was performed.</span></span> <span data-ttu-id="56ecc-118">例外が発生しなかった場合は、このパラメーターに <see langword="null" /> を使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-118">If no exception was raised, use <see langword="null" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="56ecc-119"><see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-119">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-120"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> クラスのインスタンスのプロパティの初期値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-120">The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class.</span></span>  
  
|<span data-ttu-id="56ecc-121">プロパティ</span><span class="sxs-lookup"><span data-stu-id="56ecc-121">Property</span></span>|<span data-ttu-id="56ecc-122">初期値</span><span class="sxs-lookup"><span data-stu-id="56ecc-122">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|<span data-ttu-id="56ecc-123">`affectedRows` パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="56ecc-123">The value of the `affectedRows` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|<span data-ttu-id="56ecc-124">`e` パラメーターに格納されている <xref:System.Exception?displayProperty=nameWithType> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="56ecc-124">The <xref:System.Exception?displayProperty=nameWithType> object that is contained in the `e` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|<span data-ttu-id="56ecc-125">`false`に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-125">Initialized to `false`.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|<span data-ttu-id="56ecc-126">`false`に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-126">Initialized to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="56ecc-127">このコンストラクターは、主に、イベントを発生させるときにコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-127">This constructor is primarily used by control developers when they raise events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-128">更新操作の影響を受けた行の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-128">Gets the number of rows that were affected by the update operation.</span></span></summary>
        <value><span data-ttu-id="56ecc-129">更新操作の影響を受けた行の数。</span><span class="sxs-lookup"><span data-stu-id="56ecc-129">The number of rows that were affected by the update operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-130">通常、更新されるレコードは1つだけであるため、このプロパティには通常、値0または1が含まれます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-130">Because only one record is typically updated, this property usually contains a value of 0 or 1.</span></span>  
  
 <span data-ttu-id="56ecc-131">更新操作中に、例外を発生させないエラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="56ecc-131">An error can occur during the update operation that does not raise an exception.</span></span> <span data-ttu-id="56ecc-132"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用して、レコードが更新されたことを確認できます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-132">You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-133">次の例では、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用して、レコードが更新されたことを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-133">The following example shows how to use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to verify that a record was updated.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-134">更新操作中に例外が発生した場合は、その例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-134">Gets the exception (if any) that was raised during the update operation.</span></span></summary>
        <value><span data-ttu-id="56ecc-135">更新操作中に発生した例外。</span><span class="sxs-lookup"><span data-stu-id="56ecc-135">The exception that was raised during the update operation.</span></span> <span data-ttu-id="56ecc-136">例外が発生しなかった場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-136">If no exceptions were raised, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-137">例外が発生し、イベントハンドラーで例外を処理する場合は、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-137">If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="56ecc-138">それ以外の場合は、<xref:System.Web.UI.WebControls.GridView> コントロールによって例外が再度スローされます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-138">Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-139">次の例では、更新操作中に例外が発生したかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-139">The following example shows how to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-140">更新操作中に発生した例外がイベント ハンドラーで処理されたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-140">Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.</span></span></summary>
        <value><span data-ttu-id="56ecc-141">イベント ハンドラーで例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56ecc-141"><see langword="true" /> if the exception was handled in the event handler; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56ecc-142">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="56ecc-142">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-143">更新操作中に例外が発生した場合は、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを使用して、イベントハンドラーで例外を処理したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-143">When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler.</span></span> <span data-ttu-id="56ecc-144">このプロパティが `true`に設定されている場合、例外は処理済みと見なされ、<xref:System.Web.UI.WebControls.GridView> コントロールによって再度スローされることはありません。</span><span class="sxs-lookup"><span data-stu-id="56ecc-144">When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="56ecc-145">このプロパティが `false`に設定されている場合、例外が再度スローされます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-145">If this property is set to `false`, the exception is thrown again.</span></span> <span data-ttu-id="56ecc-146">発生した例外を特定するには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-146">To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-147">次の例は、例外がイベントハンドラーで処理されたことを示す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56ecc-147">The following example shows how to indicate that the exception was handled in the event handler.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-148">更新操作後に <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールを編集モードのまま維持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-148">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.GridView" /> control should remain in edit mode after an update operation.</span></span></summary>
        <value><span data-ttu-id="56ecc-149">更新操作後にコントロールを編集モードのまま維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56ecc-149"><see langword="true" /> if the control will remain in edit mode after an update operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56ecc-150">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="56ecc-150">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-151">既定では、更新操作の後に、<xref:System.Web.UI.WebControls.GridView> コントロールが読み取り専用モードに戻ります。</span><span class="sxs-lookup"><span data-stu-id="56ecc-151">By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation.</span></span> <span data-ttu-id="56ecc-152"><xref:System.Web.UI.WebControls.GridView> コントロールを編集モードに保つには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-152">To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-153">次の例は、例外が発生したときに、<xref:System.Web.UI.WebControls.GridView> コントロールを編集モードに保つ方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56ecc-153">The following example shows how to keep a <xref:System.Web.UI.WebControls.GridView> control in edit mode when an exception occurs.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-154">更新されたレコードのキー フィールドの名前と値のペアが格納されているディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-154">Gets a dictionary that contains the key field name/value pairs for the updated record.</span></span></summary>
        <value><span data-ttu-id="56ecc-155">更新されたレコードのキー フィールドの名前と値のペアのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="56ecc-155">A dictionary of key field name/value pairs for the updated record.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-156">更新されたレコードのキーフィールドの値にアクセスするには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-156">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record.</span></span> <span data-ttu-id="56ecc-157">たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-157">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="56ecc-158"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> プロパティは、<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> インターフェイスを実装するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-158">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="56ecc-159">オブジェクトには、更新されたレコードのフィールドを表す <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-159">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56ecc-160">ショートカットとして、<xref:System.Collections.Specialized.IOrderedDictionary> オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることもできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-160">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-161">次の例は、更新されたレコードのキーフィールドの値にアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56ecc-161">The following example shows how to access the values of the key field for an updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-162">更新されたレコードの新しいフィールドの名前と値のペアが格納されているディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-162">Gets a dictionary that contains the new field name/value pairs for the updated record.</span></span></summary>
        <value><span data-ttu-id="56ecc-163">更新されたレコードの新しいフィールドの名前と値のペアのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="56ecc-163">A dictionary of the new field name/value pairs for the updated record.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-164">更新されたレコードの新しいフィールド値にアクセスするには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-164">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record.</span></span> <span data-ttu-id="56ecc-165">たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-165">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="56ecc-166"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> プロパティは、<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> インターフェイスを実装するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-166">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="56ecc-167">オブジェクトには、更新されたレコードのフィールドを表す <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-167">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56ecc-168">ショートカットとして、<xref:System.Collections.Specialized.IOrderedDictionary> オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることもできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-168">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-169">次の例は、更新されたレコードの非キーフィールドに対してユーザーが入力した新しい値にアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56ecc-169">The following example shows how to access the new values entered by the user for the non-key fields of the updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56ecc-170">更新されたレコードの元のフィールドの名前と値のペアが格納されているディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-170">Gets a dictionary that contains the original field name/value pairs for the updated record.</span></span></summary>
        <value><span data-ttu-id="56ecc-171">更新されたレコードの元のフィールドの名前と値のペアのディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="56ecc-171">A dictionary of the original field name/value pairs for the updated record.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ecc-172">更新されたレコードの元のフィールド値にアクセスするには、<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-172">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record.</span></span> <span data-ttu-id="56ecc-173">たとえば、これらの値を使用して、更新されたレコードのログを保持することができます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-173">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="56ecc-174"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> プロパティは、<xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> インターフェイスを実装するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="56ecc-174">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="56ecc-175">オブジェクトには、更新されたレコードのフィールドを元の値で表す <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-175">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record with their original values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56ecc-176">ショートカットとして、<xref:System.Collections.Specialized.IOrderedDictionary> オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることもできます。</span><span class="sxs-lookup"><span data-stu-id="56ecc-176">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ecc-177">次の例は、更新されたレコードのキー以外のフィールドの元の値にアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="56ecc-177">The following example shows how to access the original values of the non-key fields for the updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>
