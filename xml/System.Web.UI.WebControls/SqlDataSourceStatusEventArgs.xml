<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1af87477a9bcbe6b4263b9cb9a56f69113070711" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78761746" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ操作の完了時に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールによって生成されたイベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラスは、データソースコントロールによって実行された後のデータベース操作に関する情報を渡すために、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、および <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベントで使用されます。 この情報には、操作の影響を受ける行の数、操作を実行するためにデータソースが使用した <xref:System.Data.Common.DbCommand> オブジェクト、および結果として生成された例外情報が含まれます。 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> または <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベントを処理するイベントハンドラーデリゲートを追加することで、このデータを確認し、必要な追加の後処理を実行できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、データ操作の過程で、基になるデータオブジェクトを操作するために処理できる多数のイベントを公開します。 次の表に、イベントと関連付けられている <xref:System.EventArgs> およびイベントハンドラークラスを示します。この一覧では、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用したデータ操作のライフサイクルに対応するさまざまなイベントについて説明します。  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|データが取得される前に <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> が発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting> は、挿入、更新、または削除の各操作が実行される前に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted> は、データの取得、挿入、更新、または削除の各操作が完了した後に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラスを使用して、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールとストアドプロシージャを使用して <xref:System.Web.UI.WebControls.GridView> コントロールに値を設定するときに返される出力パラメーターの戻り値と値を確認する方法を示します。 ストアドプロシージャは <xref:System.Web.UI.WebControls.GridView>に表示されるデータを選択しますが、整数の出力パラメーターや戻り値など、その他の情報を呼び出し元に戻します。 <xref:System.Web.UI.WebControls.SqlDataSource> によってストアドプロシージャに使用されるパラメーターは、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションに含まれており、Web フォームからストアドプロシージャに情報を渡すパラメーターと、情報をフォームに返すパラメーターで構成されます。 これらのパラメーターの <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは <xref:System.Data.ParameterDirection.Output> と <xref:System.Data.ParameterDirection.ReturnValue>に設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand, affectedRows As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command"><see cref="T:System.Data.Common.DbCommand" /> コントロールによってデータベースに送信されるデータベース クエリ、コマンド、またはストアド プロシージャを表す <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
        <param name="affectedRows">該当する場合は、データベース操作の影響を受けた行数。</param>
        <param name="exception">該当する場合は、データベース操作によってスローされた <see cref="T:System.Exception" />。</param>
        <summary>指定された出力パラメーター、戻り値、および、データベース操作によって影響を受ける行数を使用して、<see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベース操作の影響を受けた行の数を取得します。</summary>
        <value>データベース操作の影響を受けた行の数。 既定値は -1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての操作は、操作の影響を受ける行の数を返します。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> プロパティの値は、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>、および <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> の各メソッドの戻り値と同じです。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> メソッドが呼び出され、データソースが <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> モードに設定されている場合、すべての場合、戻り値は0になります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースに送信されたデータベース コマンドを取得します。</summary>
        <value>データベースに送信されたデータベース コマンドを表す <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、または <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベントを処理することで、<xref:System.Data.Common.DbCommand> コントロールによってデータベースに送信された後に、<xref:System.Web.UI.WebControls.SqlDataSource> のプロパティを確認および操作できます。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> プロパティを使用すると、データベース操作の実行後に、その <xref:System.Data.Common.DbCommand.Parameters%2A> プロパティを使用して出力パラメーターの戻り値と値にアクセスできます。また、データベースに送信された SQL クエリ、コマンド、またはストアドプロシージャ名を表す <xref:System.Data.Common.DbCommand.CommandText%2A> プロパティも使用できます。  
  
 出力パラメーターは、<xref:System.Web.UI.WebControls.Parameter> オブジェクトの <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティに <xref:System.Data.ParameterDirection.InputOutput> または <xref:System.Data.ParameterDirection.Output> 値を持つパラメーターからのものです。 戻り値は、<xref:System.Data.ParameterDirection.ReturnValue> 値を持つパラメーターの値です。  
  
   
  
## Examples  
 次のコード例は、ストアドプロシージャで <xref:System.Web.UI.WebControls.SqlDataSource> コントロールを使用するときに、出力パラメーターの値を調べる方法を示しています。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションには、<xref:System.Web.UI.WebControls.SqlDataSource> がストアドプロシージャに使用するパラメーターが含まれており、Web フォームからストアドプロシージャに情報を渡すパラメーターと、情報をフォームに返すパラメーターで構成されます。 このコード例は、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラス用に用意されている大規模な例の一部です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ操作中にデータベースによってスローされる例外のラッパーを取得します。</summary>
        <value>データベースが <see cref="T:System.Exception" /> プロパティとしてスローした例外をラップした <see cref="P:System.Exception.InnerException" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> プロパティは、データベース操作によってスローされた実際の例外を表していません。 スローされた例外には、<xref:System.Exception.InnerException%2A> プロパティを使用してアクセスできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースによりスローされた例外が処理されたかどうか示す値を取得または設定します。</summary>
        <value>データベースによりスローされた例外が処理され、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> がその例外をスローする必要がない場合は <see langword="true" /> が返されます。それ以外の場合は <see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベースが例外をスローした場合、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> プロパティは `false` に設定され、例外は <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> プロパティによってラップされます。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>を使用する場合は、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> のプロパティを確認し、例外を処理することができます。 例外を処理する場合は、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> プロパティを `true` に設定するか、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールが例外をスローします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>
