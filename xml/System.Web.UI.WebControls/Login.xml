<Type Name="Login" FullName="System.Web.UI.WebControls.Login">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c278349948270e943bff9d4bd165e0d066b4318" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106642" /></Metadata><TypeSignature Language="C#" Value="public class Login : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Login extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Login" />
  <TypeSignature Language="VB.NET" Value="Public Class Login&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Login : System::Web::UI::WebControls::CompositeControl" />
  <TypeSignature Language="F#" Value="type Login = class&#xA;    inherit CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Authenticate")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サイトにログインするためのユーザー インターフェイス (UI) 要素を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 このトピックの内容:

-   [はじめに](#introduction)

-   [スタイルとテンプレート](#styles_and_templates)

-   [検証グループ化](#validation_groupings)

-   [ユーザー補助](#accessibility)

-   [CSS スタイルの適用](#applying_styles)

-   [宣言型の構文](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>はじめに
 <xref:System.Web.UI.WebControls.Login> コントロールは、Web サイトでユーザーを認証するために必要なすべての共通 UI 要素を提供する複合コントロールです。 すべてのログインシナリオには、次の3つの要素が必要です。

-   ユーザーを識別するための一意のユーザー名。

-   ユーザーの id を確認するためのパスワード。

-   ログイン情報をサーバーに送信するためのログインボタン。

 <xref:System.Web.UI.WebControls.Login> コントロールには、追加の関数をサポートする次のオプションの UI 要素も用意されています。

-   パスワードリマインダーのリンク。

-   セッション間のログイン情報を保持するための [保存] チェックボックス

-   ログインに問題が発生しているユーザーのヘルプリンク。

-   登録ページにユーザーをリダイレクトする新しいユーザーリンクを登録します。

-   ログインフォームに表示される指示テキスト。

-   ユーザーが [ユーザー名] または [パスワード] フィールドを入力せずに [ログイン] ボタンをクリックしたときに表示されるカスタムエラーテキスト。

-   ログインが失敗した場合に表示されるカスタムエラーテキスト。

-   ログインが成功したときに発生するカスタムアクションです。

-   ユーザーが既にサイトにログインしている場合に、ログインコントロールを非表示にする方法。

 必要なコントロールと省略可能なコントロールを示す表については、「<xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A> プロパティ」を参照してください。

> [!NOTE]
>  ASP.NET で使用できるログインコントロールのセットに慣れていない場合は、続行する前に「 [ASP.NET Login controls の概要](https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100))」を参照してください。 ログインコントロールおよびメンバーシップに関連する他のトピックの一覧については、「[メンバーシップを使用](https://docs.microsoft.com/previous-versions/aspnet/tw292whz(v=vs.100))したユーザーの管理」を参照してください。

> [!IMPORTANT]
>  ユーザー入力の受け入れは、セキュリティ上の脅威となる可能性があります。 悪意のあるユーザーが、脆弱性を公開したり、生成されたパスワードを試すプログラムを実行したりすることを意図したデータを送信できます。 ユーザー入力を操作するときにセキュリティを強化するには、コントロールの検証機能を使用し、コントロール用に構成されているすべてのデータプロバイダーをセキュリティで保護する必要があります。 詳細については、「[ログインコントロールのセキュリティ保護](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c)」、「 [Web アプリケーションの基本的なセキュリティ方法](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)」、および「メンバーシップのセキュリティ[保護](https://msdn.microsoft.com/library/2dab2012-c278-426a-bb0d-93b260c428a7)」を参照してください。

 <xref:System.Web.UI.WebControls.Login> コントロールは、メンバーシッププロバイダーを使用してユーザーの資格情報を取得します。 特に指定しない限り、<xref:System.Web.UI.WebControls.Login> コントロールは、web.config ファイルで定義されている既定のメンバーシッププロバイダーを使用します。 別のプロバイダーを指定するには、<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> プロパティを、アプリケーションの Web.config ファイルで定義されているメンバーシッププロバイダー名のいずれかに設定します。 詳細については、「[メンバーシッププロバイダー](https://msdn.microsoft.com/library/d2c90ff6-aa86-4001-b2c5-e5c99cb7f68f)」を参照してください。

 カスタム認証サービスを使用する場合は、<xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> メソッドを使用してサービスを呼び出すことができます。

<a name="styles_and_templates"></a>
## <a name="styles-and-templates"></a>スタイルおよびテンプレート
 <xref:System.Web.UI.WebControls.Login> コントロールの外観は、テンプレートとスタイル設定を使用して完全にカスタマイズできます。 すべての UI テキストメッセージは、<xref:System.Web.UI.WebControls.Login> クラスのプロパティを使用してカスタマイズすることもできます。 既定のインターフェイステキストは、サーバー上のロケール設定に基づいて自動的にローカライズされます。

 <xref:System.Web.UI.WebControls.Login> コントロールがテンプレートを使用してカスタマイズされている場合、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティと <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティは無視されます。 この場合は、[<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>] プロパティと、各テンプレートの子コントロールの <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> プロパティを直接設定します。

 <xref:System.Web.UI.WebControls.Login.UserName%2A> や <xref:System.Web.UI.WebControls.Login.Password%2A>などのテキストボックスで表される <xref:System.Web.UI.WebControls.Login> コントロールプロパティは、ページライフサイクルのすべてのフェーズでアクセスできます。 コントロールは、テキストボックスによってトリガーされる <xref:System.Web.UI.WebControls.TextBox.TextChanged> イベントによってエンドユーザーによって行われたすべての変更を取得します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WizardStep> オブジェクトに <xref:System.Web.UI.WebControls.Login> コントロールを埋め込む場合は、ユーザーが認証されている場合は `Page_Load` イベントハンドラーで明示的に <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティを設定します。 <xref:System.Web.UI.WebControls.Wizard> コントロールは、このシナリオでは、次の <xref:System.Web.UI.WebControls.WizardStep> オブジェクトに自動的に進みません。

 次の表に、<xref:System.Web.UI.WebControls.Login> コントロールスタイルのプロパティと、各スタイルプロパティが影響する UI 要素について説明します。 各スタイルが適用されるプロパティの一覧については、個々のスタイルプロパティのドキュメントを参照してください。

|Style プロパティ|影響を受けた UI 要素|
|--------------------|-------------------------|
|<xref:System.Web.UI.WebControls.Login.BorderPadding%2A>|コントロールの内容とコントロールの境界線の間のスペース。|
|<xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A>|このチェックボックスをオンにします。|
|<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A>|ログインエラーテキスト。|
|<xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A>|コントロールを使用する方法をユーザーに示す、ページ上の指示テキストです。|
|<xref:System.Web.UI.WebControls.Login.LabelStyle%2A>|テキストボックスなど、すべての入力フィールドのラベル。|
|<xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A>|テキスト入力フィールド。|
|<xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>|タイトルのテキスト。|
|<xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A>|検証エラーによるログイン試行が失敗したときにユーザーに表示されるテキストです。|
|<xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A>|他のページへのリンク。|
|<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A>|ログインボタン。|

<a name="validation_groupings"></a>
## <a name="validation-groupings"></a>検証グループ化
 <xref:System.Web.UI.WebControls.Login.UserName%2A> プロパティと <xref:System.Web.UI.WebControls.Login.Password%2A> プロパティには <xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールが関連付けられており、ユーザーが必要な情報を指定せずにページを送信できないようにします。

 <xref:System.Web.UI.WebControls.Login> コントロールは検証グループを使用します。これにより、<xref:System.Web.UI.WebControls.Login> コントロールと同じページの他のフィールドを個別に検証できます。 既定では、<xref:System.Web.UI.WebControls.Login> コントロールの <xref:System.Web.UI.Control.ID%2A> プロパティが検証グループの名前として使用されます。 たとえば、ID が "Login1" の <xref:System.Web.UI.WebControls.Login> コントロールでは、"Login1" という検証グループ名が使用されます。 <xref:System.Web.UI.WebControls.Login> コントロールが属する検証グループを設定する場合は、コントロールのテンプレートを作成し、検証グループ名を変更する必要があります。

<a name="applying_styles"></a>
## <a name="applying-css-styles"></a>CSS スタイルの適用
 <xref:System.Web.UI.WebControls.Login> コントロールを使用すると、マークアップで CSS スタイルルールを指定できます。 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観をカスタマイズする場合は、テンプレートのマークアップで CSS スタイルを指定できます。 その場合は、余分な外部テーブルは必要ありません。 <xref:System.Web.UI.WebControls.Login.RenderOuterTable%2A> プロパティを `false`に設定することによって、テーブルが表示されないようにすることができます。

<a name="accessibility"></a>
## <a name="accessibility"></a>アクセシビリティ
 ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET のコントロールとアクセシビリティ](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)」を参照してください。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>宣言型の構文

```
<asp:Login
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderPadding="integer"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CreateUserIconUrl="uri"
    CreateUserText="string"
    CreateUserUrl="uri"
    CssClass="string"
    DestinationPageUrl="uri"
    DisplayRememberMe="True|False"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    FailureAction="Refresh|RedirectToLoginPage"
    FailureText="string"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
               Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    HelpPageIconUrl="uri"
    HelpPageText="string"
    HelpPageUrl="uri"
    ID="string"
    InstructionText="string"
    LoginButtonImageUrl="uri"
    LoginButtonText="string"
    LoginButtonType="Button|Image|Link"
    MembershipProvider="string"
    OnAuthenticate="Authenticate event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnLoggedIn="LoggedIn event handler"
    OnLoggingIn="LoggingIn event handler"
    OnLoginError="LoginError event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    Orientation="Horizontal|Vertical"
    PasswordLabelText="string"
    PasswordRecoveryIconUrl="uri"
    PasswordRecoveryText="string"
    PasswordRecoveryUrl="uri"
    PasswordRequiredErrorMessage="string"
    RememberMeSet="True|False"
    RememberMeText="string"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    TextLayout="TextOnLeft|TextOnTop"
    TitleText="string"
    ToolTip="string"
    UserName="string"
    UserNameLabelText="string"
    UserNameRequiredErrorMessage="string"
    Visible="True|False"
    VisibleWhenLoggedIn="True|False"
    Width="size"
>
        <CheckBoxStyle />
        <FailureTextStyle />
        <HyperLinkStyle />
        <InstructionTextStyle />
        <LabelStyle />
        <LayoutTemplate>
            <!-- child controls -->
        </LayoutTemplate>
        <LoginButtonStyle />
        <TextBoxStyle />
        <TitleTextStyle />
        <ValidatorTextStyle />
</asp:Login>
```



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login> コントロールを使用して、Web サイトにログインするための UI を提供します。

 [!code-aspx-csharp[LoginClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginClass/CS/loginclasscs.aspx#1)]
 [!code-aspx-vb[LoginClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginClass/VB/loginclassvb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.Login> コントロールを拡張する方法を示しています。 `CustomLogin` コントロールには、ユーザーが認証に使用するメンバーシッププロバイダーをユーザーが選択できるようにするための <xref:System.Web.UI.WebControls.DropDownList> コントロールが含まれています。 (これらのプロバイダーは web.config で構成されています)。<xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> メソッドでは、<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> プロパティは <xref:System.Web.UI.WebControls.DropDownList> コントロールの選択された値に設定されます。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Membership" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">メンバーシップの概要</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Login ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Login();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login> コンストラクターは、プログラムによって Web ページに挿入できる <xref:System.Web.UI.WebControls.Login> コントロールの新しいインスタンスを作成します。

 次の表は、<xref:System.Web.UI.WebControls.Login>の新しいインスタンスの初期プロパティ値を示しています。

|プロパティ|初期値|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.FailureAction%2A>|`true`|
|<xref:System.Web.UI.WebControls.Login.FailureText%2A>|"ログインに失敗しました。 再試行してください。"|
|<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>|標準|
|<xref:System.Web.UI.WebControls.Login.Orientation%2A>|<xref:System.Web.UI.WebControls.Orientation.Vertical>|
|<xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>|"パスワード:"|
|<xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>|"パスワード"|
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`false`|
|<xref:System.Web.UI.WebControls.Login.RememberMeText%2A>|「次回に保存する」|
|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A>|"Login"|
|<xref:System.Web.UI.WebControls.Login.TextLayout%2A>|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|
|<xref:System.Web.UI.WebControls.Login.TitleText%2A>|"Login"|
|<xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>|"ユーザー名:"|
|<xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A>|"ユーザー名"|



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.%23ctor%2A> コンストラクターを使用して、<xref:System.Web.UI.WebControls.Login> コントロールの新しいインスタンスを作成し、そのインスタンスを <xref:System.Web.UI.WebControls.PlaceHolder> コントロールの <xref:System.Web.UI.Control.Controls%2A> コレクションに追加します。

 [!code-aspx-csharp[LoginLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLogin/CS/loginlogincs.aspx#1)]
 [!code-aspx-vb[LoginLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLogin/VB/loginloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.AuthenticateEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.AuthenticateEventHandler Authenticate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Authenticate As AuthenticateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::AuthenticateEventHandler ^ Authenticate;" />
      <MemberSignature Language="F#" Value="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " Usage="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AuthenticateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが認証されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Authenticate> イベントは、ユーザーが <xref:System.Web.UI.WebControls.Login> コントロールを使用して Web サイトにログインしたときに発生します。 カスタム認証方式では、<xref:System.Web.UI.WebControls.Login.Authenticate> イベントを使用してユーザーを認証できます。

> [!NOTE]
>  ユーザーが <xref:System.Web.UI.WebControls.Login> コントロールを使用して Web サイトにログインすると、ビューステートとすべてのポストデータのすべてのデータが失われます。 ビューステートに依存する <xref:System.Web.UI.WebControls.Login.Authenticate> イベントでは操作を実行しないでください。

 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.Authenticate> イベントを使用して、サイト固有のカスタム認証コードを呼び出します。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>カスタム認証方式では、ユーザーが認証されたことを示すために、<see cref="P:System.Web.UI.WebControls.AuthenticateEventArgs.Authenticated" /> プロパティを <see langword="true" /> に設定する必要があります。

ユーザーがログイン情報を送信すると、<see cref="T:System.Web.UI.WebControls.Login" /> 制御によって最初に <see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> イベント、次に <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> イベント、最後に <see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> イベントが発生します。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BorderPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderPadding : int with get, set" Usage="System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールの境界線の内側の間隔を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> コントロールの内容と <see cref="T:System.Web.UI.WebControls.Login" /> コントロールの境界線の間隔 (ピクセル単位)。 既定値は <see langword="1" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.BorderPadding%2A> プロパティの値は、ビューステートに格納されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.BorderPadding" /> プロパティは、-1 未満の値が設定されています。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CheckBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CheckBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckBoxStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ CheckBoxStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[次回のために保存] チェック ボックスの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" /> コントロールの [次回のために保存] チェック ボックスのスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Login" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールの [記憶者] チェックボックスの外観を変更するために使用する <xref:System.Web.UI.WebControls.Style> オブジェクトへの参照を取得します。

 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.Style> クラスのプロパティ (`CheckBoxStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`CheckBoxStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.RememberMeText%2A> プロパティの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> コントロールスタイルプロパティは <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定することにより、[記憶者] チェックボックスのテキストの色を青に、フォントスタイルを斜体に設定しています。

 [!code-aspx-csharp[LoginCheckBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCheckBoxStyle/CS/logincheckboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginCheckBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCheckBoxStyle/VB/logincheckboxstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="login.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールを構成する個々のコントロールを作成し、各コントロールのイベントにイベント ハンドラーを関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateChildControls%2A> メソッドは、<xref:System.Web.UI.WebControls.Login> コントロールを構成するコントロールのインスタンスを作成します。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserIconUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新規ユーザーの登録ページへのリンクの隣に表示するイメージの場所を取得します。</summary>
        <value>表示する画像の URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserText : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新規ユーザーの登録ページへのリンク テキストを取得または設定します。</summary>
        <value>新規ユーザー登録ページへのリンク テキスト。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティには、サイトの登録ページへのリンクのテキストが含まれます。 登録ページの URL は、<xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> プロパティで指定されます。

 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> が空の場合、<xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティのテキストはユーザーに表示されますが、リンクとして書式設定されません。

 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティが空の場合、ユーザーは登録ページへのリンクを使用できません。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティを "Register new user..." に設定します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新規ユーザーの登録ページの URL を取得または設定します。</summary>
        <value>新規ユーザー登録ページの URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> プロパティには、Web サイトの新しいユーザー登録ページの URL が格納されます。 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティには、リンクに使用されるテキストが含まれています。

 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> プロパティが空の場合、ユーザーは登録ページへのリンクを使用できません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> プロパティを "login.aspx" に設定します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string DestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン試行が成功したときにユーザーに表示されるページの URL を取得または設定します。</summary>
        <value>ログイン試行が成功したときに、ユーザーのリダイレクト先となるページの URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> プロパティは、ログイン試行が成功したときに表示されるページを指定します。

 <xref:System.Web.UI.WebControls.Login> コントロールの既定の動作では、参照元のページ、または web.config ファイルの要素の `defaultUrl` 属性で定義されているページにユーザーが返されます。

 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> プロパティは、構成ファイルで行われた `defaultUrl` の設定だけでなく、<xref:System.Web.UI.WebControls.Login> コントロールの既定の動作もオーバーライドします。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> プロパティを設定します。 Page_Load メソッドを使用して、参照元ページの URL を目的のページの URL にアタッチします。これにより、必要に応じて、移動先ページから元のページにユーザーを返すことができます。

 [!code-aspx-csharp[LoginDestinationPageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginDestinationPageUrl/CS/logindestinationpageurlcs.aspx#1)]
 [!code-aspx-vb[LoginDestinationPageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginDestinationPageUrl/VB/logindestinationpageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayRememberMe">
      <MemberSignature Language="C#" Value="public virtual bool DisplayRememberMe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRememberMe" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayRememberMe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplayRememberMe { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRememberMe : bool with get, set" Usage="System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>永続的なクッキーをブラウザーに送信するかどうかをユーザーが制御できるようにするチェック ボックスを表示するかどうかを示す値を取得または設定します。</summary>
        <value>チェック ボックスを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> プロパティが `true`に設定されている場合、<xref:System.Web.UI.WebControls.Login.RememberMeText%2A> プロパティに含まれているテキストが [記憶する] チェックボックスと共にページに表示されます。 ユーザーが [記憶する] チェックボックスをオンにすると、自分のコンピューターに送信された認証 cookie が保持されるため、ユーザーは今後サイトにアクセスしたときに自動的に認証されます。 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティの値は、[保存する] チェックボックスの選択によって設定されます。

 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> が `false`場合、ページに [記憶する] チェックボックスは表示されず、ユーザーは認証 cookie を永続化するかどうかを制御できません。 この場合でも、[<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>] プロパティを `true` に設定して、ユーザーのブラウザーに永続的な認証クッキーを送信することはできます。このチェックボックスは表示されません。

> [!NOTE]
>  ユーザーのブラウザーに永続的な認証 cookie を設定することには、本質的にセキュリティ上のリスクが伴います。 これらのセキュリティリスクがサイトで許容されるかどうかを判断する必要があります。 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティを `true` に設定し、<xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> プロパティを `false`に設定した場合、インターネットカフェのように、パブリックブラウザーから Web サイトにアクセスしたユーザーは、誤って永続的な認証 cookie を残して、ブラウザーの次のユーザーが前のユーザーの資格情報を使用して Web サイトにアクセスできるようになります。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。



## Examples
 次のコード例では、[<xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A>] プロパティを `false`に設定することにより、[記憶する] チェックボックスを無効にします。

 [!code-aspx-csharp[LoginEnableRememberMe#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginEnableRememberMe/CS/loginenableremembermecs.aspx#1)]
 [!code-aspx-vb[LoginEnableRememberMe#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginEnableRememberMe/VB/loginenableremembermevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FailureAction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginFailureAction FailureAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginFailureAction FailureAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureAction As LoginFailureAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginFailureAction FailureAction { System::Web::UI::WebControls::LoginFailureAction get(); void set(System::Web::UI::WebControls::LoginFailureAction value); };" />
      <MemberSignature Language="F#" Value="member this.FailureAction : System.Web.UI.WebControls.LoginFailureAction with get, set" Usage="System.Web.UI.WebControls.Login.FailureAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginFailureAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン試行が失敗したときに発生するアクションを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 列挙値のいずれか。 既定では、 <see cref="F:System.Web.UI.WebControls.LoginFailureAction.Refresh" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> プロパティは、ユーザーが Web サイトに正常にログインしない場合の <xref:System.Web.UI.WebControls.Login> コントロールの動作を定義します。

 既定の動作では、ページを再読み込みし、<xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティの内容を表示して、ログイン試行が失敗したことをユーザーに警告します。

 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> が <xref:System.Web.UI.WebControls.LoginFailureAction.RedirectToLoginPage>に設定されている場合は、web.config ファイルで定義されているログインページにユーザーがリダイレクトされます。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。



## Examples
 次のコード例では、コード内で <xref:System.Web.UI.WebControls.Login.FailureAction%2A> プロパティを宣言とコードの両方で設定する方法を示します。

 [!code-aspx-csharp[LoginLoginFailureAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureAction/CS/loginloginfailureactioncs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureAction/VB/loginloginfailureactionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 列挙値の 1 つではありません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FailureText">
      <MemberSignature Language="C#" Value="public virtual string FailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FailureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FailureText : string with get, set" Usage="System.Web.UI.WebControls.Login.FailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン試行が失敗したときに表示するテキストを取得または設定します。</summary>
        <value>ログイン試行が失敗したときにユーザーに表示するテキスト。 既定値は "ログインに失敗しました。 再試行してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティは、ログイン試行が失敗したときに表示される文字列を指定します。

 <xref:System.Web.UI.WebControls.Login> コントロールのテンプレートを定義する場合は、<xref:System.Web.UI.WebControls.Literal> コントロールを使用し、そのコントロールに ID "FailureText" を指定することによって、<xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティを表示するテンプレートの場所を指定できます。 テンプレートを使用する場合、<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティで指定されたテキストには適用されません。

 プロパティの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

> [!NOTE]
>  セキュリティ上の理由から、ログインエラーテキストには、エラーの特定の理由を含めることはできません。 たとえば、"ユーザー \<ユーザー名 > のパスワードが無効です" などのエラーメッセージが表示される可能性があるのは、ユーザー名 > \<システムのユーザーである可能性があります。 詳細については、「[方法: 安全なエラーメッセージを表示する](https://docs.microsoft.com/previous-versions/aspnet/994a1482(v=vs.100))」を参照してください。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティを "ログイン中にエラーが発生しました。 もう一度やり直してください。 "

 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FailureTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FailureTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FailureTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのエラー テキストの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>エラー テキストの外観を定義するプロパティを格納している <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティは、ログインエラーテキストの外観を変更するために使用する <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトへの参照を取得します。 既定では、テキストが赤で表示されます。

 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> クラスのプロパティ (`FailureTextStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`FailureTextStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.FailureText%2A> プロパティの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> コントロールスタイルプロパティは <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> プロパティで参照される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトの背景とテキストの色のプロパティを設定することによって、ログインエラーのテキストスタイルを指定します。

 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログインのヘルプ ページへのリンクの横に表示するイメージの場所を取得します。</summary>
        <value>表示する画像の URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageText : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン ヘルプ ページへのリンク テキストを取得また設定します。</summary>
        <value>ログイン ヘルプ ページへのリンク テキスト。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティには、サイトのログインヘルプページへのリンクテキストが含まれています。 ログインヘルプページの URL は、[<xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A>] プロパティで指定します。

 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> が空の場合、<xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティのテキストはページ上のユーザーに表示されますが、リンクとして書式設定されません。

 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティが空の場合、ユーザーはログインヘルプページへのリンクを使用できません。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティを使用して、サイトのログインヘルプページへのリンクのテキストを指定します。

 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン ヘルプ ページの URL を取得または設定します。</summary>
        <value>ログイン ヘルプ ページの URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> プロパティには、Web サイトのログインヘルプページの URL が格納されます。 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティには、リンクに使用されるテキストが含まれています。

 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> が空の場合、<xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティ内のテキストはユーザーに表示されますが、リンクとして書式設定されません。

 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> プロパティが空の場合、ユーザーはログインヘルプページへのリンクを使用できません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> プロパティを使用して、サイトのログインヘルプページの URL を指定します。

 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HyperLinkStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HyperLinkStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HyperLinkStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのハイパーリンクの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>ハイパーリンクの外観を定義するプロパティを格納する <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールのハイパーリンクの外観を定義します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> クラスのプロパティ (`HyperLinkStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`HyperLinkStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティは、次のプロパティの外観を定義します。

-   <xref:System.Web.UI.WebControls.Login.CreateUserText%2A>

-   <xref:System.Web.UI.WebControls.Login.HelpPageText%2A>

-   <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A>

 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定することによって、<xref:System.Web.UI.WebControls.Login> コントロール内のハイパーリンクを緑色の斜体テキストに設定します。

 [!code-aspx-csharp[LoginHyperLinkStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHyperLinkStyle/CS/loginhyperlinkstylecs.aspx#1)]
 [!code-aspx-vb[LoginHyperLinkStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHyperLinkStyle/VB/loginhyperlinkstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.Login.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー用のログインの指示テキストを取得または設定します。</summary>
        <value>ユーザーに表示するログインの指示テキスト。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティには、ユーザーが Web サイトにログインするための手順が含まれています。 このテキストは、<xref:System.Web.UI.WebControls.Login> コントロールのタイトルの後に表示されます。

 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティが <xref:System.String.Empty>に設定されている場合、ユーザーは指示テキストを使用できません。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Login> コントロールに命令テキストを挿入します。

 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstructionTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InstructionTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstructionTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの指示テキストの設定を定義する <see cref="T:System.Web.UI.WebControls.Login" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールの指示テキストのスタイル設定を格納する <see cref="T:System.Web.UI.WebControls.Login" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールの指示テキストの外観を定義します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> クラスのプロパティ (`InstructionTextStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`InstructionTextStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定することによって、命令テキストの命令テキストと背景色を設定します。

 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabelStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ LabelStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabelStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのラベルの設定を定義する <see cref="T:System.Web.UI.WebControls.Login" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのラベルのスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Login" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールのテキストボックスのラベルの外観を定義します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> クラスのプロパティ (`LabelStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`LabelStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティは、次のプロパティの外観を定義します。

-   <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>

-   <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>

 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LabelStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定することによって、テキストボックスラベルを青色の斜体テキストに設定します。

 [!code-aspx-csharp[LoginLabelStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelStyle/CS/loginlabelstylecs.aspx#1)]
 [!code-aspx-vb[LoginLabelStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelStyle/VB/loginlabelstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Login))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールを表示するために使用するテンプレートを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールを表示するためのテンプレートを格納している <see cref="T:System.Web.UI.WebControls.Login" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A> プロパティには、<xref:System.Web.UI.WebControls.Login> コントロールをユーザーに表示する方法を定義するテンプレートが含まれています。

 次の表に、<xref:System.Web.UI.WebControls.Login> コントロールテンプレートで使用される必須コントロールとオプションコントロールを示します。

|ID またはコマンド名|コントロール型|必須/省略可能|
|------------------------|------------------|------------------------|
|`UserName`|<xref:System.Web.UI.WebControls.TextBox>、カスタムまたはサードパーティのコントロールを含む <xref:System.Web.UI.IEditableTextControl>を実装するコントロール。|必須|
|`Password`|<xref:System.Web.UI.WebControls.TextBox>、カスタムまたはサードパーティのコントロールを含む <xref:System.Web.UI.IEditableTextControl>を実装するコントロール。|必須|
|`RememberMe`|<xref:System.Web.UI.WebControls.CheckBox>|［オプション］|
|`FailureText`|<xref:System.Web.UI.ITextControl>を実装するすべてのコントロール。|［オプション］|
|`Login`|イベントバブルを発生させるコントロール。|［オプション］|

 レイアウトテンプレートに必要なコントロールが含まれていない場合、<xref:System.Web.UI.WebControls.Login> コントロールは <xref:System.Web.HttpException> 例外をスローします。 間違った型のコントロールにオプションのコントロール ID を指定すると、例外はスローされません。ただし、コントロールは、その後、<xref:System.Web.UI.WebControls.Login> コントロールによって無視されます。

 Login コントロールには、<xref:System.Web.UI.WebControls.Button>、<xref:System.Web.UI.WebControls.LinkButton>、<xref:System.Web.UI.WebControls.ImageButton>などのイベントバブルを発生させる任意のコントロールを指定できます。 コントロールのコマンド名プロパティは "Login" に設定されている必要があります。

 テンプレートが <xref:System.Web.UI.WebControls.Login> コントロールに使用されている場合、コントロールの動作に影響を与えるプロパティは次のとおりです。

-   <xref:System.Web.UI.WebControls.WebControl>から継承されたすべてのプロパティ。 (詳細については、「<xref:System.Web.UI.WebControls.Login> 制御メンバー」の表を参照してください)。

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.FailureAction%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.Password%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>)

-   [https://login.microsoftonline.com/consumers/](<xref:System.Web.UI.WebControls.Login.UserName%2A>)

 テンプレートが <xref:System.Web.UI.WebControls.Login> コントロールに設定されている場合、他のすべてのプロパティは非アクティブになります。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login> コントロールのテンプレートを作成します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginLayoutTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLayoutTemplate/CS/loginlayouttemplatecs.aspx#1)]
 [!code-aspx-vb[LoginLayoutTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLayoutTemplate/VB/loginlayouttemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="login.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロール状態を表すオブジェクトです。</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> メソッドで保存された前の要求からビュー ステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> は有効な <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> ではありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoggedIn">
      <MemberSignature Language="C#" Value="public event EventHandler LoggedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoggedIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoggedIn;" />
      <MemberSignature Language="F#" Value="member this.LoggedIn : EventHandler " Usage="member this.LoggedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが Web サイトにログインし、認証されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoggedIn> イベントは、認証プロバイダーがユーザーの資格情報を確認し、次の応答でブラウザーに送信するために認証 cookie がキューに登録された後に発生します。 ユーザーが認証された後に、ユーザーごとのデータにアクセスするなど、追加の処理を行うには、<xref:System.Web.UI.WebControls.Login.LoggedIn> イベントを使用します。

 ユーザーがログイン情報を送信すると、<xref:System.Web.UI.WebControls.Login> 制御によって最初に <xref:System.Web.UI.WebControls.Login.LoggingIn> イベント、次に <xref:System.Web.UI.WebControls.Login.Authenticate> イベント、最後に <xref:System.Web.UI.WebControls.Login.LoggedIn> イベントが発生します。

> [!NOTE]
>  ユーザーが <xref:System.Web.UI.WebControls.Login> コントロールを使用して Web サイトにログインすると、ビューステートとすべてのポストデータのすべてのデータが失われます。 ビューステートに依存する <xref:System.Web.UI.WebControls.Login.LoggedIn> イベントでは操作を実行しないでください。

 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoggedIn> イベントを使用して、ユーザーログインのレコードを保持するサイト固有のメソッドを呼び出します。

 [!code-aspx-csharp[LoginAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAfterLogin/CS/loginafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAfterLogin/VB/loginafterloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoggingIn">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggingIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggingIn As LoginCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::LoginCancelEventHandler ^ LoggingIn;" />
      <MemberSignature Language="F#" Value="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " Usage="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証が行われる前に、ユーザーがログイン情報を送信したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoggingIn> イベントは、ユーザーがログイン情報を送信するときに、ユーザーが Web サイトで認証される前に発生します。 <xref:System.Web.UI.WebControls.Login.LoggingIn> イベントを使用して、ユーザーを認証する前に必要な情報を設定します。

 <xref:System.ComponentModel.CancelEventArgs> オブジェクトの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定することによって、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベント中にログイン試行を取り消すことができます。

 <xref:System.Web.UI.WebControls.Login.LoggingIn> イベントが発生すると、<xref:System.Web.UI.WebControls.Login> コントロールによって <xref:System.Web.UI.WebControls.Login.Authenticate> イベントが発生し、次に <xref:System.Web.UI.WebControls.Login.LoggedIn> イベントが発生します。

 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベントを使用して、ユーザーが <xref:System.Web.UI.WebControls.Login.UserName%2A> プロパティに適切な形式の電子メールアドレスを入力したことを確認します。 それ以外の場合、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベントはログイン試行をキャンセルし、<xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティを使用してエラーメッセージを表示します。

 [!code-aspx-csharp[LoginBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginBeforeLogin/CS/loginbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginBeforeLogin/VB/loginbeforeloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string LoginButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string LoginButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoginButtonCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ LoginButtonCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoginButtonCommandName : string" Usage="System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン ボタンに関連付けられたコマンド名を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonCommandName> は読み取り専用のフィールドであり、既定値は "Login" です。 この値は <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A>に渡され、値が "Login" の場合、コントロールは現在のユーザーにログインしようとします。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン ボタンに使用するイメージの URL を取得または設定します。</summary>
        <value>ログイン ボタンに使用するイメージの URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> プロパティには、<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> プロパティが <xref:System.Web.UI.WebControls.ButtonType.Image>に設定されている場合に <xref:System.Web.UI.WebControls.Login> コントロールのログインボタンとして表示されるイメージの URL が格納されます。

 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティは、画像を表示しないブラウザー内のイメージの代替テキストとして使用されます。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> プロパティをイメージの URL に設定します。

 [!code-aspx-csharp[LoginSubmitButtonImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/CS/loginsubmitbuttonimageurlcs.aspx#1)]
 [!code-aspx-vb[LoginSubmitButtonImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/VB/loginsubmitbuttonimageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style LoginButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style LoginButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoginButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ LoginButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> コントロールのログイン ボタンの外観を設定できるようにする <see cref="T:System.Web.UI.WebControls.Login" /> オブジェクトへの参照を取得します。</summary>
        <value>ログイン ボタンのスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login> コントロールの [ログイン] ボタンの外観を制御するには、<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.Style> クラスのプロパティ (`LoginButtonStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`LoginButtonStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティは、[ログイン] ボタンの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Login> コントロールのログインボタンの外観を定義します。

 [!code-aspx-csharp[LoginButtonStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonStyle/CS/loginbuttonstylecs.aspx#1)]
 [!code-aspx-vb[LoginButtonStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonStyle/VB/loginbuttonstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonText">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonText : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのログイン ボタンのテキストを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのログイン ボタンに使用するテキスト。 既定値は "Login" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティには、<xref:System.Web.UI.WebControls.Login> コントロールのログインボタンに表示されるテキストが含まれています。 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> プロパティの値に応じて、ボタンのテキストとして表示できます。また、画像を表示しないブラウザー内の画像の代わりとして、またはリンクのテキストとして表示されます。 次の表では、さまざまな <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 値が <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティに与える影響について説明します。

|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> の設定|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティの使用方法。|
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|<xref:System.Web.UI.WebControls.ButtonType.Button>|ボタンの `Text` プロパティとして。|
|<xref:System.Web.UI.WebControls.ButtonType.Image>|イメージの代替テキストとして使用します。|
|<xref:System.Web.UI.WebControls.ButtonType.Link>|リンクテキストとして。|

 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティのテキストが <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> プロパティの値にどのように影響するかを示しています。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType LoginButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType LoginButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType LoginButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> ボタンを表示するときに使用するボタンの種類を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値のいずれか。 既定では、 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールのログインボタンに使用するボタンの種類を決定します。 さまざまなボタンの種類を次の表に示します。

|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> の設定|表示されるボタンの種類|
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|
|<xref:System.Web.UI.WebControls.ButtonType.Button>|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティで指定されたテキストを含む HTML ボタン。|
|<xref:System.Web.UI.WebControls.ButtonType.Image>|画像。 イメージの URL は、<xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> プロパティで指定されます。 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティで指定された文字列は、イメージの代替テキストとして使用されます。|
|<xref:System.Web.UI.WebControls.ButtonType.Link>|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> プロパティで指定されたテキストを含む HTML リンク。|

 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> プロパティが <xref:System.Web.UI.WebControls.ButtonType.Button> または <xref:System.Web.UI.WebControls.ButtonType.Link>に設定されている場合、<xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> プロパティの内容は無視されます。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.Login> コントロールで使用できるさまざまな種類のログインボタンを示しています。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.LoginButtonType" /> プロパティが有効な <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値に設定されていません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoginError">
      <MemberSignature Language="C#" Value="public event EventHandler LoginError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoginError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoginError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoginError As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoginError;" />
      <MemberSignature Language="F#" Value="member this.LoginError : EventHandler " Usage="member this.LoginError : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン エラーが検出された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.LoginError> イベントは、ユーザーが入力した資格情報が無効な場合に発生します。 <xref:System.Web.UI.WebControls.Login.LoginError> イベントを使用して、ユーザーをカスタムエラーページにリダイレクトしたり、追加のヘルプを提供したり、失敗したログイン試行をログに記録したりすることができます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoginError> イベントを使用して、ログイン試行が失敗したときにユーザーへのヘルプリンクを表示します。

 [!code-aspx-csharp[LoginLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginError/CS/loginloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginError/VB/loginloginerrorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MembershipProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MembershipProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : string with get, set" Usage="System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールで使用するメンバーシップ データ プロバイダーの名前を取得または設定します。</summary>
        <value>コントロールで使用するメンバーシップ データ プロバイダーの名前。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> プロパティには、<xref:System.Web.UI.WebControls.Login> コントロールの認証情報を提供するデータプロバイダーの名前が含まれています。 有効なメンバーシッププロバイダー名は、アプリケーションの machine.config ファイルまたは web.config ファイルの `<membership>` 要素で定義されます。

 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> プロパティを設定しなかった場合は、常に <xref:System.String.Empty>が返されます。

 詳細については、<xref:System.Web.Security.Membership> クラスを参照してください。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticate">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticate (System.Web.UI.WebControls.AuthenticateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticate(class System.Web.UI.WebControls.AuthenticateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticate (e As AuthenticateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticate(System::Web::UI::WebControls::AuthenticateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit&#xA;override this.OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit" Usage="login.OnAuthenticate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.AuthenticateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />。</param>
        <summary>ユーザーを認証する <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> メソッドは、<xref:System.Web.UI.WebControls.Login.Authenticate> イベントを発生させます。 <xref:System.Web.UI.WebControls.Login.Authenticate> イベントを使用して、カスタム認証スキームを実装します。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.Authenticate> イベントを使用して、サイト固有のカスタム認証コードを呼び出します。

 [!code-aspx-csharp[LoginOnAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAuthenticate/CS/loginonauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginOnAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAuthenticate/VB/loginonauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="login.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソースです。</param>
        <param name="e">イベントのデータを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ページのユーザー インターフェイス (UI: User Interface) サーバー コントロールの上位階層にイベントを渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A> メソッドは、子コントロールからページ階層にイベントを渡すための <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> メソッドを実装します。

 現在のイベントが <xref:System.Web.UI.WebControls.Login> コントロールのログインボタンによってポストされた場合、<xref:System.Web.UI.WebControls.Login> コントロールは Web サイトへのログインを試みます。 それ以外の場合、イベントはページコントロールの階層構造に渡されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggedIn (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggedIn(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggedIn (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggedIn(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggedIn : EventArgs -&gt; unit&#xA;override this.OnLoggedIn : EventArgs -&gt; unit" Usage="login.OnLoggedIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary>ユーザーが Web サイトにログインし、認証された後に、<see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> メソッドは、<xref:System.Web.UI.WebControls.Login.LoggedIn> イベントを発生させます。 ユーザーが認証された後に、ユーザーごとのデータにアクセスするなど、追加の処理を行うには、<xref:System.Web.UI.WebControls.Login.LoggedIn> イベントを使用します。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoggedIn> イベントを使用して、ユーザーログインのレコードを保持するサイト固有のメソッドを呼び出します。

 [!code-aspx-csharp[LoginOnAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAfterLogin/CS/loginonafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginOnAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAfterLogin/VB/loginonafterloginvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggingIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggingIn (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggingIn(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggingIn (e As LoginCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggingIn(System::Web::UI::WebControls::LoginCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit&#xA;override this.OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit" Usage="login.OnLoggingIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" />。</param>
        <summary>認証が行われる前にユーザーがログイン情報を送信したときに、<see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> メソッドは、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベントを発生させます。 <xref:System.Web.UI.WebControls.Login.LoggingIn> イベントを使用して、ユーザーを認証する前、またはカスタム検証を実行する前に、必要な処理を実行します。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベントを使用して、ユーザーが <xref:System.Web.UI.WebControls.Login.UserName%2A> プロパティに適切な形式の電子メールアドレスを入力したことを確認します。 それ以外の場合、<xref:System.Web.UI.WebControls.Login.LoggingIn> イベントハンドラーはログイン試行をキャンセルし、<xref:System.Web.UI.WebControls.Login.InstructionText%2A> プロパティに指定されたエラーメッセージを表示します。

 [!code-aspx-csharp[LoginOnBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnBeforeLogin/CS/loginonbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginOnBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnBeforeLogin/VB/loginonbeforeloginvb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.Login> コントロールを拡張する方法を示しています。 `CustomLogin` コントロールには、ユーザーが認証に使用するメンバーシッププロバイダーをユーザーが選択できるようにするための <xref:System.Web.UI.WebControls.DropDownList> コントロールが含まれています。 (これらのプロバイダーは web.config で構成されています)。<xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> メソッドでは、<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> プロパティは <xref:System.Web.UI.WebControls.DropDownList> コントロールの選択された値に設定されます。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoginError">
      <MemberSignature Language="C#" Value="protected virtual void OnLoginError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoginError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoginError (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoginError(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoginError : EventArgs -&gt; unit&#xA;override this.OnLoginError : EventArgs -&gt; unit" Usage="login.OnLoginError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ログイン試行が失敗したときに、<see cref="E:System.Web.UI.WebControls.Login.LoginError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> メソッドは、<xref:System.Web.UI.WebControls.Login.LoginError> イベントを発生させます。 <xref:System.Web.UI.WebControls.Login.LoginError> イベントを使用して、ユーザーのログイン試行が失敗した場合に、エラーログなどの追加処理を行います。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.LoginError> イベントを使用して、ログイン試行が失敗したときにユーザーへのヘルプリンクを表示します。

 [!code-aspx-csharp[LoginOnLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnLoginError/CS/loginonloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginOnLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnLoginError/VB/loginonloginerrorvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="login.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>基本 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> メソッドを実装します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A> メソッドは、<xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> メソッドを実装して、ビューステートおよびレンダリングコンテンツを保存する前に、必要なプリレンダリングの手順を実行するように <xref:System.Web.UI.WebControls.Login> コントロールに通知します。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Login.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ上の <see cref="T:System.Web.UI.WebControls.Login" /> コントロールの要素の位置を指定する値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 列挙値の 1 つ。 既定では、 <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Orientation%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールを縦書き形式で表示するかどうかを決定します。 <xref:System.Web.UI.WebControls.Login.UserName%2A> テキスト入力フィールドは <xref:System.Web.UI.WebControls.Login.Password%2A> テキスト入力フィールドの上に、横形式では <xref:System.Web.UI.WebControls.Login.UserName%2A> テキスト入力フィールドの横に <xref:System.Web.UI.WebControls.Login.Password%2A> テキスト入力フィールドを使用します。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.Login.Orientation%2A> プロパティを変更した場合の効果を示しています。

 [!code-aspx-csharp[LoginLoginLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginLayout/CS/loginloginlayoutcs.aspx#1)]
 [!code-aspx-vb[LoginLoginLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginLayout/VB/loginloginlayoutvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.Orientation" /> プロパティが有効な <see cref="T:System.Web.UI.WebControls.Orientation" /> 列挙値に設定されていません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public virtual string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Password" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Password { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.Web.UI.WebControls.Login.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したパスワードを取得します。</summary>
        <value>ユーザーが入力したパスワード。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.Password%2A> プロパティには、ユーザーが入力したパスワードが含まれます。 パスワードはクリアテキストです。 詳細については、「 [Web アプリケーションの基本的なセキュリティプラクティス](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)」を参照してください。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.Login.UserName%2A> または <xref:System.Web.UI.WebControls.Login.Password%2A> のプロパティをプログラムによって操作する場合は、ページのライフサイクル中に適切なタイミングで実行することが重要です。 <xref:System.Web.UI.WebControls.Login.UserName%2A> と <xref:System.Web.UI.WebControls.Login.Password%2A> の値は、`Page_Load` フェーズでは使用できませんが、`Pre_Render` フェーズでは使用できません。

 <xref:System.Web.UI.WebControls.Login.UserName%2A> や <xref:System.Web.UI.WebControls.Login.Password%2A>などのテキストボックスで表される <xref:System.Web.UI.WebControls.Login> コントロールプロパティは、ページライフサイクルのすべてのフェーズでアクセスできます。 コントロールは、テキストボックスによってトリガーされる <xref:System.Web.UI.WebControls.TextBox.TextChanged> イベントによってエンドユーザーによって行われたすべての変更を取得します。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.Password%2A> プロパティをカスタム認証メソッドに渡します。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Login.Password" /> ボックスのラベル テキストを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.Password" /> テキスト ボックスのラベル テキスト。 既定値は "パスワード" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A> プロパティには、<xref:System.Web.UI.WebControls.Login.Password%2A> テキストボックスのラベルテキストが含まれています。

 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> プロパティは、フィールドラベルの配置場所を定義します。

 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A> プロパティを "User Password:" に設定します。

 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryIconUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワード回復ページへのリンクの隣に表示するイメージの場所を取得します。</summary>
        <value>表示する画像の URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryText">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワード回復ページへのリンク テキストを取得また設定します。</summary>
        <value>パスワード回復ページへのリンク テキスト。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティには、サイトのパスワード回復ページへのリンクのテキストが含まれます。 パスワード回復ページの URL は、[<xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A>] プロパティで指定します。

 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> が空の場合、<xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティのテキストはユーザーに表示されますが、リンクとして書式設定されません。

 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティが空の場合、ユーザーはパスワード回復ページへのリンクを使用できません。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティを設定して、サイトのパスワード回復ページへのリンクのテキストを指定します。 この例では、ログインフォームを表示し、<xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> と <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> のプロパティを設定します。 ユーザーが [パスワードを忘れた場合] をクリックすると、getPass .aspx ページが表示されます。

 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワード回復ページの URL を取得または設定します。</summary>
        <value>パスワード回復ページの URL。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> プロパティには、Web サイトのパスワード回復ページの URL が格納されます。 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティには、リンクに使用されるテキストが含まれています。

 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> プロパティが空の場合、ユーザーはパスワード回復ページへのリンクを使用できません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> プロパティを使用して、サイトのパスワードの回復ページの URL を指定します。 この例では、ログインフォームを表示し、<xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> と <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> のプロパティを設定します。 ユーザーが [パスワードを忘れた場合] をクリックすると、getPass .aspx ページが表示されます。

 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワード フィールドが空白のままになっているときに、<see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示するエラー メッセージを取得または設定します。</summary>
        <value>パスワード フィールドが空白のままになっているときに、<see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示するエラー メッセージ。 既定値は "パスワード" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> プロパティには、ログインページの <xref:System.Web.UI.WebControls.ValidationSummary> コントロールに表示されるエラーメッセージが含まれています。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> プロパティの値は、次の両方の条件に該当する場合にのみ表示されます。

-   ページに <xref:System.Web.UI.WebControls.ValidationSummary> コントロールが存在します。

-   パスワードテキストボックスは、ユーザーによって空白のままになります。

 プロパティの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> と <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> の両方の値が、<xref:System.Web.UI.WebControls.Login> コントロール内の検証グループにラップされます。 これらの値を表示するには、<xref:System.Web.UI.WebControls.ValidationSummary> コントロールの <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> プロパティを <xref:System.Web.UI.WebControls.Login> コントロールの <xref:System.Web.UI.Control.ID%2A> プロパティに設定する必要があります。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.ValidationSummary> コントロールを使用して、<xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> プロパティに指定されたエラーメッセージを表示します。

 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeSet">
      <MemberSignature Language="C#" Value="public virtual bool RememberMeSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RememberMeSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RememberMeSet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeSet : bool with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーのブラウザーに永続的な認証クッキーを送信するかどうかを示す値を取得または設定します。</summary>
        <value>永続的な認証クッキーを送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティが `true`と、ユーザーのコンピューターに送信された認証 cookie の有効期限が50年に設定され、ユーザーが次に Web サイトにアクセスしたときに使用される永続的な cookie になります。 認証 cookie はユーザーのコンピューターに存在するため、ユーザーは既に認証されていると見なされ、Web サイトに再度ログインする必要はありません。

 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> プロパティが `true`場合、<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティは、ユーザーに表示されるチェックボックスの値に設定されます。

 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> プロパティが `false`の場合、ページに [記憶する] チェックボックスは表示されず、ユーザーは認証 cookie が永続的であるかどうかを制御できません。 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティが `true`の場合、ユーザーのブラウザーに送信された認証 cookie は永続的なクッキーになります。

 ユーザーが <xref:System.Web.UI.WebControls.LoginStatus> コントロールを使用して Web サイトからログアウトすると、ユーザーのコンピューターから永続的な cookie がクリアされ、ユーザーは次回アクセス時にサイトにログインする必要があります。

> [!NOTE]
>  ユーザーのブラウザーに永続的な認証 cookie を設定することには、本質的にセキュリティ上のリスクが伴います。 これらのセキュリティリスクがサイトで許容されるかどうかを判断する必要があります。 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> プロパティを `true` に設定し、<xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> プロパティを `false`に設定した場合、インターネットカフェのように、パブリックブラウザーから Web サイトにアクセスしたユーザーは、誤って永続的な認証 cookie を残して、ブラウザーの次のユーザーが前のユーザーの資格情報を使用して Web サイトにアクセスできるようになります。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeText">
      <MemberSignature Language="C#" Value="public virtual string RememberMeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RememberMeText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RememberMeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeText : string with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[次回のために保存] チェック ボックスのラベル テキストを取得または設定します。</summary>
        <value>[次回のために保存] チェック ボックスのラベル テキスト。 既定値は "次回のために保存" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> プロパティには、[<xref:System.Web.UI.WebControls.CheckBox> を記憶する] コントロールのラベルのテキストが含まれています。

 プロパティの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="login.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML ライター。</param>
        <summary>指定された HTML ライターを使用して、ログイン フォームをレンダリングします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インライン スタイルを適用するために、コントロールがレンダリングされる HTML を <see langword="table" /> 要素内に囲むかどうかを示す値を取得または設定します。</summary>
        <value>コントロールがレンダリングされる HTML を <see langword="true" /> 要素内に囲む場合は <see langword="table" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> などのインラインスタイルプロパティをコントロールに対してレンダリングされるすべての HTML に適用するために、ASP.NET は、レンダリングされた HTML を `table` 要素で囲みます。 外側の `table` 要素を表示しない場合は、このプロパティを `false`に設定します。 その場合、コントロール全体に適用されるインラインスタイルプロパティを設定しようとすると、例外がスローされます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="login.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出された後に変更された状態を保存します。</summary>
        <returns>コントロールの現在のビュー ステートを格納するオブジェクト。このコントロールに関連付けられたビュー ステートがない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="login.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールのデザイン時データを格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>コントロールのデザイン時データを設定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Login.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.Login" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>常に <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login> コントロールに関連付けられている <xref:System.Web.UI.HtmlTextWriterTag> 値を確認するには、<xref:System.Web.UI.WebControls.Login.TagKey%2A> プロパティを使用します。 このプロパティは、主にコントロールの開発者によって使用されます。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b4332d67-e0a5-4f88-928b-5c84fb892b5e">ASP.NET Login コントロールの外観と動作のカスタマイズ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">ASP.NET Web サーバーコントロールテンプレート</related>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextBoxStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ TextBoxStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextBoxStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのテキスト ボックスの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>テキスト ボックスの外観を定義するプロパティを格納している <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールのユーザー名とパスワード <xref:System.Web.UI.WebControls.TextBox> コントロールの外観を定義します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.Style> クラスのプロパティ (`TextBoxStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`TextBoxStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティは、ユーザー名とパスワードのテキストボックスの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.Style> オブジェクトのプロパティを設定することによって、ユーザー名とパスワードの <xref:System.Web.UI.WebControls.TextBox> コントロールの背景色とテキストの色を設定します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginTextBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTextBoxStyle/CS/logintextboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginTextBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTextBoxStyle/VB/logintextboxstylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.Password" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserName" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="TextLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginTextLayout TextLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextLayout As LoginTextLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginTextLayout TextLayout { System::Web::UI::WebControls::LoginTextLayout get(); void set(System::Web::UI::WebControls::LoginTextLayout value); };" />
      <MemberSignature Language="F#" Value="member this.TextLayout : System.Web.UI.WebControls.LoginTextLayout with get, set" Usage="System.Web.UI.WebControls.Login.TextLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginTextLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールの関連付けられたテキスト ボックスに対する各ラベルの相対的な位置を指定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 列挙値のいずれか。 既定では、 <see cref="F:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Login> コントロールに関連付けられているテキストボックスを基準としたラベルの位置を指定できます。 このプロパティは、<xref:System.Web.UI.WebControls.LoginTextLayout> 列挙値のいずれかを使用して設定されます。 次の表に、使用可能な値を示します。

|LoginTextLayout 値|説明|
|---------------------------|-----------------|
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|ラベルを関連するテキスト エントリ フィールドの左側に配置します。|
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnTop>|ラベルを関連するテキスト エントリ フィールドの上に配置します。|



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.LoginTextLayout> 列挙体を使用して、<xref:System.Web.UI.WebControls.Login> コントロールの <xref:System.Web.UI.WebControls.Login.TextLayout%2A> プロパティを設定する方法を示します。

 [!code-aspx-csharp[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/CS/logintextlayoutcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/VB/logintextlayoutvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 列挙値の 1 つではありません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="TitleText">
      <MemberSignature Language="C#" Value="public virtual string TitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleText : string with get, set" Usage="System.Web.UI.WebControls.Login.TitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのタイトルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのタイトル。 既定値は "Login" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TitleText%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールの上部に表示されるタイトルを指定します。

 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.TitleText%2A> プロパティを設定します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TitleTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ TitleTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> コントロールのタイトル テキストの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>タイトル テキストの外観を定義するプロパティを格納している <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.TitleText%2A> プロパティに含まれるタイトルの外観を変更するために使用する <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトへの参照を取得します。

 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login> コントロールのタイトルの外観を定義します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 これらのプロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> クラスのプロパティ (`TitleStyle-ForeColor`など) を表します。 プロパティは、`Property.Subproperty` (`TitleStyle.ForeColor`など) の形式でプログラムによって設定できます。

 共通の設定には、カスタムの背景色、テキストの色、およびフォントのプロパティが含まれます。 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティは、<xref:System.Web.UI.WebControls.Login.TitleText%2A> プロパティの外観を定義します。

 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティのスタイル設定は、<xref:System.Web.UI.WebControls.Login> コントロールのスタイル設定とマージされます。 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティで行った設定は、<xref:System.Web.UI.WebControls.Login> コントロールのプロパティの対応する設定よりも優先されます。

 次の <xref:System.Web.UI.WebControls.Login> スタイルプロパティは <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> の設定によってオーバーライドされます。

-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>

-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>

-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>

-   <xref:System.Web.UI.Control.Visible%2A>

-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>

 テンプレートを使用して <xref:System.Web.UI.WebControls.Login> コントロールの外観を定義する場合、<xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティは効果がありません。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> プロパティによって参照される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定することによって、タイトルのテキストの色、背景色、およびフォントの太さを設定します。

> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="login.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本 <see cref="M:System.Web.UI.Control.TrackViewState" /> メソッドをオーバーライドします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Login.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Web.UI.WebControls.Login.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したユーザー名を取得します。</summary>
        <value>ユーザーが入力したユーザー名。 既定では、 <see cref="F:System.String.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserName%2A> プロパティには、ユーザーが入力したユーザー名が含まれます。 <xref:System.Web.UI.WebControls.Login.UserName%2A> や <xref:System.Web.UI.WebControls.Login.Password%2A>などのテキストボックスで表される <xref:System.Web.UI.WebControls.Login> コントロールプロパティは、ページライフサイクルのすべてのフェーズでアクセスできます。 コントロールは、テキストボックスによってトリガーされる <xref:System.Web.UI.WebControls.TextBox.TextChanged> イベントによってエンドユーザーによって行われたすべての変更を取得します。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.UserName%2A> プロパティをカスタム認証メソッドに渡します。

 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Login.UserName" /> ボックスのラベル テキストを取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.UserName" /> テキスト ボックスのラベル テキスト。 既定値は、"ユーザー名:" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A> プロパティには、<xref:System.Web.UI.WebControls.Login.UserName%2A> テキストボックスのラベルテキストが含まれています。

 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> プロパティは、フィールドラベルの配置場所を定義します。

 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A> プロパティを設定する方法を示しています。

 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー名フィールドが空白のままになっているときに、<see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示するエラー メッセージを取得または設定します。</summary>
        <value>ユーザー名フィールドが空白のままになっているときに、<see cref="T:System.Web.UI.WebControls.ValidationSummary" /> コントロールに表示するエラー メッセージ。 既定値は、"ユーザー名" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> プロパティには、ログインページの <xref:System.Web.UI.WebControls.ValidationSummary> コントロールに表示されるエラーメッセージが含まれています。

 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> プロパティの値は、次の両方の条件に該当する場合にのみ表示されます。

-   ページに <xref:System.Web.UI.WebControls.ValidationSummary> コントロールが存在します。

-   ユーザーは、ユーザー名テキストボックスを空白のままにします。

 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。

 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> と <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> の両方の値が、<xref:System.Web.UI.WebControls.Login> コントロール内の検証グループにラップされます。 これらの値を表示するには、<xref:System.Web.UI.WebControls.ValidationSummary> コントロールの <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> プロパティを <xref:System.Web.UI.WebControls.Login> コントロールの <xref:System.Web.UI.Control.ID%2A> プロパティに設定する必要があります。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.ValidationSummary> コントロールを使用して、<xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> プロパティに指定されているエラーメッセージを表示する方法を示します。

 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatorTextStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ValidatorTextStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorTextStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> コントロールで使用する検証コントロールに関連付けられたエラー メッセージの外観を定義する <see cref="T:System.Web.UI.WebControls.Login" /> プロパティのコレクションへの参照を取得します。</summary>
        <value>スタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 次の表に、<xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A> プロパティでカスタマイズできるスタイル設定を示します。

|設定|説明|
|-------------|-----------------|
|`BackColor`|エラーメッセージの背景色。 色には、<xref:System.Drawing.Color> のプロパティを使用できます。|
|`BorderColor`|エラーメッセージの周囲の境界線の色。 色には、<xref:System.Drawing.Color> のプロパティを使用できます。|
|`BorderStyle`|エラーメッセージを囲む境界線のスタイル。 スタイルには、"None"、"点線"、"破線"、"Solid"、"Double"、"Groove"、"ねじ山"、"Inset"、または "冒頭" を指定できます。 既定値は "NotSet" です。 `BorderWidth` 値が2より大きい場合を除き、一部のスタイルは明確に表示されません。|
|`BorderWidth`|エラーメッセージの周囲の境界線の幅。|
|`CssClass`|エラーメッセージを表示するために使用されるカスケードスタイルシート (CSS) クラス。 他の設定を指定した場合は、スタイルシートの設定がオーバーライドされます。|
|`Font-Bold`|エラーメッセージのテキストを太字で表示する `true` ます。|
|`Font-Italic`|エラーメッセージのテキストを斜体で表示する `true` ます。|
|`Font-Names`|フォントフェイスの名前。|
|`Font-Overline`|`true`、エラーメッセージテキストをその上に行と共に表示します。|
|`Font-Size`|エラーメッセージ内のテキストのサイズを <xref:System.Web.UI.WebControls.FontUnit> オブジェクトとして表示します。|
|`Font-Strikeout`|エラーメッセージのテキストを `true` して表示します。|
|`Font-Underline`|`true`、エラーメッセージテキストを下線付きで表示します。|
|`ForeColor`|エラーメッセージのテキストの色。 色には、<xref:System.Drawing.Color> のプロパティを使用できます。|
|`Height`|エラーメッセージの高さを表す <xref:System.Web.UI.WebControls.Unit> オブジェクト。|
|`Width`|エラーメッセージの幅を表す <xref:System.Web.UI.WebControls.Unit> オブジェクト。|

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b4332d67-e0a5-4f88-928b-5c84fb892b5e">ASP.NET Login コントロールの外観と動作のカスタマイズ</related>
      </Docs>
    </Member>
    <Member MemberName="VisibleWhenLoggedIn">
      <MemberSignature Language="C#" Value="public virtual bool VisibleWhenLoggedIn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisibleWhenLoggedIn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VisibleWhenLoggedIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VisibleWhenLoggedIn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VisibleWhenLoggedIn : bool with get, set" Usage="System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが認証された後に、<see cref="T:System.Web.UI.WebControls.Login" /> コントロールを表示するかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが認証されたときに、<see langword="false" /> コントロールを非表示にする必要がある場合は <see cref="T:System.Web.UI.WebControls.Login" />。それ以外の場合は <see langword="true" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> プロパティは、認証されたユーザーに <xref:System.Web.UI.WebControls.Login> コントロールを表示するかどうかを指定します。 プロパティが `false`されている場合、認証されたユーザーがサイトにアクセスしても、ページに <xref:System.Web.UI.WebControls.Login> コントロールは表示されません。 これは、ユーザーが認証された後に <xref:System.Web.UI.WebControls.Login> コントロールを非表示にするために、ログインページおよび情報ページとして使用される Web ページで使用されます。

 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> プロパティは、Web.config またはアプリケーションの構成ファイルで定義された既定のログインページに表示される <xref:System.Web.UI.WebControls.Login> コントロールには影響しません。

 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> プロパティを `true` に設定して、ユーザーが認証されているかどうかにかかわらず、<xref:System.Web.UI.WebControls.Login> コントロールを非表示にし、常にページに表示するように指定しています。

 [!code-aspx-csharp[LoginHideWhenLoggedIn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHideWhenLoggedIn/CS/loginhidewhenloggedincs.aspx#1)]
 [!code-aspx-vb[LoginHideWhenLoggedIn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHideWhenLoggedIn/VB/loginhidewhenloggedinvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET ログインコントロールの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
