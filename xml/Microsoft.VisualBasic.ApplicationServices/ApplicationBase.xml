<Type Name="ApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79c14860871edc4a305d82b1cedf7b563b3a68be" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82302555" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ApplicationBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationBase" />
  <TypeSignature Language="F#" Value="type ApplicationBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>現在のアプリケーションに関するプロパティ、メソッド、およびイベントを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application` オブジェクトによって公開されるプロパティは、現在のアプリケーションまたは DLL のみに関連付けられたデータを返します。 システム レベル以外の情報は、`My.Application` に変更される可能性があります。  
  
 `My.Application` オブジェクトは、次のクラスで構成されています。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> は、すべてのプロジェクトで使用可能なメンバーを提供します。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Windows フォームアプリケーションで使用できるメンバーを提供します。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> には、コンソールアプリケーションで使用できるメンバーが用意されています。  
  
   
  
## Examples  
 この例では、この値が使用可能な場合、`My.Application.GetEnvironmentVariable` メソッドを使用して PATH 環境変数の値を取得および表示します。 それ以外の場合は、PATH 環境変数が存在しないことを示すメッセージが表示されます。  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeCulture">
      <MemberSignature Language="C#" Value="public void ChangeCulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeCulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeCulture : string -&gt; unit" Usage="applicationBase.ChangeCulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">[https://login.microsoftonline.com/consumers/](<see langword="String" />) カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
        <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeCulture` メソッドは、現在のスレッドの <xref:System.Threading.Thread.CurrentCulture%2A> プロパティを変更します。 <xref:System.Threading.Thread.CurrentCulture%2A> は、そのスレッドでのすべての計算の日付、時刻、通貨、数値、並べ替え順序、文字列比較、および大文字小文字の既定の書式を決定します。  
  
 現在のカルチャを取得するには、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture%2A> プロパティまたは <xref:System.Threading.Thread.CurrentCulture%2A> プロパティを使用できます。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> 設定は言語設定とは異なります。 地理的な地域の標準設定に関連するデータのみが含まれています。 したがって、<xref:System.Threading.Thread.CurrentCulture%2A> プロパティは、特定のカルチャまたは <xref:System.Globalization.CultureInfo.InvariantCulture%2A>にのみ設定できます。  
  
 `My.Application.ChangeUICulture` メソッドを使用して、現在のスレッドがカルチャ固有のリソースを取得するために使用するカルチャを変更します。  
  
> [!IMPORTANT]
>  `My.Application.ChangeCulture` メソッドでは、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> が設定された <xref:System.Security.Permissions.SecurityPermission> が必要です。 スレッドに関連付けられているセキュリティ状態により、スレッドの操作は危険です。 したがって、このアクセス許可は、信頼できるコードに必要な場合にのみ指定する必要があります。 スレッドのカルチャは、信頼度の低いコードで変更することはできません。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|利用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、カルチャを変更して日付の文字列形式を変更する方法を示します。  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> が <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICulture">
      <MemberSignature Language="C#" Value="public void ChangeUICulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeUICulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeUICulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeUICulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeUICulture : string -&gt; unit" Usage="applicationBase.ChangeUICulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">[https://login.microsoftonline.com/consumers/](<see langword="String" />) カルチャの名前を表す文字列。 使用可能な名前の一覧については、「<see cref="T:System.Globalization.CultureInfo" />」を参照してください。</param>
        <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeUICulture` メソッドは、現在のスレッドの <xref:System.Threading.Thread.CurrentUICulture%2A> プロパティを変更します。 <xref:System.Threading.Thread.CurrentUICulture%2A> プロパティは、リソースマネージャーと `My.Resources` オブジェクトで使用されるカルチャを決定します。この情報は、実行時にカルチャ固有のリソースを検索するために使用されます。  
  
 現在の UI カルチャを取得するには、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture%2A> プロパティまたは <xref:System.Threading.Thread.CurrentUICulture%2A> プロパティを使用します。  
  
 `My.Application.ChangeCulture` メソッドを使用して、現在のスレッドが文字列の操作と文字列の書式設定に使用するカルチャを変更します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|利用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Application.ChangeUICulture` メソッドを使用して、`My.Resources` オブジェクトがリソースを取得するために使用するカルチャを設定します。  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 この例を使用するには、アプリケーションのリソースファイルに `Message` という名前の文字列が必要です。また、アプリケーションには、そのリソースファイルのフランス語カルチャバージョン (`Resources.fr-FR.resx`) が含まれている必要があります。 詳細については、「[方法: リソースを追加または削除する](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d)」を参照してください。  
  
 アプリケーションに、そのリソースファイルのフランス語カルチャバージョンがない場合、`My.Resources` オブジェクトは、既定のカルチャリソースファイルからリソースを取得します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> が <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> が有効なカルチャ名ではありません。</exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを取得します。</summary>
        <value>現在のスレッドが文字列の操作と書式設定に使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentCulture` プロパティは、現在のスレッドが文字列の操作と文字列の書式設定に使用する <xref:System.Globalization.CultureInfo> オブジェクトを取得します。 このオブジェクトは、<xref:System.Threading.Thread.CurrentCulture%2A> プロパティによって返されるオブジェクトと同じです。このオブジェクトは、そのスレッドに対する文字列関連の計算の多くを制御します。 <xref:System.Threading.Thread.CurrentCulture%2A> プロパティは、日付、時刻、通貨、および数値の既定の形式を決定します。 また、文字列の並べ替え、比較、および大文字と小文字の指定の方法も決定されます。  
  
 カルチャを変更するには、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture%2A> メソッドを使用するか、別の <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Threading.Thread.CurrentCulture%2A> プロパティに割り当てます。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> 設定は言語設定とは異なります。 地理的な地域の標準設定に関連するデータのみが含まれています。  
  
 `My.Application.CurrentUICulture` プロパティを使用して、現在のスレッドがカルチャ固有のリソースを取得するために使用するカルチャを取得します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|利用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、カルチャが日付の文字列形式にどのように影響するかを示します。  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public string GetEnvironmentVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetEnvironmentVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvironmentVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEnvironmentVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEnvironmentVariable : string -&gt; string" Usage="applicationBase.GetEnvironmentVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">環境変数の名前を保持する <see langword="String" />。</param>
        <summary>指定した環境変数の値を返します。</summary>
        <returns>環境変数 <see langword="String" /> の値を保持する <paramref name="name" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.GetEnvironmentVariable` メソッドは、`name`という名前の環境変数を返します。 このメソッドは <xref:System.Environment.GetEnvironmentVariable%28System.String%29?displayProperty=nameWithType>に似ていますが、`name` で指定された環境変数が存在しない場合、このメソッドは例外を発生させます。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|利用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Application.GetEnvironmentVariable` メソッドを使用して PATH 環境変数の値を取得および表示します (使用可能な場合)。 それ以外の場合は、PATH 環境変数が存在しないことを示すメッセージが表示されます。  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> が <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> で指定された環境変数が存在しません。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元のコードに <see cref="T:System.Security.Permissions.EnvironmentPermission" /> アクセスを持つ <see langword="Read" /> がありません。</exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As AssemblyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ Info { Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.AssemblyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バージョン番号、説明、読み込まれているアセンブリなど、アプリケーションのアセンブリに関する情報を取得するためのプロパティを提供するオブジェクトを取得します。</summary>
        <value>現在のアプリケーションの <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 この例では、`My.Application.Info.Version` プロパティを使用して、アプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.Log Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.Log Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As Log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::Log ^ Log { Microsoft::VisualBasic::Logging::Log ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Log : Microsoft.VisualBasic.Logging.Log" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.Log</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供するオブジェクトを取得します。</summary>
        <value>現在のアプリケーションの <see cref="T:Microsoft.VisualBasic.Logging.Log" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。 詳細については、「[方法: ログメッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)」を参照してください。  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを取得します。</summary>
        <value>現在のスレッドがカルチャ固有のリソースを取得するために使用しているカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentUICulture` プロパティは、現在のスレッドがカルチャ固有のリソースを取得するために使用する <xref:System.Globalization.CultureInfo> オブジェクトを取得します。 このオブジェクトは、<xref:System.Threading.Thread.CurrentUICulture%2A> プロパティによって返されるオブジェクトと同じです。 <xref:System.Threading.Thread.CurrentUICulture%2A> プロパティは、リソースマネージャーおよび `My.Resources` オブジェクトで使用されるカルチャと、実行時にカルチャ固有のリソースを検索するために必要な情報を決定します。  
  
 カルチャを変更するには、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A> メソッドを使用するか、別の <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Threading.Thread.CurrentUICulture%2A> プロパティに割り当てます。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> 設定は言語設定とは異なります。 地理的な地域の標準設定に関連するデータのみが含まれています。  
  
 `My.Application.CurrentCulture` プロパティを使用して、現在のスレッドが文字列の操作と文字列の書式設定に使用するカルチャを取得します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|利用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>を使用して変更する前に、`My.Application.CurrentCulture` プロパティを使用して現在のカルチャをキャッシュします。 `My.Application.ChangeUICulture` メソッドは、`My.Resources` オブジェクトがリソースを取得するために使用するカルチャを設定します。  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 この例を使用するには、アプリケーションのリソースファイルに `Message` という名前の文字列が必要です。また、アプリケーションには、そのリソースファイルのフランス語カルチャバージョン (`Resources.fr-FR.resx`) が含まれている必要があります。 詳細については、「[方法: リソースを追加または削除する](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d)」を参照してください。  
  
 アプリケーションに、そのリソースファイルのフランス語カルチャバージョンがない場合、`My.Resources` オブジェクトは、既定のカルチャリソースファイルからリソースを取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/my-resources-object.md">My.resources オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
