<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a83d6248782860e0e01f56434daeb1d08d21685" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73378964" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>現在のユーザーに関する情報にアクセスします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User` オブジェクトによって公開されるプロパティとメソッドは、現在のユーザーに関する情報へのアクセスを提供します。 "現在のユーザー" の意味は、Windows アプリケーションと Web アプリケーションで若干異なります。 Windows アプリケーションでは、現在のユーザーは、アプリケーションを実行するユーザーです。 Web アプリケーションでは、現在のユーザーは、アプリケーションにアクセスするユーザーです。  
  
 `My.User` プロパティは、現在のユーザーの <xref:System.Security.Principal.IPrincipal> へのアクセスも提供します。 プリンシパルオブジェクトは、ユーザーのセキュリティコンテキストを表します。これには、ユーザーの id や、ユーザーが属するすべてのロールが含まれます。  
  
 Windows アプリケーションの場合、このプロパティは <xref:System.Threading.Thread.CurrentPrincipal%2A> プロパティと同じ機能を提供します。 Web アプリケーションの場合、このプロパティは、<xref:System.Web.HttpContext.Current%2A> プロパティによって返されるオブジェクトの <xref:System.Web.HttpContext.User%2A> プロパティと同じ機能を提供します。  
  
> [!NOTE]
>  Windows アプリケーションの場合、既定では、 **Windows アプリケーション**テンプレート上に構築されたプロジェクトのみが `My.User` オブジェクトを初期化します。 その他のすべての Windows プロジェクトの種類では、<xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> メソッドを明示的に呼び出すか <xref:System.Threading.Thread.CurrentPrincipal%2A>に値を割り当てることによって、`My.User` オブジェクトを初期化する必要があります。  
  
> [!NOTE]
>  Windows 95 および Windows 98 で実行されている場合、`My.User` オブジェクトは、ログオンしているユーザーの概念をサポートしていないため、現在の Windows ユーザーに関する情報を報告できません。 これらのオペレーティングシステムで `My.User` オブジェクトを使用するには、カスタム認証を実装する必要があります。  
  
   
  
## Examples  
 この例では、アプリケーションが Windows 認証とカスタム認証のどちらを使用しているかを確認し、その情報を使用して `My.User.Name` プロパティを解析します。  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User` オブジェクトによって公開されるプロパティとメソッドは、現在のユーザーに関する情報へのアクセスを提供します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">ユーザー データへのアクセス (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロールベースのセキュリティに関する、現在のプリンシパルを取得または設定します。</summary>
        <value>セキュリティ コンテキストを表す <see cref="T:System.Security.Principal.IPrincipal" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.CurrentPrincipal` プロパティを、<xref:System.Security.Principal.IPrincipal> インターフェイスを実装するオブジェクトに設定して、カスタム認証を有効にすることができます。  
  
 ほとんどの種類のプロジェクトでは、このプロパティはスレッドの現在のプリンシパルを取得して設定します。 ASP.NET アプリケーションでは、このプロパティは、現在の HTTP 要求のユーザー id のセキュリティ情報を取得して設定します。  
  
 これは上級メンバーです。**[すべて]** タブをクリックしない限り、IntelliSense に表示されません。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
   
  
## Examples  
 この例では、アプリケーションが Windows 認証とカスタム認証のどちらを使用しているかを確認し、その情報を使用して `My.User.Name` プロパティを解析します。  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、プリンシパルを設定するために必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティ アクセス許可のセットを記述します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>スレッドの現在のプリンシパルを、アプリケーションを起動した Windows ユーザーに設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.InitializeWithWindowsUser` メソッドを使用して、スレッドの現在のプリンシパルを、アプリケーションを起動した Windows ユーザーに設定できます。 Windows アプリケーションの Visual Basic アプリケーションモデルでは、起動時にこのメソッドが既定で呼び出されます。 他のプロジェクトの種類では、このメソッドを明示的に呼び出すか、<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>に値を割り当てることによって、スレッドの現在のプリンシパルを設定する必要があります。  
  
 Windows プロジェクトでは、`My.User` オブジェクトは、スレッドの現在のプリンシパルに基づいています。したがって、このメソッドは `My.User` が返す情報を変更できます。 ASP.NET アプリケーションでは、`My.User` オブジェクトは現在の HTTP 要求のユーザー id に基づいており、このメソッドの影響を受けません。  
  
> [!NOTE]
>  `My.User` オブジェクトの正確な動作は、アプリケーションの種類と、アプリケーションが実行されているオペレーティングシステムによって異なります。 詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.User> クラスの概要」を参照してください。  
  
 これは上級メンバーです。**[すべて]** タブをクリックしない限り、IntelliSense に表示されません。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティのアクセス許可のセットについて説明します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のユーザーを表すプリンシパル オブジェクトを取得または設定します。</summary>
        <value>現在のユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.User> オブジェクトでは、このプロパティは <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> プロパティをラップします。 異なる動作を提供するために、派生クラスでこのメソッドをオーバーライドします。 たとえば、<xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> プロパティは、このプロパティをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが認証されているかどうかを示す値を取得します。</summary>
        <value>ユーザーが認証されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsAuthenticated` プロパティを使用すると、現在のユーザーが認証されているかどうかをコードで判断できます。  
  
> [!NOTE]
>  `My.User` オブジェクトの正確な動作は、アプリケーションの種類と、アプリケーションが実行されているオペレーティングシステムによって異なります。 詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.User> クラスの概要」を参照してください。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
   
  
## Examples  
 この例では、リソースにアクセスする前にユーザーが認証されていることを確認します。  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティ アクセス許可のセットを記述します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のユーザーが、指定したロールに属しているかどうかを確認します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">メンバーシップの確認対象となる組み込みの Windows ロール。</param>
        <summary>現在のユーザーが、指定したロールに属しているかどうかを確認します。</summary>
        <returns>現在のユーザーが指定されたロールのメンバーである場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` メソッドを使用すると、現在のユーザーが指定されたロールのメンバーであるかどうかをコードで判断できます。  
  
 文字列を受け取る `My.User.IsInRole` メソッドのオーバーロードにより、現在のプリンシパルの <xref:System.Security.Principal.IPrincipal.IsInRole%2A> メソッドに簡単にアクセスできるようになります。  
  
 `BuiltInRole` 列挙を受け取る `My.User.IsInRole` メソッドのオーバーロードは、現在のプリンシパルによって動作が異なります。 Windows ユーザープリンシパル (<xref:System.Security.Principal.WindowsPrincipal>) の場合、この関数は `role` を同等の <xref:System.Security.Principal.WindowsBuiltInRole> 列挙に変換し、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>を呼び出した結果を返します。 現在のプリンシパルがその他のプリンシパルである場合、この関数は `role` の列挙値の名前をプリンシパルの <xref:System.Security.Principal.IPrincipal.IsInRole%2A> メソッドに渡します。  
  
> [!NOTE]
>  `My.User` オブジェクトの正確な動作は、アプリケーションの種類と、アプリケーションが実行されているオペレーティングシステムによって異なります。 詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.User> クラスの概要」を参照してください。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
   
  
## Examples  
 この例では、リソースにアクセスする前に、ユーザーが管理者であるかどうかを確認します。  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティ アクセス許可のセットを記述します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">メンバーシップを確認する対象のロールの名前。</param>
        <summary>現在のユーザーが、指定したロールに属しているかどうかを確認します。</summary>
        <returns>現在のユーザーが指定されたロールのメンバーである場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` メソッドを使用すると、現在のユーザーが指定されたロールのメンバーであるかどうかをコードで判断できます。  
  
 文字列を受け取る `My.User.IsInRole` メソッドのオーバーロードにより、現在のプリンシパルの <xref:System.Security.Principal.IPrincipal.IsInRole%2A> メソッドに簡単にアクセスできるようになります。  
  
 `BuiltInRole` 列挙を受け取る `My.User.IsInRole` メソッドのオーバーロードは、現在のプリンシパルによって動作が異なります。 Windows ユーザープリンシパル (<xref:System.Security.Principal.WindowsPrincipal>) の場合、この関数は `role` を同等の <xref:System.Security.Principal.WindowsBuiltInRole> 列挙に変換し、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>を呼び出した結果を返します。 現在のプリンシパルがその他のプリンシパルである場合、この関数は `role` の列挙値の名前をプリンシパルの <xref:System.Security.Principal.IPrincipal.IsInRole%2A> メソッドに渡します。  
  
> [!NOTE]
>  `My.User` オブジェクトの正確な動作は、アプリケーションの種類と、アプリケーションが実行されているオペレーティングシステムによって異なります。 詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.User> クラスの概要」を参照してください。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
   
  
## Examples  
 この例では、リソースにアクセスする前に、ユーザーが管理者であるかどうかを確認します。  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティ アクセス許可のセットを記述します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のユーザーの名前を取得します。</summary>
        <value><see langword="String" />。 現在のユーザーの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User` オブジェクトを使用して、現在のユーザーに関する情報を取得できます。  
  
 ユーザーを認証するプリンシパルは、ユーザー名の形式も制御します。 既定では、アプリケーションは Windows 認証を使用し、ユーザー名の形式は DOMAIN\USERNAME です。 プリンシパルのカスタム実装では、必ずしも同じ形式を使用するわけではありません。  
  
> [!NOTE]
>  Windows 95 および Windows 98 で実行する場合、`My.User.Name` プロパティは、ユーザー名を認識しないため、空の文字列を返します。  
  
> [!NOTE]
>  `My.User` オブジェクトの正確な動作は、アプリケーションの種類と、アプリケーションが実行されているオペレーティングシステムによって異なります。 詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.User> クラスの概要」を参照してください。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|**はい**|  
|Windows サービス|**はい**|  
|Web サイト|**はい**|  
  
   
  
## Examples  
 この例では、アプリケーションが Windows 認証とカスタム認証のどちらを使用しているかを確認し、その情報を使用して `My.User.Name` プロパティを解析します。  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティ アクセス許可のセットを記述します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">ユーザー データへのアクセス (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
