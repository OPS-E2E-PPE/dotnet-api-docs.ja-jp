<Type Name="DirListBox" FullName="Microsoft.VisualBasic.Compatibility.VB6.DirListBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f83a5044ded7a6edd886bbef4ecdb7e1ea167783" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83941425" /></Metadata><TypeSignature Language="C#" Value="public class DirListBox : System.Windows.Forms.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DirListBox extends System.Windows.Forms.ListBox" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class DirListBox&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirListBox : System::Windows::Forms::ListBox" />
  <TypeSignature Language="F#" Value="type DirListBox = class&#xA;    inherit ListBox" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(Microsoft.VisualBasic.Compatibility.VB6.CompatibilityListBoxDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ディレクトリおよびパスを実行時に表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールを使用して、ディレクトリの階層リストを表示します。 たとえば、ユーザーが使用可能なすべてのディレクトリ内のファイルの一覧からファイルを開くことができるようにするためのダイアログボックスを作成できます。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A>、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A>、および <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> の各プロパティを設定して、ユーザーがリスト内の項目にアクセスできるようにします。 <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> コントロールと <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> コントロールも表示する場合は、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールと相互に同期するコードを記述できます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
    <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DirListBox` コントロールは、実行時にディレクトリとパスを表示します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public event EventHandler Change;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Change" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Change As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Change;" />
      <MemberSignature Language="F#" Value="member this.Change : EventHandler " Usage="member this.Change : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Change As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロールのコンテンツが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Change` イベントは、ユーザーが新しいディレクトリをダブルクリックしたとき、またはコードを使用して <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path%2A> プロパティの設定を変更したときに、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロール内の選択項目が変更されたときに発生します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public int ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnWidth : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数列の <see cref="T:System.Windows.Forms.ListBox" /> の列幅を取得または設定します。</summary>
        <value>コントロール内の各列の幅 (ピクセル単位)。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListControl" /> のデータ ソースを取得または設定します。</summary>
        <value><see cref="T:System.Collections.IList" /> インターフェイスまたは <see cref="T:System.ComponentModel.IListSource" /> インターフェイスを実装する、<see cref="T:System.Data.DataSet" /> や <see cref="T:System.Array" /> などのオブジェクト。 既定では、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DirList">
      <MemberSignature Language="C#" Value="public string DirList[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirList(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirList(Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirList[int] { System::String ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.DirList(int) : string" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">リスト内の特定の項目の番号。</param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロールのリスト部分に格納されている項目を取得します。</summary>
        <value>指定した項目のディレクトリおよびパスが格納されている <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、リストアイテムにアクセスします。 `DirList` プロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A> プロパティと <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> プロパティと連携して動作します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールの場合、`Index` 番号シーケンスは、実行時にコントロールが作成されるときに現在のディレクトリとサブディレクトリに基づきます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DirListCount">
      <MemberSignature Language="C#" Value="public int DirListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirListCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DirListCount : int" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロールのリスト セクションの項目の数を取得します。</summary>
        <value>リスト内の項目数を表す <see langword="Integer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、現在選択されているディレクトリ内のサブディレクトリの数を返します。 `DirListCount` プロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A> プロパティと <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> プロパティと連携して動作します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DirListIndex">
      <MemberSignature Language="C#" Value="public int DirListIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirListIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property DirListIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirListIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DirListIndex : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロール内で現在選択されている項目のインデックスを取得または設定します。</summary>
        <value>現在選択されている項目のインデックスを表す <see langword="Integer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、現在選択されているディレクトリのインデックスを返します。 `DirListIndex` プロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A> プロパティと <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A> プロパティと連携して動作します。  
  
 式 `instance.DirList(instance.DirListIndex)` は、現在選択されているディレクトリの文字列を返します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool Disposing);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool Disposing) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (Disposing As Boolean)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool Disposing) = System::ComponentModel::Component::Dispose;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dirListBox.Dispose Disposing" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool Disposing);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool Disposing) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (Disposing As Boolean)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool Disposing);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロールによって使用されているアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。 `Dispose()` は、disposing パラメーターを `Dispose(Boolean)` に設定して、protected `true` メソッドを呼び出します。 <xref:System.Object.Finalize%2A> は、disposing パラメーターを `false`に設定して `Dispose` を呼び出します。  
  
 Disposing パラメーターが `true`場合、このメソッドは、このコントロールが参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 <see langword="Dispose(Boolean)" />をオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないようにしてください。 <see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。 <see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.DrawMode with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> の描画モードを取得または設定します。</summary>
        <value>コントロールの項目を描画するときのモードを表す <see cref="P:System.Windows.Forms.ListBox.DrawMode" /> 値の 1 つ。 既定では、 <see cref="F:System.Windows.Forms.DrawMode.Normal" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> 内の項目の高さを取得します。</summary>
        <value>コントロール内の項目の高さ (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールの場合は必要ありません。<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> は高さが可変の項目をサポートしていません。 これが用意されているのは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox> から継承されるためです。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListBox::ObjectCollection ^ Items { System::Windows::Forms::ListBox::ObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListBox.ObjectCollection" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> に格納されている項目を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 内の項目を表す <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには使用できません。コレクションのディレクトリを追加または削除しようとすると、例外が発生する可能性があります。 これが用意されているのは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox> から継承されるためです。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiColumn">
      <MemberSignature Language="C#" Value="public bool MultiColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiColumn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiColumn : bool with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> が複数列をサポートしているかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.ListBox" /> が複数列をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e) = System::Windows::Forms::Control::OnBackColorChanged;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="dirListBox.OnBackColorChanged e" />
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnBackColorChanged` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnBackColorChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnBackColorChanged" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="protected virtual void OnChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChange : EventArgs -&gt; unit&#xA;override this.OnChange : EventArgs -&gt; unit" Usage="dirListBox.OnChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnChanged` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnChanged" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e) = System::Windows::Forms::Control::OnDoubleClick;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="dirListBox.OnDoubleClick e" />
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnDoubleClick(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Control.DoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnDoubleClick` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnDoubleClick" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnDoubleClick" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="dirListBox.OnDrawItem e" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.ListBox.DrawItem" /> イベントを発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnDrawItem` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnDrawItem" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnDrawItem" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnFontChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dirListBox.OnFontChanged e" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnFontChanged` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnFontChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnFontChanged" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnHandleCreated(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dirListBox.OnHandleCreated e" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnHandleCreated` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnHandleCreated" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnHandleCreated" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="dirListBox.OnSelectedIndexChanged e" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.EventArgs" /> です。</param>
        <summary><see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。  
  
 `OnSelectedIndexChanged` メソッドを使用すると、デリゲートをアタッチせずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="OnSelectedIndexChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see langword="OnSelectedIndexChanged" /> メソッドを呼び出す必要があります。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> コントロール内の現在のパスを取得または設定します。</summary>
        <value>現在選択されているディレクトリのパスを表す <see langword="String" />。 既定値は、実行時にコントロールが作成された時点のパスになります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、アプリケーションのファイル参照および操作機能をビルドする場合に使用します。 `Path` プロパティを設定すると、その効果は MS-DOS `chdir` コマンドの効果に似ています。相対パスは、ドライブ指定の有無にかかわらず有効になります。 コロン (:) を持つドライブだけを指定した場合は、そのドライブの現在のディレクトリが選択されます。  
  
 `Path` プロパティは、次の構文を使用して、ドライブに接続せずに修飾されたネットワークパスに設定することもできます。  
  
```  
\\servername\sharename\path  
```  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールの `Path` の値を変更すると、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change> イベントが生成されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Refresh() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="dirListBox.Refresh " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>強制的に、コントロールがクライアント領域を無効化し、直後にそのコントロール自体を再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see langword="Refresh" /> をオーバーライドする場合は、コントロールとその子コントロールが無効になり、再描画されるように、<see langword="Refresh" /> メソッドを必ず呼び出してください。</para></block>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SelectionMode SelectionMode { System::Windows::Forms::SelectionMode get(); void set(System::Windows::Forms::SelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.SelectionMode with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> で項目を選択する方法を取得または設定します。</summary>
        <value><see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Windows.Forms.SelectionMode.One" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> 内の項目をアルファベット順に並べ替えるかどうかを示す値を取得します。</summary>
        <value>コントロール内の項目を並べ替える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールの場合、`Sorted` は常に false を返します。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueMember : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListControl" /> 内の項目の実際の値として使用するプロパティを取得または設定します。</summary>
        <value><see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource" /> プロパティで指定されたコレクションに格納されているオブジェクト プロパティの名前を表す <see langword="String" />。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールには設定しないでください。これは、<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> コントロールが <xref:System.Windows.Forms.ListBox>から継承されている場合にのみ提供されます。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。 ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。 これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/savefiledialog-component-overview-windows-forms">SaveFileDialog コンポーネントの概要 (Windows フォーム)</related>
        <related type="Article" href="/dotnet/framework/winforms/controls/openfiledialog-component-overview-windows-forms">OpenFileDialog コンポーネントの概要 (Windows フォーム)</related>
      </Docs>
    </Member>
  </Members>
</Type>
