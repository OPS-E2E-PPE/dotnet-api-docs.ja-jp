<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29c3a0866ed35d35022c0c46f7d2704914258469" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975988" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9c65d-101">Visual Basic 6.0 からアップグレードされたアプリケーション内のコントロール配列に共通の基本的な機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-102">通常、`BaseControlArray`から継承することはありません。</span><span class="sxs-lookup"><span data-stu-id="9c65d-102">You do not typically inherit from `BaseControlArray`.</span></span> <span data-ttu-id="9c65d-103">独自のコントロール配列を作成するには、`Microsoft.VisualBasic.Compatibility.VB6` 名前空間のいずれかのコントロール配列クラスから継承します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-103">To create your own control array, inherit from one of the control array classes in the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-104"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-105">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-106">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c65d-107"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-108"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-109">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-110">このクラスは通常、クラスのインスタンスを作成するためには使用されないため、このコンストラクターは通常は直接呼び出されませんが、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-110">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-111"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-111">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-112">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-112">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-113">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-113">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="9c65d-114">コントロール配列をホストする <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="9c65d-115"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスの新しいインスタンスを初期化します。必要に応じてコンテナーを指定します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-116"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-116">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-117">このクラスは通常、クラスのインスタンスを作成するためには使用されないため、このコンストラクターは直接呼び出されるのではなく、派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-117">Because this class is not typically used to create an instance of the class, this constructor is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-118"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-118">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-119">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-119">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-120">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-120">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c65d-121">テスト対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span></span></param>
        <summary><span data-ttu-id="9c65d-122">コントロールがコントロール配列のメンバーかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-122">Gets a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-123">そのコントロールがコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-123"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-124"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-124">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-125">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-125">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-126"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-127">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-128">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-129">派生クラスは、<paramref name="target" /> が、コントロール配列の正しい型であることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c65d-129">Derived classes should make sure that <paramref name="target" /> is of the correct type for the control array.</span></span>  
  
<span data-ttu-id="9c65d-130">派生クラスで <see langword="BaseCanExtend" /> をオーバーライドする場合は、基本クラスの <see langword="BaseCanExtend" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-130">When you override <see langword="BaseCanExtend" /> in a derived class, do not call the <see langword="BaseCanExtend" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="9c65d-131">インデックスを取得する対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-131">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="9c65d-132">コントロール配列内のコントロールのインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-132">Gets the index of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-133">コントロール配列内のコントロールのインデックスを表す <see langword="Short" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="9c65d-133">A <see langword="Short" /> integer representing the index of the control in the control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-134"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-134">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-135">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-135">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-136"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-136">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-137">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-137">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-138">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-138">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-139">派生クラスで <see langword="BaseGetIndex" /> をオーバーライドする場合は、基本クラスの <see langword="BaseGetIndex" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-139">When you override <see langword="BaseGetIndex" /> in a derived class, do not call the <see langword="BaseGetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="9c65d-140">コントロール配列内のコントロールのインデックスを表す整数。</span><span class="sxs-lookup"><span data-stu-id="9c65d-140">An integer that represents the index of the control in the control array.</span></span></param>
        <summary><span data-ttu-id="9c65d-141">コントロール配列内の指定されたインデックスに対するコントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-141">Gets the control for a specified index in a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-142">指定した <paramref name="Index" /> にある <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-142">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-143"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-143">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-144">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-144">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-145"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-146">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-147">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-148">派生クラスで <see langword="BaseGetItem" /> をオーバーライドする場合は、基本クラスの <see langword="BaseGetItem" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-148">When you override <see langword="BaseGetItem" /> in a derived class, do not call the <see langword="BaseGetItem" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="9c65d-149"><see cref="T:System.Windows.Forms.Control" /> です。</span><span class="sxs-lookup"><span data-stu-id="9c65d-149">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="9c65d-150"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="9c65d-150">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-151">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="9c65d-151">This method is not supported.</span></span>  
  
 <span data-ttu-id="9c65d-152"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-152">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> -  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-153"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-153">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-154">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-154">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-155">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-155">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="9c65d-156">インデックスを設定する対象の <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-156">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span></span></param>
        <param name="Index"><span data-ttu-id="9c65d-157">コントロールのインデックスを表す <see langword="Short" /> 整数。</span><span class="sxs-lookup"><span data-stu-id="9c65d-157">A <see langword="Short" /> integer that represents the index for the control.</span></span></param>
        <param name="fIsDynamic"><span data-ttu-id="9c65d-158">省略可能。</span><span class="sxs-lookup"><span data-stu-id="9c65d-158">Optional.</span></span> <span data-ttu-id="9c65d-159">コントロールが作成されたのが、デザイン時 (<see langword="Boolean" />) か実行時 (<see langword="false" />) かを示す <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-159">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span></span></param>
        <summary><span data-ttu-id="9c65d-160">コントロール配列内のコントロールのインデックスを設定します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-160">Sets the index for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-161"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-161">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-162">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この `Protected` メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-162">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-163"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-163">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-164">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-164">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-165">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-165">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-166">派生クラスで <see langword="BaseSetIndex" /> をオーバーライドする場合は、基本クラスの <see langword="BaseSetIndex" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-166">When you override <see langword="BaseSetIndex" /> in a derived class, do not call the <see langword="BaseSetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="9c65d-167"><see cref="T:System.Windows.Forms.Control" /> です。</span><span class="sxs-lookup"><span data-stu-id="9c65d-167">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="9c65d-168">コントロールがコントロール配列のメンバーかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-168">Returns a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-169">そのコントロールがコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-169"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-170"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-170">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-171">このクラスは通常、クラスのインスタンスを作成するためには使用されないため、この `Protected` メソッドは、通常は直接呼び出されるのではなく、派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-171">Because this class is not typically used to create an instance of the class, this `Protected` method is usually  not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-172"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-172">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-173">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-173">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-174">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-174">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-175">派生クラスで <see langword="BaseShouldSerializeIndex" /> をオーバーライドする場合は、基本クラスの <see langword="BaseShouldSerializeIndex" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-175">When you override <see langword="BaseShouldSerializeIndex" /> in a derived class, do not call the <see langword="BaseShouldSerializeIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c65d-176">コントロール配列のコンテナーを格納します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-176">Stores the container for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-177"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-177">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-178"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-178">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-179">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-179">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-180">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-180">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c65d-181">コントロール配列内のコントロールが作成されたのが、デザイン時か実行時かを追跡する値を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-181">Stores values to track whether a control in a control array was created at design time or at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-182"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-182">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-183"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-183">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-184">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-184">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-185">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-185">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c65d-186">コントロール配列内のコントロールを表す値を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-186">Stores values that represent the controls in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-187"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-187">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-188"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-188">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-189">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-189">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-190">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-190">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-191">コントロール配列内のコントロール数を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-191">Returns the number of controls in a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-192">コントロールの数を格納する短整数。</span><span class="sxs-lookup"><span data-stu-id="9c65d-192">A Short that contains the number of controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-193">このプロパティは、 [For...](/dotnet/visual-basic/language-reference/statements/for-next-statement)コントロール配列内のコントロールに対して操作を実行する次のステートメント。</span><span class="sxs-lookup"><span data-stu-id="9c65d-193">You can use this property in a [For...Next Statement](/dotnet/visual-basic/language-reference/statements/for-next-statement) to perform an operation on the controls in a control array.</span></span>  
  
 <span data-ttu-id="9c65d-194"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-194">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-195"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-195">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-196">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-196">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-197">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-197">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9c65d-198">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-198"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9c65d-199">コントロール配列内のコントロールによって使用されるアンマネージド リソースを解放します。オプションでマネージド リソースも解放できます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-199">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-200">このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-200">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9c65d-201">`Dispose()` は、disposing パラメーターを `Dispose(Boolean)` に設定して、protected `true` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-201">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="9c65d-202"><xref:System.Object.Finalize%2A> は、disposing パラメーターを `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-202"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="9c65d-203">Disposing パラメーターが `true`場合、このメソッドは、このコントロールが参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-203">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="9c65d-204">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-204">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-205">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-205">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="9c65d-206"><see langword="Dispose(Boolean)" />をオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-206">When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="9c65d-207"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-207">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span> <span data-ttu-id="9c65d-208"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-208">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c65d-209">コントロール配列のコンテナーの初期化コードが実行を完了したかどうかを示す値を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-209">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-210"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-210">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-211"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-211">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-212">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-212">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-213">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-213">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-214">コントロール配列内のコントロールの型を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-214">Returns the type of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-215">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c65d-215">This method must be overridden.</span></span>  
  
<span data-ttu-id="9c65d-216"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-216">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="9c65d-217">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この <see langword="Protected" /> メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-217">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="9c65d-218"><see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-218">Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-219">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-219">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-220">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-220">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
</para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-221">派生クラスで <see langword="GetControlInstanceType" /> をオーバーライドする場合は、基本クラスの <see langword="GetControlInstanceType" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-221">When you override <see langword="GetControlInstanceType" /> in a derived class, do not call the <see langword="GetControlInstanceType" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-222">コントロール配列に対する反復処理に使用する、列挙子オブジェクトへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-222">Returns a reference to an enumerator object, which is used to iterate over a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-223"><see cref="T:System.Collections.IEnumerator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9c65d-223">A <see cref="T:System.Collections.IEnumerator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-224"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-224">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-225"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-225">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-226">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-226">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-227">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-227">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="9c65d-228"><see cref="T:System.Windows.Forms.Control" /> です。</span><span class="sxs-lookup"><span data-stu-id="9c65d-228">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="9c65d-229">コントロール配列内のコントロールのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-229">Adds event handlers for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-230">このメソッドはオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c65d-230">This method must be overridden.</span></span>  
  
 <span data-ttu-id="9c65d-231"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-231">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-232"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-232">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-233">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-233">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-234">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-234">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9c65d-235">派生クラスで <see langword="HookUpControlEvents" /> をオーバーライドする場合は、基本クラスの <see langword="HookUpControlEvents" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="9c65d-235">When you override <see langword="HookUpControlEvents" /> in a derived class, do not call the <see langword="HookUpControlEvents" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c65d-236">コントロール配列のインデックスを格納します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-236">Stores the indices for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-237"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-237">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-238"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-238">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-239">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-239">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-240">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-240">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-241">コントロール配列の最も小さいインデックスを格納する <see langword="Short" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-241">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-242">コントロール配列の下限を格納する <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-242">A <see langword="Short" /> that contains the lower bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-243">`LBound` 関数は、コントロール配列のサイズを決定するために <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> 関数と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-243">The `LBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="9c65d-244"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-244">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-245"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-245">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-246">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-246">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-247">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-247">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="9c65d-248">新規のコントロールのインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-248">A <see langword="Short" /> that represents the index of the new control.</span></span></param>
        <summary><span data-ttu-id="9c65d-249">コントロール配列内に要素を新規作成します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-249">Creates a new element in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-250">このメソッドは、新しいコントロール配列要素を動的に作成するための Visual Basic 6.0 `Load` 関数に相当します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-250">This method is the equivalent of the Visual Basic 6.0 `Load` function for dynamically creating a new control array element.</span></span>  
  
 <span data-ttu-id="9c65d-251"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-251">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-252"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-252">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-253">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-253">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-254">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-254">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit" ExplicitInterfaceMemberName="BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="baseControlArray.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-255">コントロールの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-255">Begins the initialization of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-256">通常、デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-256">Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="9c65d-257"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-257">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> method ends the initialization.</span></span> <span data-ttu-id="9c65d-258">`BeginInit` メソッドと <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="9c65d-258">Using the `BeginInit` and <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="9c65d-259">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-259">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-260"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-260">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-261">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-261">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-262">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-262">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit" ExplicitInterfaceMemberName="EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="baseControlArray.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-263">コントロールの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-263">Ends the initialization of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-264">通常、デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を完了します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-264">Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="9c65d-265">`EndInit` メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-265">The `EndInit` method ends the initialization.</span></span> <span data-ttu-id="9c65d-266"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> メソッドと `EndInit` メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="9c65d-266">Using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> and `EndInit` methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="9c65d-267">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-267">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-268"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-268">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-269">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-269">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-270">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-270">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c65d-271">コントロール配列の最も大きいインデックスを格納する <see langword="Short" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-271">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="9c65d-272">コントロール配列の上限を格納する <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-272">A <see langword="Short" /> that contains the upper bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-273">`UBound` 関数は、コントロール配列のサイズを決定するために <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> 関数と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-273">The `UBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="9c65d-274"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは Visual Basic 6.0 からアップグレードされたアプリケーションで使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-274">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-275"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-275">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-276">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-276">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-277">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-277">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="9c65d-278">削除するコントロールのインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="9c65d-278">A <see langword="Short" /> that represents the index of the control to remove.</span></span></param>
        <summary><span data-ttu-id="9c65d-279">コントロール配列からコントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-279">Removes a control from a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c65d-280">このメソッドは、コントロールの配列要素を動的に削除するための Visual Basic 6.0 `Unload` 関数に相当します。</span><span class="sxs-lookup"><span data-stu-id="9c65d-280">This method is the equivalent of the Visual Basic 6.0 `Unload` function for dynamically removing a control array element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-281"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> メソッドを使用して動的に追加されたコントロールだけが、コントロール配列から削除できます。</span><span class="sxs-lookup"><span data-stu-id="9c65d-281">Only controls that were added dynamically by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method can be removed from the control array.</span></span>  
  
 <span data-ttu-id="9c65d-282"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-282">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c65d-283"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-283">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="9c65d-284">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="9c65d-284">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="9c65d-285">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="9c65d-285">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
