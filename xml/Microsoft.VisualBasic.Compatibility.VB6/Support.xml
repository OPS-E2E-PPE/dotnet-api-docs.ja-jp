<Type Name="Support" FullName="Microsoft.VisualBasic.Compatibility.VB6.Support">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d00ed3431aa5c40df9756302d66f4afffd1892fe" /><Meta Name="ms.sourcegitcommit" Value="2b887f321b7927795128f58bb327e63b089cbe3d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2020" /><Meta Name="ms.locfileid" Value="79547461" /></Metadata><TypeSignature Language="C#" Value="public sealed class Support" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Support extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.Support" />
  <TypeSignature Language="VB.NET" Value="Public Module Support" />
  <TypeSignature Language="C++ CLI" Value="public ref class Support sealed" />
  <TypeSignature Language="F#" Value="type Support = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Visual Basic 6.0 との下位互換性を確保するための各種のユーティリティ関数が含まれています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスの関数は、Visual Basic 6.0 プロジェクトを Visual Basic へのアップグレード中に使用されます。 一部の関数は、Visual Basic; はサポートされなくなった Visual Basic 6.0 の機能を置き換えます他のユーザーは、オブジェクト モデルでの違いを補正します。  
  
 Visual Basic プロジェクトでは、このクラスで関数を使用するへの参照を追加、`Microsoft.VisualBasic.Compatibility.VB6`名前空間。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static Array CopyArray (Array SourceArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Array CopyArray(class System.Array SourceArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyArray (SourceArray As Array) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CopyArray(Array ^ SourceArray);" />
      <MemberSignature Language="F#" Value="static member CopyArray : Array -&gt; Array" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray SourceArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><see cref="T:System.Array" /> です。</param>
        <summary><see langword="Array" /> を <see langword="Variant" /> に割り当てる Visual Basic 6.0 の機能を複製します。</summary>
        <returns>コピーする配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Variant`データ型は、Visual Basic ではサポートされなくします。 `CopyArray`アップグレード ツールでコピーする関数が使用される、`Array`間、`Variant`配列。  
  
 Visual Basic で配列をコピーするには、使用、 <xref:System.Array.Clone%2A>、<xref:System.Array.Copy%2A>または<xref:System.Array.CopyTo%2A>のメソッド、<xref:System.Array>クラス。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorToIPicture">
      <MemberSignature Language="C#" Value="public static object CursorToIPicture (System.Windows.Forms.Cursor curs);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CursorToIPicture(class System.Windows.Forms.Cursor curs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CursorToIPicture (curs As Cursor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CursorToIPicture(System::Windows::Forms::Cursor ^ curs);" />
      <MemberSignature Language="F#" Value="static member CursorToIPicture : System.Windows.Forms.Cursor -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture curs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curs" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="curs">変換する <see cref="T:System.Windows.Forms.Cursor" />。</param>
        <summary>指定された <see langword="IPicture" /> に対応する OLE <see cref="T:System.Windows.Forms.Cursor" /> オブジェクトを返します。</summary>
        <returns>OLE <see cref="T:System.Object" /> オブジェクトを表す <see langword="IPicture" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`MouseIcon`フォームまたはコントロールのプロパティは、カスタムの読み込みに使用できます`MousePointer`(カーソル)。 場合によっては、画像、`MouseIcon`として格納された、 `stdOle.IPicture`; に変換するは、アップグレード ツールでこの関数は使用、<xref:System.Windows.Forms.Cursor>を`stdOle.IPicture`。  
  
 変換する、 <xref:System.Windows.Forms.Cursor> Visual Basic で使用して、<xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A>のメソッド、<xref:System.Windows.Forms.AxHost>クラス。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eqv">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つの式の論理等価演算を実行します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static bool Eqv (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Eqv(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Eqv(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Eqv : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Boolean" />。</param>
        <param name="b">比較する <see cref="T:System.Boolean" />。</param>
        <summary>2 つの <see cref="T:System.Boolean" /> 式の論理等価演算を実行します。</summary>
        <returns>2 つの式が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかの式が場合`Null`、結果も`Null`します。 どちらの式の場合は`Null`結果は次の表に従って決定されます。  
  
|Expression1 がある場合|Expression2 では、|結果は、します。|  
|-----------------------|------------------------|-------------------|  
|`true`|`true`|`true`|  
|`true`|`false`|`false`|  
|`false`|`true`|`false`|  
|`false`|`false`|`true`|  
  
 Visual Basic で、`Eqv`演算子は、Visual Basic 言語の一部では不要になった; の代わりに等号 (=) 比較演算子を使用して、`Eqv`論理評価します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/assignment-operator.md">= 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static byte Eqv (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Eqv(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Eqv(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Eqv : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Byte" />。</param>
        <param name="b">比較する <see cref="T:System.Byte" />。</param>
        <summary>2 つの <see cref="T:System.Byte" /> 式の論理等価演算を実行します。</summary>
        <returns>ビット単位の比較の結果を格納する <see cref="T:System.Byte" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Eqv`演算子が 2 つの数値式で同じ位置にビットのビット単位の比較を実行し、対応する次の表に従ってビットを設定します。  
  
|Expression1 のビットがある場合|Expression2 内のビットと|結果は、します。|  
|------------------------------|-------------------------------|-------------------|  
|0|0|1|  
|0|1|0|  
|1|0|0|  
|1|1|1|  
  
 Visual Basic で、`Eqv`演算子はビットごとの評価版ソフトウェアの使用は、Visual Basic 言語の一部では不要になった、`Not`と`XOr`演算子。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static short Eqv (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Eqv(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Eqv(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Int16" />。</param>
        <param name="b">比較する <see cref="T:System.Int16" />。</param>
        <summary>2 つの <see cref="T:System.Int16" /> 式の論理等価演算を実行します。</summary>
        <returns>比較の結果を格納する <see cref="T:System.Int16" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic で、`Eqv`演算子はビットごとの評価版ソフトウェアの使用は、Visual Basic 言語の一部では不要になった、`Not`と`XOr`演算子。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static int Eqv (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Eqv(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Eqv(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Int32" />。</param>
        <param name="b">比較する <see cref="T:System.Int32" />。</param>
        <summary>2 つの <see cref="T:System.Int32" /> 式の論理等価演算を実行します。</summary>
        <returns>比較の結果を格納する <see cref="T:System.Int32" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic で、`Eqv`演算子はビットごとの評価版ソフトウェアの使用は、Visual Basic 言語の一部では不要になった、`Not`と`XOr`演算子。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static long Eqv (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Eqv(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Eqv(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Int64" />。</param>
        <param name="b">比較する <see cref="T:System.Int64" />。</param>
        <summary>2 つの <see cref="T:System.Int64" /> 式の論理等価演算を実行します。</summary>
        <returns>比較の結果を格納する <see cref="T:System.Int64" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic で、`Eqv`演算子はビットごとの評価版ソフトウェアの使用は、Visual Basic 言語の一部では不要になった、`Not`と`XOr`演算子。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static object Eqv (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Eqv(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eqv(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Eqv : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">比較する <see cref="T:System.Object" />。</param>
        <param name="b">比較する <see cref="T:System.Object" />。</param>
        <summary>2 つの <see cref="T:System.Object" /> 式の論理等価演算を実行します。</summary>
        <returns>比較の結果を格納する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic で、`Eqv`演算子はビットごとの評価版ソフトウェアの使用は、Visual Basic 言語の一部では不要になった、`Not`と`XOr`演算子。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="FontChangeBold">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeBold(class System.Drawing.Font CurrentFont, bool Bold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeBold (CurrentFont As Font, Bold As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeBold(System::Drawing::Font ^ CurrentFont, bool Bold);" />
      <MemberSignature Language="F#" Value="static member FontChangeBold : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold (CurrentFont, Bold)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Bold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Bold"><see langword="true" /> スタイル ビットを設定する場合は <see cref="F:System.Drawing.FontStyle.Bold" />。それ以外の場合は <see langword="false" />。</param>
        <summary>フォントの <see cref="F:System.Drawing.FontStyle.Bold" /> スタイル ビットを変更します。</summary>
        <returns>新しいスタイルが適用された <see cref="T:System.Drawing.Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを設定して Visual Basic 6.0 で適用されたフォント スタイル使用して Visual Basic のフォントのスタイルの適用、<xref:System.Drawing.FontStyle>列挙体。 アップグレード ツールでは、この関数を使用して Visual Basic 6.0 プロパティを新しい列挙体に変換します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeGdiCharSet">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeGdiCharSet(class System.Drawing.Font CurrentFont, unsigned int8 GdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeGdiCharSet (CurrentFont As Font, GdiCharSet As Byte) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeGdiCharSet(System::Drawing::Font ^ CurrentFont, System::Byte GdiCharSet);" />
      <MemberSignature Language="F#" Value="static member FontChangeGdiCharSet : System.Drawing.Font * byte -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet (CurrentFont, GdiCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="GdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="GdiCharSet">使用する GDI 文字セットを指定するバイト値。</param>
        <summary>指定された GDI 文字セットのフォントを返します。</summary>
        <returns>指定された GDI 文字セットの <see cref="T:System.Drawing.Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`stdFont`オブジェクトが、`CharSet`プロパティ、GDI が指定されている文字のフォントのセット。 Visual Basic で文字セットがのオプションとして指定された、<xref:System.Drawing.Font>コンス トラクター。 この関数は、変換するアップグレード ツールで使用する`stdFont`を<xref:System.Drawing.Font>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="FontChangeItalic">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeItalic(class System.Drawing.Font CurrentFont, bool Italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeItalic (CurrentFont As Font, Italic As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeItalic(System::Drawing::Font ^ CurrentFont, bool Italic);" />
      <MemberSignature Language="F#" Value="static member FontChangeItalic : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic (CurrentFont, Italic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Italic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Italic"><see langword="true" /> スタイル ビットを設定する場合は <see cref="F:System.Drawing.FontStyle.Italic" />。それ以外の場合は <see langword="false" />。</param>
        <summary>フォントの <see cref="F:System.Drawing.FontStyle.Italic" /> スタイル ビットを変更します。</summary>
        <returns>新しいスタイルが適用された <see cref="T:System.Drawing.Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを設定して Visual Basic 6.0 で適用されたフォント スタイル使用して Visual Basic のフォントのスタイルの適用、<xref:System.Drawing.FontStyle>列挙体。 アップグレード ツールでは、この関数を使用して Visual Basic 6.0 プロパティを新しい列挙体に変換します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeName">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeName(class System.Drawing.Font CurrentFont, string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeName (CurrentFont As Font, Name As String) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeName(System::Drawing::Font ^ CurrentFont, System::String ^ Name);" />
      <MemberSignature Language="F#" Value="static member FontChangeName : System.Drawing.Font * string -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName (CurrentFont, Name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Name">Visual Basic 6.0 の <see langword="String" /> プロパティを表す <see langword="Font" />。</param>
        <summary>指定された Visual Basic 6.0 <see cref="T:System.Drawing.Font" /> の新しい <see langword="Font" /> を返します。</summary>
        <returns>Visual Basic 6.0 の <see cref="T:System.Drawing.Font" /> と一致する <see langword="Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、フォントの名前で指定された、`Font`プロパティは、Visual Basic で<xref:System.Drawing.Font.Name%2A>のプロパティである、<xref:System.Drawing.Font>オブジェクト。 この関数は、Visual Basic 6.0 を変換するアップグレード ツールで使用`Font`を<xref:System.Drawing.Font>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeSize(class System.Drawing.Font CurrentFont, float32 Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeSize (CurrentFont As Font, Size As Single) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeSize(System::Drawing::Font ^ CurrentFont, float Size);" />
      <MemberSignature Language="F#" Value="static member FontChangeSize : System.Drawing.Font * single -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize (CurrentFont, Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Size">Visual Basic 6.0 の <see cref="T:System.Single" /> プロパティを表す <see langword="FontSize" />。</param>
        <summary>フォントの <see cref="P:System.Drawing.Font.Size" /> プロパティを変更します。</summary>
        <returns>Visual Basic 6.0 の <see cref="T:System.Drawing.Font" /> と一致する <see langword="FontSize" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、フォントのサイズで指定された、`FontSize`プロパティ; Visual Basic で<xref:System.Drawing.Font.Size%2A>のプロパティである、<xref:System.Drawing.Font>オブジェクト。 この関数は、Visual Basic 6.0 を変換するアップグレード ツールで使用`Font`を<xref:System.Drawing.Font>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeStrikeout">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeStrikeout(class System.Drawing.Font CurrentFont, bool Strikeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeStrikeout (CurrentFont As Font, Strikeout As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeStrikeout(System::Drawing::Font ^ CurrentFont, bool Strikeout);" />
      <MemberSignature Language="F#" Value="static member FontChangeStrikeout : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout (CurrentFont, Strikeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Strikeout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Strikeout"><see langword="true" /> スタイル ビットを設定する場合は <see cref="F:System.Drawing.FontStyle.Strikeout" />。それ以外の場合は <see langword="false" />。</param>
        <summary>フォントの <see cref="F:System.Drawing.FontStyle.Strikeout" /> スタイル ビットを変更します。</summary>
        <returns>新しいスタイルが適用された <see cref="T:System.Drawing.Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを設定して Visual Basic 6.0 で適用されたフォント スタイル使用して Visual Basic のフォントのスタイルの適用、<xref:System.Drawing.FontStyle>列挙体。 アップグレード ツールでは、この関数を使用して Visual Basic 6.0 プロパティを新しい列挙体に変換します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeUnderline">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeUnderline(class System.Drawing.Font CurrentFont, bool Underline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeUnderline (CurrentFont As Font, Underline As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeUnderline(System::Drawing::Font ^ CurrentFont, bool Underline);" />
      <MemberSignature Language="F#" Value="static member FontChangeUnderline : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline (CurrentFont, Underline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Underline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont"><see cref="T:System.Drawing.Font" /> です。</param>
        <param name="Underline"><see langword="true" /> スタイル ビットを設定する場合は <see cref="F:System.Drawing.FontStyle.Underline" />。それ以外の場合は <see langword="false" />。</param>
        <summary>フォントの <see cref="F:System.Drawing.FontStyle.Underline" /> スタイル ビットを変更します。</summary>
        <returns>新しいスタイルが適用された <see cref="T:System.Drawing.Font" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを設定して Visual Basic 6.0 で適用されたフォント スタイル使用して Visual Basic のフォントのスタイルの適用、<xref:System.Drawing.FontStyle>列挙体。 アップグレード ツールでは、この関数を使用して Visual Basic 6.0 プロパティを新しい列挙体に変換します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontToIFont">
      <MemberSignature Language="C#" Value="public static object FontToIFont (System.Drawing.Font fnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FontToIFont(class System.Drawing.Font fnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontToIFont (fnt As Font) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FontToIFont(System::Drawing::Font ^ fnt);" />
      <MemberSignature Language="F#" Value="static member FontToIFont : System.Drawing.Font -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont fnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fnt" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="fnt">変換する <see cref="T:System.Drawing.Font" />。</param>
        <summary><see cref="T:System.Drawing.Font" /> を Visual Basic 6.0 の <see langword="stdFont" /> オブジェクトに変換します。</summary>
        <returns><see langword="stdFont" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`stdFont`オブジェクトが COM に基づいていたし、Visual Basic で同等がありません。 この関数は、間の変換をアップグレード ツールで使用、<xref:System.Drawing.Font>と`stdFont`プロジェクトのアップグレード中にします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Format (Expression, Style, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Expression">変換する <see cref="T:System.Object" /> 式。</param>
        <param name="Style">省略可。 日付形式を表す <see cref="T:System.String" />。</param>
        <param name="DayOfWeek">省略可。 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙です。</param>
        <param name="WeekOfYear">省略可。 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙です。</param>
        <summary>Visual Basic 6.0 の <see langword="Format" /> 関数を Visual Basic と互換性のある形式に変換します。</summary>
        <returns>書式設定されたデータを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Format`関数では演算が、`Variant`データ型は Visual Basic で、`Variant`データ型が存在しません。 この関数は、変換するアップグレード ツールで使用、`Variant`を使用して書式設定、`Format`を共通言語ランタイムに準拠した型の関数。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">高さを表す <see cref="T:System.Double" />。</param>
        <param name="ScaleHeight">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleHeight" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalHeightInPixels">ピクセル単位の高さを表す <see langword="Integer" />。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の <see langword="ScaleHeight" /> 測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleHeight" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">幅を表す <see cref="T:System.Double" />。</param>
        <param name="ScaleWidth">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleWidth" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalWidthInPixels">ピクセル単位の幅を表す <see langword="Integer" />。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の <see langword="ScaleWidth" /> 測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleWidth" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserX">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">X 座標を表す <see cref="T:System.Double" /> 。</param>
        <param name="ScaleLeft">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleLeft" /> を表す <see langword="ScaleMode" />。</param>
        <param name="ScaleWidth">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleWidth" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalWidthInPixels">ピクセル単位の幅を表す <see langword="Integer" />。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の <see langword="ScaleLeft" /> 測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleLeft" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserY">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">X 座標を表す <see cref="T:System.Double" /> 。</param>
        <param name="ScaleTop">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleTop" /> を表す <see langword="ScaleMode" />。</param>
        <param name="ScaleHeight">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleHeight" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalHeightInPixels">ピクセル単位の高さを表す <see langword="Integer" />。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の <see langword="ScaleTop" /> 測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleTop" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsX">
      <MemberSignature Language="C#" Value="public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsX (X As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX (X, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">ピクセル単位の X 座標を表す <see cref="T:System.Double" />。</param>
        <param name="ToScale">変換後の Visual Basic 6.0 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> を表す <see langword="ScaleMode" /> 列挙体。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の指定された <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> の測定値に変換します。</summary>
        <returns>指定された <see cref="T:System.Double" /> の Visual Basic 6.0 値を格納する <see langword="ScaleMode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsY">
      <MemberSignature Language="C#" Value="public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsY (Y As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY (Y, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">ピクセル単位の Y 座標を表す <see cref="T:System.Double" />。</param>
        <param name="ToScale">変換後の Visual Basic 6.0 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> を表す <see langword="ScaleMode" /> 列挙体。</param>
        <summary>ピクセル単位の測定値を Visual Basic 6.0 の指定された <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> の測定値に変換します。</summary>
        <returns>指定された <see cref="T:System.Double" /> の Visual Basic 6.0 値を格納する <see langword="ScaleMode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveControl">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control GetActiveControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Windows.Forms.Control GetActiveControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ GetActiveControl();" />
      <MemberSignature Language="F#" Value="static member GetActiveControl : unit -&gt; System.Windows.Forms.Control" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在フォーカスがあるコントロールを取得します。</summary>
        <returns>現在フォーカスがあるコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数は、Visual Basic 6.0 を置換するアップグレード ツールで使用`Screen.ActiveControl`プロパティ。 呼び出し元のと同じ<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>Visual Basic でします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancel">
      <MemberSignature Language="C#" Value="public static bool GetCancel (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetCancel(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancel (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetCancel(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetCancel : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn"><see cref="T:System.Windows.Forms.Button" /> コントロール。</param>
        <summary><see cref="T:System.Windows.Forms.Button" /> がフォーム上の [キャンセル] ボタンかどうかを示す値を取得します。</summary>
        <returns><see langword="true" /> が [キャンセル] ボタンである場合は <paramref name="btn" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数と同等のチェック、<xref:System.Windows.Forms.Form.CancelButton%2A>のプロパティを<xref:System.Windows.Forms.Form>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static bool GetDefault (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetDefault(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefault (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetDefault(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetDefault : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn"><see cref="T:System.Windows.Forms.Button" /> コントロール。</param>
        <summary><see cref="T:System.Windows.Forms.Button" /> コントロールがフォーム上の既定のボタンであるかどうかを決定する値を取得または設定します。</summary>
        <returns><see langword="true" /> が既定のボタンである場合は <paramref name="btn" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数と同等のチェック、<xref:System.Windows.Forms.Form.AcceptButton%2A>のプロパティを<xref:System.Windows.Forms.Form>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEXEName">
      <MemberSignature Language="C#" Value="public static string GetEXEName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetEXEName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEXEName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEXEName();" />
      <MemberSignature Language="F#" Value="static member GetEXEName : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアプリケーションの実行可能ファイル (.exe) の名前を取得します。</summary>
        <returns>拡張子なしのファイル名を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHInstance">
      <MemberSignature Language="C#" Value="public static IntPtr GetHInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static native int GetHInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHInstance () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHInstance();" />
      <MemberSignature Language="F#" Value="static member GetHInstance : unit -&gt; nativeint" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアプリケーションのインスタンス ハンドル (HINSTANCE) を取得します。</summary>
        <returns>現在のアプリケーション インスタンスの <see cref="T:System.IntPtr" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数が呼び出すのと同じ<xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemData">
      <MemberSignature Language="C#" Value="public static int GetItemData (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GetItemData(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemData (Control As Control, Index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetItemData(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemData : System.Windows.Forms.Control * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><see cref="T:System.Windows.Forms.ListBox" /> コントロールまたは <see cref="T:System.Windows.Forms.ComboBox" /> コントロール。</param>
        <param name="Index"><see langword="Integer" /> のインデックスを表す <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />。</param>
        <summary><see langword="Integer" /> 項目または <see cref="T:System.Windows.Forms.ListBox" /> 項目に関連付けられている <see cref="T:System.Windows.Forms.ComboBox" /> を取得します。</summary>
        <returns>指定した <see langword="Integer" /> に関連付けられている <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`ItemData`プロパティを`ListBox`または`ComboBox`でデザイン時にコントロールを設定することが、**プロパティ**ウィンドウに関連付ける、`Integer`で、`ListBox`または`ComboBox`項目。 Visual Basic で、`ItemData`プロパティが存在しなくなった;、`GetItemData`と<xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A>の動作をエミュレートするメソッドを使用できます`ItemData`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemString">
      <MemberSignature Language="C#" Value="public static string GetItemString (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetItemString(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemString (Control As Control, Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetItemString(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemString : System.Windows.Forms.Control * int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><see cref="T:System.Windows.Forms.ListBox" /> コントロールまたは <see cref="T:System.Windows.Forms.ComboBox" /> コントロール。</param>
        <param name="Index"><see langword="Integer" /> のインデックスを表す <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />。</param>
        <summary><see cref="T:System.String" /> 項目または <see cref="T:System.Windows.Forms.ListBox" /> 項目に関連付けられている <see cref="T:System.Windows.Forms.ComboBox" /> を取得します。</summary>
        <returns>指定した <see cref="T:System.String" /> に関連付けられている <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数は、Visual Basic 6.0 をエミュレートするアップグレード ツールで使用`List`プロパティ。 Visual Basic で使用して、<xref:System.Windows.Forms.ComboBox.Items%2A>または<xref:System.Windows.Forms.ListBox.Items%2A>プロパティ代わりにします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public static string GetPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPath();" />
      <MemberSignature Language="F#" Value="static member GetPath : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションの現在のパスを取得します。</summary>
        <returns>現在実行されているアセンブリのパスを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconToIPicture">
      <MemberSignature Language="C#" Value="public static object IconToIPicture (System.Drawing.Icon ico);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IconToIPicture(class System.Drawing.Icon ico) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Function IconToIPicture (ico As Icon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IconToIPicture(System::Drawing::Icon ^ ico);" />
      <MemberSignature Language="F#" Value="static member IconToIPicture : System.Drawing.Icon -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture ico" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ico" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="ico"><see cref="T:System.Drawing.Icon" /> です。</param>
        <summary>指定された <see langword="IPicture" /> の OLE <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
        <returns>OLE <see cref="T:System.Object" /> オブジェクトを表す <see langword="IPicture" /> 。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、OLE で`IPicture`object を使用して、アイコンを指定する Visual Basic で、OLE`IPicture`形式がサポートされていません。 この関数は、間の変換をアップグレード ツールで使用、`IPicture`と<xref:System.Drawing.Icon>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IFontToFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font IFontToFont (object objFnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font IFontToFont(object objFnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IFontToFont (objFnt As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ IFontToFont(System::Object ^ objFnt);" />
      <MemberSignature Language="F#" Value="static member IFontToFont : obj -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont objFnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objFnt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objFnt">Visual Basic 6.0 <see cref="T:System.Object" /> を格納する <see langword="stdFont" />。</param>
        <summary>Visual Basic 6.0 の <see langword="stdFont" /> オブジェクトを <see cref="T:System.Drawing.Font" /> に変換します。</summary>
        <returns>指定したオブジェクトを変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`stdFont`オブジェクトが COM に基づいていたし、Visual Basic で同等がありません。 この関数は、間の変換をアップグレード ツールで使用、<xref:System.Drawing.Font>と`stdFont`プロジェクトのアップグレード中にします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPicture">
      <MemberSignature Language="C#" Value="public static object ImageToIPicture (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPicture(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPicture (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPicture(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPicture : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img"><see cref="T:System.Drawing.Image" /> です。</param>
        <summary>指定された <see langword="IPicture" /> の OLE <see cref="T:System.Drawing.Image" /> オブジェクトを取得します。</summary>
        <returns>OLE <see cref="T:System.Object" /> オブジェクトを表す <see langword="IPicture" /> 。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、OLE で`IPicture`object を使用して、イメージを指定する Visual Basic で、OLE`IPicture`形式がサポートされていません。 この関数は、間の変換をアップグレード ツールで使用、`IPicture`と<xref:System.Drawing.Image>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPictureDisp">
      <MemberSignature Language="C#" Value="public static object ImageToIPictureDisp (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPictureDisp(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPictureDisp (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPictureDisp(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPictureDisp : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img"><see cref="T:System.Drawing.Image" /> です。</param>
        <summary>指定された <see langword="IPictureDisp" /> の OLE <see cref="T:System.Drawing.Image" /> オブジェクトを取得します。</summary>
        <returns>OLE <see cref="T:System.Object" /> オブジェクトを表す <see langword="IPictureDisp" /> 。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、OLE で`IPictureDisp`object を使用して、イメージを指定する Visual Basic で、OLE`IPicture`形式がサポートされていません。 この関数は、間の変換をアップグレード ツールで使用、`IPicture`と<xref:System.Drawing.Image>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imp">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つの式の論理包含演算を実行します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static bool Imp (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Imp(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Imp(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Imp : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a"><see cref="T:System.Boolean" /> 式。</param>
        <param name="b"><see cref="T:System.Boolean" /> 式。</param>
        <summary>2 つの <see cref="T:System.Boolean" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see cref="T:System.Boolean" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。  
  
 Visual Basic で使用して`Not`と`XOr`の代わりに`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static byte Imp (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Imp(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Imp(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Imp : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a"><see cref="T:System.Byte" /> 式。</param>
        <param name="b"><see cref="T:System.Byte" /> 式。</param>
        <summary>2 つの <see cref="T:System.Byte" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see cref="T:System.Byte" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。  
  
 Visual Basic で使用して`Not`と`XOr`を置き換える`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static short Imp (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Imp(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Imp(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Imp : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a"><see langword="Short" /> 式。</param>
        <param name="b"><see langword="Short" /> 式。</param>
        <summary>2 つの <see cref="T:System.Int16" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see langword="Short" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。  
  
 Visual Basic で使用して`Not`と`XOr`を置き換える`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static int Imp (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Imp(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Imp(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Imp : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a"><see langword="Integer" /> 式。</param>
        <param name="b"><see langword="Integer" /> 式。</param>
        <summary>2 つの <see cref="T:System.Int32" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see langword="Integer" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。  
  
 Visual Basic で使用して`Not`と`XOr`を置き換える`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static long Imp (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Imp(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Imp(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Imp : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a"><see langword="Long" /> 式。</param>
        <param name="b"><see langword="Long" /> 式。</param>
        <summary>2 つの <see cref="T:System.Int64" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see langword="Long" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。  
  
 Visual Basic で使用して`Not`と`XOr`を置き換える`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static object Imp (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Imp(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Imp(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Imp : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a"><see cref="T:System.Object" /> 式。</param>
        <param name="b"><see cref="T:System.Object" /> 式。</param>
        <summary>2 つの <see cref="T:System.Object" /> 式の論理包含演算を実行します。</summary>
        <returns>結果を格納する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0`Imp`演算子は、Visual Basic ではサポートされなくします。 この関数は、置換するアップグレード ツールで使用、`Imp`プロジェクトのアップグレード中に演算子。 アップグレード中に、Variant データ型にアップグレード<xref:System.Object>します。  
  
 Visual Basic で使用して`Not`と`XOr`を置き換える`Imp`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">Not 演算子 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">Xor 演算子 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IPictureDispToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureDispToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureDispToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureDispToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureDispToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureDispToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">OLE <see langword="IPictureDisp" /> オブジェクト。</param>
        <summary>指定された OLE <see cref="T:System.Drawing.Image" /> オブジェクトの <see langword="IPictureDisp" /> を取得します。</summary>
        <returns>イメージ オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、OLE で`IPictureDisp`object を使用して、イメージを指定する Visual Basic で、OLE`IPicture`形式がサポートされていません。 この関数は、間の変換をアップグレード ツールで使用、`IPictureDisp`と<xref:System.Drawing.Image>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">OLE <see langword="IPicture" /> オブジェクト。</param>
        <summary>指定された OLE <see cref="T:System.Drawing.Image" /> オブジェクトの <see langword="IPicture" /> を取得します。</summary>
        <returns>イメージに変換されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、OLE で`IPicture`object を使用して、イメージを指定する Visual Basic で、OLE`IPicture`形式がサポートされていません。 この関数は、間の変換をアップグレード ツールで使用、`IPicture`と<xref:System.Drawing.Image>します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>リソース (.res) ファイルから複数の使用可能な型を読み込み、<see cref="T:System.Byte" /> 配列を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <param name="restype">リソースの種類を指定する <see cref="T:System.Object" />。</param>
        <summary>リソース (.res) ファイルから複数の使用可能な型を読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <param name="restype">リソースの種類を指定する <see cref="T:System.Object" />。</param>
        <param name="Culture">ロケールを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
        <summary>ロケールを指定して、リソース (.res) ファイルから複数の使用可能な型を読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResPicture">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ビットマップ、アイコン、またはカーソルをリソース (.res) ファイルから読み込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <param name="restype">リソースの種類を指定する <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> 列挙体。</param>
        <summary>ビットマップ、アイコン、またはカーソルをリソース (.res) ファイルから読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <param name="restype">リソースの種類を指定する <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> 列挙体。</param>
        <param name="Culture">ロケールを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
        <summary>ロケールを指定して、ビットマップ、アイコン、またはカーソルをリソース (.res) ファイルから読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>リソース (.res) ファイルから文字列を読み込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString ID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <summary>リソース (.res) ファイルから文字列を読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer, Culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString (ID, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">リソース ファイル内のデータを指定する <see cref="T:System.Object" />。</param>
        <param name="Culture">ロケールを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
        <summary>ロケールを指定して、リソース (.res) ファイルから文字列を読み込みます。</summary>
        <returns>リソースを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、アプリケーションの国際対応バージョンが言語ごとに個別のリソース (.res) ファイルに文字列などのすべてのローカライズ可能な情報を設定することによって作成されました。 実行時に、ロケールに固有のリソースが呼び出して読み込まれるリソース ファイルから、 `LoadResString`、 `LoadResPicture`、および`LoadResData`関数。  
  
 Visual Basic でアプリケーションの各国語バージョンを作成して、変更することで、`Language`デザイン時にフォームのプロパティ。 個別のリソース (.resx) ファイルが選択されているロケールごとに自動的に作成されます。 不要になった、コードからリソースを明示的に読み込む必要があります。リソースは、ユーザーのロケールに基づいて自動的にロードします。 詳細については、次を参照してください。[のグローバルの Windows フォーム アプリケーション](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/globalizing-windows-forms.md">Windows フォームのグローバル化</related>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsX">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsX(double X);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">変換する X 座標を格納している <see langword="Double" />。</param>
        <summary>X 座標をピクセルから twip に変換します。</summary>
        <returns>twip 単位で表された X 座標を格納する <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsY">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsY(double Y);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">変換する Y 座標を格納している <see langword="Double" />。</param>
        <summary>Y 座標をピクセルから twip に変換します。</summary>
        <returns>twip 単位で表された Y 座標を格納する <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public static void SendKeys (string Keys, bool Wait = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SendKeys(string Keys, bool Wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As String, Optional Wait As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SendKeys : string * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys (Keys, Wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.String" />
        <Parameter Name="Wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Keys">キー値を格納している <see cref="T:System.String" />。</param>
        <param name="Wait">プロシージャに制御が戻る前にキーストロークを処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数は、Visual Basic 6.0 をエミュレートするアップグレード ツールで使用`SendKeys`メソッド。 Visual Basic で使用して、`My.Computer.Keyboard.SendKeys`メソッド代わりにします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancel">
      <MemberSignature Language="C#" Value="public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetCancel(class System.Windows.Forms.Button btn, bool Cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancel (btn As Button, Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCancel(System::Windows::Forms::Button ^ btn, bool Cancel);" />
      <MemberSignature Language="F#" Value="static member SetCancel : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel (btn, Cancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn"><see cref="T:System.Windows.Forms.Button" /> です。</param>
        <param name="Cancel">Visual Basic 6.0 <see langword="true" /> コントロールの <see langword="CommandButton" /> プロパティが <see langword="Cancel" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary><see cref="P:System.Windows.Forms.Form.CancelButton" /> の <see cref="T:System.Windows.Forms.Form" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、ブール値で`Default`と`Cancel`のプロパティを`CommandButton`コントロールがコントロールの ENTER キーまたは ESC キーをそれぞれ応答かどうかを判断します。 Visual Basic で、<xref:System.Windows.Forms.Button>コントロールがなくなった`Default`または`Cancel`プロパティ。 <xref:System.Windows.Forms.Form>オブジェクトが<xref:System.Windows.Forms.Form.AcceptButton%2A>と<xref:System.Windows.Forms.Form.CancelButton%2A>プロパティと同じ機能を提供する。 これらのプロパティの名前を取得する、<xref:System.Windows.Forms.Button>を引数としてコントロール。  
  
 この関数は、設定するアップグレード ツールで使用、<xref:System.Windows.Forms.Form.CancelButton%2A>のプロパティを<xref:System.Windows.Forms.Form>で .based、`Cancel`プロパティは、アップグレードされた Visual Basic 6.0 の`CommandButton`コントロール。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (System.Windows.Forms.Button btn, bool Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetDefault(class System.Windows.Forms.Button btn, bool Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefault (btn As Button, Default As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefault(System::Windows::Forms::Button ^ btn, bool Default);" />
      <MemberSignature Language="F#" Value="static member SetDefault : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault (btn, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Default" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn"><see cref="T:System.Windows.Forms.Button" /> です。</param>
        <param name="Default">Visual Basic 6.0 <see langword="true" /> コントロールの <see langword="CommandButton" /> プロパティが <see langword="Default" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary><see cref="P:System.Windows.Forms.Form.AcceptButton" /> の <see cref="T:System.Windows.Forms.Form" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、ブール値で`Default`と`Cancel`のプロパティを`CommandButton`コントロールがコントロールの ENTER キーまたは ESC キーをそれぞれ応答かどうかを判断します。 Visual Basic で、<xref:System.Windows.Forms.Button>コントロールがなくなった`Default`または`Cancel`プロパティ。 <xref:System.Windows.Forms.Form>オブジェクトが<xref:System.Windows.Forms.Form.AcceptButton%2A>と<xref:System.Windows.Forms.Form.CancelButton%2A>プロパティと同じ機能を提供する。 これらのプロパティの名前を取得する、<xref:System.Windows.Forms.Button>を引数としてコントロール。  
  
 この関数は、設定するアップグレード ツールで使用、<xref:System.Windows.Forms.Form.AcceptButton%2A>のプロパティを<xref:System.Windows.Forms.Form>で .based、`Default`プロパティは、アップグレードされた Visual Basic 6.0 の`CommandButton`コントロール。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemData">
      <MemberSignature Language="C#" Value="public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemData(class System.Windows.Forms.Control Control, int32 Index, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemData (Control As Control, Index As Integer, ItemData As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemData(System::Windows::Forms::Control ^ Control, int Index, int ItemData);" />
      <MemberSignature Language="F#" Value="static member SetItemData : System.Windows.Forms.Control * int * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData (Control, Index, ItemData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><see cref="T:System.Windows.Forms.ListBox" /> コントロールまたは <see cref="T:System.Windows.Forms.ComboBox" /> コントロール。</param>
        <param name="Index"><see langword="Index" /> の <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> です。</param>
        <param name="ItemData"><see langword="Integer" /> プロパティに代入する <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />。</param>
        <summary><see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> の <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`ItemData`プロパティを`ListBox`または`ComboBox`でデザイン時にコントロールを設定することが、**プロパティ**ウィンドウに関連付ける、`Integer`で、`ListBox`または`ComboBox`項目。 Visual Basic で、`ItemData`プロパティが存在しなくなった;、<xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A>と`SetItemData`の動作をエミュレートするメソッドを使用できます`ItemData`します。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemString">
      <MemberSignature Language="C#" Value="public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemString(class System.Windows.Forms.Control Control, int32 Index, string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemString (Control As Control, Index As Integer, ItemString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemString(System::Windows::Forms::Control ^ Control, int Index, System::String ^ ItemString);" />
      <MemberSignature Language="F#" Value="static member SetItemString : System.Windows.Forms.Control * int * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString (Control, Index, ItemString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> コントロールまたは <see cref="T:System.Windows.Forms.ComboBox" /> コントロール。</param>
        <param name="Index"><see langword="Index" /> の <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> です。</param>
        <param name="ItemString"><see cref="T:System.String" /> プロパティに代入する <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />。</param>
        <summary><see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> の <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この関数は、Visual Basic 6.0 をエミュレートするアップグレード ツールで使用`List`プロパティ。 Visual Basic で使用して、<xref:System.Windows.Forms.ComboBox.Items%2A>または<xref:System.Windows.Forms.ListBox.Items%2A>プロパティ代わりにします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetResourceBaseName">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Visual Basic プロジェクトの名前空間に Visual Basic 6.0 リソース ファイルの名前を割り当てます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName BaseFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="BaseFileName">リソース ファイル (.res)。</param>
        <summary>現在の Visual Basic プロジェクトの名前空間に Visual Basic 6.0 リソース ファイルの名前を割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースの処理は、Visual Basic 6.0 および Visual Basic に異なります。 この関数は、Visual Basic 6.0 リソース ファイルをプロジェクトに追加するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string ProjectNamespace, string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (ProjectNamespace As String, BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ ProjectNamespace, System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName (ProjectNamespace, BaseFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProjectNamespace" Type="System.String" />
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProjectNamespace">リソース ファイルの <see cref="T:System.String" /> を格納している <see langword="Namespace" />。</param>
        <param name="BaseFileName">リソース ファイル (.res)。</param>
        <summary>Visual Basic プロジェクトの名前空間に Visual Basic 6.0 リソース ファイルの名前を割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リソースの処理は、Visual Basic 6.0 および Visual Basic に異なります。 この関数は、Visual Basic 6.0 リソース ファイルをプロジェクトに追加するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForm">
      <MemberSignature Language="C#" Value="public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ShowForm(class System.Windows.Forms.Form Form, int32 Modal, class System.Windows.Forms.Form OwnerForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowForm (Form As Form, Optional Modal As Integer = 0, Optional OwnerForm As Form = null)" />
      <MemberSignature Language="F#" Value="static member ShowForm : System.Windows.Forms.Form * int * System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm (Form, Modal, OwnerForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
        <Parameter Name="Modal" Type="System.Int32" />
        <Parameter Name="OwnerForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">表示する <see cref="T:System.Windows.Forms.Form" />。</param>
        <param name="Modal">省略可。 モーダル性を指定する <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> 列挙体。</param>
        <param name="OwnerForm">省略可。 <c> メソッドの </c>owner<see cref="M:System.Windows.Forms.Form.ShowDialog" /> パラメーター。</param>
        <summary><see cref="M:System.Windows.Forms.Control.Show" /> メソッドまたは <see cref="M:System.Windows.Forms.Form.ShowDialog" /> メソッドを呼び出して、フォームを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`Show`メソッドは、フォームがモーダルとして表示するかどうかを指定します。 は、Visual Basic によって置き換えられる、<xref:System.Windows.Forms.Control.Show%2A>と<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッド。 この関数は、Visual Basic 6.0 をマップするアップグレード ツールで使用`Show`するか、メソッド、<xref:System.Windows.Forms.Control.Show%2A>または<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッド。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabLayout">
      <MemberSignature Language="C#" Value="public static string TabLayout (params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TabLayout(object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TabLayout (ParamArray Args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TabLayout(... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member TabLayout : obj[] -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout Args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Args">印刷する 1 つの式または式のリスト。</param>
        <summary>Visual Basic 6.0 の <see langword="Debug.Print" /> 機能をシミュレートするように文字列の書式を設定します。</summary>
        <returns>書式設定された <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`Debug.Print`メソッドに、`outputlist`において出力をフォーマットする方法を指定するパラメーター、**イミディ エイト**ウィンドウ。 この関数は、変換するアップグレード ツールで使用、`outputlist`パラメーターを文字列に表示するために、**イミディ エイト**ウィンドウ。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">高さを表す <see cref="T:System.Double" />。</param>
        <param name="ScaleHeight">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleHeight" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalHeightInPixels">ピクセル単位の高さを表す <see langword="Integer" />。</param>
        <summary>Visual Basic 6.0 の <see langword="ScaleHeight" /> 測定値をピクセル単位の測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleHeight" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">幅を表す <see cref="T:System.Double" />。</param>
        <param name="ScaleWidth">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleWidth" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalWidthInPixels">ピクセル単位の幅を表す <see langword="Integer" />。</param>
        <summary>Visual Basic 6.0 の <see langword="ScaleWidth" /> 測定値をピクセル単位の測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleWidth" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserX">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">X 座標を表す <see cref="T:System.Double" /> 。</param>
        <param name="ScaleLeft">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleLeft" /> を表す <see langword="ScaleMode" />。</param>
        <param name="ScaleWidth">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleWidth" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalWidthInPixels">ピクセル単位の幅を表す <see langword="Integer" />。</param>
        <summary>Visual Basic 6.0 の <see langword="ScaleLeft" /> 測定値をピクセル単位の測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleLeft" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserY">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">Y 座標を表す <see cref="T:System.Double" />。</param>
        <param name="ScaleTop">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleTop" /> を表す <see langword="ScaleMode" />。</param>
        <param name="ScaleHeight">現在の <see cref="T:System.Double" /> の Visual Basic 6.0 <see langword="ScaleHeight" /> を表す <see langword="ScaleMode" />。</param>
        <param name="OriginalHeightInPixels">ピクセル単位の高さを表す <see langword="Integer" />。</param>
        <summary>Visual Basic 6.0 の <see langword="ScaleTop" /> 測定値をピクセル単位の測定値に変換します。</summary>
        <returns>変換された Visual Basic 6.0 <see cref="T:System.Double" /> を格納する <see langword="ScaleLeft" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsX">
      <MemberSignature Language="C#" Value="public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsX (X As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX (X, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">X 座標を表す <see cref="T:System.Double" /> 。</param>
        <param name="FromScale">変換元となる Visual Basic 6.0 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> を表す <see langword="ScaleMode" /> 列挙。</param>
        <summary>Visual Basic 6.0 単位を、指定した <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />で、ピクセル単位に変換します。</summary>
        <returns>指定した <see cref="T:System.Double" /> のピクセル値を含む <see langword="ScaleMode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsY">
      <MemberSignature Language="C#" Value="public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsY (Y As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY (Y, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">Y 座標を表す <see cref="T:System.Double" />。</param>
        <param name="FromScale">変換元となる Visual Basic 6.0 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> を表す <see langword="ScaleMode" /> 列挙。</param>
        <summary>Visual Basic 6.0 単位を、指定した <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />で、ピクセル単位に変換します。</summary>
        <returns>指定した <see cref="T:System.Double" /> のピクセル値を含む <see langword="ScaleMode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 には、によって定義された複数の座標系がサポートされている、`ScaleMode`プロパティ。 これには、ユーザー定義の値が含まれています。 Visual Basic では、ピクセルに基づいている座標系のみサポートされます。 この関数は、ピクセルと、ユーザー定義のスケール値を変換するアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelX">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelX ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelX();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelX : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>画面設定に基づいて twip をピクセルに変換するときに使用される値を取得します。</summary>
        <returns>変換率を格納している <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelY">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelY ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelY();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelY : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>画面設定に基づいて twip をピクセルに変換するときに使用される値を取得します。</summary>
        <returns>変換率を格納している <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsX">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsX(double X);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">変換する X 座標を格納している <see langword="Double" />。</param>
        <summary>X 座標を twip からピクセルに変換します。</summary>
        <returns>ピクセル単位で表された X 座標を格納している <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsY">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsY(double Y);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">変換する X 座標を格納している <see langword="Double" />。</param>
        <summary>Y 座標を twip からピクセルに変換します。</summary>
        <returns>ピクセル単位で表された Y 座標を格納している <see langword="Double" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 では、座標が twip; で表されますVisual Basic はピクセル単位で表されます。 この関数は、2 つの座標システム間で変換するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateControls">
      <MemberSignature Language="C#" Value="public static void ValidateControls (System.Windows.Forms.ContainerControl Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ValidateControls(class System.Windows.Forms.ContainerControl Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateControls (Form As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateControls(System::Windows::Forms::ContainerControl ^ Form);" />
      <MemberSignature Language="F#" Value="static member ValidateControls : System.Windows.Forms.ContainerControl -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="Form">コントロールの親となる <see cref="T:System.Windows.Forms.ContainerControl" />。</param>
        <summary>Visual Basic 6.0 の <see langword="ValidateControls" /> メソッドの動作をエミュレートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`ValidateControls`メソッドは、強制的に使用された、`Validate`フォームが閉じるときにフォーカスがある場合はコントロールのイベントを`Validate`イベントが失敗した場合、エラーが発生しました。 Visual Basic で、`ValidateControls`メソッドを置き換え、<xref:System.Windows.Forms.ContainerControl.Validate%2A>を返すメソッド`true`または`false`します。  
  
 この関数は、Visual Basic 6.0 の動作をエミュレートするアップグレード ツールで使用されます。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhatsThisMode">
      <MemberSignature Language="C#" Value="public static void WhatsThisMode (System.Windows.Forms.Form Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WhatsThisMode(class System.Windows.Forms.Form Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WhatsThisMode (Form As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WhatsThisMode(System::Windows::Forms::Form ^ Form);" />
      <MemberSignature Language="F#" Value="static member WhatsThisMode : System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form"><see cref="T:System.Windows.Forms.Form" /> です。</param>
        <summary>Visual Basic 6.0 からアップグレードされたフォームのポップアップ ヘルプを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 のポップアップ ヘルプを使用して実装された、`WhatsThisButton`と`WhatsThisHelp`、フォームのプロパティはポップアップを使用して Visual Basic でのヘルプが実装されている、<xref:System.Windows.Forms.Form.HelpButton%2A>フォームのプロパティ。 この関数は、アップグレードされたアプリケーションでポップアップ ヘルプを表示する方法を変更するアップグレード ツールで使用です。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public static void ZOrder (System.Windows.Forms.Control Control, int Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ZOrder(class System.Windows.Forms.Control Control, int32 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (Control As Control, Position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZOrder(System::Windows::Forms::Control ^ Control, int Position);" />
      <MemberSignature Language="F#" Value="static member ZOrder : System.Windows.Forms.Control * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder (Control, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control"><see cref="T:System.Windows.Forms.Control" /> です。</param>
        <param name="Position"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> 列挙です。</param>
        <summary>Visual Basic の <see langword="ZOrder" /> メソッドを Visual Basic で使用できるように変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 で、`ZOrder`メソッドは、コントロールの階層構造の指定に使用された; Visual Basic ではまたは置き換え、<xref:System.Windows.Forms.Control.BringToFront%2A>と<xref:System.Windows.Forms.Control.SendToBack%2A>メソッド。 アップグレード ツールでは、この関数を使用してメソッド間のマップします。  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
