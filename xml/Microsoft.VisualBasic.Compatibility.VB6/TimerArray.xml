<Type Name="TimerArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.TimerArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87dcc67d353fe4e7bff23c40bec8965ccc95a9f8" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73378136" /></Metadata><TypeSignature Language="C#" Value="public class TimerArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TimerArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerArray&#xA;Inherits BaseControlArray&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerArray : Microsoft::VisualBasic::Compatibility::VB6::BaseControlArray, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type TimerArray = class&#xA;    inherit BaseControlArray&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.Timer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. https://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f50b0-101"><see cref="T:System.Windows.Forms.Timer" /> コントロールのコントロール配列を提供します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-101">Provides a control array of <see cref="T:System.Windows.Forms.Timer" /> controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-102">`TimerArray` クラスは、Visual Basic 6.0 `Timer` コントロール配列のランタイム機能に相当するを提供します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-102">The `TimerArray` class provides an equivalent for the run-time functionality of a Visual Basic 6.0 `Timer` control array.</span></span> <span data-ttu-id="f50b0-103">Visual Basic 6.0 コントロール配列のデザイン時の機能は提供されません。</span><span class="sxs-lookup"><span data-stu-id="f50b0-103">It does not provide the design-time features of a Visual Basic 6.0 control array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-104"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-105">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-106">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f50b0-107"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimerArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimerArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f50b0-108"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>をインスタンス化する場合は、<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> メソッドを呼び出して、配列の初期要素を作成する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="f50b0-109">When you instantiate a <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> method to create the initial element in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-110"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-110">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-111">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-111">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-112">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-112">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimerArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimerArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.TimerArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.TimerArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.TimerArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="f50b0-113">コントロール配列をホストする <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-113">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="f50b0-114">コンテナーを指定して、<see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-114">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class, specifying its container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-115"><xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>をインスタンス化する場合は、<xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> メソッドを呼び出して、配列の初期要素を作成する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="f50b0-115">When you instantiate a <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex%2A> method to create the initial element in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-116"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-116">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-117">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-117">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-118">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-118">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="timerArray.CanExtend target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f50b0-119"><see cref="T:System.Windows.Forms.Timer" /> コントロール。</span><span class="sxs-lookup"><span data-stu-id="f50b0-119">A <see cref="T:System.Windows.Forms.Timer" /> control.</span></span></param>
        <summary><span data-ttu-id="f50b0-120">コントロールが <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> のメンバーであるかどうかを判断する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-120">Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</span></span></summary>
        <returns><span data-ttu-id="f50b0-121"><paramref name="target" /> がコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-121"><see langword="true" /> if <paramref name="target" /> is a member of the control array; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-122">`CanExtend` メソッドを使用すると、特定の <xref:System.Windows.Forms.Timer> コントロールが、他の要素が複製されたコントロール配列の基本要素であるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="f50b0-122">The `CanExtend` method can be used to determine whether a specific <xref:System.Windows.Forms.Timer> control is the base element of the control array from which the other elements were cloned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-123"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-123">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-124">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-124">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-125">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-125">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance class System.Type GetControlInstanceType() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="override this.GetControlInstanceType : unit -&gt; Type" Usage="timerArray.GetControlInstanceType " />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f50b0-126"><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" /> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f50b0-126">Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</span></span></summary>
        <returns><span data-ttu-id="f50b0-127"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> クラスは、Visual Basic 6.0 からアップグレードされたアプリケーション内で使用されるすべてのコントロール配列の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-127">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f50b0-128">このクラスは、通常はクラスのインスタンスの作成に使用されないため、この <see langword="Protected" /> メソッドは通常直接呼び出されることはなく、代わりに派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f50b0-128">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-129">このメソッドは、アプリケーションのコードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="f50b0-129">This method cannot be called from your application's code.</span></span> <span data-ttu-id="f50b0-130">代わりに、<xref:System.Object.GetType%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="f50b0-130">Use the <xref:System.Object.GetType%2A> method instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-131"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-131">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-132">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-132">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-133">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-133">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.Timer o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.Timer o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndex (o As Timer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetIndex(System::Windows::Forms::Timer ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetIndex : System.Windows.Forms.Timer -&gt; int16" Usage="timerArray.GetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.Timer" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f50b0-134">コントロール配列内の <see cref="T:System.Windows.Forms.Timer" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-134">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</span></span></param>
        <summary><span data-ttu-id="f50b0-135"><see cref="T:System.Windows.Forms.Timer" /> 内の <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-135">Gets the index of a <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</span></span></summary>
        <returns><span data-ttu-id="f50b0-136">指定した <see cref="T:System.Windows.Forms.Timer" /> のインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-136">A <see langword="Short" /> that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-137">このメソッドを使用すると、指定した <xref:System.Windows.Forms.Timer> のインデックスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="f50b0-137">This method can be used to retrieve the index for the specified <xref:System.Windows.Forms.Timer>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-138"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-138">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-139">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-139">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-140">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-140">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void HookUpControlEvents(object o) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.HookUpControlEvents : obj -&gt; unit" Usage="timerArray.HookUpControlEvents o" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f50b0-141"><see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-141">An <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="f50b0-142"><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" /> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f50b0-142">Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-143">このメソッドは、アプリケーションのコードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="f50b0-143">This method cannot be called from your application's code.</span></span> <span data-ttu-id="f50b0-144"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> メソッドを使用して追加されたコントロールのイベントをフックするには、`AddHandler` を使用します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-144">Use `AddHandler` to hook up events for any controls that are added by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-145"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-146">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-147">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Timer this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Timer Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Short) As Timer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Timer ^ default[short] { System::Windows::Forms::Timer ^ get(short Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int16) : System.Windows.Forms.Timer" Usage="Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Timer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f50b0-148">コントロール配列の要素の位置を指定する <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-148">A <see langword="Short" /> that specifies the position of an element of the control array.</span></span></param>
        <summary><span data-ttu-id="f50b0-149">インデックスを使用して、<see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> の特定の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-149">Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> by index.</span></span> <span data-ttu-id="f50b0-150">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="f50b0-150">Read-only.</span></span></summary>
        <value><span data-ttu-id="f50b0-151">コントロール配列内の指定した <paramref name="Index" /> にある <see cref="T:System.Windows.Forms.Timer" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-151">A <see cref="T:System.Windows.Forms.Timer" /> at the specified <paramref name="Index" /> in the control array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-152">`Item` プロパティは、コントロール配列の既定のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-152">The `Item` property is the default property for a control array.</span></span> <span data-ttu-id="f50b0-153">したがって、次のコード行は同等です。</span><span class="sxs-lookup"><span data-stu-id="f50b0-153">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb  
MsgBox(CStr(TimerArray.Item(1).Text))  
MsgBox(CStr(TimerArray(1).Text))  
```  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-154"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-154">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-155">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-155">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-156">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-156">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.Timer o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.Timer o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetIndex (o As Timer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetIndex(System::Windows::Forms::Timer ^ o);" />
      <MemberSignature Language="F#" Value="member this.ResetIndex : System.Windows.Forms.Timer -&gt; unit" Usage="timerArray.ResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.Timer" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f50b0-157"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-157">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="f50b0-158"><see langword="ResetIndex" /> メソッドは、<see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> クラスではサポートされません。</span><span class="sxs-lookup"><span data-stu-id="f50b0-158">The <see langword="ResetIndex" /> method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-159">このメソッドはサポートされていません。このメソッドを呼び出すと、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f50b0-159">This method is not supported, and calling it does not raise an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-160"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-160">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-161">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-161">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-162">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-162">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.Timer o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.Timer o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIndex (o As Timer, Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIndex(System::Windows::Forms::Timer ^ o, short Index);" />
      <MemberSignature Language="F#" Value="member this.SetIndex : System.Windows.Forms.Timer * int16 -&gt; unit" Usage="timerArray.SetIndex (o, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.Timer" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f50b0-163">コントロール配列内の <see cref="T:System.Windows.Forms.Timer" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-163">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</span></span></param>
        <param name="Index"><span data-ttu-id="f50b0-164">指定した <see cref="T:System.Windows.Forms.Timer" /> のインデックスを表す <see langword="Short" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-164">A <see langword="Short" /> that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</span></span></param>
        <summary><span data-ttu-id="f50b0-165"><see cref="T:System.Windows.Forms.Timer" /> 内の初期 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> のインデックスを設定します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-165">Sets the index of the initial <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-166">`SetIndex` メソッドは、コントロール配列内の最初の要素を作成する場合にのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f50b0-166">The `SetIndex` method should only be called when you are creating the initial element in the control array.</span></span> <span data-ttu-id="f50b0-167">後続の要素を追加するには、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> メソッドを呼び出し、`Index` を指定します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-167">To add subsequent elements, call the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method and specify the `Index`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-168"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-168">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-169">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-169">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-170">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-170">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.Timer o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.Timer o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIndex (o As Timer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIndex(System::Windows::Forms::Timer ^ o);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIndex : System.Windows.Forms.Timer -&gt; bool" Usage="timerArray.ShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.Timer" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f50b0-171">コントロール配列内の <see cref="T:System.Windows.Forms.Timer" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-171">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</span></span></param>
        <summary><span data-ttu-id="f50b0-172"><see cref="T:System.Windows.Forms.Timer" /> が、この <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> のメンバーであるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-172">Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Timer" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</span></span></summary>
        <returns><span data-ttu-id="f50b0-173"><paramref name="o" /> がこのコントロール配列のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f50b0-173"><see langword="true" /> if <paramref name="o" /> is a member of this control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-174">指定した <xref:System.Windows.Forms.Timer> が、別の <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray> のメンバーである場合、`ShouldSerializeIndex` は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-174">If the specified <xref:System.Windows.Forms.Timer> is a member of a different <xref:Microsoft.VisualBasic.Compatibility.VB6.TimerArray>, `ShouldSerializeIndex` returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-175"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-175">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-176">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-176">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-177">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-177">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f50b0-178">指定したタイマーの間隔が経過し、タイマーが有効である場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-178">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f50b0-179">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="f50b0-179">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f50b0-180"><xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間の関数とオブジェクトは、Visual Basic 6.0 から Visual Basic へのアップグレード ツールで使用するために用意されています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-180">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f50b0-181">ほとんどの場合、これらの関数とオブジェクトは、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の他の名前空間にある機能と重複しています。</span><span class="sxs-lookup"><span data-stu-id="f50b0-181">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f50b0-182">これらが必要になるのは、Visual Basic 6.0 のコード モデルが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] の実装と大きく異なる場合だけです。</span><span class="sxs-lookup"><span data-stu-id="f50b0-182">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Timer.Tick" />
      </Docs>
    </Member>
  </Members>
</Type>
