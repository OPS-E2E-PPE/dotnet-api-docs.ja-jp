<Type Name="ValueTask" FullName="System.Threading.Tasks.ValueTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d06480e038cd625d55d4678182affd08bf9dada6" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83522911" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTask : IEquatable&lt;System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask&#xA;Implements IEquatable(Of ValueTask)" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&gt;" />
  <TypeSignature Language="F#" Value="type ValueTask = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="4.3.0.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Threading.Tasks.Extensions" FromVersion="4.3.1.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="53d0c-101">非同期操作の待機可能な結果が提供されます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-101">Provides an awaitable result of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="53d0c-102"><xref:System.Threading.Tasks.ValueTask.AsTask%2A>を使用して、`ValueTask` インスタンスを待機するか、<xref:System.Threading.Tasks.Task> に変換することができます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-102">A `ValueTask` instance may either be awaited or converted to a <xref:System.Threading.Tasks.Task> using <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span> <span data-ttu-id="53d0c-103">`ValueTask` インスタンスは1回だけ待機できます。また、インスタンスが完了するまでコンシューマーが <xref:System.Threading.Tasks.ValueTask.GetAwaiter> を呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="53d0c-103">A `ValueTask` instance may only be awaited once, and consumers may not call <xref:System.Threading.Tasks.ValueTask.GetAwaiter> until the instance has completed.</span></span> <span data-ttu-id="53d0c-104">これらの制限が許容されない場合は、<xref:System.Threading.Tasks.ValueTask.AsTask%2A>を呼び出して、`ValueTask` を <xref:System.Threading.Tasks.Task> に変換します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-104">If these limitations are unacceptable, convert the `ValueTask` to a <xref:System.Threading.Tasks.Task> by calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A>.</span></span>

<span data-ttu-id="53d0c-105">`ValueTask` インスタンスでは、次の操作を実行しないでください。</span><span class="sxs-lookup"><span data-stu-id="53d0c-105">The following operations should never be performed on a `ValueTask` instance:</span></span>

- <span data-ttu-id="53d0c-106">インスタンスを複数回待機しています。</span><span class="sxs-lookup"><span data-stu-id="53d0c-106">Awaiting the instance multiple times.</span></span>
- <span data-ttu-id="53d0c-107"><xref:System.Threading.Tasks.ValueTask.AsTask%2A> を複数回呼び出す。</span><span class="sxs-lookup"><span data-stu-id="53d0c-107">Calling <xref:System.Threading.Tasks.ValueTask.AsTask%2A> multiple times.</span></span>
- <span data-ttu-id="53d0c-108">インスタンスを使用するために、これらの手法の1つ以上を使用します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-108">Using more than one of these techniques to consume the instance.</span></span>

<span data-ttu-id="53d0c-109">上記のいずれかを実行すると、結果は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-109">If you do any of the above, the results are undefined.</span></span>

<span data-ttu-id="53d0c-110">`ValueTask` は、<xref:System.Threading.Tasks.Task> または <xref:System.Threading.Tasks.Sources.IValueTaskSource> インスタンスのいずれかをラップできる構造体です。</span><span class="sxs-lookup"><span data-stu-id="53d0c-110">A `ValueTask` is a structure that can wrap either a <xref:System.Threading.Tasks.Task> or a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance.</span></span> <span data-ttu-id="53d0c-111">非同期メソッドから <xref:System.Threading.Tasks.Sources.IValueTaskSource> インスタンスをラップする `ValueTask` を返すと、高スループットのアプリケーションでは、再利用可能な <xref:System.Threading.Tasks.Sources.IValueTaskSource> オブジェクトのプールを使用した割り当てを回避できます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-111">Returning a `ValueTask` that wraps a <xref:System.Threading.Tasks.Sources.IValueTaskSource> instance from an asynchronous method enables high-throughput applications to avoid allocations by using a pool of reusable <xref:System.Threading.Tasks.Sources.IValueTaskSource> objects.</span></span> <span data-ttu-id="53d0c-112">詳細については、「理由、機能[、および when の ValueTask の概要](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53d0c-112">For more information, see [Understanding the Whys, Whats, and Whens of ValueTask](https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/).</span></span>

<span data-ttu-id="53d0c-113"><xref:System.Threading.Tasks.Task> ではなく `ValueTask` を使用すると、オーバーヘッドが発生します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-113">Using a `ValueTask` instead of a <xref:System.Threading.Tasks.Task> introduces some overhead.</span></span> <span data-ttu-id="53d0c-114">`ValueTask` は複数のフィールドを持つ構造であるため、メソッドからそれを返すと、1つの <xref:System.Threading.Tasks.Task> 参照を返す場合と比較して、より多くのデータをコピーすることになります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-114">Because `ValueTask` is a structure with multiple fields, returning it from the method results in copying more data compared to returning a single <xref:System.Threading.Tasks.Task> reference.</span></span> <span data-ttu-id="53d0c-115">そのため、結果を返さない非同期メソッドの既定の選択肢は、<xref:System.Threading.Tasks.Task>を返すことです。</span><span class="sxs-lookup"><span data-stu-id="53d0c-115">As such, the default choice for any asynchronous method that does not return a result should be to return a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="53d0c-116">パフォーマンス分析では、<xref:System.Threading.Tasks.Task>ではなく `ValueTask` 使用する必要があることが証明されている場合にのみ使用してください。</span><span class="sxs-lookup"><span data-stu-id="53d0c-116">Only if performance analysis proves it worthwhile should a `ValueTask` be used instead of a <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="53d0c-117"><xref:System.Threading.Tasks.Task> を返すメソッドが同期的に正常に完了した場合に、正常に完了したシングルトンを戻すには、<xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType> プロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-117">The <xref:System.Threading.Tasks.Task.CompletedTask?displayProperty=nameWithType> property should be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>

> [!NOTE]
> <span data-ttu-id="53d0c-118">`ValueTask` 型の使用は7.0 以降でC#サポートされており、Visual Basic のどのバージョンでもサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="53d0c-118">The use of the `ValueTask` type is supported starting with C# 7.0 and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Task)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Task -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="53d0c-119">操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="53d0c-119">The task that represents the operation.</span></span></param>
        <summary><span data-ttu-id="53d0c-120">操作を表す指定されたタスクを使用して、<see cref="T:System.Threading.Tasks.ValueTask" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-120">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied task that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.#ctor(System.Threading.Tasks.Sources.IValueTaskSource,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource, token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource ^ source, short token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.ValueTask : System.Threading.Tasks.Sources.IValueTaskSource * int16 -&gt; System.Threading.Tasks.ValueTask" Usage="new System.Threading.Tasks.ValueTask (source, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource" />
        <Parameter Name="token" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="53d0c-121">操作を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53d0c-121">An object that represents the operation.</span></span></param>
        <param name="token"><span data-ttu-id="53d0c-122"><see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> に渡される非透過的な値</span><span class="sxs-lookup"><span data-stu-id="53d0c-122">An opaque value that is passed through to the <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /></span></span></param>
        <summary><span data-ttu-id="53d0c-123">操作を表す指定された <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> オブジェクトを使用して、<see cref="T:System.Threading.Tasks.ValueTask" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-123">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask" /> class using the supplied <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> object that represents the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AsTask();" />
      <MemberSignature Language="F#" Value="member this.AsTask : unit -&gt; System.Threading.Tasks.Task" Usage="valueTask.AsTask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53d0c-124">この <see cref="T:System.Threading.Tasks.ValueTask" /> を表す <see cref="T:System.Threading.Tasks.Task" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-124">Retrieves a <see cref="T:System.Threading.Tasks.Task" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></summary>
        <returns><span data-ttu-id="53d0c-125">この <see cref="T:System.Threading.Tasks.ValueTask" /> でラップされる <see cref="T:System.Threading.Tasks.Task" /> オブジェクト (存在する場合)、または、結果を表す新しい <see cref="T:System.Threading.Tasks.Task" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53d0c-125">The <see cref="T:System.Threading.Tasks.Task" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task" /> object that represents the result.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="53d0c-126">このメソッドは、ラップされたタスクオブジェクト (存在する場合) を返すか、または結果を表す新しい task オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-126">This method either returns the wrapped task object, if one exists, or it manufactures a new task object to represent the result.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="member this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable" Usage="valueTask.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext"><span data-ttu-id="53d0c-127"><see langword="true" /> の場合は、キャプチャされたコンテキストに継続をマーシャリングします。そうしない場合は <see langword="false" /> にします。</span><span class="sxs-lookup"><span data-stu-id="53d0c-127"><see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="53d0c-128">この値の awaiter を構成します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-128">Configures an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="53d0c-129">構成済み awaiter。</span><span class="sxs-lookup"><span data-stu-id="53d0c-129">The configured awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTask.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="53d0c-130">現在のオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53d0c-130">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="53d0c-131">指定したオブジェクトが現在の <see cref="T:System.Threading.Tasks.ValueTask" /> インスタンスと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-131">Determines whether the specified object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> instance.</span></span></summary>
        <returns><span data-ttu-id="53d0c-132">指定されたオブジェクトが現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53d0c-132"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="53d0c-133">2つの <xref:System.Threading.Tasks.ValueTask> インスタンスは、同じ <xref:System.Threading.Tasks.Task> または <xref:System.Threading.Tasks.Sources.IValueTaskSource> オブジェクトとトークンのペアをラップするときに等しくなります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-133">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Equals(System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.Tasks.ValueTask -&gt; bool" Usage="valueTask.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="53d0c-134">現在のオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53d0c-134">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="53d0c-135">指定した <see cref="T:System.Threading.Tasks.ValueTask" /> オブジェクトが、現在の <see cref="T:System.Threading.Tasks.ValueTask" /> オブジェクトと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-135">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask" /> object.</span></span></summary>
        <returns><span data-ttu-id="53d0c-136">指定されたオブジェクトが現在のオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53d0c-136"><see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="53d0c-137">2つの <xref:System.Threading.Tasks.ValueTask> インスタンスは、同じ <xref:System.Threading.Tasks.Task> または <xref:System.Threading.Tasks.Sources.IValueTaskSource> オブジェクトとトークンのペアをラップするときに等しくなります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-137">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.ValueTaskAwaiter" Usage="valueTask.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53d0c-138">この値の awaiter を作成します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-138">Creates an awaiter for this value.</span></span></summary>
        <returns><span data-ttu-id="53d0c-139">awaiter。</span><span class="sxs-lookup"><span data-stu-id="53d0c-139">The awaiter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTask.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53d0c-140">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-140">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="53d0c-141">現在のオブジェクトのハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="53d0c-141">The hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanceled : bool" Usage="System.Threading.Tasks.ValueTask.IsCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53d0c-142">このオブジェクトが取り消された操作を表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-142">Gets a value that indicates whether this object represents a canceled operation.</span></span></summary>
        <value><span data-ttu-id="53d0c-143">このオブジェクトが取り消された操作を表している場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-143"><see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="53d0c-144"><xref:System.Threading.Tasks.ValueTask> が結果または <xref:System.Threading.Tasks.Sources.IValueTaskSource>によってサポートされている場合は、常に `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-144">If the <xref:System.Threading.Tasks.ValueTask> is backed by a result or by a <xref:System.Threading.Tasks.Sources.IValueTaskSource>, this will always return `false`.</span></span>  <span data-ttu-id="53d0c-145"><xref:System.Threading.Tasks.Task>によってサポートされている場合は、タスクの <xref:System.Threading.Tasks.Task.IsCanceled> プロパティの値が返されます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-145">If it's backed by a <xref:System.Threading.Tasks.Task>, it'll return the value of the task's <xref:System.Threading.Tasks.Task.IsCanceled> property.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Threading.Tasks.ValueTask.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53d0c-146">このオブジェクトが完了した操作を表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-146">Gets a value that indicates whether this object represents a completed operation.</span></span></summary>
        <value><span data-ttu-id="53d0c-147">このオブジェクトが完了した操作を表している場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-147"><see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompletedSuccessfully : bool" Usage="System.Threading.Tasks.ValueTask.IsCompletedSuccessfully" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53d0c-148">このオブジェクトが正常に完了した操作を表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-148">Gets a value that indicates whether this object represents a successfully completed operation.</span></span></summary>
        <value><span data-ttu-id="53d0c-149">このオブジェクトが正常に完了した操作を表している場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-149"><see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFaulted : bool" Usage="System.Threading.Tasks.ValueTask.IsFaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53d0c-150">このオブジェクトが失敗した操作を表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-150">Gets a value that indicates whether this object represents a failed operation.</span></span></summary>
        <value><span data-ttu-id="53d0c-151">このオブジェクトが失敗した操作を表している場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="53d0c-151"><see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Equality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="53d0c-152">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="53d0c-152">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="53d0c-153">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="53d0c-153">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="53d0c-154">2 つの <see cref="T:System.Threading.Tasks.ValueTask" /> の値が等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-154">Compares two <see cref="T:System.Threading.Tasks.ValueTask" /> values for equality.</span></span></summary>
        <returns><span data-ttu-id="53d0c-155">2 つの <see cref="T:System.Threading.Tasks.ValueTask" /> 値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53d0c-155"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="53d0c-156">2つの <xref:System.Threading.Tasks.ValueTask> インスタンスは、同じ <xref:System.Threading.Tasks.Task> または <xref:System.Threading.Tasks.Sources.IValueTaskSource> オブジェクトとトークンのペアをラップするときに等しくなります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-156">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask left, System.Threading.Tasks.ValueTask right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask left, valuetype System.Threading.Tasks.ValueTask right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.op_Inequality(System.Threading.Tasks.ValueTask,System.Threading.Tasks.ValueTask)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask, right As ValueTask) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask left, System::Threading::Tasks::ValueTask right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.Tasks.ValueTask * System.Threading.Tasks.ValueTask -&gt; bool" Usage="System.Threading.Tasks.ValueTask.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="53d0c-157">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="53d0c-157">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="53d0c-158">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="53d0c-158">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="53d0c-159">2 つの <see cref="T:System.Threading.Tasks.ValueTask" /> 値が等しくないかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-159">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask" /> values are unequal.</span></span></summary>
        <returns><span data-ttu-id="53d0c-160">2 つの <see cref="T:System.Threading.Tasks.ValueTask" /> 値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53d0c-160"><see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="53d0c-161">2つの <xref:System.Threading.Tasks.ValueTask> インスタンスは、同じ <xref:System.Threading.Tasks.Task> または <xref:System.Threading.Tasks.Sources.IValueTaskSource> オブジェクトとトークンのペアをラップするときに等しくなります。</span><span class="sxs-lookup"><span data-stu-id="53d0c-161">Two <xref:System.Threading.Tasks.ValueTask> instances are equal when they wrap the same <xref:System.Threading.Tasks.Task> or the same pair of the <xref:System.Threading.Tasks.Sources.IValueTaskSource> object and the token.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask Preserve();" />
      <MemberSignature Language="F#" Value="member this.Preserve : unit -&gt; System.Threading.Tasks.ValueTask" Usage="valueTask.Preserve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53d0c-162">将来のある時点で使用される可能性のある <see cref="T:System.Threading.Tasks.ValueTask" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="53d0c-162">Gets a <see cref="T:System.Threading.Tasks.ValueTask" /> that may be used at any point in the future.</span></span></summary>
        <returns><span data-ttu-id="53d0c-163">保存された <see cref="T:System.Threading.Tasks.ValueTask" />。</span><span class="sxs-lookup"><span data-stu-id="53d0c-163">The preserved <see cref="T:System.Threading.Tasks.ValueTask" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
