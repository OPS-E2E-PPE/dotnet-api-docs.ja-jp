<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3cb6ca76cf168420256ee203732c7ac72a08733" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975359" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="45416-101">トレース出力またはデバッグ出力を、標準出力と標準エラー出力ストリームのいずれかに転送します。</span><span class="sxs-lookup"><span data-stu-id="45416-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45416-102">トレースメッセージおよびデバッグメッセージをコンソールに書き込むには、<xref:System.Diagnostics.ConsoleTraceListener> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="45416-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="45416-103"><xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化して、<xref:System.Console.Out%2A?displayProperty=nameWithType> ストリームまたは <xref:System.Console.Error%2A?displayProperty=nameWithType> ストリームにトレースメッセージを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="45416-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45416-104"><xref:System.IDisposable> インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="45416-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="45416-105">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="45416-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="45416-106">型を直接破棄するには、`try`/`catch` ブロックで <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="45416-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="45416-107">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="45416-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="45416-108">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="45416-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="45416-109">トレース出力およびデバッグ出力を有効にすると、<xref:System.Diagnostics.ConsoleTraceListener> メッセージが、指定された <xref:System.Console?displayProperty=nameWithType> ストリームに書き込まれます。これは、<xref:System.Console.Write%2A?displayProperty=nameWithType> または <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> メソッドを使用してメッセージを記述する方法と似ています。</span><span class="sxs-lookup"><span data-stu-id="45416-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="45416-110">コンソールアプリケーションでは、<xref:System.Console?displayProperty=nameWithType> 出力ストリームとエラーストリームは、既存のコンソールウィンドウにメッセージを書き込みます。また、ストリームをリダイレクトして <xref:System.IO.TextWriter?displayProperty=nameWithType> インスタンスに書き込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="45416-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45416-111">Windows ベースのアプリケーションのように、コンソールが存在しない場合は、コンソールに書き込まれたメッセージは表示されません。</span><span class="sxs-lookup"><span data-stu-id="45416-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="45416-112"><xref:System.Diagnostics.Trace>、<xref:System.Diagnostics.TraceSource>、または <xref:System.Diagnostics.Debug> を介して記述されたメッセージをコンソールに書き込む場合は、<xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを適切な <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="45416-113">さらに、<xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> または <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> メソッドを使用して、コンソールにメッセージを直接書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="45416-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45416-114"><xref:System.Diagnostics.Debug> クラスと <xref:System.Diagnostics.Trace> クラスは、それぞれの `Listeners` プロパティを通じてアクセスされる、同じ <xref:System.Diagnostics.TraceListenerCollection> コレクションを共有します。</span><span class="sxs-lookup"><span data-stu-id="45416-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="45416-115">これらのクラスのいずれかを使用して <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトをコレクションに追加した場合、もう一方のクラスは同じリスナーを自動的に使用します。</span><span class="sxs-lookup"><span data-stu-id="45416-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="45416-116">ほとんどのコンパイラでは、条件付きコンパイルフラグによってトレース出力およびデバッグ出力が有効になります。</span><span class="sxs-lookup"><span data-stu-id="45416-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="45416-117">トレースまたはデバッグを有効にしない場合、<xref:System.Diagnostics.Debug?displayProperty=nameWithType> クラスと <xref:System.Diagnostics.Trace?displayProperty=nameWithType> クラスを介して記述されたメッセージは、実質的に無視されます。</span><span class="sxs-lookup"><span data-stu-id="45416-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="45416-118">トレース出力およびデバッグ出力を有効にする構文は、コンパイラ固有です。または Visual Basic 以外C#のコンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="45416-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="45416-119">でC#デバッグを有効にするには、コードをコンパイルするときに **/d: debug**フラグをコンパイラのコマンドラインに追加するか、ファイルの先頭に **#define デバッグ**を追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="45416-120">Visual Basic で、 **/d: DEBUG = True**フラグをコンパイラのコマンドラインに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="45416-121">でC#トレースを有効にするには、コードをコンパイルするときに **/d: trace**フラグをコンパイラのコマンドラインに追加するか、ファイルの先頭に **#define トレース**を追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="45416-122">Visual Basic で、 **/d: TRACE = True**フラグをコンパイラのコマンドラインに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="45416-123"><xref:System.Diagnostics.ConsoleTraceListener> オブジェクトをコード内の <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに追加することも、アプリケーション構成ファイルを使用して <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="45416-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="45416-124">コード内に <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを追加して、特定のコードセクションまたは実行パスのメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="45416-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="45416-125">アプリケーション構成ファイルに <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを追加して、アプリケーションの実行中にすべてのトレースメッセージとデバッグメッセージをコンソールに送信します。</span><span class="sxs-lookup"><span data-stu-id="45416-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="45416-126">コードの特定のセクションについてトレースおよびデバッグメッセージをコンソールに書き込むには、<xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化し、それを <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="45416-127"><xref:System.Diagnostics.Trace> または <xref:System.Diagnostics.Debug> クラスを使用して、メッセージを含むコードのセクションをインストルメント化します。</span><span class="sxs-lookup"><span data-stu-id="45416-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="45416-128">コードセクションの最後で、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションから <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを削除し、<xref:System.Diagnostics.ConsoleTraceListener>で <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="45416-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="45416-129">アプリケーションの実行中にすべてのトレースメッセージおよびデバッグメッセージをコンソールに送信するには、アプリケーション構成ファイルに <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="45416-130">アプリケーションの名前に対応する構成ファイル、または [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] プロジェクト内の app.config ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="45416-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="45416-131">このファイルで、<xref:System.Diagnostics.ConsoleTraceListener>の要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="45416-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="45416-132">次の例では、`configConsoleListener` という名前の <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="45416-133">アプリケーション構成ファイルにトレースリスナーを追加する方法の詳細については、「 [&lt;リスナー&gt;](/dotnet/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="45416-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](/dotnet/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45416-134">次のコード例では、2つのパブリックメソッドを持つクラスで構成されるコンソールアプリケーションを実装します。</span><span class="sxs-lookup"><span data-stu-id="45416-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="45416-135">`Main` メソッドは、コマンドライン引数を調べ、トレース出力を標準エラーストリームまたは標準出力ストリームに転送するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="45416-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="45416-136">`Main` は、指定された <xref:System.Console> 出力ストリームの <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを作成および初期化し、このオブジェクトをトレースリスナーコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="45416-137">次に、`WriteEnvironmentInfoToTrace` メソッドを呼び出します。これにより、実行中の環境とトレースリスナーの構成に関する詳細がトレース出力に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="45416-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="45416-138">このサンプルアプリケーションを実行すると、環境とトレースの構成の詳細が、<xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを介して指定されたコンソール出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="45416-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45416-139"><see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="45416-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45416-140">標準出力ストリームへのトレース出力を指定して、<see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="45416-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45416-141">このコンストラクターは、<xref:System.Console.Out%2A?displayProperty=nameWithType> ストリームにメッセージを書き込むために <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="45416-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="45416-142"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティは、空の文字列 ("") に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="45416-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45416-143">次のコード例では、指定された <xref:System.Console> 出力ストリームの <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化し、それをトレースリスナーコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="45416-144">このコード例は、<xref:System.Diagnostics.ConsoleTraceListener> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="45416-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="45416-145">トレース出力およびデバッグ出力を標準エラー ストリームに書き込む場合は <see langword="true" />。標準出力ストリームに書き込む場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="45416-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="45416-146">トレース出力を標準出力ストリームまたは標準エラー ストリームに書き込むためのオプションを指定して、<see cref="T:System.Diagnostics.ConsoleTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="45416-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45416-147">このコンストラクターは、<xref:System.Console.Out%2A?displayProperty=nameWithType> または <xref:System.Console.Error%2A?displayProperty=nameWithType> ストリームにメッセージを書き込むために <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="45416-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="45416-148"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティは、空の文字列 ("") に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="45416-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45416-149">次のコード例では、指定された <xref:System.Console> 出力ストリームの <xref:System.Diagnostics.ConsoleTraceListener> オブジェクトを初期化し、それをトレースリスナーコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="45416-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="45416-150">このコード例は、<xref:System.Diagnostics.ConsoleTraceListener> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="45416-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="45416-151">このトレース リスナーに指定されたストリームへの出力を閉じます。</span><span class="sxs-lookup"><span data-stu-id="45416-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45416-152">この <xref:System.Diagnostics.ConsoleTraceListener> インスタンスに対して指定されたストリーム (<xref:System.Console.Out%2A?displayProperty=nameWithType> ストリームまたは <xref:System.Console.Error%2A?displayProperty=nameWithType> ストリーム) が閉じられています。</span><span class="sxs-lookup"><span data-stu-id="45416-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
