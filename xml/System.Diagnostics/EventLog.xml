<Type Name="EventLog" FullName="System.Diagnostics.EventLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bde84c47df1d06623af70cb0cc0b9a471758b94" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76947607" /></Metadata><TypeSignature Language="C#" Value="public class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLog extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLog" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLog&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLog : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type EventLog = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
      <AttributeName>System.ComponentModel.DefaultEvent("EntryWritten")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.EventLogInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("Represents an event log")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.EventLogInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("EventLogDesc")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b441b-101">Windows イベント ログとの相互作用を提供します。</span><span class="sxs-lookup"><span data-stu-id="b441b-101">Provides interaction with Windows event logs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-102"><xref:System.Diagnostics.EventLog> を使用すると、重要なソフトウェアまたはハードウェアイベントに関する情報を記録する Windows イベントログにアクセスしたり、カスタマイズしたりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-102"><xref:System.Diagnostics.EventLog> lets you access or customize Windows event logs, which record information about important software or hardware events.</span></span> <span data-ttu-id="b441b-103"><xref:System.Diagnostics.EventLog>を使用すると、既存のログを読み取り、ログにエントリを書き込んだり、イベントソースを作成または削除したり、ログを削除したり、ログエントリに応答したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-103">Using <xref:System.Diagnostics.EventLog>, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries.</span></span> <span data-ttu-id="b441b-104">また、イベントソースを作成するときに、新しいログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-104">You can also create new logs when creating an event source.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b441b-105">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="b441b-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b441b-106">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="b441b-107">直接的に型を破棄するには、<xref:System.IDisposable.Dispose%2A>`try`/ ブロック内で `catch` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="b441b-108">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="b441b-109">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="b441b-110">個々のイベントログとそのエントリへのアクセスを提供するだけでなく、<xref:System.Diagnostics.EventLog> クラスを使用して、すべてのイベントログのコレクションにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-110">In addition to providing access to individual event logs and their entries, the <xref:System.Diagnostics.EventLog> class lets you access the collection of all event logs.</span></span> <span data-ttu-id="b441b-111"><xref:System.Diagnostics.EventLog> の `static` メンバーを使用して、ログの削除、ログ一覧の取得、ソースの作成または削除、またはコンピューターに特定のソースが既に含まれているかどうかの確認を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-111">You can use the `static` members of <xref:System.Diagnostics.EventLog> to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.</span></span>  
  
 <span data-ttu-id="b441b-112">既定のイベントログには、アプリケーション、システム、およびセキュリティの3つがあります。</span><span class="sxs-lookup"><span data-stu-id="b441b-112">There are three default event logs: Application, System, and Security.</span></span> <span data-ttu-id="b441b-113">セキュリティログは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b441b-113">A Security log is read-only.</span></span> <span data-ttu-id="b441b-114">Active Directory など、インストールするその他のアプリケーションやサービスには、追加のイベントログが含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-114">Other applications and services you install, such as Active Directory, might have additional event logs.</span></span>  
  
 <span data-ttu-id="b441b-115"><xref:System.Diagnostics.EventLog> クラスを使用する場合は、セキュリティ上の考慮事項があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-115">There are security considerations when using the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="b441b-116"><xref:System.Diagnostics.EventLog> には .NET Framework 2.0 以降のバージョンの特定のアクションに対する <xref:System.Diagnostics.EventLogPermission> アクセス許可、または .NET Framework 1.0 と1.1 での完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-116"><xref:System.Diagnostics.EventLog> requires <xref:System.Diagnostics.EventLogPermission> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1.</span></span> <span data-ttu-id="b441b-117">部分的に信頼されたコードには <xref:System.Diagnostics.EventLogPermission> 付与しないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b441b-117">We recommend that <xref:System.Diagnostics.EventLogPermission> not be granted to partially trusted code.</span></span>  <span data-ttu-id="b441b-118"><xref:System.Diagnostics.EventLogEntryCollection> および <xref:System.Diagnostics.EventLogEntry> オブジェクトを含むイベントログオブジェクトを、より低い信頼度の低いコードに渡すことは避けてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-118">You should never pass any event log object, including <xref:System.Diagnostics.EventLogEntryCollection> and <xref:System.Diagnostics.EventLogEntry> objects, to less trusted code.</span></span> <span data-ttu-id="b441b-119">たとえば、<xref:System.Diagnostics.EventLog> オブジェクトを作成し、エントリを書き込み、<xref:System.Diagnostics.EventLog> オブジェクトを部分的に信頼されたコードに渡すと、セキュリティ上の問題が発生する可能性があります。これは、イベントログに対する読み取りと書き込みを行う機能によって、他のアプリケーションの名前でイベントログメッセージを発行するなどの操作をコードで実行できるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-119">For example, creating an <xref:System.Diagnostics.EventLog> object, writing an entry, and then passing the <xref:System.Diagnostics.EventLog> object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.</span></span>  
  
 <span data-ttu-id="b441b-120">Windows Vista 以降では、ユーザーアカウント制御 (UAC) によってユーザーの資格情報が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-120">Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user.</span></span> <span data-ttu-id="b441b-121">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-122">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-123">セキュリティログにアクセスするコードを実行するには、まず、資格情報を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-123">To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator.</span></span> <span data-ttu-id="b441b-124">アプリケーションを起動するときに、アプリケーションのショートカットメニューを開き (マウスを使用している場合はアプリケーションアイコンを右クリックして)、管理者として実行することを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-124">You can do this when you start an application by opening the shortcut menu for the application (if you're using a mouse, right-click the application icon) and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="b441b-125"><xref:System.Diagnostics.EventLog> を使用すると、サーバーのイベントビューアーを通じて表示できるカスタムイベントログを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-125">You can use <xref:System.Diagnostics.EventLog> to create custom event logs that you can view through the server's Event Viewer.</span></span> <span data-ttu-id="b441b-126"><xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> メソッドを使用して、イベントログのローカライズされた名前をイベントビューアーに表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-126">Use the <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> method to display a localized name for your event log in the Event Viewer.</span></span> <span data-ttu-id="b441b-127"><xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> メソッドを使用して、ログの最大サイズに達したときのイベントログの動作を構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-127">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to configure the behavior of your event log when it reaches its maximum log size.</span></span>  
  
 <span data-ttu-id="b441b-128">イベントログから読み取るには、イベントログのログ名 (<xref:System.Diagnostics.EventLog.Log%2A> プロパティ) とサーバーコンピューター名 (<xref:System.Diagnostics.EventLog.MachineName%2A> プロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-128">To read from an event log, specify the log name (<xref:System.Diagnostics.EventLog.Log%2A> property) and server computer name (<xref:System.Diagnostics.EventLog.MachineName%2A> property for the event log.</span></span> <span data-ttu-id="b441b-129">サーバーコンピューター名を指定しない場合は、ローカルコンピューター "." が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-129">If you don't specify the server computer name, the local computer, ".", is assumed.</span></span> <span data-ttu-id="b441b-130">ソースはログに書き込むためにのみ必要であるため、イベントソース (<xref:System.Diagnostics.EventLog.Source%2A> プロパティ) を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-130">It's not necessary to specify the event source (<xref:System.Diagnostics.EventLog.Source%2A> property), because a source is required only for writing to logs.</span></span> <span data-ttu-id="b441b-131"><xref:System.Diagnostics.EventLog.Entries%2A> プロパティには、イベントログのエントリの一覧が自動的に入力されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-131">The  <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated with the event log's list of entries.</span></span>  
  
 <span data-ttu-id="b441b-132">イベントログに書き込むには、イベントソース (<xref:System.Diagnostics.EventLog.Source%2A> プロパティ) を指定または作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-132">To write to an event log, specify or create an event source (<xref:System.Diagnostics.EventLog.Source%2A> property).</span></span> <span data-ttu-id="b441b-133">新しいイベントソースを作成するには、コンピューターの管理者の資格情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-133">You must have administrative credentials on the computer to create a new event source.</span></span> <span data-ttu-id="b441b-134">イベントソースは、アプリケーションを有効なエントリのソースとしてイベントログに登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-134">The event source registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="b441b-135">イベントソースを使用すると、一度に1つのログにのみ書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-135">You can use the event source  to write to only one log at a time.</span></span> <span data-ttu-id="b441b-136"><xref:System.Diagnostics.EventLog.Source%2A> プロパティには任意のランダムな文字列を指定できますが、名前はコンピューター上の他のソースと区別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-136">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any random string, but the name must be distinct from other sources on the computer.</span></span> <span data-ttu-id="b441b-137">イベントソースは、通常、アプリケーションの名前、または別の識別文字列です。</span><span class="sxs-lookup"><span data-stu-id="b441b-137">The event source is typically the name of the application or another identifying string.</span></span> <span data-ttu-id="b441b-138">重複する <xref:System.Diagnostics.EventLog.Source%2A> 値を作成しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-138">Trying to create a duplicate <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="b441b-139">ただし、1つのイベントログを複数のソースに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-139">However, a single event log can be associated with multiple sources.</span></span>  
  
 <span data-ttu-id="b441b-140"><xref:System.Diagnostics.EventLog> インスタンスに関連付けられているイベントログのイベントソースが存在しない場合は、新しいイベントソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-140">If the event source for the event log associated with the <xref:System.Diagnostics.EventLog> instance doesn't exist, a new event source is created.</span></span> <span data-ttu-id="b441b-141">Windows Vista 以降または Windows Server 2003 でイベントソースを作成するには、管理者の資格情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-141">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.</span></span>  
  
 <span data-ttu-id="b441b-142">この要件は、イベントソースが一意であるかどうかを確認するために、セキュリティログを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-142">This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-143">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-143">Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b441b-144">イベントソースを作成または削除するには、名前付きミューテックスを使用して、基になるコードを同期する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-144">Creating or deleting an event source requires synchronization of the underlying code by using a named mutex.</span></span> <span data-ttu-id="b441b-145">高い特権を持つアプリケーションが名前付きミューテックスをロックした場合、イベントソースを作成または削除しようとすると、ロックが解除されるまでアプリケーションは応答を停止します。</span><span class="sxs-lookup"><span data-stu-id="b441b-145">If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released.</span></span> <span data-ttu-id="b441b-146">この問題を回避するために、信頼されていないコードには <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> アクセス許可を付与しないでください。</span><span class="sxs-lookup"><span data-stu-id="b441b-146">To help prevent this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission to untrusted code.</span></span> <span data-ttu-id="b441b-147">また、<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> アクセス許可によって他のアクセス許可がバイパスされる可能性があるため、信頼性の高いコードにのみ付与する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-147">In addition, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.</span></span>  
  
 <span data-ttu-id="b441b-148">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-148">Applications and services should write to the Application log or to a custom log.</span></span> <span data-ttu-id="b441b-149">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-149">Device drivers should write to the System log.</span></span> <span data-ttu-id="b441b-150"><xref:System.Diagnostics.EventLog.Log%2A> プロパティを明示的に設定しない場合、イベントログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-150">If you do not explicitly set the <xref:System.Diagnostics.EventLog.Log%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-151">アプリケーションが登録されたソースとして書き込むことを保護することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-151">There is nothing to protect an application from writing as any registered source.</span></span>  <span data-ttu-id="b441b-152">アプリケーションに <xref:System.Diagnostics.EventLogPermissionAccess.Write> アクセス許可が付与されている場合、コンピューターに登録されている有効なソースのイベントを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-152">If an application is granted <xref:System.Diagnostics.EventLogPermissionAccess.Write> permission, it can write events for any valid source registered on the computer.</span></span>  
  
 <span data-ttu-id="b441b-153">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドと <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-153">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="b441b-154">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-154">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-155">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-155">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-156">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-156">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-157">オペレーティングシステムがイベントソースの一覧を更新していない状態で、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-157">If the operating system hasn't refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-158"><xref:System.Diagnostics.EventLogInstaller> オブジェクトまたは <xref:System.Diagnostics.EventLog.CreateEventSource%2A> メソッドを使用して、新しいソースを構成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-158">You can configure a new source by using an <xref:System.Diagnostics.EventLogInstaller> object or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-159">新しいイベントソースを作成するには、コンピューターの管理者の資格情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-159">You must have administrative credentials on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-160">各ソースは一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-160">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="b441b-161">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-161">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span> <span data-ttu-id="b441b-162">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-162">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="b441b-163">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-163">If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.</span></span>  
  
 <span data-ttu-id="b441b-164">イベントソースは、イベントカテゴリとメッセージ文字列のローカライズされたリソースに登録できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-164">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="b441b-165">アプリケーションでは、実際の文字列値を指定する代わりに、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-165">Your application can write event log entries by using resource identifiers instead of specifying the actual string values.</span></span> <span data-ttu-id="b441b-166">リソースファイルを使用したソースの構成の詳細については、<xref:System.Diagnostics.EventLogInstaller> と <xref:System.Diagnostics.EventSourceCreationData> のクラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-166">Refer to the <xref:System.Diagnostics.EventLogInstaller> and <xref:System.Diagnostics.EventSourceCreationData> classes for more information about configuring your source with resource files.</span></span>  
  
 <span data-ttu-id="b441b-167">アプリケーションが文字列値をイベントログに直接書き込む場合は、ソースのリソースファイルプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-167">If your application writes string values directly to the event log, you do not have to set the resource file properties for the source.</span></span> <span data-ttu-id="b441b-168">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-168">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-169">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-169">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-170">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-170">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-171">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-171">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="b441b-172">イベントを作成する場合は、少なくともメッセージ文字列のメッセージ文字列またはリソース識別子を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-172">When writing events, you must at least specify either a message string or the resource identifier for a message string.</span></span> <span data-ttu-id="b441b-173">その他のイベントプロパティは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b441b-173">Other event properties are optional.</span></span> <span data-ttu-id="b441b-174">オプションのイベント設定の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-174">Examples of optional event settings include the following:</span></span>  
  
-   <span data-ttu-id="b441b-175"><xref:System.Diagnostics.EventLogEntryType> を設定して、イベントビューアーがエントリに対して表示するアイコンを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-175">You can set the <xref:System.Diagnostics.EventLogEntryType> to specify the icon that the Event Viewer displays for the entry.</span></span>  
  
-   <span data-ttu-id="b441b-176">アプリケーションでカテゴリを使用してイベントをフィルター処理する場合は、イベントのカテゴリ識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-176">You can specify a category identifier for the event, if your application uses categories for filtering the events.</span></span>  
  
-   <span data-ttu-id="b441b-177">指定したイベントに追加情報を関連付ける場合は、イベントエントリにバイナリデータを添付できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-177">You can attach binary data to your event entry if you want to associate additional information with a given event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b441b-178">イベントログは、ディスク領域、プロセッサ時間、およびその他のシステムリソースを消費します。</span><span class="sxs-lookup"><span data-stu-id="b441b-178">Event logging consumes disk space, processor time, and other system resources.</span></span> <span data-ttu-id="b441b-179">重要な情報のみをログに記録することが重要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-179">It is important to log only essential information.</span></span> <span data-ttu-id="b441b-180">イベントログの呼び出しは、メインコードパスではなくエラーパスに配置することをお勧めします。これにより、パフォーマンスに悪影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="b441b-180">We recommend that you place event log calls in an error path, rather than in the main code path, so they don't adversely affect performance.</span></span>  
  
 <span data-ttu-id="b441b-181"><xref:System.Diagnostics.EventLog>のインスタンスの初期プロパティ値の一覧については、<xref:System.Diagnostics.EventLog.%23ctor%2A> コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-181">For a list of initial property values for an instance of <xref:System.Diagnostics.EventLog>, see the <xref:System.Diagnostics.EventLog.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-182">次の例では、イベントソースがまだ存在しない場合は `MySource` 作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-182">The following example creates the event source `MySource` if it doesn't already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-183">Windows Vista 以降では、このアプリケーションを管理者として実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-183">Starting with Windows Vista, you must run this application as an administrator.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
    <altmember cref="T:System.Diagnostics.EntryWrittenEventArgs" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-184"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b441b-184">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-185"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b441b-185">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="b441b-186">このインスタンスは、ログとは関連付けられません。</span><span class="sxs-lookup"><span data-stu-id="b441b-186">Does not associate the instance with any log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-187"><xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に、<xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-187">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="b441b-188">ログから <xref:System.Diagnostics.EventLog.Entries%2A> を読み取るだけの場合は、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティのみを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-188">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-189"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しない場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-189">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-190">次の表に、<xref:System.Diagnostics.EventLog>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-190">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="b441b-191">property</span><span class="sxs-lookup"><span data-stu-id="b441b-191">Property</span></span>|<span data-ttu-id="b441b-192">初期値</span><span class="sxs-lookup"><span data-stu-id="b441b-192">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="b441b-193">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="b441b-193">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="b441b-194">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="b441b-194">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="b441b-195">ローカルコンピューター (".")。</span><span class="sxs-lookup"><span data-stu-id="b441b-195">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b441b-196">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-196">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-197">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-197">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-198">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-198">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-199">ローカル コンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-199">The name of the log on the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-200"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b441b-200">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="b441b-201">ローカル コンピューター上のログにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b441b-201">Associates the instance with a log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-202">このオーバーロードは、<xref:System.Diagnostics.EventLog.Log%2A> プロパティを `logName` パラメーターに設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-202">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter.</span></span> <span data-ttu-id="b441b-203"><xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に、<xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-203">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="b441b-204">ログから <xref:System.Diagnostics.EventLog.Entries%2A> を読み取るだけの場合は、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティのみを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-204">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-205"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しない場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-205">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span> <span data-ttu-id="b441b-206">コンストラクターのこのオーバーロードは、<xref:System.Diagnostics.EventLog.Log%2A> プロパティを指定しますが、<xref:System.Diagnostics.EventLog.Entries%2A> プロパティを読み取る前にこれを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-206">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> property, but you can change this before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="b441b-207"><xref:System.Diagnostics.EventLog.Source%2A> プロパティに指定したソースがコンピューター上の他のソースから一意である場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> を呼び出すと、指定した名前のログがまだ存在しない場合は、そのログが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-207">If the source you specify in the <xref:System.Diagnostics.EventLog.Source%2A> property is unique from other sources on the computer, a subsequent call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> creates a log with the specified name, if it does not already exist.</span></span>  
  
 <span data-ttu-id="b441b-208">次の表に、<xref:System.Diagnostics.EventLog>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-208">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="b441b-209">property</span><span class="sxs-lookup"><span data-stu-id="b441b-209">Property</span></span>|<span data-ttu-id="b441b-210">初期値</span><span class="sxs-lookup"><span data-stu-id="b441b-210">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="b441b-211">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="b441b-211">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="b441b-212">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-212">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="b441b-213">ローカルコンピューター (".")。</span><span class="sxs-lookup"><span data-stu-id="b441b-213">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b441b-214">次の例では、ローカルコンピューター上のイベントログ "myNewLog" のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-214">The following example reads entries in the event log, "myNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-215">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-215">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-216">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-216">The log name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-217">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-217">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-218">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-218">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-219">指定したコンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-219">The name of the log on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-220">ログが存在するコンピューター。</span><span class="sxs-lookup"><span data-stu-id="b441b-220">The computer on which the log exists.</span></span></param>
        <summary><span data-ttu-id="b441b-221"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b441b-221">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="b441b-222">指定したコンピューター上のログにインスタンスを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b441b-222">Associates the instance with a log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-223">このオーバーロードは、<xref:System.Diagnostics.EventLog.Log%2A> プロパティを `logName` パラメーターに、<xref:System.Diagnostics.EventLog.MachineName%2A> プロパティを `machineName` パラメーターに設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-223">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter and the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter.</span></span> <span data-ttu-id="b441b-224"><xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に、<xref:System.Diagnostics.EventLog>の <xref:System.Diagnostics.EventLog.Source%2A> プロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-224">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="b441b-225">ログから <xref:System.Diagnostics.EventLog.Entries%2A> を読み取るだけの場合は、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティのみを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-225">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-226">コンストラクターのこのオーバーロードには、<xref:System.Diagnostics.EventLog.Log%2A> プロパティと <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティが指定されていますが、<xref:System.Diagnostics.EventLog.Entries%2A> プロパティを読み取る前に変更することができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-226">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties, but you can change either before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="b441b-227">次の表に、<xref:System.Diagnostics.EventLog>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-227">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="b441b-228">property</span><span class="sxs-lookup"><span data-stu-id="b441b-228">Property</span></span>|<span data-ttu-id="b441b-229">初期値</span><span class="sxs-lookup"><span data-stu-id="b441b-229">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="b441b-230">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="b441b-230">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="b441b-231">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-231">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="b441b-232">`machineName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-232">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b441b-233">次の例では、コンピューター "myServer" のイベントログ "myNewLog" のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-233">The following example reads entries in the event log, "myNewLog", on the computer "myServer".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-234">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-234">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-235">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-235">The log name is invalid.</span></span>  
  
 <span data-ttu-id="b441b-236">または</span><span class="sxs-lookup"><span data-stu-id="b441b-236">-or-</span></span>  
  
 <span data-ttu-id="b441b-237">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-237">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-238">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-238">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-239">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-239">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-240">指定したコンピューター上のログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-240">The name of the log on the specified computer</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-241">ログが存在するコンピューター。</span><span class="sxs-lookup"><span data-stu-id="b441b-241">The computer on which the log exists.</span></span></param>
        <param name="source"><span data-ttu-id="b441b-242">イベント ログ エントリのソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-242">The source of event log entries.</span></span></param>
        <summary><span data-ttu-id="b441b-243"><see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b441b-243">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="b441b-244">指定したコンピューター上のログにインスタンスを関連付け、指定したソースを作成するか、または <see cref="T:System.Diagnostics.EventLog" /> に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b441b-244">Associates the instance with a log on the specified computer and creates or assigns the specified source to the <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-245">このコンストラクターは、<xref:System.Diagnostics.EventLog.Log%2A> プロパティを `logName` パラメーター、<xref:System.Diagnostics.EventLog.MachineName%2A> プロパティを `machineName` パラメーターに、および <xref:System.Diagnostics.EventLog.Source%2A> プロパティを `source` パラメーターに設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-245">This constructor sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter, the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter, and the <xref:System.Diagnostics.EventLog.Source%2A> property to the `source` parameter.</span></span> <span data-ttu-id="b441b-246">イベントログに書き込む場合は、<xref:System.Diagnostics.EventLog.Source%2A> プロパティが必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-246">The <xref:System.Diagnostics.EventLog.Source%2A> property is required when writing to an event log.</span></span> <span data-ttu-id="b441b-247">ただし、イベントログからの読み取りのみを行う場合は、<xref:System.Diagnostics.EventLog.Log%2A> プロパティと <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティのみが必要です (サーバーのイベントログに既に関連付けられているソースがある場合)。</span><span class="sxs-lookup"><span data-stu-id="b441b-247">However, if you are only reading from an event log, only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties are required (as long as the event log on the server has a source already associated with it).</span></span> <span data-ttu-id="b441b-248">イベントログからの読み取りのみを行う場合は、コンストラクターの別のオーバーロードで十分な場合があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-248">If you are only reading from the event log, another overload of the constructor might suffice.</span></span>  
  
 <span data-ttu-id="b441b-249">次の表に、<xref:System.Diagnostics.EventLog>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-249">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="b441b-250">property</span><span class="sxs-lookup"><span data-stu-id="b441b-250">Property</span></span>|<span data-ttu-id="b441b-251">初期値</span><span class="sxs-lookup"><span data-stu-id="b441b-251">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="b441b-252">`source` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-252">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="b441b-253">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-253">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="b441b-254">`machineName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b441b-254">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b441b-255">次の例では、ソース "MySource" を使用して、ローカルコンピューター上のイベントログ "MyNewLog" にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-255">The following example writes an entry to an event log, "MyNewLog", on the local computer, using the source "MySource".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-256">ログ名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-256">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-257">ログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-257">The log name is invalid.</span></span>  
  
 <span data-ttu-id="b441b-258">または</span><span class="sxs-lookup"><span data-stu-id="b441b-258">-or-</span></span>  
  
 <span data-ttu-id="b441b-259">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-259">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-260">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-260">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-261">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-261">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="eventLog.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-262">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b441b-262">Begins the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or used by another component.</span></span> <span data-ttu-id="b441b-263">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="b441b-263">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-264">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントによって使用されるコンポーネントの初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b441b-264">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="b441b-265"><xref:System.Diagnostics.EventLog.EndInit%2A> メソッドは、初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-265">The <xref:System.Diagnostics.EventLog.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="b441b-266"><xref:System.Diagnostics.EventLog.BeginInit%2A> メソッドと <xref:System.Diagnostics.EventLog.EndInit%2A> メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="b441b-266">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevent the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-267"><see cref="T:System.Diagnostics.EventLog" /> は、既に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-267"><see cref="T:System.Diagnostics.EventLog" /> is already initialized.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-268">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-268">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-269">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-269">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="eventLog.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-270">イベント ログからすべてのエントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-270">Removes all entries from the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-271">イベントログには、含めることができるエントリの数を決定する最大サイズが設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-271">Event logs are set with a maximum size that determines how many entries they can contain.</span></span> <span data-ttu-id="b441b-272">イベントログがいっぱいになると、新しいイベント情報の記録が停止されるか、以前のエントリの上書きが開始されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-272">When an event log is full, it stops recording new event information or begins to overwrite earlier entries.</span></span> <span data-ttu-id="b441b-273">イベント記録が停止した場合は、このメソッドを使用して既存のエントリのログを消去し、イベントの記録を再開できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-273">If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again.</span></span> <span data-ttu-id="b441b-274">イベントログエントリを消去するには、ログが置かれているコンピューターに対する管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-274">You must have administrator permissions to the computer on which the log resides to clear event log entries.</span></span>  
  
 <span data-ttu-id="b441b-275"><xref:System.Diagnostics.EventLog.Clear%2A> は、イベントログを閉じ、イベントハンドルを解放し、新しい読み取りおよび書き込みハンドルを取得して、イベントログを開きます。</span><span class="sxs-lookup"><span data-stu-id="b441b-275"><xref:System.Diagnostics.EventLog.Clear%2A> closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log.</span></span> <span data-ttu-id="b441b-276">メソッドの呼び出し後に受け取ったイベントは、既存のイベントと共にクリアされません。</span><span class="sxs-lookup"><span data-stu-id="b441b-276">Events received after the call to the method are not cleared along with the existing events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-277">次の例では、イベントログをクリアします。</span><span class="sxs-lookup"><span data-stu-id="b441b-277">The following example clears an event log.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b441b-278">アプリケーション、システム、セキュリティ、およびその他の非カスタムログには、重要な情報が含まれている可能性があります。このコード例を実行する前に、必ずカスタムログを指定してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-278">Because Application, System, Security, and other non-custom logs can contain crucial information; be sure to specify a custom log before executing this example code.</span></span> <span data-ttu-id="b441b-279">次の例では、カスタムログ `myNewLog`を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-279">This example deletes the custom log `myNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-280">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-280">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="b441b-281">または</span><span class="sxs-lookup"><span data-stu-id="b441b-281">-or-</span></span>  
  
 <span data-ttu-id="b441b-282">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="b441b-282">The log cannot be opened.</span></span> <span data-ttu-id="b441b-283">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-283">A Windows error code is not available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-284"><see cref="P:System.Diagnostics.EventLog.Log" /> プロパティの値が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-284">A value is not specified for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span></span> <span data-ttu-id="b441b-285">ログ名が空の文字列でないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-285">Make sure the log name is not an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-286">ログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-286">The log does not exist.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-287">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-287">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-288">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-288">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="eventLog.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-289">イベント ログを閉じ、読み取りハンドルと書き込みハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b441b-289">Closes the event log and releases read and write handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-290"><xref:System.Diagnostics.EventLog.Close%2A> メソッドは、protected <xref:System.ComponentModel.Component.Dispose%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-290">The <xref:System.Diagnostics.EventLog.Close%2A> method is called by the protected <xref:System.ComponentModel.Component.Dispose%2A> method.</span></span> <span data-ttu-id="b441b-291"><xref:System.ComponentModel.Component.Dispose%2A>を呼び出す前に <xref:System.Diagnostics.EventLog.Close%2A> を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-291">You do not need to invoke <xref:System.Diagnostics.EventLog.Close%2A> before calling <xref:System.ComponentModel.Component.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-292">イベント ログの読み取りハンドルまたは書き込みハンドルが解放されませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-292">The event log's read handle or write handle was not released successfully.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-293">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-293">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-294">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-294">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-295">システム上の特定のログにイベント情報を書き込むことができるようにアプリケーションを設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-295">Establishes an application as able to write event information to a particular log on the system.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(class System.Diagnostics.EventSourceCreationData sourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (sourceData As EventSourceCreationData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::Diagnostics::EventSourceCreationData ^ sourceData);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : System.Diagnostics.EventSourceCreationData -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource sourceData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceData" Type="System.Diagnostics.EventSourceCreationData" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceData"><span data-ttu-id="b441b-296">イベント ソースおよび対象のイベント ログの構成プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b441b-296">The configuration properties for the event source and its target event log.</span></span></param>
        <summary><span data-ttu-id="b441b-297">イベント ソースおよび対応するイベント ログに指定された構成プロパティを使用して、ローカライズされたイベント メッセージを書き込むための有効なイベント ソースを設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-297">Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-298">ローカルコンピューターまたはリモートコンピューターのイベントログにエントリを書き込むための新しいソースを構成するには、このオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-298">Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer.</span></span> <span data-ttu-id="b441b-299">このメソッドを使用して、イベントログから読み取る必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-299">It is not necessary to use this method to read from an event log.</span></span>  
  
 <span data-ttu-id="b441b-300"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> メソッドでは、入力 `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A> および <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> の各プロパティを使用して、新しいソースとそれに関連付けられているイベントログのターゲットコンピューターでレジストリ値を作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-300">The <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method uses the input `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="b441b-301">新しいソース名は、既存のソース名またはターゲットコンピューターの既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-301">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span> <span data-ttu-id="b441b-302"><xref:System.Diagnostics.EventSourceCreationData.LogName%2A> プロパティが設定されていない場合、ソースはアプリケーションイベントログに登録されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-302">If the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property is not set, the source is registered for the Application event log.</span></span> <span data-ttu-id="b441b-303"><xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> が設定されていない場合、ソースはローカルコンピューターに登録されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-303">If the <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> is not set, the source is registered on the local computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-304">Windows Vista 以降または Windows Server 2003 でイベントソースを作成するには、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-304">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="b441b-305">この要件の理由は、イベントソースが一意かどうかを判断するために、セキュリティを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-305">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-306">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-306">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="b441b-307">Windows Vista 以降では、ユーザーアカウント制御 (UAC) によってユーザーの特権が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-307">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-308">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-308">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-309">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-309">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-310">セキュリティログにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-310">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-311">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-311">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="b441b-312">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> と <xref:System.Diagnostics.EventLog.WriteEntry%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-312">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="b441b-313">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-313">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-314">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-314">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-315">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-315">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-316">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-316">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-317">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-317">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-318">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-318">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-319">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-319">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="b441b-320">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-320">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="b441b-321">オペレーティング システムではイベント ログはファイルとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-321">The operating system stores event logs as files.</span></span> <span data-ttu-id="b441b-322"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を使用して新しいイベントログを作成する場合、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-322">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="b441b-323">ファイル名を設定するには、<xref:System.Diagnostics.EventLog.Log%2A> プロパティの最初の8文字に ".evt" というファイル名拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-323">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="b441b-324">各ソースは、一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-324">Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="b441b-325">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-325">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="b441b-326">イベントソースは、イベントカテゴリとメッセージ文字列のローカライズされたリソースファイルに登録できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-326">You can register the event source with localized resource file(s) for your event category and message strings.</span></span> <span data-ttu-id="b441b-327">アプリケーションでは、実際の文字列を指定するのではなく、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-327">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="b441b-328">イベントビューアーは、リソース識別子を使用して、ローカライズされたリソースファイルの対応する文字列を検索し、現在の言語設定に基づいて表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-328">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="b441b-329">イベントカテゴリ、メッセージ、およびパラメーター挿入文字列用に別のファイルを登録したり、3種類の文字列すべてに同じリソースファイルを登録したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-329">You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="b441b-330"><xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> プロパティを使用して、ローカライズされたエントリをイベントログに書き込むようにソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-330">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="b441b-331">アプリケーションが文字列値をイベントログに直接書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-331">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="b441b-332">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-332">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-333">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-333">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-334">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-334">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-335">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-335">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="b441b-336">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-336">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="b441b-337">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-337">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-338">ソースがイベントログ用に構成されていて、別のイベントログに対して再構成する場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-338">If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-339">次の例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-339">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="b441b-340">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-340">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="b441b-341">最後に、この例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-341">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="b441b-342">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-342">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-343">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-343">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-344">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-344">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="b441b-345">具体的には、リソース識別子5001は、イベントログのローカライズされた名前に対して定義されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-345">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-346"><paramref name="sourceData" /> で指定されたコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-346">The computer name specified in <paramref name="sourceData" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-347">または</span><span class="sxs-lookup"><span data-stu-id="b441b-347">-or-</span></span> 
<span data-ttu-id="b441b-348"><paramref name="sourceData" /> で指定されたソース名が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-348">The source name specified in <paramref name="sourceData" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-349">または</span><span class="sxs-lookup"><span data-stu-id="b441b-349">-or-</span></span> 
<span data-ttu-id="b441b-350"><paramref name="sourceData" /> で指定されたログ名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-350">The log name specified in <paramref name="sourceData" /> is not valid.</span></span> <span data-ttu-id="b441b-351">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="b441b-351">Event log names must consist of printable characters and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="b441b-352">または</span><span class="sxs-lookup"><span data-stu-id="b441b-352">-or-</span></span> 
<span data-ttu-id="b441b-353"><paramref name="sourceData" /> で指定されたログ名は、ユーザー ログの作成には無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-353">The log name specified in <paramref name="sourceData" /> is not valid for user log creation.</span></span> <span data-ttu-id="b441b-354">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-354">The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="b441b-355">または</span><span class="sxs-lookup"><span data-stu-id="b441b-355">-or-</span></span> 
<span data-ttu-id="b441b-356">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-356">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="b441b-357">または</span><span class="sxs-lookup"><span data-stu-id="b441b-357">-or-</span></span> 
<span data-ttu-id="b441b-358"><paramref name="sourceData" /> で指定されたソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-358">The source name specified in <paramref name="sourceData" /> results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="b441b-359">または</span><span class="sxs-lookup"><span data-stu-id="b441b-359">-or-</span></span> 
<span data-ttu-id="b441b-360"><paramref name="sourceData" /> で指定されたログ名の最初の 8 文字が一意ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-360">The first 8 characters of the log name specified in <paramref name="sourceData" /> are not unique.</span></span>  
  
<span data-ttu-id="b441b-361">または</span><span class="sxs-lookup"><span data-stu-id="b441b-361">-or-</span></span> 
<span data-ttu-id="b441b-362"><paramref name="sourceData" /> で指定されたソース名は既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-362">The source name specified in <paramref name="sourceData" /> is already registered.</span></span>  
  
<span data-ttu-id="b441b-363">または</span><span class="sxs-lookup"><span data-stu-id="b441b-363">-or-</span></span> 
<span data-ttu-id="b441b-364"><paramref name="sourceData" /> で指定されたソース名が既存のイベント ログ名に一致しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-364">The source name specified in <paramref name="sourceData" /> matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-365">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-365">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-366"><paramref name="sourceData" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-366"><paramref name="sourceData" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-367">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-367">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-368">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-368">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-369">アプリケーションをローカル コンピューター上に登録するときに使用するソース名。</span><span class="sxs-lookup"><span data-stu-id="b441b-369">The source name by which the application is registered on the local computer.</span></span></param>
        <param name="logName"><span data-ttu-id="b441b-370">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-370">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="b441b-371">指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-371">Possible values include Application, System, or a custom event log.</span></span></param>
        <summary><span data-ttu-id="b441b-372">ローカル コンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-372">Establishes the specified source name as a valid event source for writing entries to a log on the local computer.</span></span> <span data-ttu-id="b441b-373">また、このメソッドによってローカル コンピューター上に新しいカスタム ログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-373">This method can also create a new custom log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-374">このオーバーロードを使用して、カスタムログを作成するか、ローカルコンピューター上の既存のログに <xref:System.Diagnostics.EventLog.Source%2A> を作成して登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-374">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the local computer.</span></span>  
  
 <span data-ttu-id="b441b-375"><xref:System.Diagnostics.EventLog.CreateEventSource%2A>を呼び出したときに `logName` が `null` または空の文字列 ("") の場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-375">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="b441b-376">ログがローカルコンピューターに存在しない場合、システムはカスタムログを作成し、そのログの <xref:System.Diagnostics.EventLog.Source%2A> としてアプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-376">If the log does not exist on the local computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-377">Windows Vista 以降または Windows Server 2003 でイベントソースを作成するには、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-377">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="b441b-378">この要件の理由は、イベントソースが一意かどうかを判断するために、セキュリティを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-378">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-379">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-379">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="b441b-380">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-380">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-381">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-381">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-382">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-382">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-383">セキュリティログにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-383">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-384">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-384">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="b441b-385">イベントログに書き込む場合にのみ、イベントソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-385">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="b441b-386">イベントログにエントリを書き込む前に、イベントソースを有効なイベントのソースとしてイベントログに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-386">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="b441b-387">ログエントリを作成すると、システムは <xref:System.Diagnostics.EventLog.Source%2A> を使用して、エントリを配置する適切なログを検索します。</span><span class="sxs-lookup"><span data-stu-id="b441b-387">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="b441b-388">イベントログを読み取る場合は、<xref:System.Diagnostics.EventLog.Source%2A>、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A>のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-388">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-389">ローカルコンピューター上のログに接続している場合は、<xref:System.Diagnostics.EventLog.MachineName%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-389">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="b441b-390">ログからの読み取り時に <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-390">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> when reading from a log, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-391">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> と <xref:System.Diagnostics.EventLog.WriteEntry%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-391">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="b441b-392">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-392">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-393">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-393">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-394">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-394">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-395">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-395">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-396">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-396">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-397">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-397">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-398">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-398">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="b441b-399">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-399">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="b441b-400">オペレーティング システムではイベント ログはファイルとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-400">The operating system stores event logs as files.</span></span> <span data-ttu-id="b441b-401"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を使用して新しいイベントログを作成する場合、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-401">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="b441b-402">ファイル名を設定するには、<xref:System.Diagnostics.EventLog.Log%2A> プロパティの最初の8文字に ".evt" というファイル名拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-402">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="b441b-403">ソースは、ローカルコンピューター上で一意である必要があります。新しいソース名は、既存のソース名または既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-403">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="b441b-404">各ソースは一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-404">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="b441b-405">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-405">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="b441b-406">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-406">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-407">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-407">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-408">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-408">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-409">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-409">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="b441b-410">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-410">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="b441b-411">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-411">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-412">ソースが既にログにマップされていて、新しいログに再マップする場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-412">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-413">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-413">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-414"><paramref name="source" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b441b-414"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-415">または</span><span class="sxs-lookup"><span data-stu-id="b441b-415">-or-</span></span> 
 <span data-ttu-id="b441b-416"><paramref name="logName" /> が有効なイベント ログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-416"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="b441b-417">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="b441b-417">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="b441b-418">または</span><span class="sxs-lookup"><span data-stu-id="b441b-418">-or-</span></span> 
 <span data-ttu-id="b441b-419"><paramref name="logName" /> はユーザー ログの作成に有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-419"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="b441b-420">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-420">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="b441b-421">または</span><span class="sxs-lookup"><span data-stu-id="b441b-421">-or-</span></span> 
<span data-ttu-id="b441b-422">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-422">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="b441b-423">または</span><span class="sxs-lookup"><span data-stu-id="b441b-423">-or-</span></span> 
<span data-ttu-id="b441b-424">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-424">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="b441b-425">または</span><span class="sxs-lookup"><span data-stu-id="b441b-425">-or-</span></span> 
<span data-ttu-id="b441b-426"><paramref name="logName" /> の最初の 8 文字が既存のイベント ログ名の最初の 8 文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-426">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name.</span></span>  
  
<span data-ttu-id="b441b-427">または</span><span class="sxs-lookup"><span data-stu-id="b441b-427">-or-</span></span> 
<span data-ttu-id="b441b-428">ローカル コンピューター上に既にソースが存在するため、ソースを登録できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-428">The source cannot be registered because it already exists on the local computer.</span></span>  
  
<span data-ttu-id="b441b-429">または</span><span class="sxs-lookup"><span data-stu-id="b441b-429">-or-</span></span> 
<span data-ttu-id="b441b-430">ソース名が既存のイベント ログ名に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-430">The source name matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-431">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-431">The registry key for the event log could not be opened on the local computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-432">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-432">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-433">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-433">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("use CreateEventSource(EventSourceCreationData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-434">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-434">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="logName"><span data-ttu-id="b441b-435">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-435">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="b441b-436">指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-436">Possible values include Application, System, or a custom event log.</span></span> <span data-ttu-id="b441b-437">値を指定しなかった場合、<paramref name="logName" /> は既定によりアプリケーションに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-437">If you do not specify a value, <paramref name="logName" /> defaults to Application.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-438">このイベント ソースを登録するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-438">The name of the computer to register this event source with, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-439">指定したコンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-439">Establishes the specified source name as a valid event source for writing entries to a log on the specified computer.</span></span> <span data-ttu-id="b441b-440">このメソッドを使用して、指定したコンピューター上に新しいカスタム ログを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-440">This method can also be used to create a new custom log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-441">このオーバーロードを使用して、カスタムログを作成するか、指定したコンピューター上の既存のログに <xref:System.Diagnostics.EventLog.Source%2A> を作成して登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-441">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the specified computer.</span></span>  
  
 <span data-ttu-id="b441b-442"><xref:System.Diagnostics.EventLog.CreateEventSource%2A>を呼び出したときに `logName` が `null` または空の文字列 ("") の場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-442">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="b441b-443">指定したコンピューター上にログが存在しない場合、システムはカスタムログを作成し、そのログの <xref:System.Diagnostics.EventLog.Source%2A> としてアプリケーションを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-443">If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
 <span data-ttu-id="b441b-444">イベントログに書き込む場合にのみ、イベントソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-444">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="b441b-445">イベントログにエントリを書き込む前に、イベントソースを有効なイベントのソースとしてイベントログに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-445">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="b441b-446">ログエントリを作成すると、システムは <xref:System.Diagnostics.EventLog.Source%2A> を使用して、エントリを配置する適切なログを検索します。</span><span class="sxs-lookup"><span data-stu-id="b441b-446">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="b441b-447">イベントログを読み取る場合は、<xref:System.Diagnostics.EventLog.Source%2A>、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A>のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-447">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-448">Windows Vista 以降または Windows Server 2003 でイベントソースを作成するには、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-448">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="b441b-449">この要件の理由は、イベントソースが一意かどうかを判断するために、セキュリティを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-449">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-450">Windows Vista 以降では、セキュリティログへのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-450">In Windows Vista and later, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="b441b-451">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-451">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-452">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-452">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-453">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-453">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-454">セキュリティログにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-454">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-455">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-455">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="b441b-456">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> と <xref:System.Diagnostics.EventLog.WriteEntry%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-456">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="b441b-457">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-457">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-458">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-458">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-459">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-459">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-460">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-460">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-461">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-461">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-462">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-462">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-463">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-463">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="b441b-464">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-464">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="b441b-465">オペレーティング システムではイベント ログはファイルとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-465">The operating system stores event logs as files.</span></span> <span data-ttu-id="b441b-466"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を使用して新しいイベントログを作成する場合、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-466">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="b441b-467">ファイル名を設定するには、<xref:System.Diagnostics.EventLog.Log%2A> プロパティの最初の8文字に ".evt" というファイル名拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-467">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="b441b-468">ソースは、ローカルコンピューター上で一意である必要があります。新しいソース名は、既存のソース名または既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-468">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="b441b-469">各ソースは一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-469">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="b441b-470">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-470">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="b441b-471">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-471">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-472">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-472">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-473">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-473">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-474">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-474">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="b441b-475">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-475">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="b441b-476">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-476">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-477">ソースが既にログにマップされていて、新しいログに再マップする場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-477">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-478">次の例では、コンピューター `MyServer`にソース `MySource` を作成し、エントリをイベントログ `MyNewLog`に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-478">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-479"><paramref name="machineName" /> が有効なコンピューター名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-479">The <paramref name="machineName" /> is not a valid computer name.</span></span>  
  
<span data-ttu-id="b441b-480">または</span><span class="sxs-lookup"><span data-stu-id="b441b-480">-or-</span></span> 
 <span data-ttu-id="b441b-481"><paramref name="source" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b441b-481"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-482">または</span><span class="sxs-lookup"><span data-stu-id="b441b-482">-or-</span></span> 
 <span data-ttu-id="b441b-483"><paramref name="logName" /> が有効なイベント ログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-483"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="b441b-484">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="b441b-484">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="b441b-485">または</span><span class="sxs-lookup"><span data-stu-id="b441b-485">-or-</span></span> 
 <span data-ttu-id="b441b-486"><paramref name="logName" /> はユーザー ログの作成に有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-486"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="b441b-487">イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-487">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="b441b-488">または</span><span class="sxs-lookup"><span data-stu-id="b441b-488">-or-</span></span> 
<span data-ttu-id="b441b-489">ログ名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-489">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="b441b-490">または</span><span class="sxs-lookup"><span data-stu-id="b441b-490">-or-</span></span> 
<span data-ttu-id="b441b-491">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-491">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="b441b-492">または</span><span class="sxs-lookup"><span data-stu-id="b441b-492">-or-</span></span> 
<span data-ttu-id="b441b-493"><paramref name="logName" /> の最初の 8 文字が指定したコンピューター上の既存のイベント ログ名の最初の 8 文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-493">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name on the specified computer.</span></span>  
  
<span data-ttu-id="b441b-494">または</span><span class="sxs-lookup"><span data-stu-id="b441b-494">-or-</span></span> 
<span data-ttu-id="b441b-495">指定したコンピューター上に既にソースが存在するため、ソースを登録できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-495">The source cannot be registered because it already exists on the specified computer.</span></span>  
  
<span data-ttu-id="b441b-496">または</span><span class="sxs-lookup"><span data-stu-id="b441b-496">-or-</span></span> 
<span data-ttu-id="b441b-497">ソース名が既存のイベント ソース名に一致します。</span><span class="sxs-lookup"><span data-stu-id="b441b-497">The source name matches an existing event source name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-498">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-498">The registry key for the event log could not be opened on the specified computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-499">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-499">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-500">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-500">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-501">ログ リソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-501">Removes a log resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-502">削除するログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-502">The name of the log to delete.</span></span> <span data-ttu-id="b441b-503">指定できる値は、アプリケーション、セキュリティ、システム、およびコンピューター上の任意のカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-503">Possible values include: Application, Security, System, and any custom event logs on the computer.</span></span></param>
        <summary><span data-ttu-id="b441b-504">ローカル コンピューターからイベント ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-504">Removes an event log from the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-505">削除するログがローカルコンピューター上にある場合は、この方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-505">Use this method when the log you want to delete is on the local computer.</span></span> <span data-ttu-id="b441b-506">適切なレジストリアクセス許可を持っていれば、コンピューター上のすべてのログを削除できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-506">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="b441b-507">`logName` によって指定されたログをローカルコンピューターから削除 <xref:System.Diagnostics.EventLog.Delete%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="b441b-507"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the local computer.</span></span> <span data-ttu-id="b441b-508">ログに登録されているソースのみを削除する場合は、<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-508">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="b441b-509">ログエントリのみを削除する場合は、<xref:System.Diagnostics.EventLog.Clear%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-509">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="b441b-510"><xref:System.Diagnostics.EventLog.Delete%2A> と <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-510"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="b441b-511">どちらのメソッドを呼び出す場合でも、<xref:System.Diagnostics.EventLog> の新しいインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-511">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="b441b-512"><xref:System.Diagnostics.EventLog.Delete%2A> メソッドは、ログの内容を保持しているファイルを最初に削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-512">The <xref:System.Diagnostics.EventLog.Delete%2A> method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="b441b-513">次に、レジストリにアクセスし、そのログに登録されているすべてのイベントソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-513">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="b441b-514">後でログを再作成する場合は、再利用する場合は、イベントソースを再度登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-514">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="b441b-515">イベントソースを登録せず、他のユーザーがログ名を指定せずにイベントソースに書き込む場合は、アプリケーションイベントログにイベントソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-515">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="b441b-516">このため、以前に削除して再作成したログにエントリを書き込むことができたアプリケーションは、イベントソースが含まれるようになったため、代わりにアプリケーションログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-516">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-517">イベントログを再作成することは、困難なプロセスになることがあります。</span><span class="sxs-lookup"><span data-stu-id="b441b-517">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="b441b-518">システムで作成されたイベントログ (アプリケーションログなど) の削除は避けてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-518">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="b441b-519"><xref:System.Diagnostics.EventLog.Delete%2A> の呼び出しを使用してログを削除すると、そのログに登録されているソースが自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-519">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="b441b-520">これにより、そのログを使用する他のアプリケーションが動作しないようにできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-520">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-521">次の例では、ローカルコンピューターからログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-521">The following example deletes a log from the local computer.</span></span> <span data-ttu-id="b441b-522">この例では、ソースからログを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-522">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-523">複数のソースがイベントログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-523">More than one source might write to an event log.</span></span> <span data-ttu-id="b441b-524">カスタムログを削除する前に、そのログに書き込むソースが他にないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-524">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-525"><paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b441b-525"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-526">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-526">The registry key for the event log could not be opened on the local computer.</span></span>  
  
<span data-ttu-id="b441b-527">または</span><span class="sxs-lookup"><span data-stu-id="b441b-527">-or-</span></span>
  
 <span data-ttu-id="b441b-528">ローカル コンピューター上にログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-528">The log does not exist on the local computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-529">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-529">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="b441b-530">または</span><span class="sxs-lookup"><span data-stu-id="b441b-530">-or-</span></span>  
  
 <span data-ttu-id="b441b-531">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="b441b-531">The log cannot be opened.</span></span> <span data-ttu-id="b441b-532">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-532">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-533">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-533">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-534">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-534">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Delete : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-535">削除するログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-535">The name of the log to delete.</span></span> <span data-ttu-id="b441b-536">指定できる値は、アプリケーション、セキュリティ、システム、および指定したコンピューター上の任意のカスタム イベント ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-536">Possible values include: Application, Security, System, and any custom event logs on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-537">ログを削除するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-537">The name of the computer to delete the log from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-538">指定したコンピューターからイベント ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-538">Removes an event log from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-539">この方法は、削除するログがリモートコンピューター上にある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-539">Use this method when the log you want to delete is on a remote computer.</span></span> <span data-ttu-id="b441b-540">適切なレジストリアクセス許可を持っていれば、コンピューター上のすべてのログを削除できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-540">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="b441b-541">`logName` によって指定されたログを `machineName`によって指定されたコンピューターから削除 <xref:System.Diagnostics.EventLog.Delete%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="b441b-541"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the computer specified by `machineName`.</span></span> <span data-ttu-id="b441b-542">ログに登録されているソースのみを削除する場合は、<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-542">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="b441b-543">ログエントリのみを削除する場合は、<xref:System.Diagnostics.EventLog.Clear%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-543">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="b441b-544"><xref:System.Diagnostics.EventLog.Delete%2A> と <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-544"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="b441b-545">どちらのメソッドを呼び出す場合でも、<xref:System.Diagnostics.EventLog> のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-545">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="b441b-546">このメソッドは、ログの内容を保持しているファイルを最初に削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-546">This method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="b441b-547">次に、レジストリにアクセスし、そのログに登録されているすべてのイベントソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-547">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="b441b-548">後でログを再作成する場合は、再利用する場合は、イベントソースを再度登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-548">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="b441b-549">イベントソースを登録せず、他のユーザーがログ名を指定せずにイベントソースに書き込む場合は、アプリケーションイベントログにイベントソースが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-549">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="b441b-550">このため、以前に削除して再作成したログにエントリを書き込むことができたアプリケーションは、イベントソースが含まれるようになったため、代わりにアプリケーションログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-550">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-551">イベントログを再作成することは、困難なプロセスになることがあります。</span><span class="sxs-lookup"><span data-stu-id="b441b-551">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="b441b-552">システムで作成されたイベントログ (アプリケーションログなど) の削除は避けてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-552">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="b441b-553"><xref:System.Diagnostics.EventLog.Delete%2A> の呼び出しを使用してログを削除すると、そのログに登録されているソースが自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-553">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="b441b-554">これにより、そのログを使用する他のアプリケーションが動作しないようにできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-554">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-555">次の例では、指定したコンピューターからログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-555">The following example deletes a log from the specified computer.</span></span> <span data-ttu-id="b441b-556">この例では、ソースからログを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-556">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-557">複数のソースがイベントログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-557">More than one source might write to an event log.</span></span> <span data-ttu-id="b441b-558">カスタムログを削除する前に、そのログに書き込むソースが他にないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-558">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-559"><paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="b441b-559"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-560">または</span><span class="sxs-lookup"><span data-stu-id="b441b-560">-or-</span></span> 
 <span data-ttu-id="b441b-561"><paramref name="machineName" /> が有効なコンピューター名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-561"><paramref name="machineName" /> is not a valid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-562">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-562">The registry key for the event log could not be opened on the specified computer.</span></span>  
  
<span data-ttu-id="b441b-563">または</span><span class="sxs-lookup"><span data-stu-id="b441b-563">-or-</span></span>
  
 <span data-ttu-id="b441b-564">指定したコンピューター上にログが存在しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-564">The log does not exist on the specified computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-565">イベント ログが正常に消去されませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-565">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="b441b-566">または</span><span class="sxs-lookup"><span data-stu-id="b441b-566">-or-</span></span>  
  
 <span data-ttu-id="b441b-567">ログを開くことができません。</span><span class="sxs-lookup"><span data-stu-id="b441b-567">The log cannot be opened.</span></span> <span data-ttu-id="b441b-568">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-568">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-569">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-569">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-570">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-570">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-571">イベント ログからアプリケーションのイベント ソース登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-571">Removes an application's event source registration from the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-572">イベント ログ システムにアプリケーションを登録するときに使用する名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-572">The name by which the application is registered in the event log system.</span></span></param>
        <summary><span data-ttu-id="b441b-573">ローカル コンピューターのイベント ログからイベント ソースの登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-573">Removes the event source registration from the event log of the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-574">このメソッドを使用して、ローカルコンピューターから <xref:System.Diagnostics.EventLog.Source%2A> の登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-574">Use this method to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from the local computer.</span></span> <span data-ttu-id="b441b-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は、ローカルコンピューター上のレジストリにアクセスし、アプリケーションの登録を有効なイベントのソースとして削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-575"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the local computer and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="b441b-576">このログにエントリを書き込む必要がなくなった場合は、コンポーネントを有効なイベントソースとして削除できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-576">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="b441b-577">たとえば、コンポーネントをあるログから別のログに変更する必要がある場合に、この操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-577">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="b441b-578">ソースは一度に1つのログにしか登録できないため、ログを変更するには、現在の登録を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-578">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="b441b-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は、ログに登録されているソースのみを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-579"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="b441b-580">ログ自体を削除する場合は、<xref:System.Diagnostics.EventLog.Delete%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-580">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="b441b-581">ログエントリのみを削除する場合は、<xref:System.Diagnostics.EventLog.Clear%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-581">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="b441b-582"><xref:System.Diagnostics.EventLog.Delete%2A> と <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-582"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="b441b-583">どちらのメソッドを呼び出す場合でも、<xref:System.Diagnostics.EventLog> のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-583">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="b441b-584"><xref:System.Diagnostics.EventLog.Delete%2A> の呼び出しを使用してログを削除すると、そのログに登録されているソースが自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-584">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="b441b-585">これにより、そのログを使用する他のアプリケーションが動作しないようにできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-585">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-586">ソースが既にログにマップされていて、新しいログに再マップする場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-586">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-587">次の例では、ソースをローカルコンピューターから削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-587">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="b441b-588">この例では、ソースからログを確認してから、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-588">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-589">複数のソースがイベントログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-589">More than one source might write to an event log.</span></span> <span data-ttu-id="b441b-590">カスタムログを削除する前に、そのログに書き込むソースが他にないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-590">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-591">ローカル コンピューターのレジストリに <paramref name="source" /> パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-591">The <paramref name="source" /> parameter does not exist in the registry of the local computer.</span></span>  
  
<span data-ttu-id="b441b-592">または</span><span class="sxs-lookup"><span data-stu-id="b441b-592">-or-</span></span> 
<span data-ttu-id="b441b-593">イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-593">You do not have write access on the registry key for the event log.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-594">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-594">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-595">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-595">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-596">イベント ログ システムにアプリケーションを登録するときに使用する名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-596">The name by which the application is registered in the event log system.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-597">登録を削除するコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-597">The name of the computer to remove the registration from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-598">指定したコンピューターからアプリケーションのイベント ソース登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-598">Removes the application's event source registration from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-599">このオーバーロードを使用して、リモートコンピューターから <xref:System.Diagnostics.EventLog.Source%2A> の登録を削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-599">Use this overload to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from a remote computer.</span></span> <span data-ttu-id="b441b-600">`machineName` によって指定されたコンピューターのレジストリにアクセスし、アプリケーションの登録を有効なイベントのソースとして削除する <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="b441b-600"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the computer specified by `machineName` and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="b441b-601">このログにエントリを書き込む必要がなくなった場合は、コンポーネントを有効なイベントソースとして削除できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-601">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="b441b-602">たとえば、コンポーネントをあるログから別のログに変更する必要がある場合に、この操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-602">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="b441b-603">ソースは一度に1つのログにしか登録できないため、ログを変更するには、現在の登録を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-603">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="b441b-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は、ログに登録されているソースのみを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-604"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="b441b-605">ログ自体を削除する場合は、<xref:System.Diagnostics.EventLog.Delete%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-605">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="b441b-606">ログエントリのみを削除する場合は、<xref:System.Diagnostics.EventLog.Clear%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-606">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="b441b-607"><xref:System.Diagnostics.EventLog.Delete%2A> と <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-607"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="b441b-608">どちらのメソッドを呼び出す場合でも、<xref:System.Diagnostics.EventLog> のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-608">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="b441b-609"><xref:System.Diagnostics.EventLog.Delete%2A> の呼び出しを使用してログを削除すると、そのログに登録されているソースが自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-609">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="b441b-610">これにより、そのログを使用する他のアプリケーションが動作しないようにできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-610">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-611">ソースが既にログにマップされていて、新しいログに再マップする場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-611">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-612">次の例では、指定したコンピューターからソースを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-612">The following example deletes a source from the specified computer.</span></span> <span data-ttu-id="b441b-613">この例では、ソースからログを確認してから、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-613">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-614">複数のソースがイベントログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-614">More than one source might write to an event log.</span></span> <span data-ttu-id="b441b-615">カスタムログを削除する前に、そのログに書き込むソースが他にないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-615">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-616"><paramref name="machineName" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-616">The <paramref name="machineName" /> parameter is invalid.</span></span>  
  
<span data-ttu-id="b441b-617">または</span><span class="sxs-lookup"><span data-stu-id="b441b-617">-or-</span></span> 
<span data-ttu-id="b441b-618">指定したコンピューターのレジストリに <paramref name="source" /> パラメーターがありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-618">The <paramref name="source" /> parameter does not exist in the registry of the specified computer.</span></span>  
  
<span data-ttu-id="b441b-619">または</span><span class="sxs-lookup"><span data-stu-id="b441b-619">-or-</span></span> 
<span data-ttu-id="b441b-620">イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-620">You do not have write access on the registry key for the event log.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-621">レジストリで <paramref name="source" /> の親レジストリ キーに同じ名前のサブキーが含まれないため、<paramref name="source" /> は削除できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-621"><paramref name="source" /> cannot be deleted because in the registry, the parent registry key for <paramref name="source" /> does not contain a subkey with the same name.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-622">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-622">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-623">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-623">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b441b-624">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-624"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b441b-625"><see cref="T:System.Diagnostics.EventLog" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-625">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.EventLog" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-626">このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-626">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b441b-627">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-627">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b441b-628"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-628"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b441b-629">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Diagnostics.EventLog> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b441b-629">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.EventLog> references.</span></span> <span data-ttu-id="b441b-630">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b441b-630">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b441b-631">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-631">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b441b-632">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-632">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b441b-633"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-633">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b441b-634"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-634">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("If enabled raises event when a log is written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMonitoring")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-635"><see cref="T:System.Diagnostics.EventLog" /> が <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベント通知を受信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-635">Gets or sets a value indicating whether the <see cref="T:System.Diagnostics.EventLog" /> receives <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event notifications.</span></span></summary>
        <value><span data-ttu-id="b441b-636">エントリがログに書き込まれたときに <see langword="true" /> が通知を受信する場合は <see cref="T:System.Diagnostics.EventLog" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-636"><see langword="true" /> if the <see cref="T:System.Diagnostics.EventLog" /> receives notification when an entry is written to the log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-637"><xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> プロパティは、エントリがログに書き込まれたときに <xref:System.Diagnostics.EventLog> がイベントを発生させるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-637">The <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> property determines whether the <xref:System.Diagnostics.EventLog> raises events when entries are written to the log.</span></span> <span data-ttu-id="b441b-638">プロパティが `true`場合、<xref:System.Diagnostics.EventLog.EntryWritten> イベントを受け取るコンポーネントは、<xref:System.Diagnostics.EventLog.Log%2A> プロパティで指定されたログにエントリが書き込まれるたびに通知を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-638">When the property is `true`, components that receive the <xref:System.Diagnostics.EventLog.EntryWritten> event will receive notification any time an entry is written to the log that is specified in the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="b441b-639"><xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> が `false`場合、イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-639">If <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> is `false`, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-640">イベント通知を受信できるのは、ローカルコンピューターにエントリが書き込まれた場合のみです。</span><span class="sxs-lookup"><span data-stu-id="b441b-640">You can receive event notifications only when entries are written on the local computer.</span></span> <span data-ttu-id="b441b-641">リモートコンピューターに書き込まれたエントリの通知を受け取ることはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-641">You cannot receive notifications for entries written on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-642">次の例では、<xref:System.Diagnostics.EventLog.EntryWritten> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-642">The following example handles an <xref:System.Diagnostics.EventLog.EntryWritten> event.</span></span>  
  
 [!code-cpp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-643">イベント ログは、リモート コンピューター上にあります。</span><span class="sxs-lookup"><span data-stu-id="b441b-643">The event log is on a remote computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-644">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-644">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-645">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-645">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="eventLog.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-646">フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-646">Ends the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or by another component.</span></span> <span data-ttu-id="b441b-647">初期化は実行時に発生します。</span><span class="sxs-lookup"><span data-stu-id="b441b-647">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-648">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントによって使用されるコンポーネントの初期化を終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-648">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="b441b-649"><xref:System.Diagnostics.EventLog.BeginInit%2A> メソッドは、初期化を開始します。</span><span class="sxs-lookup"><span data-stu-id="b441b-649">The <xref:System.Diagnostics.EventLog.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="b441b-650"><xref:System.Diagnostics.EventLog.BeginInit%2A> メソッドと <xref:System.Diagnostics.EventLog.EndInit%2A> メソッドを使用すると、完全に初期化される前にコントロールが使用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="b441b-650">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-651">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-651">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-652">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-652">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryCollection Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogEntryCollection Entries" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As EventLogEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryCollection ^ Entries { System::Diagnostics::EventLogEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Diagnostics.EventLogEntryCollection" Usage="System.Diagnostics.EventLog.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The entries in the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-653">イベント ログの内容を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-653">Gets the contents of the event log.</span></span></summary>
        <value><span data-ttu-id="b441b-654">イベント ログのエントリを保持している <see cref="T:System.Diagnostics.EventLogEntryCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-654">An <see cref="T:System.Diagnostics.EventLogEntryCollection" /> holding the entries in the event log.</span></span> <span data-ttu-id="b441b-655">1 つのエントリが <see cref="T:System.Diagnostics.EventLogEntry" /> クラスの 1 つのインスタンスに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="b441b-655">Each entry is associated with an instance of the <see cref="T:System.Diagnostics.EventLogEntry" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-656">イベントログから読み取りを行う場合は、<xref:System.Diagnostics.EventLog.Entries%2A> メンバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-656">Use the <xref:System.Diagnostics.EventLog.Entries%2A> member when reading from the event log.</span></span>  
  
 <span data-ttu-id="b441b-657">プロパティは読み取り専用であるため、<xref:System.Diagnostics.EventLog.Entries%2A>を使用してエントリを変更したりログに書き込んだりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-657">Because the property is read-only, you cannot modify an entry or write to the log using <xref:System.Diagnostics.EventLog.Entries%2A>.</span></span> <span data-ttu-id="b441b-658">代わりに、<xref:System.Diagnostics.EventLog.Source%2A> を指定し、<xref:System.Diagnostics.EventLog.WriteEntry%2A> を呼び出して新しいログエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-658">Instead, specify a <xref:System.Diagnostics.EventLog.Source%2A> and call <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write a new log entry.</span></span> <span data-ttu-id="b441b-659"><xref:System.Diagnostics.EventLog.Entries%2A> を使用して、イベントログ内のエントリの数をカウントし、コレクション内の各 <xref:System.Diagnostics.EventLogEntry> を表示できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-659">You can use <xref:System.Diagnostics.EventLog.Entries%2A> to count the number of entries in the event log, and view each <xref:System.Diagnostics.EventLogEntry> in the collection.</span></span> <span data-ttu-id="b441b-660"><xref:System.Diagnostics.EventLogEntry.Message%2A>、<xref:System.Diagnostics.EventLogEntry.Category%2A>、<xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>、<xref:System.Diagnostics.EventLogEntry.EntryType%2A>など、特定のエントリに関する情報を取得するには、インデックス付き <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> メンバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-660">Use the indexed <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> member to retrieve information about a specific entry, such as <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, or <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  
  
 <span data-ttu-id="b441b-661">ログからの読み取りのみを行う場合は、<xref:System.Diagnostics.EventLog.Source%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-661">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log.</span></span> <span data-ttu-id="b441b-662"><xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.Log%2A> 名と <xref:System.Diagnostics.EventLog.MachineName%2A> (サーバーコンピューター名) のプロパティのみを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-662">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) properties for the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="b441b-663">どちらの場合も、<xref:System.Diagnostics.EventLog.Entries%2A> メンバーには、イベントログのエントリの一覧が自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-663">In either case, the <xref:System.Diagnostics.EventLog.Entries%2A> member is automatically populated with the event log's list of entries.</span></span> <span data-ttu-id="b441b-664">この一覧の項目に適切なインデックスを選択すると、個々のエントリを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-664">You can select the appropriate index for an item in this list to read individual entries.</span></span>  
  
 <span data-ttu-id="b441b-665">ログエントリの読み取りと書き込みの重要な違いは、read メソッドを明示的に呼び出す必要がないことです。</span><span class="sxs-lookup"><span data-stu-id="b441b-665">An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method.</span></span> <span data-ttu-id="b441b-666"><xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A> を指定すると、<xref:System.Diagnostics.EventLog.Entries%2A> プロパティが自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-666">After the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> are specified, the <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated.</span></span> <span data-ttu-id="b441b-667"><xref:System.Diagnostics.EventLog.Log%2A> または <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティの値を変更すると、次回の読み取り時に <xref:System.Diagnostics.EventLog.Entries%2A> プロパティが再作成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-667">If you change the value of the <xref:System.Diagnostics.EventLog.Log%2A> or <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog.Entries%2A> property is repopulated the next time you read it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-668">ログに接続している場合は、<xref:System.Diagnostics.EventLog.MachineName%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-668">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="b441b-669"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しない場合は、ローカルコンピューター "." が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-669">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer, ".", is assumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-670">次の例では、ローカルコンピューター上のイベントログ "MyNewLog" のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-670">The following example reads entries in the event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Entries Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Entries Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Entries Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-671">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-671">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-672">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-672">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
      </Docs>
    </Member>
    <Member MemberName="EntryWritten">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.EntryWrittenEventHandler EntryWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.EventLog.EntryWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EntryWritten As EntryWrittenEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::EntryWrittenEventHandler ^ EntryWritten;" />
      <MemberSignature Language="F#" Value="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " Usage="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Raised for each EventLog entry written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntryWritten")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EntryWrittenEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-673">ローカル コンピューター上のイベント ログにエントリが書き込まれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b441b-673">Occurs when an entry is written to an event log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-674">イベント通知を取得するには、<xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> を `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-674">To get event notifications, you must set <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> to `true`.</span></span> <span data-ttu-id="b441b-675">イベント通知を受信できるのは、ローカルコンピューターにエントリが書き込まれたときだけです。</span><span class="sxs-lookup"><span data-stu-id="b441b-675">You can only receive event notifications when entries are written on the local computer.</span></span> <span data-ttu-id="b441b-676">リモートコンピューターに書き込まれたエントリの通知を受け取ることはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-676">You cannot receive notifications for entries written on remote computers.</span></span>  
  
 <span data-ttu-id="b441b-677"><xref:System.Diagnostics.EventLog.EntryWritten> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-677">When you create an <xref:System.Diagnostics.EventLog.EntryWritten> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="b441b-678">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-678">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="b441b-679">イベントハンドラーは、デリゲートを削除するまで、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-679">The event handler is called whenever the event occurs, until you remove the delegate.</span></span> <span data-ttu-id="b441b-680">デリゲートを使用したイベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-680">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b441b-681">システムは、前回の書き込みイベントが少なくとも6秒前に発生した場合にのみ <xref:System.Diagnostics.EventLog.WriteEntry%2A> に応答します。</span><span class="sxs-lookup"><span data-stu-id="b441b-681">The system responds to <xref:System.Diagnostics.EventLog.WriteEntry%2A> only if the last write event occurred at least six seconds previously.</span></span> <span data-ttu-id="b441b-682">これは、複数のイベントログの変更が発生した場合でも、6秒間隔で1つの <xref:System.Diagnostics.EventLog.EntryWritten> イベント通知のみを受け取ることを意味します。</span><span class="sxs-lookup"><span data-stu-id="b441b-682">This implies you will only receive one <xref:System.Diagnostics.EventLog.EntryWritten> event notification within a six-second interval, even if more than one event log change occurs.</span></span> <span data-ttu-id="b441b-683"><xref:System.Diagnostics.EventLog.WriteEntry%2A>の呼び出しの間に、十分に長いスリープ間隔 (約10秒) を挿入すると、イベントを見逃しなくなる可能性が低くなります。</span><span class="sxs-lookup"><span data-stu-id="b441b-683">If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <xref:System.Diagnostics.EventLog.WriteEntry%2A>, you are less likely to miss an event.</span></span> <span data-ttu-id="b441b-684">ただし、書き込みイベントがより頻繁に発生する場合は、次の期間までイベント通知を受信しない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-684">However, if write events occur more frequently, you might not receive the event notification until the next interval.</span></span> <span data-ttu-id="b441b-685">通常、見つからなかったイベント通知は失われませんが、遅延します。</span><span class="sxs-lookup"><span data-stu-id="b441b-685">Typically, missed event notifications are not lost, but delayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-686">次の例では、エントリ書き込みイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-686">The following example handles an entry written event.</span></span>  
  
 [!code-cpp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EntryWritten Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-687">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-687">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-688">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-688">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-689">指定したログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-689">Determines whether the specified log exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-690">検索するログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-690">The name of the log to search for.</span></span> <span data-ttu-id="b441b-691">指定できる値は、アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-691">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <summary><span data-ttu-id="b441b-692">ローカル コンピューター上にログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-692">Determines whether the log exists on the local computer.</span></span></summary>
        <returns><span data-ttu-id="b441b-693">ローカル コンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-693"><see langword="true" /> if the log exists on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-694">このメソッドを使用して、ローカルコンピューター上にログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-694">Use this method to determine if a log exists on the local computer.</span></span> <span data-ttu-id="b441b-695">ソースがローカルコンピューターに存在するかどうかを確認するには、<xref:System.Diagnostics.EventLog.SourceExists%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-695">If you want to determine whether a source exists on the local computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="b441b-696">このメソッドはレジストリにアクセスするため、ローカルコンピューターに対する適切なレジストリアクセス許可を持っている必要があります。それ以外の場合、クエリは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b441b-696">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="b441b-697">新しいログには同じコンピューター上の既存のログ名を指定できないため、新しいログを作成してから、指定した `logName` がローカルコンピューターに既に存在するかどうかを確認するには、この方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-697">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified `logName` already exists on the local computer.</span></span> <span data-ttu-id="b441b-698">`logName` パラメーターでは、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-698">The `logName` parameter is not case sensitive.</span></span>  
  
 <span data-ttu-id="b441b-699"><xref:System.Diagnostics.EventLog.Exists%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-699"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="b441b-700"><xref:System.Diagnostics.EventLog.Exists%2A>を呼び出すために <xref:System.Diagnostics.EventLog> のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-700">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_Exists_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_Exists_1/CPP/eventlog_exists_1.cpp#1)]
 [!code-csharp[EventLog_Exists_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_Exists_1/CS/eventlog_exists_1.cs#1)]
 [!code-vb[EventLog_Exists_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_Exists_1/VB/eventlog_exists_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-701">logName が <see langword="null" /> です。または値が空です。</span><span class="sxs-lookup"><span data-stu-id="b441b-701">The logName is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-702">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-702">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-703">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-703">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="b441b-704">検索するログ。</span><span class="sxs-lookup"><span data-stu-id="b441b-704">The log for which to search.</span></span> <span data-ttu-id="b441b-705">指定できる値は、アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログです。</span><span class="sxs-lookup"><span data-stu-id="b441b-705">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-706">ログ検索の対象となるコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-706">The name of the computer on which to search for the log, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-707">指定したコンピューター上にログが存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-707">Determines whether the log exists on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="b441b-708">指定したコンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-708"><see langword="true" /> if the log exists on the specified computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-709">この方法は、ログがリモートコンピューターに存在するかどうかを判断するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-709">Use this method to determine if a log exists on a remote computer.</span></span> <span data-ttu-id="b441b-710">ソースがリモートコンピューターに存在するかどうかを確認するには、<xref:System.Diagnostics.EventLog.SourceExists%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-710">If you want to determine whether a source exists on a remote computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="b441b-711">このメソッドはレジストリにアクセスするため、指定したコンピューターに対する適切なレジストリアクセス許可を持っている必要があります。それ以外の場合、クエリは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b441b-711">Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="b441b-712">新しいログには同じコンピューター上の既存のログ名を指定できないので、この方法を使用して新しいログを作成し、指定した `logName` のものが、`machineName` パラメーターで指定されたサーバーに既に存在するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-712">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified `logName` already exists on the server specified by the `machineName` parameter.</span></span> <span data-ttu-id="b441b-713">`logName` パラメーターと `machineName` パラメーターでは、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-713">The `logName` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="b441b-714"><xref:System.Diagnostics.EventLog.Exists%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-714"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="b441b-715"><xref:System.Diagnostics.EventLog.Exists%2A>を呼び出すために <xref:System.Diagnostics.EventLog> の新しいインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-715">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-716"><paramref name="machineName" /> パラメーターの書式が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-716">The <paramref name="machineName" /> parameter is an invalid format.</span></span> <span data-ttu-id="b441b-717">検索しているコンピューターに対して正しい構文を使用したかどうかを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-717">Make sure you have used proper syntax for the computer on which you are searching.</span></span>  
  
<span data-ttu-id="b441b-718">または</span><span class="sxs-lookup"><span data-stu-id="b441b-718">-or-</span></span> 
<span data-ttu-id="b441b-719"><paramref name="logName" /> が <see langword="null" /> です。または値が空です。</span><span class="sxs-lookup"><span data-stu-id="b441b-719">The <paramref name="logName" /> is <see langword="null" /> or the value is empty.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-720">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-720">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-721">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-721">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEventLogs">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-722">イベント ログの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-722">Creates an array of the event logs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs () As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs();" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : unit -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b441b-723">ローカル コンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-723">Searches for all event logs on the local computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="b441b-724">ローカル コンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-724">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-725"><xref:System.Diagnostics.EventLog> オブジェクトの配列は、<xref:System.Diagnostics.EventLog.GetEventLogs%2A> の呼び出しが行われたときのローカルコンピューター上のすべてのイベントログのスナップショットです。</span><span class="sxs-lookup"><span data-stu-id="b441b-725">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the local computer when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="b441b-726">これは動的なコレクションではないため、リアルタイムでのログの削除や作成は反映されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-726">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="b441b-727">配列内のログは、読み取りまたは書き込みの前に存在していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-727">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="b441b-728">通常、配列には、アプリケーション、システム、およびセキュリティの3つ以上のログが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b441b-728">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="b441b-729">ローカルコンピューターでカスタムログを作成した場合は、配列にも表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-729">If you created custom logs on the local computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="b441b-730">イベントログの一覧を取得するには、適切なレジストリ権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-730">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="b441b-731">これらのアクセス許可は、<xref:System.Diagnostics.EventLog.Exists%2A> と <xref:System.Diagnostics.EventLog.SourceExists%2A>を呼び出すために必要な権限と同じです。</span><span class="sxs-lookup"><span data-stu-id="b441b-731">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-732">次の例では、ローカルコンピューターで定義されているイベントログを列挙し、各イベントログの構成の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-732">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="b441b-733">レジストリの読み取りアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-733">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="b441b-734">または</span><span class="sxs-lookup"><span data-stu-id="b441b-734">-or-</span></span>  
  
 <span data-ttu-id="b441b-735">コンピューター上にイベント ログ サービスがありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-735">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-736">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-736">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-737">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-737">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs (machineName As String) As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : string -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="b441b-738">イベント ログの検索対象となるコンピューター。</span><span class="sxs-lookup"><span data-stu-id="b441b-738">The computer on which to search for event logs.</span></span></param>
        <summary><span data-ttu-id="b441b-739">指定したコンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-739">Searches for all event logs on the given computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="b441b-740">指定したコンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-740">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the given computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-741"><xref:System.Diagnostics.EventLog> オブジェクトの配列は、<xref:System.Diagnostics.EventLog.GetEventLogs%2A> の呼び出しが行われるときに、`machineName` パラメーターで指定されたコンピューター上のすべてのイベントログのスナップショットです。</span><span class="sxs-lookup"><span data-stu-id="b441b-741">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the computer specified by the `machineName` parameter when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="b441b-742">これは動的なコレクションではないため、リアルタイムでのログの削除や作成は反映されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-742">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="b441b-743">配列内のログは、読み取りまたは書き込みの前に存在していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-743">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="b441b-744">通常、配列には、アプリケーション、システム、およびセキュリティの3つ以上のログが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b441b-744">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="b441b-745">指定したコンピューターでカスタムログを作成した場合は、配列にも表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-745">If you created custom logs on the specified computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="b441b-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> は `static` メソッドであるため、<xref:System.Diagnostics.EventLog> クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-746"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> is a `static` method, so it can be called on the <xref:System.Diagnostics.EventLog> class itself.</span></span> <span data-ttu-id="b441b-747"><xref:System.Diagnostics.EventLog> オブジェクトのインスタンスを作成して、メソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-747">It is not necessary to create an instance of an <xref:System.Diagnostics.EventLog> object to make a call to the method.</span></span>  
  
 <span data-ttu-id="b441b-748">イベントログの一覧を取得するには、適切なレジストリ権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-748">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="b441b-749">これらのアクセス許可は、<xref:System.Diagnostics.EventLog.Exists%2A> と <xref:System.Diagnostics.EventLog.SourceExists%2A>を呼び出すために必要な権限と同じです。</span><span class="sxs-lookup"><span data-stu-id="b441b-749">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-750">次の例では、コンピューター "myServer" 上のログの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-750">The following example gets a list of logs on the computer "myServer".</span></span> <span data-ttu-id="b441b-751">次に、各ログの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-751">It then outputs the name of each log.</span></span>  
  
 [!code-cpp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-752"><paramref name="machineName" /> パラメーターに無効なコンピューター名が指定されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-752">The <paramref name="machineName" /> parameter is an invalid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-753">レジストリの読み取りアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-753">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="b441b-754">または</span><span class="sxs-lookup"><span data-stu-id="b441b-754">-or-</span></span>  
  
 <span data-ttu-id="b441b-755">コンピューター上にイベント ログ サービスがありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-755">There is no event log service on the computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-756">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-756">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-757">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-757">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLog.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the log that is read and written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogLog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-758">読み取るログまたは書き込むログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-758">Gets or sets the name of the log to read from or write to.</span></span></summary>
        <value><span data-ttu-id="b441b-759">ログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-759">The name of the log.</span></span> <span data-ttu-id="b441b-760">ログ名には、アプリケーション ログ名、システム ログ名、セキュリティ ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-760">This can be Application, System, Security, or a custom log name.</span></span> <span data-ttu-id="b441b-761">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-761">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-762">サーバーには、アプリケーション、システム、およびセキュリティの3つのログファイルが既定で存在します。</span><span class="sxs-lookup"><span data-stu-id="b441b-762">Three log files exist by default on the server: Application, System, and Security.</span></span> <span data-ttu-id="b441b-763">アプリケーションとサービスは、アプリケーションログファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-763">Applications and services use the Application log file.</span></span> <span data-ttu-id="b441b-764">デバイスドライバーは、システムログファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-764">Device drivers use the System log file.</span></span> <span data-ttu-id="b441b-765">監査が有効になっている場合、システムはセキュリティログに成功と失敗の監査イベントを生成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-765">The system generates success and failure audit events in the Security log when auditing is turned on.</span></span> <span data-ttu-id="b441b-766">Windows サーバー上の Active Directory など、他のアプリケーションがインストールされている場合は、他の既定のログファイルが存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-766">If you have other applications installed, like Active Directory on Windows servers, there might be other default log files.</span></span> <span data-ttu-id="b441b-767">また、ローカルコンピューターまたはリモートコンピューター上にカスタムログファイルを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-767">In addition, you can create custom log files on a local or remote computer.</span></span> <span data-ttu-id="b441b-768">カスタムログを使用すると、コンポーネントが既定のアプリケーションログにイベントを書き込む場合に許可されるよりも詳細な方法でエントリを整理できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-768">Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-769">ログ名は、8文字までに制限されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-769">Log names are limited to eight characters.</span></span> <span data-ttu-id="b441b-770">システムによっては、MyLogSample1 と MyLogSample2 は同じログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-770">According to the system, MyLogSample1 and MyLogSample2 are the same log.</span></span>  
  
 <span data-ttu-id="b441b-771">イベントログに書き込む場合は、<xref:System.Diagnostics.EventLog.Log%2A> プロパティを指定するだけでは不十分です。</span><span class="sxs-lookup"><span data-stu-id="b441b-771">If you write to an event log, it is not enough to specify the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="b441b-772">特定のログに接続するには、<xref:System.Diagnostics.EventLog.Source%2A> プロパティをイベントログリソースに関連付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-772">You must associate a <xref:System.Diagnostics.EventLog.Source%2A> property with your event log resource to connect it to a particular log.</span></span> <span data-ttu-id="b441b-773">ログからの読み取りのみを行う場合は、<xref:System.Diagnostics.EventLog.Source%2A> を指定する必要はありませんが、イベントソースは、サーバーのレジストリのイベントログリソースに関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-773">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log, but an event source must be associated with the event log resource in the server's registry.</span></span> <span data-ttu-id="b441b-774"><xref:System.Diagnostics.EventLog.Log%2A> 名と <xref:System.Diagnostics.EventLog.MachineName%2A> (サーバーコンピューター名) のみを指定して、その名前から読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-774">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) to read from it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-775">ログに接続している場合は、<xref:System.Diagnostics.EventLog.MachineName%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-775">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="b441b-776"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しなかった場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-776">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-777"><xref:System.Diagnostics.EventLog.Source%2A> プロパティが指定されていない場合、<xref:System.Diagnostics.EventLog.Log%2A> を呼び出すと、<xref:System.Diagnostics.EventLog.Log%2A> が明示的に設定されていない場合は空の文字列が返されます (<xref:System.Diagnostics.EventLog.Log%2A> プロパティを設定するか、コンストラクターを使用します)。</span><span class="sxs-lookup"><span data-stu-id="b441b-777">If the <xref:System.Diagnostics.EventLog.Source%2A> property has not been specified, a call to <xref:System.Diagnostics.EventLog.Log%2A> returns an empty string if <xref:System.Diagnostics.EventLog.Log%2A> has not been explicitly set (by setting the <xref:System.Diagnostics.EventLog.Log%2A> property, or through the constructor).</span></span> <span data-ttu-id="b441b-778"><xref:System.Diagnostics.EventLog.Source%2A> が指定されている場合、<xref:System.Diagnostics.EventLog.Log%2A> は、そのソースが登録されているログの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b441b-778">If the <xref:System.Diagnostics.EventLog.Source%2A> has been specified, <xref:System.Diagnostics.EventLog.Log%2A> returns the name of the log to which that source was registered.</span></span>  
  
 <span data-ttu-id="b441b-779">ソースは、一度に1つのログにしか登録できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-779">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="b441b-780"><xref:System.Diagnostics.EventLog>のインスタンスに対して <xref:System.Diagnostics.EventLog.Source%2A> プロパティが設定されている場合は、<xref:System.Diagnostics.EventLog.Source%2A> の値を変更したり、<xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 最初にを呼び出したりせずに、その <xref:System.Diagnostics.EventLog> の <xref:System.Diagnostics.EventLog.Log%2A> プロパティを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-780">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.Log%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="b441b-781"><xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定した後に <xref:System.Diagnostics.EventLog.Log%2A> プロパティを変更すると、ログエントリの書き込みで例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-781">If you change the <xref:System.Diagnostics.EventLog.Log%2A> property after the <xref:System.Diagnostics.EventLog.Source%2A> property has been set, writing a log entry throws an exception.</span></span>  
  
 <span data-ttu-id="b441b-782">オペレーティング システムではイベント ログはファイルとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-782">The operating system stores event logs as files.</span></span> <span data-ttu-id="b441b-783"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を使用して新しいイベントログを作成する場合、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-783">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="b441b-784">ファイル名を設定するには、<xref:System.Diagnostics.EventLog.Log%2A> プロパティの最初の8文字に ".evt" というファイル名拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-784">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="b441b-785"><xref:System.Diagnostics.EventLog.Log%2A> プロパティだけを使用して新しいログを作成することはできません (ログのソースを指定する必要はありません)。</span><span class="sxs-lookup"><span data-stu-id="b441b-785">You cannot create a new log using the <xref:System.Diagnostics.EventLog.Log%2A> property alone (without specifying a source for the log).</span></span> <span data-ttu-id="b441b-786"><xref:System.Diagnostics.EventLog.CreateEventSource%2A>を呼び出して、新しいログ名をパラメーターとして渡し、<xref:System.Diagnostics.EventLog.DeleteEventSource%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-786">You can call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, passing in a new log name as a parameter, and then call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="b441b-787">ただし、通常は、アプリケーション固有の新しいログを作成 (またはエントリを書き込む) するか、既存のログを読み取るかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-787">However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.</span></span>  
  
 <span data-ttu-id="b441b-788"><xref:System.Diagnostics.EventLog.Log%2A> 値が変更されると、イベントログが閉じられ、すべてのイベントハンドルが解放されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-788">If the <xref:System.Diagnostics.EventLog.Log%2A> value changes, the event log is closed and all event handles are released.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b441b-789"><xref:System.Diagnostics.EventLog.Log%2A> プロパティを存在しないログの名前に設定すると、システムによって <xref:System.Diagnostics.EventLog> がアプリケーションログにアタッチされますが、指定したログ以外のログが使用されていることを示す警告は表示されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-789">If you set the <xref:System.Diagnostics.EventLog.Log%2A> property to the name of a log that does not exist, the system attaches the <xref:System.Diagnostics.EventLog> to the Application log, but does not warn you that it is using a log other than the one you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-790">次の例では、ローカルコンピューター上のイベントログ "NewEventLog" のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-790">The following example reads entries in the event log, "NewEventLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Log Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Log Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Log Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Log Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-791">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-791">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-792">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-792">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
      </Docs>
    </Member>
    <Member MemberName="LogDisplayName">
      <MemberSignature Language="C#" Value="public string LogDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.LogDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogDisplayName : string" Usage="System.Diagnostics.EventLog.LogDisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-793">イベント ログの表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-793">Gets the event log's friendly name.</span></span></summary>
        <value><span data-ttu-id="b441b-794">システムのイベント ビューアーのイベント ログを表す名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-794">A name that represents the event log in the system's event viewer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b441b-795">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに与えられていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-795">In Windows Vista and later, users do not have permission to access the security log.</span></span> <span data-ttu-id="b441b-796">Windows Vista 以降をユーザーとして実行している場合は、セキュリティログ内のイベントの表示名にアクセスしようとすると <xref:System.Security.SecurityException> が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-796">If you are running Windows Vista or later as a user, you will get a <xref:System.Security.SecurityException> when you attempt to access the display name for an event in the security log.</span></span>  
>   
>  <span data-ttu-id="b441b-797">Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-797">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-798">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-798">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-799">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-799">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-800">セキュリティログにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-800">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-801">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-801">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-802">次の例では、ローカルコンピューターに定義されているイベントログを列挙し、各イベントログの <xref:System.Diagnostics.EventLog.LogDisplayName%2A> を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-802">The following example enumerates the event logs defined on the local computer and displays the <xref:System.Diagnostics.EventLog.LogDisplayName%2A> for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-803">このコンピューターのレジストリに、指定した <see cref="P:System.Diagnostics.EventLog.Log" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-803">The specified <see cref="P:System.Diagnostics.EventLog.Log" /> does not exist in the registry for this computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-804">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-804">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-805">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-805">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="b441b-806">指定したレジストリキーを読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="b441b-806">for the ability to read the specified registry key.</span></span> <span data-ttu-id="b441b-807">関連付けられた列挙型: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b441b-807">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b441b-808">指定されたレジストリキーがリモートキーである場合にアクセスする権限。</span><span class="sxs-lookup"><span data-stu-id="b441b-808">for the ability to access the specified registry key if it is a remote key.</span></span> <span data-ttu-id="b441b-809">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b441b-809">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="LogNameFromSourceName">
      <MemberSignature Language="C#" Value="public static string LogNameFromSourceName (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogNameFromSourceName(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNameFromSourceName (source As String, machineName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogNameFromSourceName(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member LogNameFromSourceName : string * string -&gt; string" Usage="System.Diagnostics.EventLog.LogNameFromSourceName (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-810">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-810">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-811">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-811">The name of the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-812">指定したソースが登録されているログの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-812">Gets the name of the log to which the specified source is registered.</span></span></summary>
        <returns><span data-ttu-id="b441b-813">レジストリ内で指定したソースに関連付けられているログの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-813">The name of the log associated with the specified source in the registry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-814">イベントソースは、イベントをログに記録するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-814">The event source indicates what logs the event.</span></span> <span data-ttu-id="b441b-815">多くの場合、アプリケーションの名前、またはアプリケーションのサブコンポーネントの名前 (アプリケーションのサイズが大きい場合) です。</span><span class="sxs-lookup"><span data-stu-id="b441b-815">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="b441b-816">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-816">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="b441b-817">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-817">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="b441b-818">一度に1つのログのみに書き込むことができる新しいソースを作成すると、システムはアプリケーションを有効なエントリのソースとしてイベントログに登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-818">When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="b441b-819"><xref:System.Diagnostics.EventLog.Source%2A> プロパティには任意の文字列を指定できますが、その名前はコンピューター上の他のソースでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-819">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any string, but the name cannot be used by other sources on the computer.</span></span> <span data-ttu-id="b441b-820">重複する <xref:System.Diagnostics.EventLog.Source%2A> 値を作成しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-820">An attempt to create a duplicated <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="b441b-821">ただし、1つのイベントログにさまざまなソースを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-821">However, a single event log can have many different sources writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-822">次の例では、ソースをローカルコンピューターから削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-822">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="b441b-823">この例では、ソースからログを確認してから、ログを削除します。</span><span class="sxs-lookup"><span data-stu-id="b441b-823">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-824">複数のソースがイベントログに書き込む可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-824">More than one source might write to an event log.</span></span> <span data-ttu-id="b441b-825">カスタムログを削除する前に、そのログに書き込むソースが他にないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-825">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-826">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-826">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-827">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-827">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.EventLog.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the machine that this log get written to.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMachineName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-828">イベントを読み取るコンピューターまたは書き込むコンピューターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-828">Gets or sets the name of the computer on which to read or write events.</span></span></summary>
        <value><span data-ttu-id="b441b-829">イベント ログが存在するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-829">The name of the server on which the event log resides.</span></span> <span data-ttu-id="b441b-830">既定値はローカル コンピューター (".") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-830">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-831">イベントログに書き込む場合は、<xref:System.Diagnostics.EventLog.Source%2A> をイベントログオブジェクトに関連付けて、特定のログに接続する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-831">If you write to an event log, you must associate a <xref:System.Diagnostics.EventLog.Source%2A> with your event log object to connect it to a particular log.</span></span> <span data-ttu-id="b441b-832">ログからの読み取りのみを行う場合は、<xref:System.Diagnostics.EventLog.Source%2A> プロパティを指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-832">It is not necessary to specify the <xref:System.Diagnostics.EventLog.Source%2A> property when only reading from a log.</span></span> <span data-ttu-id="b441b-833"><xref:System.Diagnostics.EventLog.Log%2A> 名と <xref:System.Diagnostics.EventLog.MachineName%2A> (サーバーコンピューター名) のみを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-833">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-834">ログに接続する場合は、<xref:System.Diagnostics.EventLog.MachineName%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-834">You need not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="b441b-835"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しなかった場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-835">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-836">ソースは、一度に1つのログにしか登録できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-836">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="b441b-837"><xref:System.Diagnostics.EventLog>のインスタンスに対して <xref:System.Diagnostics.EventLog.Source%2A> プロパティが設定されている場合は、<xref:System.Diagnostics.EventLog.Source%2A> の値を変更したり、<xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 最初にを呼び出したりせずに、その <xref:System.Diagnostics.EventLog> の <xref:System.Diagnostics.EventLog.MachineName%2A> プロパティを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-837">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.MachineName%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="b441b-838"><xref:System.Diagnostics.EventLog.MachineName%2A> プロパティを変更すると、<xref:System.Diagnostics.EventLog> はすべてのハンドルを閉じ、新しいコンピューター上のログとソースに再度アタッチします。</span><span class="sxs-lookup"><span data-stu-id="b441b-838">If you change the <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog> closes all handles and reattaches to the log and source on the new computer.</span></span>  
  
 <span data-ttu-id="b441b-839"><xref:System.Diagnostics.EventLog.MachineName%2A> 値を空の文字列にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-839">The <xref:System.Diagnostics.EventLog.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="b441b-840">明示的に設定されていない場合は、既定でローカルコンピューター (".") に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-840">If it is not explicitly set, it defaults to the local computer (".").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-841">次の例では、指定されたコンピューター上のイベントログ "NewEventLog" のエントリを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="b441b-841">The following example reads entries in the event log, "NewEventLog", on a specified computer.</span></span>  
  
 [!code-cpp[Classic EventLog.MachineName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-842">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-842">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-843">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-843">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-844">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-844">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.GetEventLogs" />
      </Docs>
    </Member>
    <Member MemberName="MaximumKilobytes">
      <MemberSignature Language="C#" Value="public long MaximumKilobytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumKilobytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumKilobytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumKilobytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumKilobytes : int64 with get, set" Usage="System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-845">イベント ログの最大サイズを KB 単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-845">Gets or sets the maximum event log size in kilobytes.</span></span></summary>
        <value><span data-ttu-id="b441b-846">イベント ログの最大サイズ。単位は KB です。</span><span class="sxs-lookup"><span data-stu-id="b441b-846">The maximum event log size in kilobytes.</span></span> <span data-ttu-id="b441b-847">既定値は、512 KB の最大ファイル サイズを示す 512 です。</span><span class="sxs-lookup"><span data-stu-id="b441b-847">The default is 512, indicating a maximum file size of 512 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-848"><xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> プロパティは、イベントログファイルのサイズの制限を表します。</span><span class="sxs-lookup"><span data-stu-id="b441b-848">The <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property represents the size limit of the event log file.</span></span> <span data-ttu-id="b441b-849">イベントログがサイズの上限に達すると、構成された <xref:System.Diagnostics.EventLog.OverflowAction%2A> の値によって、新しいエントリが破棄されるかどうか、または新しいエントリが古いエントリを上書きするかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="b441b-849">When the event log reaches the size limit, the configured <xref:System.Diagnostics.EventLog.OverflowAction%2A> value determines whether new entries are discarded, or whether new entries overwrite older entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-850">このプロパティは、このインスタンスによって表されるイベントログの構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="b441b-850">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="b441b-851">イベントログが最大サイズに達すると、このプロパティは、イベントログに登録されているすべてのイベントソースによって書き込まれた新しいエントリをオペレーティングシステムがどのように処理するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-851">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-852">次の例では、ローカルコンピューターで定義されているイベントログを列挙し、各イベントログの構成の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-852">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b441b-853">指定した値が 64 未満か、4194240 を超える値です。または、64 の倍数ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-853">The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-854"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-854">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="b441b-855">または</span><span class="sxs-lookup"><span data-stu-id="b441b-855">-or-</span></span> 
<span data-ttu-id="b441b-856">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-856">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-857">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-857">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-858">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-858">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRetentionDays">
      <MemberSignature Language="C#" Value="public int MinimumRetentionDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumRetentionDays" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRetentionDays As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumRetentionDays { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRetentionDays : int" Usage="System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-859">イベント ログ内のエントリを保持する日数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-859">Gets the number of days to retain entries in the event log.</span></span></summary>
        <value><span data-ttu-id="b441b-860">イベント ログ内のエントリが保持される日数。</span><span class="sxs-lookup"><span data-stu-id="b441b-860">The number of days that entries in the event log are retained.</span></span> <span data-ttu-id="b441b-861">既定値は 7 です。</span><span class="sxs-lookup"><span data-stu-id="b441b-861">The default value is 7.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-862">イベントログの現在の設定を確認するには、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-862">Use the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property to examine the current setting for an event log.</span></span> <span data-ttu-id="b441b-863">イベントログの各エントリを保持する必要がある最小日数を変更するには、<xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-863">Use <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> to change the minimum number of days that each entry in the event log must be retained.</span></span>  
  
 <span data-ttu-id="b441b-864"><xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 値は、イベントログの構成されたオーバーフロー動作によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b441b-864">The <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value depends on the configured overflow behavior of the event log.</span></span> <span data-ttu-id="b441b-865">イベントログの <xref:System.Diagnostics.OverflowAction> プロパティが <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>に設定されている場合、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 値は0になります。</span><span class="sxs-lookup"><span data-stu-id="b441b-865">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is 0.</span></span> <span data-ttu-id="b441b-866">イベントログの <xref:System.Diagnostics.OverflowAction> プロパティが <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>に設定されている場合、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> の値は-1 になります。</span><span class="sxs-lookup"><span data-stu-id="b441b-866">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is -1.</span></span> <span data-ttu-id="b441b-867">イベントログの <xref:System.Diagnostics.OverflowAction> プロパティが <xref:System.Diagnostics.OverflowAction.OverwriteOlder>に設定されている場合、<xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> の値は0より大きくなり、イベントログがいっぱいになったときにイベントログエントリを保持する日数を表します。</span><span class="sxs-lookup"><span data-stu-id="b441b-867">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is greater than zero, and represents the number of days to retain event log entries when the event log is full.</span></span>  
  
 <span data-ttu-id="b441b-868">オーバーフロー動作は、イベントログのサイズが制限に達した場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="b441b-868">The overflow behavior only occurs when an event log reaches its size limit.</span></span> <span data-ttu-id="b441b-869"><xref:System.Diagnostics.EventLog> の <xref:System.Diagnostics.EventLog.OverflowAction%2A> が <xref:System.Diagnostics.OverflowAction.OverwriteOlder>に設定されていて、イベントログが最大サイズに達した場合、新しいエントリは、age が <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 期間を超えているエントリを置き換えることができる場合にのみ書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="b441b-869">When an <xref:System.Diagnostics.EventLog> has its <xref:System.Diagnostics.EventLog.OverflowAction%2A> set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> period.</span></span> <span data-ttu-id="b441b-870">イベントログを定期的にアーカイブする場合は、最小期間にわたってイベントエントリを保持することが適切です。</span><span class="sxs-lookup"><span data-stu-id="b441b-870">Retaining event entries for a minimum period is appropriate when the event log is archived regularly.</span></span> <span data-ttu-id="b441b-871">そうしないと、イベントログが制限に達したときに新しいエントリが失われる危険性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-871">Otherwise, you risk losing new entries when the event log reaches its limit.</span></span> <span data-ttu-id="b441b-872">新しいイベント情報が失われないようにするには、特定のイベントログのアーカイブスケジュールに基づいて、イベントの最小保持日数を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-872">To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-873">次の例では、ローカルコンピューターで定義されているイベントログを列挙し、各イベントログの構成の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-873">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-874">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-874">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-875">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-875">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
      </Docs>
    </Member>
    <Member MemberName="ModifyOverflowPolicy">
      <MemberSignature Language="C#" Value="public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ModifyOverflowPolicy(valuetype System.Diagnostics.OverflowAction action, int32 retentionDays) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyOverflowPolicy (action As OverflowAction, retentionDays As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyOverflowPolicy(System::Diagnostics::OverflowAction action, int retentionDays);" />
      <MemberSignature Language="F#" Value="member this.ModifyOverflowPolicy : System.Diagnostics.OverflowAction * int -&gt; unit" Usage="eventLog.ModifyOverflowPolicy (action, retentionDays)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Diagnostics.OverflowAction" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="retentionDays" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="b441b-876">イベント ログに新しいエントリを書き込むためのオーバーフロー動作。</span><span class="sxs-lookup"><span data-stu-id="b441b-876">The overflow behavior for writing new entries to the event log.</span></span></param>
        <param name="retentionDays"><span data-ttu-id="b441b-877">イベント ログの各エントリが保持される最小日数。</span><span class="sxs-lookup"><span data-stu-id="b441b-877">The minimum number of days each event log entry is retained.</span></span> <span data-ttu-id="b441b-878">このパラメーターは、<paramref name="action" /> が <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> に設定されている場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-878">This parameter is used only if <paramref name="action" /> is set to <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></param>
        <summary><span data-ttu-id="b441b-879">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを書き込むように構成された動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="b441b-879">Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-880">イベントログのオーバーフロー動作は、最大ファイルサイズに達したログに新しいエントリが書き込まれたときの動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-880">The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-881">オーバーフローの動作は、イベントログが最大ファイルサイズに達した場合にのみ有効になります。</span><span class="sxs-lookup"><span data-stu-id="b441b-881">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="b441b-882">オーバーフロー動作は、追加のイベントログエントリに対応できるログへの新しいエントリの書き込みには影響しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-882">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
 <span data-ttu-id="b441b-883"><xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> メソッドは、イベントログのオーバーフロー動作を構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-883">The <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method configures the overflow behavior of an event log.</span></span> <span data-ttu-id="b441b-884"><xref:System.Diagnostics.EventLog> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b441b-884"><xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="b441b-885"><xref:System.Diagnostics.EventLog.Log%2A> プロパティによって指定されたイベントログに対してこのメソッドを呼び出した後、<xref:System.Diagnostics.EventLog.OverflowAction%2A> と <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> のプロパティ値に、新しく構成されたオーバーフロー動作が反映されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-885">After calling this method for the event log specified by the <xref:System.Diagnostics.EventLog.Log%2A> property, the <xref:System.Diagnostics.EventLog.OverflowAction%2A> and <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property values reflect the newly configured overflow behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-886">このプロパティは、このインスタンスによって表されるイベントログの構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="b441b-886">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="b441b-887">イベントログが最大サイズに達すると、このプロパティは、イベントログに登録されているすべてのイベントソースによって書き込まれた新しいエントリをオペレーティングシステムがどのように処理するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-887">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
 <span data-ttu-id="b441b-888">`action` パラメーターを <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> に設定すると、<xref:System.Diagnostics.EventLog> が最大サイズに達したときに、新しいエントリによって最も古いエントリが上書きされることを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-888">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> to indicate that a new entry overwrites the oldest entry when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="b441b-889">`action` パラメーターが <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>に設定されている場合、`retentionDays` パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-889">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, the `retentionDays` parameter value is ignored.</span></span>  
  
 <span data-ttu-id="b441b-890">`action` パラメーターを <xref:System.Diagnostics.OverflowAction.OverwriteOlder> に設定して、<xref:System.Diagnostics.EventLog> が最大サイズに達したときに、新しいエントリが古いエントリを上書きすることを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-890">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteOlder> to indicate that each new entry overwrites older entries when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="b441b-891">`retentionDays` パラメーターを使用して、ログにイベントを保持する日数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-891">Specify the number of days that events must be retained in the log using the `retentionDays` parameter.</span></span> <span data-ttu-id="b441b-892">保有期間の範囲内に書き込まれたイベントは、新しいエントリによって上書きされません。</span><span class="sxs-lookup"><span data-stu-id="b441b-892">Events written within the retention range are not overwritten by new entries.</span></span>  
  
 <span data-ttu-id="b441b-893">最大ログサイズに達したときに新しいイベントを破棄するには、`action` パラメーターを <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> に設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-893">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> to discard new events when the maximum log size is reached.</span></span> <span data-ttu-id="b441b-894">`action` パラメーターが <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>に設定されている場合、`retentionDays` パラメーターの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-894">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, the `retentionDays` parameter value is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b441b-895">オーバーフローポリシーを <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> に設定すると、イベントログがいっぱいになったときに新しいエントリが破棄されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-895">Setting the overflow policy to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> specifies that new entries are discarded when the event log is full.</span></span> <span data-ttu-id="b441b-896">この設定を使用する場合は、最大サイズの制限に達しないように、定期的にイベントログをアーカイブしてクリアするようにしてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-896">If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-897">次の例では、指定されたイベントログに対して構成されたオーバーフローポリシーを表示し、ユーザーがイベントログの新しいオーバーフローポリシー設定を選択できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b441b-897">The following example displays the configured overflow policy for a specified event log, and allows the user to select a new overflow policy setting for the event log.</span></span>  
  
 [!code-cpp[EventLogProperties#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#3)]
 [!code-csharp[EventLogProperties#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#3)]
 [!code-vb[EventLogProperties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-898"><paramref name="action" /> が有効な <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-898"><paramref name="action" /> is not a valid <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b441b-899"><paramref name="retentionDays" /> が 1 未満であるか、365 を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-899"><paramref name="retentionDays" /> is less than one, or larger than 365.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-900"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-900">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="b441b-901">または</span><span class="sxs-lookup"><span data-stu-id="b441b-901">-or-</span></span> 
<span data-ttu-id="b441b-902">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-902">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-903">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-903">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-904">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-904">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="OverflowAction">
      <MemberSignature Language="C#" Value="public System.Diagnostics.OverflowAction OverflowAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.OverflowAction OverflowAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.OverflowAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverflowAction As OverflowAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::OverflowAction OverflowAction { System::Diagnostics::OverflowAction get(); };" />
      <MemberSignature Language="F#" Value="member this.OverflowAction : System.Diagnostics.OverflowAction" Usage="System.Diagnostics.EventLog.OverflowAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.OverflowAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-905">イベント ログが最大ファイル サイズに達した場合に、新しいエントリを格納するように構成された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="b441b-905">Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</span></span></summary>
        <value><span data-ttu-id="b441b-906">イベント ログが最大サイズに達した場合に、新しいエントリを格納するために構成された動作を指定する <see cref="T:System.Diagnostics.OverflowAction" /> 値。</span><span class="sxs-lookup"><span data-stu-id="b441b-906">The <see cref="T:System.Diagnostics.OverflowAction" /> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size.</span></span> <span data-ttu-id="b441b-907">既定値は、<see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-907">The default is <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-908">イベントログは、新しいイベントが書き込まれるときにサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="b441b-908">Event logs grow in size as new events are written to them.</span></span> <span data-ttu-id="b441b-909">各イベントログには、最大サイズの制限が構成されています。<xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> プロパティは、イベントログファイルのサイズとして許容される最大キロバイト数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-909">Each event log has a configured maximum size limit; the <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property defines the maximum number of kilobytes allowed for the event log file size.</span></span>  
  
 <span data-ttu-id="b441b-910"><xref:System.Diagnostics.EventLog.OverflowAction%2A> プロパティ値を使用して、イベントログの最大サイズで構成されたオーバーフローの動作を確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-910">Use the <xref:System.Diagnostics.EventLog.OverflowAction%2A> property value to examine the configured overflow behavior for an event log at its maximum size.</span></span> <span data-ttu-id="b441b-911">イベントログのオーバーフロー動作を変更するには、<xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-911">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to change the overflow behavior for an event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-912">オーバーフローの動作は、イベントログが最大ファイルサイズに達した場合にのみ有効になります。</span><span class="sxs-lookup"><span data-stu-id="b441b-912">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="b441b-913">オーバーフロー動作は、追加のイベントログエントリに対応できるログへの新しいエントリの書き込みには影響しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-913">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-914">次の例では、ローカルコンピューターで定義されているイベントログを列挙し、各イベントログの構成の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-914">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-915">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-915">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-916">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-916">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayName">
      <MemberSignature Language="C#" Value="public void RegisterDisplayName (string resourceFile, long resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayName(string resourceFile, int64 resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDisplayName (resourceFile As String, resourceId As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDisplayName(System::String ^ resourceFile, long resourceId);" />
      <MemberSignature Language="F#" Value="member this.RegisterDisplayName : string * int64 -&gt; unit" Usage="eventLog.RegisterDisplayName (resourceFile, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFile" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="resourceId" Type="System.Int64" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFile"><span data-ttu-id="b441b-917">ローカライズされたリソース ファイルの完全指定パス。</span><span class="sxs-lookup"><span data-stu-id="b441b-917">The fully specified path to a localized resource file.</span></span></param>
        <param name="resourceId"><span data-ttu-id="b441b-918">リソース ファイル内のローカライズされた文字列のインデックスを示すリソース識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-918">The resource identifier that indexes a localized string within the resource file.</span></span></param>
        <summary><span data-ttu-id="b441b-919">イベント ログのローカライズされた名前を指定します。これは、サーバーのイベント ビューアーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-919">Specifies the localized name of the event log, which is displayed in the server Event Viewer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-920">カスタムイベントログのイベントビューアーにローカライズされた名前を登録して表示するには、<xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-920">Use <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> to register and display a localized name in the Event Viewer for custom event logs.</span></span>  
  
 <span data-ttu-id="b441b-921">指定されたリソース識別子は、リソースファイルで定義されているローカライズされた文字列に対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-921">The specified resource identifier must correspond to a localized string defined in the resource file.</span></span> <span data-ttu-id="b441b-922">イベントビューアーに、ローカライズされた文字列と現在のカルチャ設定を使用して、カスタムイベントログ名が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-922">The Event Viewer displays the custom event log name using the localized string and the current culture settings.</span></span> <span data-ttu-id="b441b-923">たとえば、リソースファイルのカルチャごとにローカライズされた複数のイベントログ名を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-923">For example, you can define multiple event log names localized for different cultures in your resource file.</span></span> <span data-ttu-id="b441b-924">イベントビューアーには、現在のユーザーのカルチャ設定に対応するローカライズされた文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-924">The Event Viewer displays the localized string corresponding to the culture settings of the current user.</span></span>  
  
 <span data-ttu-id="b441b-925">イベントビューアーがリソースファイルからローカライズされた文字列を読み込むことができない場合、またはイベントログに表示名が登録されていない場合は、イベントビューアーに <xref:System.Diagnostics.EventLog.Log%2A>で定義されているイベントログの名前が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-925">If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <xref:System.Diagnostics.EventLog.Log%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-926">定義済みのイベントログの表示名を登録する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-926">You do not need to register a display name for the pre-defined event logs.</span></span> <span data-ttu-id="b441b-927">オペレーティングシステムによって、アプリケーション、システム、およびセキュリティイベントログのローカライズされた表示名が登録されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-927">The operating system registers the localized display names for the Application, System, and Security event logs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-928">次の例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-928">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="b441b-929">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-929">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="b441b-930">最後に、この例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-930">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="b441b-931">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-931">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-932">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-932">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-933">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-933">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="b441b-934">具体的には、リソース識別子5001は、イベントログのローカライズされた名前に対して定義されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-934">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-935"><see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-935">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="b441b-936">または</span><span class="sxs-lookup"><span data-stu-id="b441b-936">-or-</span></span> 
<span data-ttu-id="b441b-937">ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-937">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-938"><paramref name="resourceFile" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-938"><paramref name="resourceFile" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-939">コンピューター上のイベントログ情報を管理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-939">for administering event log information on the computer.</span></span> <span data-ttu-id="b441b-940">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span><span class="sxs-lookup"><span data-stu-id="b441b-940">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.LogDisplayName" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLog.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The application name that writes the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSource")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-941">イベント ログを書き込むときに登録して使用するソース名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-941">Gets or sets the source name to register and use when writing to the event log.</span></span></summary>
        <value><span data-ttu-id="b441b-942">エントリのソースとしてイベント ログに登録される名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-942">The name registered with the event log as a source of entries.</span></span> <span data-ttu-id="b441b-943">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-943">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-944">イベントソースは、イベントをログに記録するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-944">The event source indicates what logs the event.</span></span> <span data-ttu-id="b441b-945">多くの場合、アプリケーションの名前、またはアプリケーションのサブコンポーネントの名前 (アプリケーションのサイズが大きい場合) です。</span><span class="sxs-lookup"><span data-stu-id="b441b-945">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="b441b-946">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-946">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="b441b-947">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-947">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="b441b-948">イベントログに書き込む場合にのみ、イベントソースを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-948">You only need to specify an event source if you are writing to an event log.</span></span> <span data-ttu-id="b441b-949">イベントログにエントリを書き込む前に、イベントソースを有効なイベントのソースとしてイベントログに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-949">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="b441b-950">ログエントリを作成すると、システムは <xref:System.Diagnostics.EventLog.Source%2A> プロパティを使用して、エントリを配置する適切なログを検索します。</span><span class="sxs-lookup"><span data-stu-id="b441b-950">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> property to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="b441b-951">イベントログを読み取る場合は、<xref:System.Diagnostics.EventLog.Source%2A>、<xref:System.Diagnostics.EventLog.Log%2A> と <xref:System.Diagnostics.EventLog.MachineName%2A>のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-951">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-952">ローカルコンピューター上のログに接続している場合は、<xref:System.Diagnostics.EventLog.MachineName%2A> を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-952">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="b441b-953"><xref:System.Diagnostics.EventLog.MachineName%2A>を指定しなかった場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-953">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-954">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> と <xref:System.Diagnostics.EventLog.WriteEntry%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-954">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="b441b-955">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-955">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-956">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-956">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-957">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-957">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-958">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-958">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-959">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-959">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-960">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-960">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-961">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-961">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="b441b-962">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-962">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="b441b-963">ソースは、ローカルコンピューター上で一意である必要があります。新しいソース名は、既存のソース名または既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-963">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="b441b-964">各ソースは一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-964">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="b441b-965">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-965">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="b441b-966"><xref:System.Diagnostics.EventLog.Source%2A> 値を変更すると、それが登録されている <xref:System.Diagnostics.EventLog> が閉じられ、すべてのイベントハンドルが解放されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-966">If you change the <xref:System.Diagnostics.EventLog.Source%2A> value, the <xref:System.Diagnostics.EventLog> to which it is registered is closed and all event handles are released.</span></span>  
  
 <span data-ttu-id="b441b-967">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-967">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-968">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-968">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-969">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-969">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-970">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-970">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="b441b-971">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-971">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="b441b-972">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-972">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-973">ソースが既にログにマップされていて、新しいログに再マップする場合は、変更を有効にするためにコンピューターを再起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-973">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-974">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-974">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-975">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-975">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-976">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-976">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-977">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-977">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SourceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-978">コンピューターのレジストリ内で、指定したイベント ソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="b441b-978">Searches a computer's registry for a given event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-979">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-979">The name of the event source.</span></span></param>
        <summary><span data-ttu-id="b441b-980">ローカル コンピューターにイベント ソースが登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-980">Determines whether an event source is registered on the local computer.</span></span></summary>
        <returns><span data-ttu-id="b441b-981">ローカル コンピューターにイベント ソースが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-981"><see langword="true" /> if the event source is registered on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-982">このメソッドは、イベントソースがローカルコンピューターに存在するかどうかを判断するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-982">Use this method to determine whether an event source exists on the local computer.</span></span> <span data-ttu-id="b441b-983">ログがローカルコンピューターに存在するかどうかを確認するには、<xref:System.Diagnostics.EventLog.Exists%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-983">If you want to determine whether a log exists on the local computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="b441b-984">このメソッドはレジストリにアクセスするため、ローカルコンピューターに対する適切なレジストリアクセス許可を持っている必要があります。それ以外の場合は、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-984">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-985">Windows Vista 以降または Windows Server 2003 でイベントソースを検索するには、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-985">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="b441b-986">この要件の理由は、イベントソースが一意かどうかを判断するために、セキュリティを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-986">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-987">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-987">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="b441b-988">Windows Vista 以降では、ユーザーアカウント制御 (UAC) によってユーザーの特権が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-988">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-989">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-989">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-990">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-990">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-991">パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-991">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-992">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-992">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-993"><xref:System.ServiceProcess.ServiceAccount.LocalSystem> アカウントで実行されているサービスには、このメソッドを実行するために必要な特権がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-993">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="b441b-994">この問題を解決するには、イベントソースが <xref:System.ServiceProcess.ServiceInstaller>に存在するかどうかを確認し、存在しない場合はインストーラーでソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-994">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="b441b-995">新しいソースに同じコンピューター上の既存のソースの名前を指定することはできないため、`source` で指定された名前のソースがローカルコンピューターに存在していないことを確認するために、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出す前にこの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-995">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the local computer.</span></span> <span data-ttu-id="b441b-996">`source` パラメーターでは、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-996">The `source` parameter is not case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-997">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-997">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b441b-998"><paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-998"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-999">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-999">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1000">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1000">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1001">イベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-1001">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="b441b-1002">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</span><span class="sxs-lookup"><span data-stu-id="b441b-1002">The name the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="b441b-1003">指定したコンピューターにイベント ソースが登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1003">Determines whether an event source is registered on a specified computer.</span></span></summary>
        <returns><span data-ttu-id="b441b-1004">指定したコンピューターにイベント ソースが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-1004"><see langword="true" /> if the event source is registered on the given computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1005">このメソッドは、`machineName` パラメーターによって指定されたコンピューターにイベントソースが存在するかどうかを判断するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1005">Use this method to determine whether an event source exists on the computer specified by the `machineName` parameter.</span></span> <span data-ttu-id="b441b-1006">指定したコンピューターにログが存在するかどうかを確認する場合は、<xref:System.Diagnostics.EventLog.Exists%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1006">If you want to determine whether a log exists on the specified computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1007">このメソッドはレジストリにアクセスするため、特定のサーバーに対する適切なレジストリ権限を持っている必要があります。それ以外の場合は、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1007">Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1008">Windows Vista 以降または Windows Server 2003 でイベントソースを検索するには、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1008">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="b441b-1009">この要件の理由は、イベントソースが一意かどうかを判断するために、セキュリティを含むすべてのイベントログを検索する必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1009">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="b441b-1010">Windows Vista 以降では、セキュリティログにアクセスするためのアクセス許可がユーザーに付与されていません。したがって、<xref:System.Security.SecurityException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1010">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="b441b-1011">Windows Vista 以降では、ユーザーアカウント制御 (UAC) によってユーザーの特権が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1011">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="b441b-1012">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1012">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="b441b-1013">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1013">By default, you are in the standard user role.</span></span> <span data-ttu-id="b441b-1014">パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1014">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="b441b-1015">この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1015">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1016"><xref:System.ServiceProcess.ServiceAccount.LocalSystem> アカウントで実行されているサービスには、このメソッドを実行するために必要な特権がありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1016">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="b441b-1017">この問題を解決するには、イベントソースが <xref:System.ServiceProcess.ServiceInstaller>に存在するかどうかを確認し、存在しない場合はインストーラーでソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1017">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="b441b-1018">新しいソースに同じコンピューター上の既存のソースの名前を指定することはできないため、`source` で指定された名前のソースがコンピューターに存在していないことを確認するために、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出す前にこの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1018">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the computer.</span></span> <span data-ttu-id="b441b-1019">`source` パラメーターと `machineName` パラメーターでは、大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1019">The `source` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="b441b-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> は `static` メソッドであるため、クラス自体で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1020"><xref:System.Diagnostics.EventLog.SourceExists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="b441b-1021"><xref:System.Diagnostics.EventLog.SourceExists%2A>を呼び出すために <xref:System.Diagnostics.EventLog> のインスタンスを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1021">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1022">次の例では、コンピューター `MyServer`にソース `MySource` を作成し、エントリをイベントログ `MyNewLog`に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1022">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1023"><paramref name="machineName" /> が無効なコンピューター名です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1023"><paramref name="machineName" /> is an invalid computer name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b441b-1024"><paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1024"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1025">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1025">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1026">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1026">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("An object that synchronizes event handler calls.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b441b-1027"><see cref="T:System.Diagnostics.EventLog" /> エントリ書き込みイベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1027">Gets or sets the object used to marshal the event handler calls issued as a result of an <see cref="T:System.Diagnostics.EventLog" /> entry written event.</span></span></summary>
        <value><span data-ttu-id="b441b-1028">イベント ログの <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用する <see cref="E:System.Diagnostics.EventLog.EntryWritten" />。</span><span class="sxs-lookup"><span data-stu-id="b441b-1028">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> used to marshal event-handler calls issued as a result of an <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event on the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1029"><xref:System.Diagnostics.EventLog.SynchronizingObject%2A> が `null`場合、<xref:System.Diagnostics.EventLog.EntryWritten> イベントを処理するメソッドは、システムスレッドプールからのスレッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1029">When <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is `null`, methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event are called on a thread from the system thread pool.</span></span> <span data-ttu-id="b441b-1030">システムスレッドプールの詳細については、「<xref:System.Threading.ThreadPool>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1030">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="b441b-1031"><xref:System.Diagnostics.EventLog.EntryWritten> イベントが、ボタンなどのビジュアル Windows フォームコンポーネントによって処理されると、システムスレッドプールを介してコンポーネントにアクセスできない場合や、例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1031">When the <xref:System.Diagnostics.EventLog.EntryWritten> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception.</span></span> <span data-ttu-id="b441b-1032">これを回避するには、<xref:System.Diagnostics.EventLog.SynchronizingObject%2A> を Windows フォームコンポーネントに設定します。これにより、<xref:System.Diagnostics.EventLog.EntryWritten> イベントを処理するメソッドが、コンポーネントが作成されたのと同じスレッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1032">Avoid this by setting <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> to a Windows Forms component, which causes the methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="b441b-1033"><xref:System.Diagnostics.EventLog> が Windows フォームデザイナーの [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 内で使用されている場合、<xref:System.Diagnostics.EventLog.SynchronizingObject%2A> は自動的に <xref:System.Diagnostics.EventLog>を含むコントロールに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1033">If the <xref:System.Diagnostics.EventLog> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is automatically set to the control containing the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="b441b-1034">たとえば、Form1 のデザイナー (<xref:System.Windows.Forms.Form>から継承) に <xref:System.Diagnostics.EventLog> を配置した場合、<xref:System.Diagnostics.EventLog> の <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> プロパティは、Form1 のインスタンスに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1034">For example, if you place an <xref:System.Diagnostics.EventLog> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> property of <xref:System.Diagnostics.EventLog> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1035">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1035">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1036">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1036">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
        <altmember cref="T:System.Threading.ThreadPool" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-1037">イベント ログにエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1037">Writes an entry in the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="eventLog.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b441b-1038">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1038">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="b441b-1039">種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1039">Writes an information type entry, with the given message text, to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1040">このメソッドを使用して、この <xref:System.Diagnostics.EventLog> インスタンスに関連付けられているイベントログに情報エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1040">Use this method to write an information entry to the event log associated with this <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="b441b-1041">他の <xref:System.Diagnostics.EventLogEntryType>を指定する場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A>の別のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1041">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1042">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1042">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1043">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1043">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1044">ログにエントリを書き込むには、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1044">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="b441b-1045">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1045">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-1046">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1046">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1047">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1047">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1048">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1048">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1049">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1049">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1050">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1050">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1051">この <xref:System.Diagnostics.EventLog> インスタンスの [<xref:System.Diagnostics.EventLog.Source%2A>] プロパティで指定されたソースが、コンポーネントの書き込み先のコンピューターに登録されていない場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出してソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1051">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1052"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") が想定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1052">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1053">システムが <xref:System.Diagnostics.EventLog.WriteEntry%2A> の呼び出しによって <xref:System.Diagnostics.EventLog.Source%2A> を登録する必要があり、<xref:System.Diagnostics.EventLog> インスタンスに <xref:System.Diagnostics.EventLog.Log%2A> プロパティが設定されていない場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1053">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1054">上記の例外の多くは、<xref:System.Diagnostics.EventLog.Source%2A>の登録プロセス中に発生したエラーによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1054">Many of the exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1055">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1055">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1056"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1056">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1057">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1057">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1058">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1058">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1059">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1059">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1060">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1060">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1061">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework が実行されていないと、メッセージの値 (文字列) が予期したとおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1061">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1062">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1062">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1063">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1063">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1064"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1064">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1065">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1065">-or-</span></span> 
<span data-ttu-id="b441b-1066">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1066">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1067">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1067">-or-</span></span> 
<span data-ttu-id="b441b-1068">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1068">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1069">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1069">-or-</span></span> 
<span data-ttu-id="b441b-1070">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1070">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1071">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1071">-or-</span></span> 
<span data-ttu-id="b441b-1072">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1072">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1073">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1073">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1074">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1074">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1075">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1075">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1076">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1076">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1077">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1077">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="eventLog.WriteEntry (message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b441b-1078">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1078">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1079"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1079">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="b441b-1080">エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1080">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1081">このメソッドを使用して、指定した <xref:System.Diagnostics.EventLogEntryType> のエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1081">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log.</span></span> <span data-ttu-id="b441b-1082">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1082">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1083">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1083">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1084">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1084">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1085">ログにエントリを書き込むには、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1085">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="b441b-1086">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1086">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-1087">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1087">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1088">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1088">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1089">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1089">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1090">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1090">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1091">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1091">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1092">この <xref:System.Diagnostics.EventLog> インスタンスの [<xref:System.Diagnostics.EventLog.Source%2A>] プロパティで指定されたソースが、コンポーネントの書き込み先のコンピューターに登録されていない場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出してソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1092">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1093"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") が想定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1093">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1094">システムが <xref:System.Diagnostics.EventLog.WriteEntry%2A> の呼び出しによって <xref:System.Diagnostics.EventLog.Source%2A> を登録する必要があり、<xref:System.Diagnostics.EventLog> インスタンスに <xref:System.Diagnostics.EventLog.Log%2A> プロパティが設定されていない場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1094">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1095">上記の例外の多くは、<xref:System.Diagnostics.EventLog.Source%2A>の登録プロセス中に発生したエラーによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1095">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1096">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1096">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1097"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1097">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1098">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1098">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1099">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1099">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1100">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1100">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1101">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1101">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1102">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework が実行されていないと、メッセージの値 (文字列) が予期したとおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1102">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1103">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1103">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1104">次の例では、警告エントリをローカルコンピューター上のイベントログ "MyNewLog" に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1104">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1105"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1105">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1106">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1106">-or-</span></span> 
<span data-ttu-id="b441b-1107">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1107">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1108">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1108">-or-</span></span> 
<span data-ttu-id="b441b-1109">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1109">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1110">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1110">-or-</span></span> 
<span data-ttu-id="b441b-1111">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1111">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1112">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1112">-or-</span></span> 
<span data-ttu-id="b441b-1113">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1113">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1114"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1114"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1115">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1115">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1116">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1116">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1117">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1117">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1118">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1118">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1119">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1119">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1120">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-1120">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="b441b-1121">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1121">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="b441b-1122">指定した登録イベント ソースを使用して、種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1122">Writes an information type entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1123">このメソッドを使用して、適切なログのイベントソースとして既に登録されているソースを使用して、イベントログに情報エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1123">Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1124">他の <xref:System.Diagnostics.EventLogEntryType>を指定する場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A>の別のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1124">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1125">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1125">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1126">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1126">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1127">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1127">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1128">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1128">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1129">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1129">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1130">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1130">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1131">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1131">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1132"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1132">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1133">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1133">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1134">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1134">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1135">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1135">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1136">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1136">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1137">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1137">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="b441b-1138">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1138">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1139">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1139">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1140">次の例では、ソース `MySource` がまだ存在しない場合は作成し、イベントログ `MyNewLog`にエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1140">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1141"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1141">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1142">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1142">-or-</span></span> 
<span data-ttu-id="b441b-1143"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1143">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1144">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1144">-or-</span></span> 
<span data-ttu-id="b441b-1145">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1145">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1146">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1146">-or-</span></span> 
<span data-ttu-id="b441b-1147">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1147">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1148">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1148">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1149">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1149">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1150">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1150">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1151">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1151">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1152">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1152">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b441b-1153">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1153">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1154"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1154">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1155">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1155">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="b441b-1156">エントリを、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1156">Writes an entry with the given message text and application-defined event identifier to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1157">このメソッドを使用して、アプリケーションで定義された `eventID` のエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1157">Use this method to write an entry with an application-defined `eventID` to the event log.</span></span> <span data-ttu-id="b441b-1158">`eventID` は、ソースと共にイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1158">The `eventID` together with the source uniquely identify an event.</span></span> <span data-ttu-id="b441b-1159">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1159">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1160">イベントビューアーには、発生した問題をユーザーが理解し、実行するアクションを提案できるように、これらの文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1160">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1161">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1161">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1162">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1162">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1163">イベント識別子に加えて、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1163">In addition to the event identifier, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1164">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1164">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1165">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1165">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1166">ログにエントリを書き込むには、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1166">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="b441b-1167">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1167">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-1168">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1168">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1169">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1169">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1170">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1170">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1171">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1171">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1172">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1172">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1173">この <xref:System.Diagnostics.EventLog> インスタンスの [<xref:System.Diagnostics.EventLog.Source%2A>] プロパティで指定されたソースが、コンポーネントの書き込み先のコンピューターに登録されていない場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出してソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1173">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1174"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") が想定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1174">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1175">システムが <xref:System.Diagnostics.EventLog.WriteEntry%2A> の呼び出しによって <xref:System.Diagnostics.EventLog.Source%2A> を登録する必要があり、<xref:System.Diagnostics.EventLog> インスタンスに <xref:System.Diagnostics.EventLog.Log%2A> プロパティが設定されていない場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1175">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1176">上記の例外の多くは、<xref:System.Diagnostics.EventLog.Source%2A>の登録プロセス中に発生したエラーによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1176">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1177">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1177">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1178"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1178">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1179">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1179">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1180">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1180">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1181">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1181">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1182">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1182">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1183">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework が実行されていないと、メッセージの値 (文字列) が予期したとおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1183">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1184">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1184">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1185"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1185">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1186">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1186">-or-</span></span> 
<span data-ttu-id="b441b-1187">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1187">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1188">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1188">-or-</span></span> 
<span data-ttu-id="b441b-1189">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1189">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1190">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1190">-or-</span></span> 
 <span data-ttu-id="b441b-1191"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1191"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1192">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1192">-or-</span></span> 
<span data-ttu-id="b441b-1193">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1193">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1194">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1194">-or-</span></span> 
<span data-ttu-id="b441b-1195">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1195">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1196">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1196">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1197"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1197"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1198">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1198">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1199">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1199">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1200">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1200">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1201">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1201">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1202">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-1202">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="b441b-1203">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1203">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1204"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1204">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="b441b-1205">指定した登録イベント ソースを使用して、エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1205">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1206">このメソッドを使用すると、適切なログのイベントソースとして既に登録されているソースを使用して、指定した <xref:System.Diagnostics.EventLogEntryType> のエントリをイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1206">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1207">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1207">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1208">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1208">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1209">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1209">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1210">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1210">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1211">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1211">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1212">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1212">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1213">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1213">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1214">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1214">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1215">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1215">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1216">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1216">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1217"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1217">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1218">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1218">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1219">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1219">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1220">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1220">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1221">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1221">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1222">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1222">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1223">次の例では、警告エントリをローカルコンピューター上のイベントログ "MyNewLog" に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1223">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1224"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1224">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1225">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1225">-or-</span></span> 
<span data-ttu-id="b441b-1226"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1226">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1227">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1227">-or-</span></span> 
<span data-ttu-id="b441b-1228">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1228">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1229">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1229">-or-</span></span> 
<span data-ttu-id="b441b-1230">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1230">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1231">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1231">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1232"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1232"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1233">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1233">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1234">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1234">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1235">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1235">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1236">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1236">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b441b-1237">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1237">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1238"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1238">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1239">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1239">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="b441b-1240">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1240">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="b441b-1241">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1241">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1242">このメソッドを使用して、アプリケーションで定義された `category` のエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1242">Use this method to write an entry with an application-defined `category` to the event log.</span></span> <span data-ttu-id="b441b-1243">イベントビューアーは、カテゴリを使用して、イベントソースによって書き込まれたイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1243">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="b441b-1244">イベントビューアーでは、カテゴリを数値として表示できます。また、カテゴリをリソース識別子として使用して、ローカライズされたカテゴリ文字列を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1244">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1245">`category` パラメーターは正の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1245">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="b441b-1246">負のカテゴリの値は、イベントビューアーの補完的な正の数値として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1246">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="b441b-1247">たとえば、-10 は65526として、-1 は65535として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1247">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1248">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1248">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1249">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1249">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1250">イベントビューアーでローカライズされたカテゴリ文字列を表示するには、カテゴリリソースファイルで構成されたイベントソースを使用し、カテゴリリソースファイル内のリソース識別子に `category` を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1250">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="b441b-1251">イベントソースにカテゴリリソースファイルが構成されていない場合、または指定された `category` がカテゴリリソースファイル内の文字列にインデックスを設定していない場合、イベントビューアーにはそのエントリの数値カテゴリの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1251">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="b441b-1252"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventSourceCreationData> クラスを使用して、リソースファイル内のカテゴリの文字列の数と共にカテゴリリソースファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1252">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="b441b-1253">カテゴリに加えて、イベントログに書き込まれるイベントのイベント識別子を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1253">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1254">イベント識別子は、イベントソースと共に、イベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1254">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="b441b-1255">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1255">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1256">イベントビューアーには、発生した問題をユーザーが理解し、実行するアクションを提案できるように、これらの文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1256">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="b441b-1257">最後に、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1257">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1258">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1258">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1259">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1259">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1260">ログにエントリを書き込むには、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1260">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="b441b-1261">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1261">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-1262">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1262">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1263">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1263">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1264">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1264">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1265">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1265">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1266">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1266">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1267">この <xref:System.Diagnostics.EventLog> インスタンスの [<xref:System.Diagnostics.EventLog.Source%2A>] プロパティで指定されたソースが、コンポーネントの書き込み先のコンピューターに登録されていない場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出してソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1267">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1268"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") が想定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1268">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1269">システムが <xref:System.Diagnostics.EventLog.WriteEntry%2A> の呼び出しによって <xref:System.Diagnostics.EventLog.Source%2A> を登録する必要があり、<xref:System.Diagnostics.EventLog> インスタンスに <xref:System.Diagnostics.EventLog.Log%2A> プロパティが設定されていない場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1269">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1270">上記の例外の多くは、<xref:System.Diagnostics.EventLog.Source%2A>の登録プロセス中に発生したエラーによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1270">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1271">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1271">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1272"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1272">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1273">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1273">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1274">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1274">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1275">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1275">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1276">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1276">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1277">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework が実行されていないと、メッセージの値 (文字列) が予期したとおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1277">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1278">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1278">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1279"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1279">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1280">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1280">-or-</span></span> 
<span data-ttu-id="b441b-1281">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1281">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1282">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1282">-or-</span></span> 
<span data-ttu-id="b441b-1283">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1283">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1284">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1284">-or-</span></span> 
 <span data-ttu-id="b441b-1285"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1285"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1286">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1286">-or-</span></span> 
<span data-ttu-id="b441b-1287">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1287">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1288">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1288">-or-</span></span> 
<span data-ttu-id="b441b-1289">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1289">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1290">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1290">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1291"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1291"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1292">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1292">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1293">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1293">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1294">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1294">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1295">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1295">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1296">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-1296">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="b441b-1297">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1297">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1298"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1298">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1299">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1299">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="b441b-1300">指定した登録イベント ソースを使用して、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1300">Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1301">このメソッドを使用して、適切なログのイベントソースとして既に登録されているソースを使用して、アプリケーション定義の `eventID` と共にエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1301">Use this method to write an entry with an application-defined `eventID` to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1302">`eventID`は、ソースと共にイベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1302">The `eventID`, along with the source, uniquely identify an event.</span></span> <span data-ttu-id="b441b-1303">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1303">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1304">イベントビューアーは、これらの文字列をユーザーに提示して、問題の原因を把握し、実行するアクションを提案します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1304">Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1305">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1305">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1306">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1306">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="b441b-1307">イベント識別子に加えて、この <xref:System.Diagnostics.EventLog.WriteEntry%2A> のオーバーロードでは、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1307">In addition to the event identifier, this overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A> lets you specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1308">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1308">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1309">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1309">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1310">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1310">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1311">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1311">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1312">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1312">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1313">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1313">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1314">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1314">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1315">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1315">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1316">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1316">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1317"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1317">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1318">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1318">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1319">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1319">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1320">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1320">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1321">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1321">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1322">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1322">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_4/CPP/eventlog_writeentry_4.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_4/CS/eventlog_writeentry_4.cs#1)]
 [!code-vb[EventLog_WriteEntry_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_4/VB/eventlog_writeentry_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1323"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1323">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1324">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1324">-or-</span></span> 
<span data-ttu-id="b441b-1325"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1325">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1326">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1326">-or-</span></span> 
 <span data-ttu-id="b441b-1327"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1327"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1328">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1328">-or-</span></span> 
<span data-ttu-id="b441b-1329">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1329">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1330">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1330">-or-</span></span> 
<span data-ttu-id="b441b-1331">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1331">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1332">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1332">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1333"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1333"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1334">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1334">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1335">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1335">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1336">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1336">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1337">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1337">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b441b-1338">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1338">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1339"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1339">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1340">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1340">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="b441b-1341">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1341">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="b441b-1342">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1342">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1343">指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1343">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1344">このオーバーロードを使用して、アプリケーション定義のイベント固有のデータをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1344">Use this overload to write application-defined event-specific data to the event log.</span></span> <span data-ttu-id="b441b-1345">イベントビューアーは、このデータを解釈しません。生データは、16進数とテキスト形式の組み合わせでのみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1345">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="b441b-1346">イベント固有のデータは控えめに使用してください。これは、問題をデバッグするユーザーにとって役に立つ場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1346">Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem.</span></span> <span data-ttu-id="b441b-1347">また、イベント固有のデータを使用して、アプリケーションがイベントビューアーとは関係なく処理できる情報を格納することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1347">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="b441b-1348">たとえば、イベント用のビューアーを作成したり、ログファイルをスキャンするプログラムを記述したり、イベント固有のデータからの情報を含むレポートを作成したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1348">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="b441b-1349">バイナリデータに加えて、アプリケーション定義のカテゴリとアプリケーション定義のイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1349">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="b441b-1350">イベントビューアーは、カテゴリを使用して、イベントソースによって書き込まれたイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1350">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="b441b-1351">イベントビューアーでは、カテゴリを数値として表示できます。また、カテゴリをリソース識別子として使用して、ローカライズされたカテゴリ文字列を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1351">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1352">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1352">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1353">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1353">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1354">`category` パラメーターは正の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1354">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="b441b-1355">負のカテゴリの値は、イベントビューアーの補完的な正の数値として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1355">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="b441b-1356">たとえば、-10 は65526として、-1 は65535として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1356">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="b441b-1357">イベントビューアーでローカライズされたカテゴリ文字列を表示するには、カテゴリリソースファイルで構成されたイベントソースを使用し、カテゴリリソースファイル内のリソース識別子に `category` を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1357">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="b441b-1358">イベントソースにカテゴリリソースファイルが構成されていない場合、または指定された `category` がカテゴリリソースファイル内の文字列にインデックスを設定していない場合、イベントビューアーにはそのエントリの数値カテゴリの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1358">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="b441b-1359"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventSourceCreationData> クラスを使用して、リソースファイル内のカテゴリの文字列の数と共にカテゴリリソースファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1359">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="b441b-1360">イベント識別子は、イベントソースと共に、イベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1360">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="b441b-1361">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1361">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1362">イベントビューアーには、発生した問題をユーザーが理解し、実行するアクションを提案できるように、これらの文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1362">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="b441b-1363">最後に、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1363">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1364">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1364">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1365">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1365">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1366">ログにエントリを書き込むには、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1366">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="b441b-1367">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1367">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="b441b-1368">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1368">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1369">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1369">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1370">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1370">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1371">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1371">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1372">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1372">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1373">この <xref:System.Diagnostics.EventLog> インスタンスの [<xref:System.Diagnostics.EventLog.Source%2A>] プロパティで指定されたソースが、コンポーネントの書き込み先のコンピューターに登録されていない場合、<xref:System.Diagnostics.EventLog.WriteEntry%2A> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> を呼び出してソースを登録します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1373">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1374"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") が想定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1374">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1375">システムが <xref:System.Diagnostics.EventLog.WriteEntry%2A> の呼び出しによって <xref:System.Diagnostics.EventLog.Source%2A> を登録する必要があり、<xref:System.Diagnostics.EventLog> インスタンスに <xref:System.Diagnostics.EventLog.Log%2A> プロパティが設定されていない場合、ログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1375">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1376">上記の例外の多くは、<xref:System.Diagnostics.EventLog.Source%2A>の登録プロセス中に発生したエラーによって生成されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1376">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="b441b-1377">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1377">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1378"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1378">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1379">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1379">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1380">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1380">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1381">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1381">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1382">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1382">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1383">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework が実行されていないと、メッセージの値 (文字列) が予期したとおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1383">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1384">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1384">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_5#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_5/CPP/eventlog_writeentry_5.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_5#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_5/CS/eventlog_writeentry_5.cs#1)]
 [!code-vb[EventLog_WriteEntry_5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_5/VB/eventlog_writeentry_5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1385"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1385">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1386">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1386">-or-</span></span> 
<span data-ttu-id="b441b-1387">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1387">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1388">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1388">-or-</span></span> 
<span data-ttu-id="b441b-1389">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1389">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1390">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1390">-or-</span></span> 
 <span data-ttu-id="b441b-1391"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1391"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1392">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1392">-or-</span></span> 
<span data-ttu-id="b441b-1393">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1393">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1394">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1394">-or-</span></span> 
<span data-ttu-id="b441b-1395">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1395">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1396">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1396">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1397"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1397"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1398">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1398">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1399">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1399">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1400">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1400">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1401">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1401">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1402">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-1402">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="b441b-1403">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1403">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1404"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1404">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1405">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1405">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="b441b-1406">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1406">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="b441b-1407">指定した登録イベント ソースを使用して、メッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1407">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source.</span></span> <span data-ttu-id="b441b-1408"><paramref name="category" /> は、イベント ビューアーでログ内のイベントをフィルター処理するときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1408">The <paramref name="category" /> can be used by the Event Viewer to filter events in the log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1409">このメソッドを使用して、適切なログのイベントソースとして既に登録されているソースを使用して、アプリケーション定義の `category` と共にエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1409">Use this method to write an entry with an application-defined `category` to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1410">イベントビューアーは、カテゴリを使用して、イベントソースによって書き込まれたイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1410">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="b441b-1411">イベントビューアーでは、カテゴリを数値として表示できます。また、カテゴリをリソース識別子として使用して、ローカライズされたカテゴリ文字列を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1411">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1412">`category` パラメーターは正の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1412">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="b441b-1413">負のカテゴリの値は、イベントビューアーの補完的な正の数値として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1413">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="b441b-1414">たとえば、-10 は65526として、-1 は65535として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1414">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="b441b-1415">イベントビューアーでローカライズされたカテゴリ文字列を表示するには、カテゴリリソースファイルで構成されたイベントソースを使用し、カテゴリリソースファイル内のリソース識別子に `category` を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1415">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="b441b-1416">イベントソースにカテゴリリソースファイルが構成されていない場合、または指定された `category` がカテゴリリソースファイル内の文字列にインデックスを設定していない場合、イベントビューアーにはそのエントリの数値カテゴリの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1416">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="b441b-1417"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventSourceCreationData> クラスを使用して、リソースファイル内のカテゴリの文字列の数と共にカテゴリリソースファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1417">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="b441b-1418">カテゴリに加えて、イベントログに書き込まれるイベントのイベント識別子を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1418">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1419">イベント識別子は、イベントソースと共に、イベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1419">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="b441b-1420">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1420">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1421">イベントビューアーには、発生した問題をユーザーが理解し、実行するアクションを提案できるように、これらの文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1421">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="b441b-1422">最後に、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1422">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1423">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1423">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1424">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1424">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1425">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1425">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1426">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1426">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1427">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1427">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1428">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1428">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1429">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1429">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1430">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1430">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1431">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1431">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1432"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1432">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1433">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1433">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1434">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1434">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1435">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1435">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1436">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1436">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1437">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1437">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="b441b-1438">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1438">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1439">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1439">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_1_3#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#1)]
 [!code-vb[EventLog_WriteEntry_1_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1440"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1440">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1441">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1441">-or-</span></span> 
<span data-ttu-id="b441b-1442"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1442">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1443">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1443">-or-</span></span> 
 <span data-ttu-id="b441b-1444"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1444"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1445">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1445">-or-</span></span> 
<span data-ttu-id="b441b-1446">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1446">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1447">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1447">-or-</span></span> 
<span data-ttu-id="b441b-1448">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1448">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1449">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1449">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1450"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1450"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1451">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1451">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1452">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1452">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1453">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1453">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1454">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1454">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1455">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</span><span class="sxs-lookup"><span data-stu-id="b441b-1455">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="b441b-1456">イベント ログに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1456">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="b441b-1457"><see cref="T:System.Diagnostics.EventLogEntryType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1457">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="b441b-1458">イベントの、アプリケーション固有の識別子。</span><span class="sxs-lookup"><span data-stu-id="b441b-1458">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="b441b-1459">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b441b-1459">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="b441b-1460">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1460">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1461">指定した登録イベント ソースを使用して、指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1461">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1462">このメソッドを使用すると、適切なログのイベントソースとして既に登録されているソースを使用して、アプリケーション定義のイベント固有のデータをイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1462">Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1463">イベントビューアーは、このデータを解釈しません。生データは、16進数とテキスト形式の組み合わせでのみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1463">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="b441b-1464">イベント固有のデータは控えめに使用します。役に立つ場合にのみ含めてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1464">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="b441b-1465">また、イベント固有のデータを使用して、アプリケーションがイベントビューアーとは関係なく処理できる情報を格納することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1465">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="b441b-1466">たとえば、イベント用のビューアーを作成したり、ログファイルをスキャンするプログラムを記述したり、イベント固有のデータからの情報を含むレポートを作成したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1466">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="b441b-1467">バイナリデータに加えて、アプリケーション定義のカテゴリとアプリケーション定義のイベント識別子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1467">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="b441b-1468">イベントビューアーは、カテゴリを使用して、イベントソースによって書き込まれたイベントをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1468">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="b441b-1469">イベントビューアーでは、カテゴリを数値として表示できます。また、カテゴリをリソース識別子として使用して、ローカライズされたカテゴリ文字列を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1469">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1470">`category` パラメーターは正の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1470">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="b441b-1471">負のカテゴリの値は、イベントビューアーの補完的な正の数値として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1471">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="b441b-1472">たとえば、-10 は65526として表示され、-1 は65535として表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1472">For example, a -10 will appear as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="b441b-1473">イベントビューアーでローカライズされたカテゴリ文字列を表示するには、カテゴリリソースファイルで構成されたイベントソースを使用し、カテゴリリソースファイル内のリソース識別子に `category` を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1473">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="b441b-1474">イベントソースにカテゴリリソースファイルが構成されていない場合、または指定された `category` がカテゴリリソースファイル内の文字列にインデックスを設定していない場合、イベントビューアーにはそのエントリの数値カテゴリの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1474">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="b441b-1475"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventSourceCreationData> クラスを使用して、リソースファイル内のカテゴリの文字列の数と共にカテゴリリソースファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1475">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="b441b-1476">イベント識別子は、イベントソースと共に、イベントを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1476">Event identifiers, together with the event source, uniquely identify an event.</span></span> <span data-ttu-id="b441b-1477">各アプリケーションは、独自の番号付きイベントと、マップ先の説明文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1477">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="b441b-1478">イベントビューアーには、発生した問題をユーザーが理解し、実行するアクションを提案できるように、これらの文字列値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1478">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="b441b-1479">最後に、イベントログに書き込まれるイベントの <xref:System.Diagnostics.EventLogEntryType> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1479">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="b441b-1480">`type` は、ログのイベントビューアーの [型] 列のアイコンとテキストで示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1480">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="b441b-1481">このパラメーターは、イベントの種類がエラー、警告、情報、成功の監査、または失敗の監査のいずれであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1481">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="b441b-1482">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1482">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1483">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1483">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1484">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1484">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1485">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1485">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1486">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1486">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1487">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1487">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1488">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1488">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1489"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1489">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="b441b-1490">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1490">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="b441b-1491">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1491">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1492">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1492">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1493">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1493">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1494">`message` パラメーターに NUL 文字が含まれている場合、イベントログ内のメッセージは NUL 文字で終了します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1494">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="b441b-1495">`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーが挿入文字列として扱います。</span><span class="sxs-lookup"><span data-stu-id="b441b-1495">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1496">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1496">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#2)]
 [!code-csharp[EventLog_WriteEntry_1_3#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#2)]
 [!code-vb[EventLog_WriteEntry_1_3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1497"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1497">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1498">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1498">-or-</span></span> 
<span data-ttu-id="b441b-1499"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1499">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1500">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1500">-or-</span></span> 
 <span data-ttu-id="b441b-1501"><paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1501"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1502">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1502">-or-</span></span> 
<span data-ttu-id="b441b-1503">メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1503">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="b441b-1504">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1504">-or-</span></span> 
<span data-ttu-id="b441b-1505">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1505">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b441b-1506"><paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1506"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1507">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1507">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1508">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1508">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1509">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1509">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1510">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1510">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1511">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1511">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b441b-1512">ローカライズされたイベント エントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1512">Writes a localized event entry to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b441b-1513">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b441b-1513">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="b441b-1514">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1514">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1515">ローカライズされたエントリをイベント ログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1515">Writes a localized entry to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1516">このメソッドを使用して、ローカライズされたエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1516">Use this method to write a localized entry to the event log.</span></span> <span data-ttu-id="b441b-1517">イベントプロパティは、文字列値ではなくリソース識別子を使用して指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1517">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="b441b-1518">イベントビューアーは、リソース識別子を使用して、<xref:System.Diagnostics.EventLog.Source%2A>のローカライズされたリソースファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1518">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="b441b-1519">リソース識別子を使用してイベントを作成する前に、ソースを対応するリソースファイルに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1519">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="b441b-1520">入力 `instance` インスタンスでは、イベントメッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1520">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="b441b-1521">送信元メッセージリソースファイルで定義されているメッセージの `instance` 入力の <xref:System.Diagnostics.EventInstance.InstanceId%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1521">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="b441b-1522">必要に応じて、`instance` 入力の <xref:System.Diagnostics.EventInstance.CategoryId%2A> と <xref:System.Diagnostics.EventInstance.EntryType%2A> を設定して、イベントエントリのカテゴリとイベントの種類を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1522">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="b441b-1523">また、言語に依存しない文字列の配列を指定して、ローカライズされたメッセージテキストに挿入することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1523">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="b441b-1524">イベントメッセージに置換文字列の書式設定プレースホルダーが含まれていない場合は、`values` を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1524">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="b441b-1525"><xref:System.Diagnostics.EventLog.WriteEvent%2A>を使用する前に、<xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1525">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="b441b-1526">ローカライズされたエントリをログに書き込むように、指定したソースが構成されている必要があります。ソースには、少なくともメッセージリソースファイルが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1526">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="b441b-1527">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1527">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1528">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1528">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1529">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1529">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1530">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1530">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1531">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1531">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1532">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1532">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1533">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1533">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1534">アプリケーションが文字列値をイベントログに直接書き込む場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1534">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="b441b-1535">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1535">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1536">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1536">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1537">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1537">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1538">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework を実行していないと、`message` 文字列の値が期待どおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1538">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="b441b-1539">また、`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーでは挿入文字列として扱われるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1539">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1540">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1540">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1541">次の例では、2つの監査エントリをイベントログ `myNewLog`に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1541">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="b441b-1542">この例では、新しいイベントソースと新しいイベントログがローカルコンピューターに存在しない場合は、それを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1542">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="b441b-1543">イベントメッセージテキストは、リソースファイル内のリソース識別子を使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1543">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="b441b-1544">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1544">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-1545">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1545">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-1546">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1546">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1547"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1547">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1548">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1548">-or-</span></span> 
<span data-ttu-id="b441b-1549">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1549">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1550">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1550">-or-</span></span> 
<span data-ttu-id="b441b-1551">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1551">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1552">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1552">-or-</span></span> 
 <span data-ttu-id="b441b-1553"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1553"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1554">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1554">-or-</span></span> 
 <span data-ttu-id="b441b-1555"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1555"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="b441b-1556">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1556">-or-</span></span> 
<span data-ttu-id="b441b-1557"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1557">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="b441b-1558">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1558">-or-</span></span> 
<span data-ttu-id="b441b-1559">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1559">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-1560"><paramref name="instance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1560"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1561">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1561">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1562">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1562">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1563">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1563">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1564">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1564">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1565">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1565">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b441b-1566">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b441b-1566">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="b441b-1567">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1567">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="b441b-1568">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1568">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1569">指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1569">Writes an event log entry with the given event data, message replacement strings, and associated binary data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1570">このメソッドを使用して、ローカライズされたエントリを追加のイベント固有のデータと共にイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1570">Use this method to write a localized entry with additional event-specific data to the event log.</span></span> <span data-ttu-id="b441b-1571">イベントプロパティは、文字列値ではなくリソース識別子を使用して指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1571">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="b441b-1572">イベントビューアーは、リソース識別子を使用して、<xref:System.Diagnostics.EventLog.Source%2A>のローカライズされたリソースファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1572">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="b441b-1573">リソース識別子を使用してイベントを作成する前に、ソースを対応するリソースファイルに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1573">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="b441b-1574">入力 `instance` インスタンスでは、イベントメッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1574">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="b441b-1575">送信元メッセージリソースファイルで定義されているメッセージの `instance` 入力の <xref:System.Diagnostics.EventInstance.InstanceId%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1575">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="b441b-1576">必要に応じて、`instance` 入力の <xref:System.Diagnostics.EventInstance.CategoryId%2A> と <xref:System.Diagnostics.EventInstance.EntryType%2A> を設定して、イベントエントリのカテゴリとイベントの種類を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1576">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="b441b-1577">また、言語に依存しない文字列の配列を指定して、ローカライズされたメッセージテキストに挿入することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1577">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="b441b-1578">イベントメッセージに置換文字列の書式設定プレースホルダーが含まれていない場合は、`values` を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1578">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="b441b-1579">イベントに追加の詳細を指定する必要がある場合は、イベントでバイナリデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1579">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="b441b-1580">たとえば、`data` パラメーターを使用して、特定のエラーに関する情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1580">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="b441b-1581">イベントビューアーは、関連付けられているイベントデータを解釈しません。データは、16進数とテキスト形式の組み合わせで表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1581">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="b441b-1582">イベント固有のデータは控えめに使用します。役に立つ場合にのみ含めてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1582">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="b441b-1583">また、イベント固有のデータを使用して、アプリケーションがイベントビューアーとは関係なく処理できる情報を格納することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1583">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="b441b-1584">たとえば、イベント専用のビューアーを作成したり、イベントログをスキャンしてイベント固有のデータからの情報を含むレポートを作成するプログラムを記述したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1584">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="b441b-1585"><xref:System.Diagnostics.EventLog.WriteEvent%2A>を使用する前に、コンポーネントの前に <xref:System.Diagnostics.EventLog> コンポーネントの <xref:System.Diagnostics.EventLog.Source%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1585">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="b441b-1586">ローカライズされたエントリをログに書き込むように、指定したソースが構成されている必要があります。ソースには、少なくともメッセージリソースファイルが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1586">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="b441b-1587">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1587">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1588">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1588">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1589">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1589">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1590">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1590">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1591">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1591">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1592">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1592">You must have administrative rights on the computer to create a new event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1593"><xref:System.Diagnostics.EventLog.WriteEvent%2A>を呼び出す前に <xref:System.Diagnostics.EventLog> インスタンスの <xref:System.Diagnostics.EventLog.MachineName%2A> を指定しなかった場合は、ローカルコンピューター (".") と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1593">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="b441b-1594">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1594">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1595">アプリケーションが文字列値をイベントログに直接書き込む場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1595">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="b441b-1596">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1596">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1597">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1597">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1598">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1598">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b441b-1599">リモートコンピューターにエントリを書き込む場合、リモートコンピューターで .NET Framework を実行していないと、`message` 文字列の値が期待どおりではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1599">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="b441b-1600">また、`message` 文字列には%*n*を含めることができません。ここで、 *n*は整数値 (たとえば、%1) です。これは、イベントビューアーでは挿入文字列として扱われるためです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1600">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="b441b-1601">インターネットプロトコルバージョン 6 (IPv6) アドレスにはこの文字シーケンスを含めることができるため、IPv6 アドレスを含むイベントメッセージをログに記録することはできません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1601">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1602">次の例では、2つの監査エントリをイベントログ `myNewLog`に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1602">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="b441b-1603">この例では、新しいイベントソースと新しいイベントログがローカルコンピューターに存在しない場合は、それを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1603">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="b441b-1604">イベントメッセージテキストは、リソースファイル内のリソース識別子を使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1604">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="b441b-1605">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1605">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-1606">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1606">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-1607">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1607">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1608"><see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1608">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="b441b-1609">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1609">-or-</span></span> 
<span data-ttu-id="b441b-1610">メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1610">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="b441b-1611">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1611">-or-</span></span> 
<span data-ttu-id="b441b-1612">ソースは既に別のイベント ログに登録されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1612">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="b441b-1613">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1613">-or-</span></span> 
 <span data-ttu-id="b441b-1614"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1614"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1615">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1615">-or-</span></span> 
 <span data-ttu-id="b441b-1616"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1616"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="b441b-1617">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1617">-or-</span></span> 
<span data-ttu-id="b441b-1618"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1618">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="b441b-1619">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1619">-or-</span></span> 
<span data-ttu-id="b441b-1620">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1620">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-1621"><paramref name="instance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1621"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1622">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1622">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1623">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1623">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1624">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1624">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1625">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1625">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1626">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1626">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1627">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-1627">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="b441b-1628">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b441b-1628">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="b441b-1629">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1629">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1630">指定した登録イベント ソースを使用して、指定したイベント データとメッセージ置換文字列と共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1630">Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1631">このメソッドを使用すると、適切なログのイベントソースとして既に登録されているソースを使用して、ローカライズされたエントリをイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1631">Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1632">イベントプロパティは、文字列値ではなくリソース識別子を使用して指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1632">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="b441b-1633">イベントビューアーは、リソース識別子を使用して、ソースのローカライズされたリソースファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1633">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="b441b-1634">リソース識別子を使用してイベントを作成する前に、ソースを対応するリソースファイルに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1634">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="b441b-1635">入力 `instance` インスタンスでは、イベントメッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1635">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="b441b-1636">送信元メッセージリソースファイルで定義されているメッセージの `instance` 入力の <xref:System.Diagnostics.EventInstance.InstanceId%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1636">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="b441b-1637">必要に応じて、`instance` 入力の <xref:System.Diagnostics.EventInstance.CategoryId%2A> と <xref:System.Diagnostics.EventInstance.EntryType%2A> を設定して、イベントエントリのカテゴリとイベントの種類を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1637">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="b441b-1638">また、言語に依存しない文字列の配列を指定して、ローカライズされたメッセージテキストに挿入することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1638">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="b441b-1639">イベントメッセージに置換文字列の書式設定プレースホルダーが含まれていない場合は、`values` を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1639">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="b441b-1640"><xref:System.Diagnostics.EventLog.WriteEvent%2A>を使用する前に、指定したソースがイベントログに登録されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1640">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="b441b-1641">ローカライズされたエントリをログに書き込むように、指定したソースが構成されている必要があります。ソースには、少なくともメッセージリソースファイルが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1641">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="b441b-1642">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1642">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1643">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1643">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1644">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1644">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1645">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1645">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1646">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1646">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1647">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1647">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1648">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1648">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1649">アプリケーションが文字列値をイベントログに直接書き込む場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1649">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="b441b-1650">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1650">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1651">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1651">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1652">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1652">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1653">次の例では、情報イベントエントリと警告イベントエントリを既存のイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1653">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="b441b-1654">イベントメッセージテキストは、リソースファイル内のリソース識別子を使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1654">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="b441b-1655">この例では、対応するリソースファイルがソースに対して登録されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1655">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="b441b-1656">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1656">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-1657">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1657">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-1658">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1658">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1659"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1659">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1660">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1660">-or-</span></span> 
<span data-ttu-id="b441b-1661"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1661">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1662">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1662">-or-</span></span> 
 <span data-ttu-id="b441b-1663"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1663"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1664">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1664">-or-</span></span> 
 <span data-ttu-id="b441b-1665"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1665"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="b441b-1666">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1666">-or-</span></span> 
<span data-ttu-id="b441b-1667"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1667">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="b441b-1668">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1668">-or-</span></span> 
<span data-ttu-id="b441b-1669">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1669">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-1670"><paramref name="instance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1670"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1671">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1671">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1672">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1672">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1673">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1673">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1674">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1674">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1675">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1675">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b441b-1676">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="b441b-1676">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="b441b-1677">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b441b-1677">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="b441b-1678">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1678">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="b441b-1679">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b441b-1679">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="b441b-1680">指定した登録イベント ソースを使用して、指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1680">Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b441b-1681">このメソッドは、適切なログのイベントソースとして既に登録されているソースを使用して、イベント固有の追加データを含むローカライズされたエントリをイベントログに書き込む場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1681">Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="b441b-1682">イベントプロパティは、文字列値ではなくリソース識別子を使用して指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1682">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="b441b-1683">イベントビューアーは、リソース識別子を使用して、ソースのローカライズされたリソースファイルから対応する文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1683">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="b441b-1684">リソース識別子を使用してイベントを作成する前に、ソースを対応するリソースファイルに登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1684">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="b441b-1685">入力 `instance` インスタンスでは、イベントメッセージとプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1685">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="b441b-1686">送信元メッセージリソースファイルで定義されているメッセージの `instance` 入力の <xref:System.Diagnostics.EventInstance.InstanceId%2A> を設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1686">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="b441b-1687">必要に応じて、`instance` 入力の <xref:System.Diagnostics.EventInstance.CategoryId%2A> と <xref:System.Diagnostics.EventInstance.EntryType%2A> を設定して、イベントエントリのカテゴリとイベントの種類を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1687">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="b441b-1688">また、言語に依存しない文字列の配列を指定して、ローカライズされたメッセージテキストに挿入することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1688">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="b441b-1689">イベントメッセージに置換文字列の書式設定プレースホルダーが含まれていない場合は、`values` を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1689">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="b441b-1690">イベントに追加の詳細を指定する必要がある場合は、イベントでバイナリデータを指定します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1690">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="b441b-1691">たとえば、`data` パラメーターを使用して、特定のエラーに関する情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1691">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="b441b-1692">イベントビューアーは、関連付けられているイベントデータを解釈しません。データは、16進数とテキスト形式の組み合わせで表示されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1692">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="b441b-1693">イベント固有のデータは控えめに使用します。役に立つ場合にのみ含めてください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1693">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="b441b-1694">また、イベント固有のデータを使用して、アプリケーションがイベントビューアーとは関係なく処理できる情報を格納することもできます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1694">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="b441b-1695">たとえば、イベント専用のビューアーを作成したり、イベントログをスキャンしてイベント固有のデータからの情報を含むレポートを作成するプログラムを記述したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1695">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="b441b-1696"><xref:System.Diagnostics.EventLog.WriteEvent%2A>を使用する前に、指定したソースがイベントログに登録されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1696">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="b441b-1697">ローカライズされたエントリをログに書き込むように、指定したソースが構成されている必要があります。ソースには、少なくともメッセージリソースファイルが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1697">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="b441b-1698">ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1698">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="b441b-1699">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1699">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="b441b-1700">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1700">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="b441b-1701">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1701">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="b441b-1702">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1702">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="b441b-1703">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1703">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="b441b-1704">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1704">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="b441b-1705">アプリケーションが文字列値をイベントログに直接書き込む場合は、<xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1705">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="b441b-1706">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1706">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="b441b-1707">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1707">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="b441b-1708">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1708">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b441b-1709">次の例では、情報イベントエントリと警告イベントエントリを既存のイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1709">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="b441b-1710">イベントメッセージテキストは、リソースファイル内のリソース識別子を使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="b441b-1710">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="b441b-1711">この例では、対応するリソースファイルがソースに対して登録されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1711">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="b441b-1712">この例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1712">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="b441b-1713">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="b441b-1713">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="b441b-1714">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="b441b-1714">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b441b-1715"><paramref name="source" /> 値が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1715">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="b441b-1716">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1716">-or-</span></span> 
<span data-ttu-id="b441b-1717"><paramref name="source" /> 値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1717">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b441b-1718">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1718">-or-</span></span> 
 <span data-ttu-id="b441b-1719"><paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1719"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="b441b-1720">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1720">-or-</span></span> 
 <span data-ttu-id="b441b-1721"><paramref name="values" /> には 256 を超える要素が格納されています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1721"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="b441b-1722">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1722">-or-</span></span> 
<span data-ttu-id="b441b-1723"><paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b441b-1723">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="b441b-1724">または</span><span class="sxs-lookup"><span data-stu-id="b441b-1724">-or-</span></span> 
<span data-ttu-id="b441b-1725">ソース名は、254 文字を超えるレジストリ キーのパスになります。</span><span class="sxs-lookup"><span data-stu-id="b441b-1725">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b441b-1726"><paramref name="instance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b441b-1726"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b441b-1727">イベント ログのレジストリ キーを開けませんでした。</span><span class="sxs-lookup"><span data-stu-id="b441b-1727">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b441b-1728">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。</span><span class="sxs-lookup"><span data-stu-id="b441b-1728">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="b441b-1729">Windows のエラー コードは使用できません。</span><span class="sxs-lookup"><span data-stu-id="b441b-1729">A Windows error code is not available.</span></span></exception>
        <permission cref="T:System.Diagnostics.EventLogPermission"><span data-ttu-id="b441b-1730">を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b441b-1730">for writing the event log information on the computer.</span></span> <span data-ttu-id="b441b-1731">関連付けられた列挙型: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="b441b-1731">Associated enumeration: <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /></span></span></permission>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
  </Members>
</Type>
