<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e65c5780819e18370a9506d507712944cbc01224" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77228132" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cae4c-101">トレース出力またはデバッグ出力を XML エンコードされたデータとして <see cref="T:System.IO.TextWriter" /> または <see cref="T:System.IO.Stream" /> (<see cref="T:System.IO.FileStream" /> など) に転送します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cae4c-102"><xref:System.Diagnostics.XmlWriterTraceListener> クラスのインスタンスを作成するには、アンマネージコードのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="cae4c-103"><xref:System.Diagnostics.XmlWriterTraceListener> クラスは、トレース情報とデバッグ情報を XML エンコードされたテキストストリームに変換します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="cae4c-104">XML 出力の説明を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="cae4c-105">[サービストレースビューアーツール (svctraceviewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129)を使用して、XML 出力を表示できます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="cae4c-106">アプリケーション構成ファイルを使用して <xref:System.Diagnostics.XmlWriterTraceListener> を有効または無効にしてから、アプリケーションで構成された <xref:System.Diagnostics.XmlWriterTraceListener> を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="cae4c-107">または、コード内に <xref:System.Diagnostics.XmlWriterTraceListener> を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="cae4c-108"><xref:System.Diagnostics.XmlWriterTraceListener>を構成するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="cae4c-109">このファイルでは、リスナーを追加または削除したり、リスナーのプロパティを設定したり、リスナーを削除したりできます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="cae4c-110">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="cae4c-111"><xref:System.Diagnostics.XmlWriterTraceListener> クラスは、基本クラス <xref:System.Diagnostics.TraceListener>から <xref:System.Diagnostics.TraceListener.Filter%2A> プロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="cae4c-112"><xref:System.Diagnostics.TraceListener.Filter%2A> プロパティを使用すると、リスナーでトレース出力フィルター処理のレベルをさらに向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="cae4c-113">フィルターが存在する場合、トレースリスナーの `Trace` メソッドは、フィルターの <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> メソッドを呼び出して、トレースを出力するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cae4c-114">使用中または使用できないファイルへの書き込みが試行された場合、ファイル名の先頭に GUID が自動的に付けられます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cae4c-115">リスナーメソッドは、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメソッドによって呼び出されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="cae4c-116">リスナーメソッドは、アプリケーションコードから直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="cae4c-117"><xref:System.Diagnostics.XmlWriterTraceListener> リスナーは、主に <xref:System.Diagnostics.TraceSource> クラスで使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="cae4c-118"><xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> メソッドと <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> メソッドは、<xref:System.Diagnostics.Trace> クラスと <xref:System.Diagnostics.Debug> クラスによって呼び出すことができます。また、<xref:System.Diagnostics.Trace> と <xref:System.Diagnostics.Debug> が値を指定していない XML 要素の既定値が提供されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="cae4c-119">次の表では、XML 出力の要素と属性について説明します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="cae4c-120">要素</span><span class="sxs-lookup"><span data-stu-id="cae4c-120">Element</span></span>|<span data-ttu-id="cae4c-121">属性</span><span class="sxs-lookup"><span data-stu-id="cae4c-121">Attributes</span></span>|<span data-ttu-id="cae4c-122">Output</span><span class="sxs-lookup"><span data-stu-id="cae4c-122">Output</span></span>|<span data-ttu-id="cae4c-123">メモ</span><span class="sxs-lookup"><span data-stu-id="cae4c-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="cae4c-124">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-124">None</span></span>|<span data-ttu-id="cae4c-125"><xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティの <xref:System.Diagnostics.TraceOptions.Callstack> フラグの有無によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="cae4c-126">> や < などの特殊文字は、エスケープシーケンスに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="cae4c-127">次に示すエスケープ文字変換テーブルを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cae4c-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="cae4c-128">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-128">None</span></span>|<span data-ttu-id="cae4c-129">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-129">Always present.</span></span>|<span data-ttu-id="cae4c-130"><xref:System.Environment.MachineName%2A> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="cae4c-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="cae4c-131">常に存在する</span><span class="sxs-lookup"><span data-stu-id="cae4c-131">Always present</span></span>|<span data-ttu-id="cae4c-132">指定しない場合、既定値は空の GUID になります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="cae4c-133">トレースメソッドの呼び出しでの `relatedActivityId` パラメーターの有無によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="cae4c-134">`relatedActivityId` メソッドの <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cae4c-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="cae4c-135">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-135">None</span></span>|<span data-ttu-id="cae4c-136"><xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> メソッドの `data` パラメーターに依存します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="cae4c-137">この要素には、要素の配列または1つの要素を含めることができるため、値は `TraceData` 要素の下に `DataItem` ノードのセットとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="cae4c-138">データ出力では、渡されたデータオブジェクトの `ToString` メソッドが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="cae4c-139">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-139">None</span></span>|<span data-ttu-id="cae4c-140">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-140">Always present.</span></span>|<span data-ttu-id="cae4c-141">パラメーターの入力 (`id`)。</span><span class="sxs-lookup"><span data-stu-id="cae4c-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="cae4c-142">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-142">Always present.</span></span>|<span data-ttu-id="cae4c-143"><xref:System.Diagnostics.TraceEventCache>からです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="cae4c-144">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-144">Always present.</span></span>|<span data-ttu-id="cae4c-145"><xref:System.Diagnostics.TraceEventCache>からです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="cae4c-146">Windows 98 および Windows Me オペレーティングシステムで `ProcessID` が2147483647を超える場合は、負の数を表す正の値であり、正しいプロセス識別子を取得するために変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="cae4c-147">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-147">Always present.</span></span>|<span data-ttu-id="cae4c-148"><xref:System.Diagnostics.TraceEventCache>からです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="cae4c-149">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-149">None</span></span>|<span data-ttu-id="cae4c-150">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-150">Always present.</span></span>|<span data-ttu-id="cae4c-151">パラメーターの入力 (`eventType`の数値)。</span><span class="sxs-lookup"><span data-stu-id="cae4c-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="cae4c-152">255より大きいパラメーター値は、255として出力されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="cae4c-153">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-153">None</span></span>|<span data-ttu-id="cae4c-154"><xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティの <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> フラグの有無によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="cae4c-155">複数の論理演算が存在する可能性があるため、値は `LogicalOperationStack` 要素の下に `LogicalOperation` ノードとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="cae4c-156">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-156">None</span></span>|<span data-ttu-id="cae4c-157">トレースメソッド呼び出しにメッセージが存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="cae4c-158">書式設定の引数が指定されている場合、この要素は書式設定されたメッセージになります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="cae4c-159">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-159">Always present.</span></span>|<span data-ttu-id="cae4c-160">パラメーターの入力。</span><span class="sxs-lookup"><span data-stu-id="cae4c-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="cae4c-161">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-161">Always present.</span></span>|<span data-ttu-id="cae4c-162">パラメーターの入力。</span><span class="sxs-lookup"><span data-stu-id="cae4c-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="cae4c-163">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-163">Always present.</span></span>|<span data-ttu-id="cae4c-164"><xref:System.Diagnostics.TraceEventCache>に存在しない場合、既定値は現在の時刻になります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="cae4c-165">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-165">None</span></span>|<span data-ttu-id="cae4c-166"><xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティの <xref:System.Diagnostics.TraceOptions.Timestamp> フラグの有無によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cae4c-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="cae4c-167"><xref:System.Diagnostics.TraceEventCache>からです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="cae4c-168">なし</span><span class="sxs-lookup"><span data-stu-id="cae4c-168">None</span></span>|<span data-ttu-id="cae4c-169">常に存在します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-169">Always present.</span></span>|<span data-ttu-id="cae4c-170">値は常に3です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="cae4c-171">次の表は、XML 出力でエスケープされる文字を示しています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="cae4c-172">`DataItem` 要素を除き、すべての要素と属性でエスケープが行われます。これは、<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> メソッドの `data` パラメーターに渡されたオブジェクトが <xref:System.Xml.XPath.XPathNavigator> オブジェクトである場合、エスケープされません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="cae4c-173">データオブジェクトに対して <xref:System.Xml.XPath.XPathNavigator> が使用されている場合、<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> メソッドが呼び出され、ルートノード全体がエスケープ解除されたデータとしてトレースされます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="cae4c-174">エスケープ文字</span><span class="sxs-lookup"><span data-stu-id="cae4c-174">Escaped character</span></span>|<span data-ttu-id="cae4c-175">値</span><span class="sxs-lookup"><span data-stu-id="cae4c-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="cae4c-176">"</span><span class="sxs-lookup"><span data-stu-id="cae4c-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="cae4c-177">0xD</span><span class="sxs-lookup"><span data-stu-id="cae4c-177">0xD</span></span>|<span data-ttu-id="cae4c-178">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="cae4c-178">&\#xD;</span></span>|  
|<span data-ttu-id="cae4c-179">0xA</span><span class="sxs-lookup"><span data-stu-id="cae4c-179">0xA</span></span>|<span data-ttu-id="cae4c-180">&\#xA。</span><span class="sxs-lookup"><span data-stu-id="cae4c-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cae4c-181">次のコード例は、<xref:System.Diagnostics.XmlWriterTraceListener> クラスを使用して、エスケープされたデータとエスケープされていないデータの両方をファイルログに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cae4c-182"><see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-182">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cae4c-183">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-183">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <summary><span data-ttu-id="cae4c-184">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-185"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティが空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-185">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-186"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-186"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="cae4c-187">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-187">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <summary><span data-ttu-id="cae4c-188">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-188">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-189"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティが空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-189">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-190"><paramref name="writer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-190"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="cae4c-191">書き込み先のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cae4c-191">The name of the file to write to.</span></span></param>
        <summary><span data-ttu-id="cae4c-192">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-193">このコンストラクターは、<xref:System.Text.Encoding.UTF8%2A> エンコーディングを使用して、指定したパスにある指定したファイルの <xref:System.IO.StreamWriter> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-193">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="cae4c-194">ファイルが存在する場合は、に追加されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-194">If the file exists, it is appended to.</span></span> <span data-ttu-id="cae4c-195">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-195">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cae4c-196">例外が発生する可能性を減らすために、出力を無効にする可能性のある文字は "?" 文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-196">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="cae4c-197"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティが空の文字列 ("") に初期化されています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-197">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-198"><paramref name="filename" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-198"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="cae4c-199">トレース リスナーが書き込むストリームを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-199">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <param name="name"><span data-ttu-id="cae4c-200">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="cae4c-200">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="cae4c-201">指定されたストリームをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-201">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-202">このコンストラクターは、<xref:System.Diagnostics.TraceListener.Name%2A> プロパティを `name` パラメーター値に初期化するか、`name` パラメーターが `null`場合は空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-202">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="cae4c-203">名前は、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> コレクションのインデックスとして使用して、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-203">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="cae4c-204">たとえば、次のコードは <xref:System.Diagnostics.TraceListener.Name%2A> プロパティが "xmlListener" である <xref:System.Diagnostics.XmlWriterTraceListener> のインスタンスの <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-204">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-205"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-205"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="cae4c-206">トレース リスナーからの出力を受信する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-206">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <param name="name"><span data-ttu-id="cae4c-207">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="cae4c-207">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="cae4c-208">指定されたライターをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-208">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-209">このコンストラクターは、<xref:System.Diagnostics.TraceListener.Name%2A> プロパティを `name` パラメーター値に初期化するか、`name` パラメーターが `null`場合は空の文字列 ("") に初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-209">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="cae4c-210">名前は、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> コレクションのインデックスとして使用して、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-210">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="cae4c-211">たとえば、次のコードは <xref:System.Diagnostics.TraceListener.Name%2A> プロパティが "xmlListener" である <xref:System.Diagnostics.XmlWriterTraceListener> のインスタンスの <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-211">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-212"><paramref name="writer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-212"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="cae4c-213">書き込み先のファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cae4c-213">The name of the file to write to.</span></span></param>
        <param name="name"><span data-ttu-id="cae4c-214">新規インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="cae4c-214">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="cae4c-215">指定されたファイルをデバッグ出力およびトレース出力の受信者として使用して、<see cref="T:System.Diagnostics.XmlWriterTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-215">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-216">このコンストラクターは、<xref:System.Text.Encoding.UTF8%2A> エンコーディングを使用して、指定したパスにある指定したファイルの <xref:System.IO.StreamWriter> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-216">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="cae4c-217">ファイルが存在する場合は、に追加されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-217">If the file exists, it is appended to.</span></span> <span data-ttu-id="cae4c-218">ファイルが存在しない場合は、新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-218">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cae4c-219">例外が発生する可能性を減らすために、出力を無効にする可能性のある文字は "?" 文字に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-219">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="cae4c-220"><xref:System.Diagnostics.TraceListener.Name%2A> プロパティは、`name` パラメーター値に設定されます。または、`name` パラメーターが `null`の場合は空の文字列 ("") に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-220">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="cae4c-221">名前は、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> コレクションのインデックスとして使用して、リスナーのプロパティをプログラムで変更できます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-221">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="cae4c-222">たとえば、次のコードは <xref:System.Diagnostics.TraceListener.Name%2A> プロパティが "xmlListener" である <xref:System.Diagnostics.XmlWriterTraceListener> のインスタンスの <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-222">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cae4c-223"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-223"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cae4c-224">このリスナーの <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> を終了して、トレース出力またはデバッグ出力を受信しないようにします。</span><span class="sxs-lookup"><span data-stu-id="cae4c-224">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cae4c-225">書き込むエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-225">The error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="cae4c-226">エラー メッセージに追加する詳細なエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-226">The detailed error message to append to the error message.</span></span></param>
        <summary><span data-ttu-id="cae4c-227">エラー メッセージおよびエラー メッセージの詳細を含むトレース情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-227">Writes trace information including an error message and a detailed error message to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-228">既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されているときにメッセージと詳細メッセージがメッセージボックスに表示され、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> コレクション内の <xref:System.Diagnostics.TraceListener> インスタンスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-228">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="cae4c-229">既定では、コレクションには <xref:System.Diagnostics.DefaultTraceListener>のインスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-229">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="cae4c-230">この動作は、コレクションに対して <xref:System.Diagnostics.TraceListener> を追加または削除することによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-230">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cae4c-231">トレース データを出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-231">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="cae4c-232">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-232">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="cae4c-233">ソース名です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-233">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="cae4c-234"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-234">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="cae4c-235">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="cae4c-235">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="cae4c-236">出力するデータ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cae4c-236">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="cae4c-237">トレース情報 (データ オブジェクトおよびイベント情報) をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-237">Writes trace information, a data object, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-238">トレースのヘッダーとフッターには、`eventCache`、`source`、`eventType`、および `id` パラメーターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-238">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="cae4c-239">`id` パラメーターは書き込み前に符号なし整数に変換されるため、負の `id` 値は大きな正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-239">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="cae4c-240">`data` パラメーターは `TraceData` 要素の `DataItem` ノードとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-240">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="cae4c-241">データオブジェクトの `ToString` メソッドは、オブジェクトを文字列に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-241">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cae4c-242">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-242">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="cae4c-243">トレースデータを書き込むために、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-243">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="cae4c-244">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-244">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="cae4c-245">ソース名です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-245">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="cae4c-246"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-246">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="cae4c-247">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="cae4c-247">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="cae4c-248">出力するデータ オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="cae4c-248">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="cae4c-249">トレース情報、データ オブジェクト、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-249">Writes trace information, data objects, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-250">トレースのヘッダーとフッターには、`eventCache`、`source`、`eventType`、および `id` パラメーターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-250">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="cae4c-251">`id` パラメーターは書き込み前に符号なし整数に変換されるため、負の `id` 値は大きな正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-251">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="cae4c-252">`data` パラメーター配列内のオブジェクトは、`TraceData` 要素の `DataItem` のノードとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-252">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="cae4c-253">各データオブジェクトの `ToString` メソッドは、オブジェクトを文字列に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-253">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cae4c-254">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-254">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="cae4c-255">トレースデータを書き込むために、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-255">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cae4c-256">イベント トレース情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-256">Writes event trace information to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="cae4c-257">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-257">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="cae4c-258">ソース名です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-258">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="cae4c-259"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-259">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="cae4c-260">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="cae4c-260">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="cae4c-261">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-261">The message to write.</span></span></param>
        <summary><span data-ttu-id="cae4c-262">トレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-262">Writes trace information, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-263">トレースのヘッダーとフッターには、`eventCache`、`source`、`eventType`、および `id` パラメーターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-263">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="cae4c-264">`id` パラメーターは書き込み前に符号なし整数に変換されるため、負の `id` 値は大きな正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-264">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="cae4c-265">`message` パラメーターは、`Message` 要素として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-265">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cae4c-266">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-266">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="cae4c-267">トレースデータを書き込むために、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-267">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="cae4c-268">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-268">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="cae4c-269">ソース名です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-269">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="cae4c-270"><see cref="T:System.Diagnostics.TraceEventType" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="cae4c-270">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="cae4c-271">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="cae4c-271">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="cae4c-272">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-272">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="cae4c-273">0 個以上の書式設定対象オブジェクトを含んだ object 配列。</span><span class="sxs-lookup"><span data-stu-id="cae4c-273">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="cae4c-274">トレース情報、書式設定されたメッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-274">Writes trace information, a formatted message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-275">トレースのヘッダーとフッターには、`eventCache`、`source`、`eventType`、および `id` パラメーターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-275">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="cae4c-276">`id` パラメーターは書き込み前に符号なし整数に変換されるため、負の `id` 値は大きな正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-276">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="cae4c-277"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッドが呼び出され、`format` 文字列と `args` 配列をパラメーターとして渡して、`args` オブジェクトの配列を `Message` 要素として書式設定します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-277">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cae4c-278">このメソッドは、アプリケーションコードによって直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-278">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="cae4c-279">トレースデータを書き込むために、<xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>、および <xref:System.Diagnostics.TraceSource> クラスのメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-279">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="cae4c-280">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="cae4c-280">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="cae4c-281">ソース名です。</span><span class="sxs-lookup"><span data-stu-id="cae4c-281">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="cae4c-282">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="cae4c-282">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="cae4c-283">書き込むトレース メッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-283">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="cae4c-284">関連するアクティビティを識別する <see cref="T:System.Guid" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="cae4c-284">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="cae4c-285">関連するアクティビティの ID を含むトレース情報、メッセージ、およびイベント情報をファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-285">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-286"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> メソッドは、関連するトレースの関連付けに使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-286">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="cae4c-287">トレースのヘッダーとフッターには、`eventCache`、`source`、`id`、および `relatedActivityId` パラメーターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-287">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="cae4c-288">`id` パラメーターは書き込み前に符号なし整数に変換されるため、負の `id` 値は大きな正の整数として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-288">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="cae4c-289">`message` パラメーターは、`Message` 要素として書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-289">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="cae4c-290"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> メソッドは、ヘッダーに表示される "B" 形式の文字列に `relatedActivityId`値を変換するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-290">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="cae4c-291">フッターの `SubTypeName` 要素は、トレースイベントの種類を <xref:System.Diagnostics.TraceEventType.Transfer>として識別します。</span><span class="sxs-lookup"><span data-stu-id="cae4c-291">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cae4c-292"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> メソッドは、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="cae4c-292">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="cae4c-293">これは、<xref:System.Diagnostics.TraceSource.TraceTransfer%2A> メソッドのトレース情報を出力するために、<xref:System.Diagnostics.TraceSource> オブジェクトによって呼び出されることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="cae4c-293">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cae4c-294">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-294">The message to write.</span></span></param>
        <summary><span data-ttu-id="cae4c-295">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-295">Writes a verbatim message without any additional context information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-296"><xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> メソッドを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-296">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="cae4c-297">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="cae4c-297">The message to write.</span></span></param>
        <summary><span data-ttu-id="cae4c-298">逐語的メッセージを追加のコンテキスト情報なしでファイルまたはストリームに書き込み、続けて現在の行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-298">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cae4c-299"><xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> メソッドを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="cae4c-299">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
