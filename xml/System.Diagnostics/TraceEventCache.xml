<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fd6a907fc9d18e970326d9c0cd32d014e2a271a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82492641" /></Metadata><TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5a4e8-101">スレッドおよびプロセスに固有のトレース イベント データを提供します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5a4e8-102">トレースリスナー呼び出しのパフォーマンス最適化として設計された <xref:System.Diagnostics.TraceEventCache> クラスは、カスタムトレースリスナーを作成している開発者だけが対象になります。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="5a4e8-103"><xref:System.Diagnostics.TraceEventCache> クラスは、トレースイベントのソースを正確に識別するために、トレースメソッドのパラメーターとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="5a4e8-104"><xref:System.Diagnostics.TraceEventCache> を使用するメソッドの例としては、<xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> と <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>があります。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5a4e8-105"><xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> プロパティには、トレースを関連するトレースと関連付けるために使用できるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a4e8-106"><see cref="T:System.Diagnostics.TraceEventCache" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-107">現在のスレッドの呼び出し履歴を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="5a4e8-108">スタック トレース情報を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-108">A string containing stack trace information.</span></span> <span data-ttu-id="5a4e8-109">この値は空の文字列 ("") の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-110"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> プロパティは、<xref:System.Environment> クラスの <xref:System.Environment.StackTrace%2A> プロパティから呼び出し履歴を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="5a4e8-111">プロパティ値は、メソッドの呼び出しを時系列の逆の順序で一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="5a4e8-112">つまり、最新のメソッド呼び出しが最初に記述されます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="5a4e8-113">スタック上のメソッド呼び出しごとに、1行のスタックトレース情報が一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="5a4e8-114">詳細については、<xref:System.Environment.StackTrace%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-115">イベント トレースが発生した日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-115">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="5a4e8-116">世界協定時刻 (UTC) で表される日付と時刻を値として持つ <see cref="T:System.DateTime" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-116">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-117"><xref:System.Diagnostics.TraceEventCache> クラスのインスタンスでプロパティに初めてアクセスするときは、現在の時刻が返されます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-117">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="5a4e8-118">そのインスタンスでこのプロパティの後続のクエリを行うと、同じ <xref:System.DateTime> 値が返され、タイムスタンプとして使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-118">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-119">スタックに格納された相関データを取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-119">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="5a4e8-120">相関データを格納している <see cref="T:System.Collections.Stack" />。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-120">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-121">関連付けデータは、"system.string" という名前の呼び出しコンテキストにオブジェクトとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-121">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="5a4e8-122"><xref:System.Diagnostics.CorrelationManager> クラスは、スレッドにバインドされたコンテキストに論理操作 id を格納し、格納されている id を持つスレッドによって生成される各トレースイベントに自動的にタグを付けるために使用するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-122">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="5a4e8-123"><xref:System.Diagnostics.CorrelationManager> には <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> プロパティを使用してアクセスします。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-123">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5a4e8-124"><xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> メソッドを呼び出すたびに、新しい論理操作 id がスタックにプッシュされます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-124">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="5a4e8-125"><xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> メソッドを呼び出すたびに、論理操作 id がスタックからポップされます。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-125">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-126">現在のプロセスの一意な識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-126">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="5a4e8-127">システムが生成した、現在のプロセスの一意な識別子。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-127">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-128">プロセスが終了するまで、プロセス識別子はシステム全体のプロセスを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-128">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-129">現在のマネージド スレッドの一意の識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-129">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="5a4e8-130">このマネージド スレッドの一意な整数の識別子を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-130">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-131">スレッド識別子は、文字列として書式設定された <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-131">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a4e8-132">タイマー機構の現在のタイマー刻み数を取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-132">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="5a4e8-133">基になるタイマー機構のタイマー刻みカウンター値。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-133">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a4e8-134">Get アクセサーは、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> メソッドを呼び出して、タイムスタンプを取得します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-134">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="5a4e8-135"><xref:System.Diagnostics.Stopwatch> クラスで高解像度のパフォーマンスカウンターが使用されている場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> はそのカウンターの現在の値を返します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-135">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="5a4e8-136"><xref:System.Diagnostics.Stopwatch> クラスがシステムタイマーを使用する場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> は <xref:System.DateTime.Now%2A?displayProperty=nameWithType>の <xref:System.DateTime.Ticks%2A> プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="5a4e8-136">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
