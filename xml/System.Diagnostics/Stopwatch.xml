<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4534189315d75968098ff65fd575285f138cd423" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83543762" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Stopwatch extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>経過時間を正確に計測するために使用できる一連のメソッドとプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> インスタンスは、1つの間隔の経過時間、または複数の間隔の経過時間の合計を測定できます。 一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスが実行されているか、停止しています。<xref:System.Diagnostics.Stopwatch>の現在の状態を確認するには、<xref:System.Diagnostics.Stopwatch.IsRunning%2A> を使用します。 <xref:System.Diagnostics.Stopwatch.Start%2A> を使用して、経過時間の計測を開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用して、経過時間の計測を停止します。 <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、または <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>プロパティを使用して、経過時間の値を照会します。 インスタンスの実行中または停止中に、経過時間のプロパティに対してクエリを実行できます。 <xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。  
  
 既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。 <xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。 既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。  
  
 <xref:System.Diagnostics.Stopwatch> は、基になるタイマー機構のタイマー刻みをカウントすることによって経過時間を計測します。 インストールされているハードウェアとオペレーティングシステムが高解像度のパフォーマンスカウンターをサポートしている場合、<xref:System.Diagnostics.Stopwatch> クラスはそのカウンターを使用して経過時間を計測します。 それ以外の場合、<xref:System.Diagnostics.Stopwatch> クラスはシステムタイマーを使用して経過時間を計測します。 <xref:System.Diagnostics.Stopwatch.Frequency> フィールドと <xref:System.Diagnostics.Stopwatch.IsHighResolution> フィールドを使用して、<xref:System.Diagnostics.Stopwatch> タイミング実装の精度と解像度を決定します。  
  
 <xref:System.Diagnostics.Stopwatch> クラスは、マネージコード内でタイミングに関連するパフォーマンスカウンターを操作するのに役立ちます。 具体的には、<xref:System.Diagnostics.Stopwatch.Frequency> フィールドと <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> メソッドは、アンマネージ Windows Api `QueryPerformanceFrequency` および `QueryPerformanceCounter`の代わりに使用できます。  
  
> [!NOTE]
>  マルチプロセッサコンピューターでは、スレッドがどのプロセッサで実行されているかは関係ありません。 ただし、BIOS またはハードウェアアブストラクションレイヤー (HAL) のバグにより、異なるプロセッサでさまざまなタイミングの結果を得ることができます。 スレッドのプロセッサ関係を指定するには、<xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> メソッドを使用します。  
  
   
  
## Examples  
 次の例は、<xref:System.Diagnostics.Stopwatch> クラスを使用して、アプリケーションの実行時間を決定する方法を示しています。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用してパフォーマンスデータを計算する方法を示します。  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Diagnostics.Stopwatch" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された <xref:System.Diagnostics.Stopwatch> インスタンスが停止し、インスタンスの経過時間プロパティが0です。  
  
 新しい <xref:System.Diagnostics.Stopwatch> インスタンスで経過時間の計測を開始するには、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを使用します。 <xref:System.Diagnostics.Stopwatch.StartNew%2A> メソッドを使用して、新しい <xref:System.Diagnostics.Stopwatch> インスタンスを初期化し、すぐに開始します。  
  
   
  
## Examples  
 次の例では、単純なクラスコンストラクターを使用して <xref:System.Diagnostics.Stopwatch> インスタンスを初期化します。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します。</summary>
        <value>現在のインスタンスで計測された経過時間の合計を表す読み取り専用の <see cref="T:System.TimeSpan" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。  
  
 <xref:System.TimeSpan> メソッドとプロパティを使用して、経過時間の値を取得するには、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用します。 たとえば、返された <xref:System.TimeSpan> インスタンスをテキスト表現に書式設定したり、<xref:System.TimeSpan> パラメーターを必要とする別のクラスに渡したりすることができます。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。 <xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。  
  
 既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。 <xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。 既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して、アプリケーションの実行時間を決定する方法を示します。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します (ミリ秒単位)。</summary>
        <value>現在のインスタンスで計測されたミリ秒の合計を表す読み取り専用の長整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、ミリ秒単位の最も近い値に丸められた経過時間を表します。 精度を高めるには、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> または <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> プロパティを使用します。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。 <xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。  
  
 既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。 <xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。 既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。 このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します (タイマー刻み)。</summary>
        <value>現在のインスタンスで計測されたタイマー刻みの合計を表す読み取り専用の長整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、基になるタイマー機構の経過タイマー刻みの数を表します。 ティックは、<xref:System.Diagnostics.Stopwatch> タイマーで測定できる最小時間単位です。 <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> 値を秒数に変換するには、<xref:System.Diagnostics.Stopwatch.Frequency> フィールドを使用します。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。 <xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。  
  
 既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。 <xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。 既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.Stopwatch> のティックは <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>とは異なります。 <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> 値の各ティックは 1 100-ナノ秒間隔を表します。 <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> 値の各ティックは、1秒に等しい時間間隔を <xref:System.Diagnostics.Stopwatch.Frequency>で割った値を表します。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。 このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 秒あたりのタイマー刻みの数として、タイマーの頻度を取得します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タイマーの頻度は、タイマーの精度と解像度を示します。 たとえば、タイマー頻度が1秒あたり200万ティックの場合は、タイマー精度がティックあたり500ナノ秒になります。 つまり、1秒は10億ナノ秒に相当します。1秒あたり200万タイマー刻みのタイマー頻度は、10億ナノ秒あたり200万タイマー刻みに相当します。これは、500ナノ秒あたり1ティックにさらに簡略化できます。  
  
 <xref:System.Diagnostics.Stopwatch.Frequency> 値は、基になるタイミング機構の解決に依存します。 インストールされているハードウェアとオペレーティングシステムが高解像度のパフォーマンスカウンターをサポートしている場合、<xref:System.Diagnostics.Stopwatch.Frequency> の値にはそのカウンターの頻度が反映されます。 それ以外の場合、<xref:System.Diagnostics.Stopwatch.Frequency> 値はシステムタイマーの頻度に基づいています。  
  
 <xref:System.Diagnostics.Stopwatch> の頻度はインストールされているハードウェアとオペレーティングシステムによって異なるため、<xref:System.Diagnostics.Stopwatch.Frequency> の値はシステムの実行中も一定のままです。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch> タイマーの頻度と解像度を表示します。 このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>タイマー機構の現在のタイマー刻み数を取得します。</summary>
        <returns>基になるタイマー機構のタイマー刻みカウンター値を表す長整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> クラスで高解像度のパフォーマンスカウンターが使用されている場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> はそのカウンターの現在の値を返します。 <xref:System.Diagnostics.Stopwatch> クラスがシステムタイマーを使用する場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> は <xref:System.DateTime.Now%2A?displayProperty=nameWithType> インスタンスの現在の <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> プロパティを返します。  
  
   
  
## Examples  
 次の例は、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> メソッドを使用してパフォーマンスカウンターを更新する方法を示しています。  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイマーが高解像力のパフォーマンス カウンターに基づいているかどうかを示します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> クラスによって使用されるタイマーは、システムハードウェアおよびオペレーティングシステムによって異なります。 <xref:System.Diagnostics.Stopwatch> タイマーが高解像度のパフォーマンスカウンターに基づいている場合は、<xref:System.Diagnostics.Stopwatch.IsHighResolution> が `true` ます。 それ以外の場合、<xref:System.Diagnostics.Stopwatch.IsHighResolution> は `false`であり、<xref:System.Diagnostics.Stopwatch> タイマーがシステムタイマーに基づいていることを示します。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch> タイマーの頻度と解像度を表示します。 このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Diagnostics.Stopwatch" /> タイマーが実行中かどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Diagnostics.Stopwatch" /> インスタンスが現在実行中で、間隔の経過時間を計測中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> インスタンスは、<xref:System.Diagnostics.Stopwatch.Start%2A> または <xref:System.Diagnostics.Stopwatch.StartNew%2A>の呼び出しを使用して実行を開始します。 インスタンスは、<xref:System.Diagnostics.Stopwatch.Stop%2A> または <xref:System.Diagnostics.Stopwatch.Reset%2A>の呼び出しによって実行を停止します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>タイマー間隔の計測を停止して、経過時間をゼロにリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットされるまで、累積経過時間を複数の時間間隔で計算して保持します。 現在の間隔の測定値を停止し、累積経過時間の値を保持するには、<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用します。 <xref:System.Diagnostics.Stopwatch.Reset%2A> を使用して、進行中のすべての期間を停止し、経過時間の値をクリアします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>時間間隔の計測を停止し、経過時間をゼロにリセットして、経過時間の計測を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットまたは再起動されるまで、累積経過時間を複数の時間間隔で計算して保持します。 現在の間隔の測定値を停止し、累積経過時間の値を保持するには、<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用します。 <xref:System.Diagnostics.Stopwatch.Reset%2A> を使用して、進行中のすべての期間を停止し、経過時間の値をクリアします。 現在の間隔の測定値を停止し、新しい間隔の測定を開始するには、<xref:System.Diagnostics.Stopwatch.Restart%2A> を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>間隔の経過時間の計測を開始または再開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。  
  
 開始されると、<xref:System.Diagnostics.Stopwatch> タイマーは、インスタンスが停止またはリセットされるまで、現在の間隔を経過タイマーのタイマー刻みで測定します。 既に実行されている <xref:System.Diagnostics.Stopwatch> を開始しても、タイマーの状態を変更したり、経過時間のプロパティをリセットしたりすることはできません。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスが複数の間隔を測定する場合、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドは、現在の経過時間の値から時間を計測します。 <xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットされるまで、累積経過時間を複数の時間間隔で計算して保持します。 <xref:System.Diagnostics.Stopwatch.Start%2A> を呼び出す前に、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用して、<xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアします。 <xref:System.Diagnostics.Stopwatch.Restart%2A> メソッドを使用して、1つのコマンドで <xref:System.Diagnostics.Stopwatch> を <xref:System.Diagnostics.Stopwatch.Reset%2A> および <xref:System.Diagnostics.Stopwatch.Start%2A> します。  
  
   
  
## Examples  
 次の例は、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを使用して、アプリケーションの実行時間を測定するタイマーを開始する方法を示しています。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Diagnostics.Stopwatch" /> インスタンスを初期化して、経過時間のプロパティをゼロに設定し、経過時間の計測を開始します。</summary>
        <returns>経過時間の計測を開始した <see cref="T:System.Diagnostics.Stopwatch" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Diagnostics.Stopwatch> コンストラクターを呼び出し、新しいインスタンスで <xref:System.Diagnostics.Stopwatch.Start%2A> を呼び出すことと同じです。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。 このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>間隔の経過時間の計測を停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。  
  
 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは、現在の時間間隔の測定値を終了します。 実行されていない <xref:System.Diagnostics.Stopwatch> を停止しても、タイマーの状態を変更したり、経過時間のプロパティをリセットしたりすることはできません。  
  
 <xref:System.Diagnostics.Stopwatch> インスタンスが複数の間隔を測定する場合、<xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは、経過時間の測定値を一時停止することと同じです。 <xref:System.Diagnostics.Stopwatch.Start%2A> の後続の呼び出しでは、現在の経過時間の値から時間を計測します。 <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例は、<xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを使用して、アプリケーションの実行時間を測定するタイマーを停止する方法を示しています。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>
