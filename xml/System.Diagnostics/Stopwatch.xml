<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4534189315d75968098ff65fd575285f138cd423" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83543762" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Stopwatch extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9079d-101">経過時間を正確に計測するために使用できる一連のメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="9079d-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-102"><xref:System.Diagnostics.Stopwatch> インスタンスは、1つの間隔の経過時間、または複数の間隔の経過時間の合計を測定できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="9079d-103">一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。</span><span class="sxs-lookup"><span data-stu-id="9079d-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="9079d-104"><xref:System.Diagnostics.Stopwatch> インスタンスが実行されているか、停止しています。<xref:System.Diagnostics.Stopwatch>の現在の状態を確認するには、<xref:System.Diagnostics.Stopwatch.IsRunning%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="9079d-105"><xref:System.Diagnostics.Stopwatch.Start%2A> を使用して、経過時間の計測を開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用して、経過時間の計測を停止します。</span><span class="sxs-lookup"><span data-stu-id="9079d-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="9079d-106"><xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、または <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>プロパティを使用して、経過時間の値を照会します。</span><span class="sxs-lookup"><span data-stu-id="9079d-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="9079d-107">インスタンスの実行中または停止中に、経過時間のプロパティに対してクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="9079d-108"><xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="9079d-109">既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="9079d-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="9079d-110"><xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-111">既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="9079d-112"><xref:System.Diagnostics.Stopwatch> は、基になるタイマー機構のタイマー刻みをカウントすることによって経過時間を計測します。</span><span class="sxs-lookup"><span data-stu-id="9079d-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="9079d-113">インストールされているハードウェアとオペレーティングシステムが高解像度のパフォーマンスカウンターをサポートしている場合、<xref:System.Diagnostics.Stopwatch> クラスはそのカウンターを使用して経過時間を計測します。</span><span class="sxs-lookup"><span data-stu-id="9079d-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="9079d-114">それ以外の場合、<xref:System.Diagnostics.Stopwatch> クラスはシステムタイマーを使用して経過時間を計測します。</span><span class="sxs-lookup"><span data-stu-id="9079d-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="9079d-115"><xref:System.Diagnostics.Stopwatch.Frequency> フィールドと <xref:System.Diagnostics.Stopwatch.IsHighResolution> フィールドを使用して、<xref:System.Diagnostics.Stopwatch> タイミング実装の精度と解像度を決定します。</span><span class="sxs-lookup"><span data-stu-id="9079d-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="9079d-116"><xref:System.Diagnostics.Stopwatch> クラスは、マネージコード内でタイミングに関連するパフォーマンスカウンターを操作するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="9079d-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="9079d-117">具体的には、<xref:System.Diagnostics.Stopwatch.Frequency> フィールドと <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> メソッドは、アンマネージ Windows Api `QueryPerformanceFrequency` および `QueryPerformanceCounter`の代わりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Windows APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9079d-118">マルチプロセッサコンピューターでは、スレッドがどのプロセッサで実行されているかは関係ありません。</span><span class="sxs-lookup"><span data-stu-id="9079d-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="9079d-119">ただし、BIOS またはハードウェアアブストラクションレイヤー (HAL) のバグにより、異なるプロセッサでさまざまなタイミングの結果を得ることができます。</span><span class="sxs-lookup"><span data-stu-id="9079d-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="9079d-120">スレッドのプロセッサ関係を指定するには、<xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-121">次の例は、<xref:System.Diagnostics.Stopwatch> クラスを使用して、アプリケーションの実行時間を決定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9079d-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="9079d-122">次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用してパフォーマンスデータを計算する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-123"><see cref="T:System.Diagnostics.Stopwatch" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9079d-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-124">返された <xref:System.Diagnostics.Stopwatch> インスタンスが停止し、インスタンスの経過時間プロパティが0です。</span><span class="sxs-lookup"><span data-stu-id="9079d-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="9079d-125">新しい <xref:System.Diagnostics.Stopwatch> インスタンスで経過時間の計測を開始するには、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="9079d-126"><xref:System.Diagnostics.Stopwatch.StartNew%2A> メソッドを使用して、新しい <xref:System.Diagnostics.Stopwatch> インスタンスを初期化し、すぐに開始します。</span><span class="sxs-lookup"><span data-stu-id="9079d-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-127">次の例では、単純なクラスコンストラクターを使用して <xref:System.Diagnostics.Stopwatch> インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="9079d-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-128">現在のインスタンスで計測された経過時間の合計を取得します。</span><span class="sxs-lookup"><span data-stu-id="9079d-128">Gets the total elapsed time measured by the current instance.</span></span></summary>
        <value><span data-ttu-id="9079d-129">現在のインスタンスで計測された経過時間の合計を表す読み取り専用の <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="9079d-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-130">一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。</span><span class="sxs-lookup"><span data-stu-id="9079d-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="9079d-131"><xref:System.TimeSpan> メソッドとプロパティを使用して、経過時間の値を取得するには、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="9079d-132">たとえば、返された <xref:System.TimeSpan> インスタンスをテキスト表現に書式設定したり、<xref:System.TimeSpan> パラメーターを必要とする別のクラスに渡したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="9079d-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="9079d-133"><xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="9079d-134"><xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="9079d-135">既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="9079d-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="9079d-136"><xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-137">既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-138">次の例では、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して、アプリケーションの実行時間を決定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-139">現在のインスタンスで計測された経過時間の合計を取得します (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="9079d-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span></span></summary>
        <value><span data-ttu-id="9079d-140">現在のインスタンスで計測されたミリ秒の合計を表す読み取り専用の長整数。</span><span class="sxs-lookup"><span data-stu-id="9079d-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-141">このプロパティは、ミリ秒単位の最も近い値に丸められた経過時間を表します。</span><span class="sxs-lookup"><span data-stu-id="9079d-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="9079d-142">精度を高めるには、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> または <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="9079d-143"><xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="9079d-144"><xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="9079d-145">既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="9079d-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="9079d-146"><xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-147">既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-148">次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="9079d-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="9079d-149">このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="9079d-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-150">現在のインスタンスで計測された経過時間の合計を取得します (タイマー刻み)。</span><span class="sxs-lookup"><span data-stu-id="9079d-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span></span></summary>
        <value><span data-ttu-id="9079d-151">現在のインスタンスで計測されたタイマー刻みの合計を表す読み取り専用の長整数。</span><span class="sxs-lookup"><span data-stu-id="9079d-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-152">このプロパティは、基になるタイマー機構の経過タイマー刻みの数を表します。</span><span class="sxs-lookup"><span data-stu-id="9079d-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="9079d-153">ティックは、<xref:System.Diagnostics.Stopwatch> タイマーで測定できる最小時間単位です。</span><span class="sxs-lookup"><span data-stu-id="9079d-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="9079d-154"><xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> 値を秒数に変換するには、<xref:System.Diagnostics.Stopwatch.Frequency> フィールドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="9079d-155"><xref:System.Diagnostics.Stopwatch> インスタンスの実行中または停止中に、プロパティ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>、および <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> を照会できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="9079d-156"><xref:System.Diagnostics.Stopwatch> の実行中は、経過時間のプロパティが着実に増加します。インスタンスが停止しても、定数は維持されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="9079d-157">既定では、<xref:System.Diagnostics.Stopwatch> インスタンスの経過時間の値は、測定されたすべての時間間隔の合計と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="9079d-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="9079d-158"><xref:System.Diagnostics.Stopwatch.Start%2A> の各呼び出しは、累積経過時間でカウントを開始します。<xref:System.Diagnostics.Stopwatch.Stop%2A> を呼び出すたびに、現在の間隔の測定値が終了し、累積経過時間の値が凍結されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-159">既存の <xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9079d-160"><xref:System.Diagnostics.Stopwatch> のティックは <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>とは異なります。</span><span class="sxs-lookup"><span data-stu-id="9079d-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9079d-161"><xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> 値の各ティックは 1 100-ナノ秒間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="9079d-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="9079d-162"><xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> 値の各ティックは、1秒に等しい時間間隔を <xref:System.Diagnostics.Stopwatch.Frequency>で割った値を表します。</span><span class="sxs-lookup"><span data-stu-id="9079d-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-163">次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="9079d-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="9079d-164">このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="9079d-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-165">1 秒あたりのタイマー刻みの数として、タイマーの頻度を取得します。</span><span class="sxs-lookup"><span data-stu-id="9079d-165">Gets the frequency of the timer as the number of ticks per second.</span></span> <span data-ttu-id="9079d-166">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9079d-166">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-167">タイマーの頻度は、タイマーの精度と解像度を示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="9079d-168">たとえば、タイマー頻度が1秒あたり200万ティックの場合は、タイマー精度がティックあたり500ナノ秒になります。</span><span class="sxs-lookup"><span data-stu-id="9079d-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="9079d-169">つまり、1秒は10億ナノ秒に相当します。1秒あたり200万タイマー刻みのタイマー頻度は、10億ナノ秒あたり200万タイマー刻みに相当します。これは、500ナノ秒あたり1ティックにさらに簡略化できます。</span><span class="sxs-lookup"><span data-stu-id="9079d-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="9079d-170"><xref:System.Diagnostics.Stopwatch.Frequency> 値は、基になるタイミング機構の解決に依存します。</span><span class="sxs-lookup"><span data-stu-id="9079d-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="9079d-171">インストールされているハードウェアとオペレーティングシステムが高解像度のパフォーマンスカウンターをサポートしている場合、<xref:System.Diagnostics.Stopwatch.Frequency> の値にはそのカウンターの頻度が反映されます。</span><span class="sxs-lookup"><span data-stu-id="9079d-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="9079d-172">それ以外の場合、<xref:System.Diagnostics.Stopwatch.Frequency> 値はシステムタイマーの頻度に基づいています。</span><span class="sxs-lookup"><span data-stu-id="9079d-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="9079d-173"><xref:System.Diagnostics.Stopwatch> の頻度はインストールされているハードウェアとオペレーティングシステムによって異なるため、<xref:System.Diagnostics.Stopwatch.Frequency> の値はシステムの実行中も一定のままです。</span><span class="sxs-lookup"><span data-stu-id="9079d-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-174">次の例では、<xref:System.Diagnostics.Stopwatch> タイマーの頻度と解像度を表示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="9079d-175">このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="9079d-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-176">タイマー機構の現在のタイマー刻み数を取得します。</span><span class="sxs-lookup"><span data-stu-id="9079d-176">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <returns><span data-ttu-id="9079d-177">基になるタイマー機構のタイマー刻みカウンター値を表す長整数。</span><span class="sxs-lookup"><span data-stu-id="9079d-177">A long integer representing the tick counter value of the underlying timer mechanism.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-178"><xref:System.Diagnostics.Stopwatch> クラスで高解像度のパフォーマンスカウンターが使用されている場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> はそのカウンターの現在の値を返します。</span><span class="sxs-lookup"><span data-stu-id="9079d-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="9079d-179"><xref:System.Diagnostics.Stopwatch> クラスがシステムタイマーを使用する場合、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> は <xref:System.DateTime.Now%2A?displayProperty=nameWithType> インスタンスの現在の <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="9079d-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-180">次の例は、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> メソッドを使用してパフォーマンスカウンターを更新する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9079d-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-181">タイマーが高解像力のパフォーマンス カウンターに基づいているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-181">Indicates whether the timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="9079d-182">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9079d-182">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-183"><xref:System.Diagnostics.Stopwatch> クラスによって使用されるタイマーは、システムハードウェアおよびオペレーティングシステムによって異なります。</span><span class="sxs-lookup"><span data-stu-id="9079d-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="9079d-184"><xref:System.Diagnostics.Stopwatch> タイマーが高解像度のパフォーマンスカウンターに基づいている場合は、<xref:System.Diagnostics.Stopwatch.IsHighResolution> が `true` ます。</span><span class="sxs-lookup"><span data-stu-id="9079d-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="9079d-185">それ以外の場合、<xref:System.Diagnostics.Stopwatch.IsHighResolution> は `false`であり、<xref:System.Diagnostics.Stopwatch> タイマーがシステムタイマーに基づいていることを示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-186">次の例では、<xref:System.Diagnostics.Stopwatch> タイマーの頻度と解像度を表示します。</span><span class="sxs-lookup"><span data-stu-id="9079d-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="9079d-187">このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="9079d-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9079d-188"><see cref="T:System.Diagnostics.Stopwatch" /> タイマーが実行中かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="9079d-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span></span></summary>
        <value><span data-ttu-id="9079d-189"><see cref="T:System.Diagnostics.Stopwatch" /> インスタンスが現在実行中で、間隔の経過時間を計測中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9079d-189"><see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-190"><xref:System.Diagnostics.Stopwatch> インスタンスは、<xref:System.Diagnostics.Stopwatch.Start%2A> または <xref:System.Diagnostics.Stopwatch.StartNew%2A>の呼び出しを使用して実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="9079d-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="9079d-191">インスタンスは、<xref:System.Diagnostics.Stopwatch.Stop%2A> または <xref:System.Diagnostics.Stopwatch.Reset%2A>の呼び出しによって実行を停止します。</span><span class="sxs-lookup"><span data-stu-id="9079d-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-192">タイマー間隔の計測を停止して、経過時間をゼロにリセットします。</span><span class="sxs-lookup"><span data-stu-id="9079d-192">Stops time interval measurement and resets the elapsed time to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-193"><xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットされるまで、累積経過時間を複数の時間間隔で計算して保持します。</span><span class="sxs-lookup"><span data-stu-id="9079d-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="9079d-194">現在の間隔の測定値を停止し、累積経過時間の値を保持するには、<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-195"><xref:System.Diagnostics.Stopwatch.Reset%2A> を使用して、進行中のすべての期間を停止し、経過時間の値をクリアします。</span><span class="sxs-lookup"><span data-stu-id="9079d-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-196">時間間隔の計測を停止し、経過時間をゼロにリセットして、経過時間の計測を開始します。</span><span class="sxs-lookup"><span data-stu-id="9079d-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-197"><xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットまたは再起動されるまで、累積経過時間を複数の時間間隔で計算して保持します。</span><span class="sxs-lookup"><span data-stu-id="9079d-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="9079d-198">現在の間隔の測定値を停止し、累積経過時間の値を保持するには、<xref:System.Diagnostics.Stopwatch.Stop%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="9079d-199"><xref:System.Diagnostics.Stopwatch.Reset%2A> を使用して、進行中のすべての期間を停止し、経過時間の値をクリアします。</span><span class="sxs-lookup"><span data-stu-id="9079d-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="9079d-200">現在の間隔の測定値を停止し、新しい間隔の測定を開始するには、<xref:System.Diagnostics.Stopwatch.Restart%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-201">間隔の経過時間の計測を開始または再開します。</span><span class="sxs-lookup"><span data-stu-id="9079d-201">Starts, or resumes, measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-202">一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。</span><span class="sxs-lookup"><span data-stu-id="9079d-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="9079d-203">開始されると、<xref:System.Diagnostics.Stopwatch> タイマーは、インスタンスが停止またはリセットされるまで、現在の間隔を経過タイマーのタイマー刻みで測定します。</span><span class="sxs-lookup"><span data-stu-id="9079d-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="9079d-204">既に実行されている <xref:System.Diagnostics.Stopwatch> を開始しても、タイマーの状態を変更したり、経過時間のプロパティをリセットしたりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="9079d-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="9079d-205"><xref:System.Diagnostics.Stopwatch> インスタンスが複数の間隔を測定する場合、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドは、現在の経過時間の値から時間を計測します。</span><span class="sxs-lookup"><span data-stu-id="9079d-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="9079d-206"><xref:System.Diagnostics.Stopwatch> インスタンスは、インスタンスがリセットされるまで、累積経過時間を複数の時間間隔で計算して保持します。</span><span class="sxs-lookup"><span data-stu-id="9079d-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="9079d-207"><xref:System.Diagnostics.Stopwatch.Start%2A> を呼び出す前に、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用して、<xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアします。</span><span class="sxs-lookup"><span data-stu-id="9079d-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="9079d-208"><xref:System.Diagnostics.Stopwatch.Restart%2A> メソッドを使用して、1つのコマンドで <xref:System.Diagnostics.Stopwatch> を <xref:System.Diagnostics.Stopwatch.Reset%2A> および <xref:System.Diagnostics.Stopwatch.Start%2A> します。</span><span class="sxs-lookup"><span data-stu-id="9079d-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-209">次の例は、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを使用して、アプリケーションの実行時間を測定するタイマーを開始する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9079d-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-210">新しい <see cref="T:System.Diagnostics.Stopwatch" /> インスタンスを初期化して、経過時間のプロパティをゼロに設定し、経過時間の計測を開始します。</span><span class="sxs-lookup"><span data-stu-id="9079d-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span></span></summary>
        <returns><span data-ttu-id="9079d-211">経過時間の計測を開始した <see cref="T:System.Diagnostics.Stopwatch" />。</span><span class="sxs-lookup"><span data-stu-id="9079d-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-212">このメソッドは、<xref:System.Diagnostics.Stopwatch> コンストラクターを呼び出し、新しいインスタンスで <xref:System.Diagnostics.Stopwatch.Start%2A> を呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="9079d-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-213">次の例では、<xref:System.Diagnostics.Stopwatch> クラスを使用して、文字列から整数を解析する4つの異なる実装のパフォーマンスを測定します。</span><span class="sxs-lookup"><span data-stu-id="9079d-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="9079d-214">このコード例は、<xref:System.Diagnostics.Stopwatch> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="9079d-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9079d-215">間隔の経過時間の計測を停止します。</span><span class="sxs-lookup"><span data-stu-id="9079d-215">Stops measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9079d-216">一般的な <xref:System.Diagnostics.Stopwatch> シナリオでは、<xref:System.Diagnostics.Stopwatch.Start%2A> メソッドを呼び出し、最終的に <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを呼び出してから、<xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティを使用して経過時間を確認します。</span><span class="sxs-lookup"><span data-stu-id="9079d-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="9079d-217"><xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは、現在の時間間隔の測定値を終了します。</span><span class="sxs-lookup"><span data-stu-id="9079d-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="9079d-218">実行されていない <xref:System.Diagnostics.Stopwatch> を停止しても、タイマーの状態を変更したり、経過時間のプロパティをリセットしたりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="9079d-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="9079d-219"><xref:System.Diagnostics.Stopwatch> インスタンスが複数の間隔を測定する場合、<xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは、経過時間の測定値を一時停止することと同じです。</span><span class="sxs-lookup"><span data-stu-id="9079d-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="9079d-220"><xref:System.Diagnostics.Stopwatch.Start%2A> の後続の呼び出しでは、現在の経過時間の値から時間を計測します。</span><span class="sxs-lookup"><span data-stu-id="9079d-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="9079d-221"><xref:System.Diagnostics.Stopwatch> インスタンスの累積経過時間をクリアするには、<xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="9079d-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9079d-222">次の例は、<xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドを使用して、アプリケーションの実行時間を測定するタイマーを停止する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9079d-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>
