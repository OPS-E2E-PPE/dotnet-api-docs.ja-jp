<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata><Meta Name="ms.openlocfilehash" Value="145177823b64544612ee208dde182c098d43f019" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78803099" /></Metadata><TypeSignature Language="C#" Value="public static class Debug" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Debug = class" />
  <TypeSignature Language="C#" Value="public sealed class Debug" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Debug extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Debug" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug sealed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Diagnostics.Debug" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ecd5d-101">コードのデバッグを支援するメソッドとプロパティのセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-101">Provides a set of methods and properties that help debug your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-102"><xref:System.Diagnostics.Debug> クラスのメソッドを使用してデバッグ情報を出力し、アサーションを使用してロジックを確認する場合は、出荷製品のパフォーマンスとコードサイズに影響を与えることなく、コードの堅牢性を高めることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="ecd5d-103">このクラスには、<xref:System.Diagnostics.Debug.Assert%2A> ダイアログボックスを表示し、常に失敗するアサーションを生成するメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="ecd5d-104">このクラスには、<xref:System.Diagnostics.Debug.Write%2A>、<xref:System.Diagnostics.Debug.WriteLine%2A>、<xref:System.Diagnostics.Debug.WriteIf%2A>、および <xref:System.Diagnostics.Debug.WriteLineIf%2A>の各バリエーションで書き込みメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="ecd5d-105"><xref:System.Diagnostics.BooleanSwitch> クラスと <xref:System.Diagnostics.TraceSwitch> クラスは、トレース出力を動的に制御する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="ecd5d-106">これらのスイッチの値は、アプリケーションを再コンパイルせずに変更できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="ecd5d-107">構成ファイルを使用してスイッチを設定する方法の詳細については、「<xref:System.Diagnostics.Switch> クラス」と「[トレーススイッチ](~/docs/framework/debug-trace-profile/trace-switches.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="ecd5d-108">トレース出力のターゲットをカスタマイズするには、<xref:System.Diagnostics.TraceListener> インスタンスを <xref:System.Diagnostics.Debug.Listeners%2A> コレクションに追加するか、インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="ecd5d-109"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションは、<xref:System.Diagnostics.Debug> と <xref:System.Diagnostics.Trace> の両方のクラスで共有されます。いずれかのクラスにトレースリスナーを追加すると、リスナーが両方に追加されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="ecd5d-110">既定では、<xref:System.Diagnostics.DefaultTraceListener> クラスはトレース出力を出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-111"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにトレース リスナーを追加することで、トレース リスナーによって使用されるリソースが利用できない場合、トレース中に例外を発生させることになります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="ecd5d-112">条件とスローされる例外は、トレース リスナーに依存し、このトピックで列挙することはできません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="ecd5d-113">トレース リスナーから例外を検出し、処理するために、<xref:System.Diagnostics.Debug> メソッドの呼び出しを`try`/`catch`ブロックに配置することができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="ecd5d-114">インデントレベルを変更するには、<xref:System.Diagnostics.Debug.Indent%2A> メソッドまたは <xref:System.Diagnostics.Debug.IndentLevel%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="ecd5d-115">インデント間隔を変更するには、<xref:System.Diagnostics.Debug.IndentSize%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="ecd5d-116">各書き込みの後に、<xref:System.Diagnostics.Debug.AutoFlush%2A> プロパティを `true`に設定することによって、出力バッファーを自動的にフラッシュするかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="ecd5d-117"><xref:System.Diagnostics.Debug>の <xref:System.Diagnostics.Debug.AutoFlush%2A> と <xref:System.Diagnostics.Debug.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="ecd5d-118">構成ファイルは、次の例に示すように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="ecd5d-119"><xref:System.Diagnostics.ConditionalAttribute> 属性は、<xref:System.Diagnostics.Debug>のメソッドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="ecd5d-120"><xref:System.Diagnostics.ConditionalAttribute> をサポートするコンパイラは、"DEBUG" が条件付きコンパイルシンボルとして定義されていない限り、これらのメソッドの呼び出しを無視します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="ecd5d-121"><xref:System.Diagnostics.ConditionalAttribute> がサポートされているかどうか、および条件付きコンパイルシンボルを定義するための構文を確認するには、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="ecd5d-122">Visual Studio C#と Visual Basic のプロジェクトでは、既定ではデバッグビルドに対して "debug" 条件付きコンパイルシンボルが定義されており、"TRACE" シンボルはデバッグビルドとリリースビルドの両方に対して定義されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="ecd5d-123">この動作を無効にする方法については、Visual Studio のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="ecd5d-124">ビジュアルC++での条件付きデバッグの詳細については、「 [Debug クラスC++(/cli)](/cpp/dotnet/debug-class-cpp-cli)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="ecd5d-125">でC#"DEBUG" 条件付きコンパイルシンボルを定義するには、コマンドラインを使用してコードをコンパイルするときにコンパイラのコマンドラインに `/d:DEBUG` オプションを追加するか、ファイルの先頭に `#define DEBUG` を追加します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="ecd5d-126">Visual Basic で、`/d:DEBUG=True` オプションをコンパイラのコマンドラインに追加するか、ファイルに `#Const DEBUG=True` を追加します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-127">次の例では、<xref:System.Diagnostics.Debug> を使用して、プログラムの実行の開始と終了を示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="ecd5d-128">また、この例では、<xref:System.Diagnostics.Debug.Indent%2A> と <xref:System.Diagnostics.Debug.Unindent%2A> を使用して、トレース出力を区別しています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ecd5d-129">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-129">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-130">条件をチェックします。条件が <see langword="false" /> の場合、メッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Debug.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-131">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-131">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-132">条件が <see langword="true" /> の場合、エラー メッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="ecd5d-133">条件をチェックします。条件が <see langword="false" /> の場合、呼び出し履歴を見せるメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-134">既定では、<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドはデバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="ecd5d-135">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="ecd5d-136">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ecd5d-137">`Assert` メソッドは、[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] アプリでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="ecd5d-138">通常、<xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="ecd5d-139"><xref:System.Diagnostics.Debug.Assert%2A> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="ecd5d-140">結果が `false`場合は、エラーメッセージが <xref:System.Diagnostics.Debug.Listeners%2A> コレクションに送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="ecd5d-141">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecd5d-142">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="ecd5d-143">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="ecd5d-144">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="ecd5d-145">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="ecd5d-146">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] <span data-ttu-id="ecd5d-147">アプリはモーダルダイアログボックスをサポートしていないので、ユーザーインターフェイスモードと非ユーザーインターフェイスモードで同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-147">apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="ecd5d-148">デバッグモードでは、メッセージがアクティブなトレースリスナーに書き込まれます。または、リリースモードではメッセージは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-149">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-150"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-151"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-152">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="ecd5d-153">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecd5d-154">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-155">次の例では、配列のインデックスを作成し、何らかのアクションを実行してインデックスの値を設定した後、<xref:System.Diagnostics.Debug.Assert%2A> を呼び出してインデックス値が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="ecd5d-156">有効でない場合、<xref:System.Diagnostics.Debug.Assert%2A> は呼び出し履歴を出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-157">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-157">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-158">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-159"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="ecd5d-160">条件をチェックします。条件が <see langword="false" /> の場合、指定したメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-161">既定では、<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドはデバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="ecd5d-162">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="ecd5d-163">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="ecd5d-164">通常、<xref:System.Diagnostics.Debug.Assert%2A> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="ecd5d-165"><xref:System.Diagnostics.Debug.Assert%2A> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="ecd5d-166">結果が `false`場合は、指定された診断メッセージを <xref:System.Diagnostics.Debug.Listeners%2A> コレクションに送信します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="ecd5d-167">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecd5d-168">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="ecd5d-169">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="ecd5d-170">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="ecd5d-171">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="ecd5d-172">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-173">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-174"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-175"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-176">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="ecd5d-177">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecd5d-178">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-179">次の例では、`type` パラメーターが有効かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="ecd5d-180">`type` が `null`場合、<xref:System.Diagnostics.Trace.Assert%2A> によってメッセージが出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="detailMessage" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-181">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-181">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-182">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-183"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="ecd5d-184"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信する詳細なメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="ecd5d-185">条件をチェックします。条件が <see langword="false" /> の場合、指定した 2 つのメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-186">既定では、<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドはデバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="ecd5d-187">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="ecd5d-188">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="ecd5d-189">通常、<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="ecd5d-190"><xref:System.Diagnostics.Debug.Assert%2A> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="ecd5d-191">結果が `false`場合は、指定された診断メッセージと詳細メッセージを <xref:System.Diagnostics.Debug.Listeners%2A> コレクションに送信します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="ecd5d-192">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecd5d-193">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="ecd5d-194">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="ecd5d-195">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="ecd5d-196">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="ecd5d-197">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-198">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-199"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-200"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-201">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="ecd5d-202">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecd5d-203">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-204">次の例では、`type` パラメーターが有効かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="ecd5d-205">`type` が `null`場合、<xref:System.Diagnostics.Trace.Assert%2A> は2つのメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="detailMessageFormat" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-206">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-206">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-207">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-208"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessageFormat"><span data-ttu-id="ecd5d-209"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信する複合書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span> <span data-ttu-id="ecd5d-210">このメッセージのテキストには、<paramref name="args" /> 配列内のオブジェクトに対応する 0 個以上の書式項目を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="ecd5d-211">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-211">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="ecd5d-212">条件をチェックし、その条件が <see langword="false" /> の場合は、2 つのメッセージ (単純なメッセージと書式設定されたメッセージ) を出力し、呼び出し履歴を表示するメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-213">このメソッドは、 [.net の複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-213">This method uses the [.NET composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="ecd5d-214">結果の文字列が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecd5d-215">既定では、<xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドはデバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="ecd5d-216">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="ecd5d-217">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="ecd5d-218">通常、<xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="ecd5d-219"><xref:System.Diagnostics.Debug.Assert%2A> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="ecd5d-220">結果が `false`場合、<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッドが呼び出され、`detailMessageFormat` 文字列と `args` 配列がパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="ecd5d-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29>、指定したテキストメッセージと書式設定されたテキストメッセージを <xref:System.Diagnostics.Debug.Listeners%2A> コレクションに送信します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="ecd5d-222">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="ecd5d-223">アプリケーションがユーザー インターフェイス モードで実行されているときは、ファイル番号と行番号を含む呼び出し履歴を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="ecd5d-224">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="ecd5d-225">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="ecd5d-226">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="ecd5d-227">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-228">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-229"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-230"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-231">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="ecd5d-232">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecd5d-233">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Debug.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecd5d-234">書き込むたびに、<see cref="M:System.Diagnostics.Debug.Flush" /> で <see cref="P:System.Diagnostics.Debug.Listeners" /> を呼び出すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span></span></summary>
        <value><span data-ttu-id="ecd5d-235">すべての書き込み後に <see langword="true" /> で <see cref="M:System.Diagnostics.Debug.Flush" /> を呼び出す場合は <see cref="P:System.Diagnostics.Debug.Listeners" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-235"><see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-236">既定では、 `false`です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="ecd5d-237">明示的に <xref:System.Diagnostics.Debug.Flush%2A> または <xref:System.Diagnostics.Debug.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="ecd5d-238"><xref:System.Diagnostics.Debug.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="ecd5d-239">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="ecd5d-240">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="ecd5d-241"><xref:System.Diagnostics.Debug>の <xref:System.Diagnostics.Debug.AutoFlush%2A> と <xref:System.Diagnostics.Debug.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="ecd5d-242">構成ファイルは、次の例に示すように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Debug.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecd5d-243">出力バッファーをフラッシュしてから、各 <see langword="Close" /> で <see cref="P:System.Diagnostics.Debug.Listeners" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-243">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-244">このメソッドは、出力がファイル (<xref:System.Diagnostics.TextWriterTraceListener>など) に移動する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-244">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-245">明示的に <xref:System.Diagnostics.Debug.Flush%2A> または <xref:System.Diagnostics.Debug.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-245">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="ecd5d-246"><xref:System.Diagnostics.Debug.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-246">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="ecd5d-247">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-247">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="ecd5d-248">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-248">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-249">次の例では、`myTextListener`という名前の <xref:System.Diagnostics.TextWriterTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-249">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="ecd5d-250">`myTextListener` では、`myOutputWriter` という <xref:System.IO.StreamWriter> を使用して、`TestFile.txt`という名前のファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-250">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="ecd5d-251">この例では、ファイル、ストリーム、テキストライターを作成し、1行のテキストをファイルに書き込んでから、出力をフラッシュして閉じます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-251">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-252">エラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-252">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Debug.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.CodeAnalysis.DoesNotReturn</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-253">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-253">A message to emit.</span></span></param>
        <summary><span data-ttu-id="ecd5d-254">指定されたエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-254">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-255">既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されているときに、<xref:System.Diagnostics.DefaultTraceListener> がメッセージボックスにメッセージを出力し、<xref:System.Diagnostics.Debug.Listeners%2A> コレクション内の <xref:System.Diagnostics.TraceListener> インスタンスに出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-255">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-256">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-256">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-257"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-257">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-258"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-258">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-259">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-259">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-260">次の例では、<xref:System.Diagnostics.Debug.Fail%2A> メソッドを使用して、例外処理中にメッセージを印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-260">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ecd5d-261">Switch ステートメントで <xref:System.Diagnostics.Debug.Fail%2A> メソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-261">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.CodeAnalysis.DoesNotReturn</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="detailMessage" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-262">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-262">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="ecd5d-263">出力する詳細メッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-263">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="ecd5d-264">エラー メッセージと詳細エラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-264">Emits an error message and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-265">既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されているときに、<xref:System.Diagnostics.DefaultTraceListener> がメッセージボックスにメッセージを出力し、<xref:System.Diagnostics.Debug.Listeners%2A> コレクション内の <xref:System.Diagnostics.TraceListener> インスタンスに出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-265">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-266">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-266">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-267"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-267">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="ecd5d-268"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-268">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="ecd5d-269">この動作は、<xref:System.Diagnostics.Debug.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-269">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-270">次の例では、<xref:System.Diagnostics.Debug.Fail%2A> メソッドを使用して、例外処理中にメッセージを印刷します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-270">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ecd5d-271">Switch ステートメントで <xref:System.Diagnostics.Debug.Fail%2A> メソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-271">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Debug.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecd5d-272">出力バッファーをフラッシュし、バッファー内のデータを <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-272">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-273">明示的に <xref:System.Diagnostics.Debug.Flush%2A> または <xref:System.Diagnostics.Debug.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-273">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="ecd5d-274"><xref:System.Diagnostics.Debug.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-274">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="ecd5d-275">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-275">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="ecd5d-276">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-276">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-277">次の例では、`myTextListener`という名前の <xref:System.Diagnostics.TextWriterTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-277">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="ecd5d-278">`myTextListener` では、`myFileStream` という <xref:System.IO.FileStream> を使用して、`TestFile.txt`という名前のファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-278">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="ecd5d-279">この例では、ストリームを作成し、ファイルが存在する場合はファイルを開き、新しいファイルを作成して、1行のテキストをファイルに書き込んでから、出力をフラッシュして閉じます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-279">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecd5d-280">現在の <see cref="P:System.Diagnostics.Debug.IndentLevel" /> を 1 だけ大きくします。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-280">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ecd5d-281">次の例では、インデントレベルを設定し、デバッグメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-281">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ecd5d-282">この例の結果は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Debug.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecd5d-283">インデント レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-283">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="ecd5d-284">インデント レベル。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-284">The indent level.</span></span> <span data-ttu-id="ecd5d-285">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-285">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-286"><xref:System.Diagnostics.Debug.IndentLevel%2A> プロパティは、サイズ <xref:System.Diagnostics.Debug.IndentSize%2A> のインデントが適用される回数を表します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-286">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-287">次の例では、インデントレベルを設定し、デバッグメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-287">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ecd5d-288">この例の結果は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-288">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Debug.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecd5d-289">1 つのインデントに含まれるスペースの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-289">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="ecd5d-290">インデントに含まれるスペースの数。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-290">The number of spaces in an indent.</span></span> <span data-ttu-id="ecd5d-291">既定値は 4 です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-291">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-292"><xref:System.Diagnostics.TextWriterTraceListener> は、この数値をスペースとして解釈します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-292">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="ecd5d-293"><xref:System.Diagnostics.EventLogTraceListener> はこの値を無視します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-293">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="ecd5d-294"><xref:System.Diagnostics.Debug>の <xref:System.Diagnostics.Debug.AutoFlush%2A> と <xref:System.Diagnostics.Debug.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-294">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="ecd5d-295">構成ファイルは、次の例に示すように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-295">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Debug.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ecd5d-296">デバッグ出力を監視するリスナーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-296">Gets the collection of listeners that is monitoring the debug output.</span></span></summary>
        <value><span data-ttu-id="ecd5d-297">デバッグ出力を監視する <see cref="T:System.Diagnostics.TraceListenerCollection" /> 型のコレクションを表す <see cref="T:System.Diagnostics.TraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-297">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-298">リスナーは、デバッグ出力から書式設定された出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-298">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="ecd5d-299">既定では、コレクションには <xref:System.Diagnostics.DefaultTraceListener> クラスのインスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-299">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="ecd5d-300">既定のリスナーを削除するには、<xref:System.Diagnostics.TraceListenerCollection.Remove%2A> メソッドを呼び出し、<xref:System.Diagnostics.DefaultTraceListener>のインスタンスに渡します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-300">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="ecd5d-301">コンソールウィンドウに出力をリダイレクトするには、<xref:System.Diagnostics.ConsoleTraceListener>のインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-301">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="ecd5d-302">ファイルまたはストリームに出力をリダイレクトするには、<xref:System.Diagnostics.TextWriterTraceListener>のインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-302">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd5d-303"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションは、<xref:System.Diagnostics.Debug> と <xref:System.Diagnostics.Trace> の両方のクラスで共有されます。いずれかのクラスにトレースリスナーを追加すると、リスナーが両方に追加されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-303">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-304">次の例では、コンソール画面に出力する <xref:System.Diagnostics.TextWriterTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-304">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="ecd5d-305">次に、コードは新しいリスナーを <xref:System.Diagnostics.Debug.Listeners%2A>に追加します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-305">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-306"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-306">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Print : string -&gt; unit" Usage="System.Diagnostics.Debug.Print message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-307">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-307">The message to write.</span></span></param>
        <summary><span data-ttu-id="ecd5d-308"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-308">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-309">既定の行終端記号は、キャリッジリターンの後にラインフィードが続くものです。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-309">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="ecd5d-310">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-310">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Print : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Print (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ecd5d-311">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-311">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="ecd5d-312">0 個以上の書式設定対象オブジェクトを含んだ object 配列。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-312">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="ecd5d-313"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書式指定された文字列を書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-313">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-314">このメソッドは、 [.net の複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-314">This method uses [.NET composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="ecd5d-315">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-315">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ecd5d-316"><paramref name="format" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-316"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ecd5d-317"><paramref name="format" /> が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-317"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="ecd5d-318">または</span><span class="sxs-lookup"><span data-stu-id="ecd5d-318">-or-</span></span> 
<span data-ttu-id="ecd5d-319">書式設定する引数を示す数が 0 より小さいか、書式設定する指定されたオブジェクトの数以上です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-319">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="ecd5d-320">複合書式指定</span><span class="sxs-lookup"><span data-stu-id="ecd5d-320">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ecd5d-321">標準の数値形式文字列</span><span class="sxs-lookup"><span data-stu-id="ecd5d-321">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ecd5d-322">カスタム数値形式文字列</span><span class="sxs-lookup"><span data-stu-id="ecd5d-322">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="ecd5d-323">標準の DateTime 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ecd5d-323">Standard DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="ecd5d-324">カスタムの DateTime 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ecd5d-324">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="ecd5d-325">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ecd5d-325">Enumeration Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ecd5d-326">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ecd5d-326">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ecd5d-327">現在の <see cref="P:System.Diagnostics.Debug.IndentLevel" /> を 1 だけ減らします。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-327">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ecd5d-328">次の例では、インデントレベルを設定し、デバッグメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-328">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ecd5d-329">この例の結果は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-329">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-330">デバッグについての情報を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-330">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Debug.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecd5d-331">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-331">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="ecd5d-332">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-332">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-333">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-333">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-334">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-334">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-335">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-335">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-336">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-336">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-337">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-337">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-338"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-338">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-339">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-339">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-340">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-340">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Debug.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-341">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-341">A message to write.</span></span></param>
        <summary><span data-ttu-id="ecd5d-342"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-342">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-343">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-343">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-344">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-344">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-345">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-345">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-346">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-346">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-347">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-347">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-348"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-348">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-349">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-349">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-350">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-350">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecd5d-351">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-351">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-352">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-352">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-353">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-353">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-354">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-354">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-355">`category` パラメーターを使用して、出力メッセージをグループ化します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-355">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-356">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-356">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-357">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-358">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-358">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-359">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-360"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-360">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-361">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-362">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-362">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-363">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-363">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-364">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-364">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-365">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-365">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-366">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-366">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-367">`category` パラメーターを使用して、出力メッセージをグループ化します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-367">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-368">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-368">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-369">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-369">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-370">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-370">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-371">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-371">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-372"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-372">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-373">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-373">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-374">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-374">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-375">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> の場合、デバッグについての情報を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-375">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-376">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-376">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-377">条件が <see langword="true" /> の場合、コレクションのトレース リスナーに値が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-377">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="ecd5d-378">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-378">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="ecd5d-379">条件が <see cref="M:System.Object.ToString" /> の場合、オブジェクトの <see cref="P:System.Diagnostics.Debug.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-379">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-380">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-381">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-381">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-382">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-382">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-383">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-383">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-384">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、値パラメーターの最初の名前が <xref:System.Diagnostics.Debug.Listeners%2A>に出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-384">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-385"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-385">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-386">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-386">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-387">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-387">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-388"><see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-388">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-389">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-389">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-390">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.Write(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-390">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="ecd5d-391">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-391">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-392">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-392">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-393">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-393">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-394">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-394">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-395">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-395">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-396">条件が <see langword="true" /> の場合、コレクションのトレース リスナーにメッセージが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-396">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-397">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-397">A message to write.</span></span></param>
        <summary><span data-ttu-id="ecd5d-398">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> である場合、メッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-398">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-399">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-399">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-400">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-400">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-401">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-401">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-402">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-402">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-403">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-403">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-404"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-404">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-405">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-405">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-406">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-406">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-407"><see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-407">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-408">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-408">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-409">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.Write(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-409">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="ecd5d-410">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-410">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-411">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-411">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-412">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-412">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-413">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-413">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-414">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-414">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-415">条件が <see langword="true" /> の場合、コレクションのトレース リスナーにカテゴリ名と値が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-415">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="ecd5d-416">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-416">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-417">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-417">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-418">条件が <see cref="M:System.Object.ToString" /> の場合は、カテゴリ名とオブジェクトの <see cref="P:System.Diagnostics.Debug.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-418">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-419">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-419">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-420">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-420">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-421">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-421">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-422">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-422">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-423">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-423">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-424">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では `myObject` の名前と `category` を <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-424">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-425"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-425">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-426">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-426">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-427">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-427">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-428"><see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-428">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-429">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-429">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-430">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.Write(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-430">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="ecd5d-431">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-431">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-432">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-432">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-433">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-433">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-434">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-434">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-435">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-435">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-436">条件が <see langword="true" /> の場合、コレクションのトレース リスナーにカテゴリ名とメッセージが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-436">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-437">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-437">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-438">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-438">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-439">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> である場合、カテゴリ名とメッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-439">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-440">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-440">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-441">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-441">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-442">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-442">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-443">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-443">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-444">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-444">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-445">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-445">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-446"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-446">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-447">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-447">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-448">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-448">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-449"><see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-449">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-450">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-450">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-451">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.Write(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-451">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span></span> <span data-ttu-id="ecd5d-452">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-452">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-453">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-453">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-454">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-454">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-455">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-455">Second example:</span></span> 
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-456">デバッグについての情報を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-456">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecd5d-457">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-457">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="ecd5d-458">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-458">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-459">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-459">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-460">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-460">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-461">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-461">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-462">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-462">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-463">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-463">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-464"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-464">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-465">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にオブジェクトの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-465">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-466">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-466">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-467">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-467">A message to write.</span></span></param>
        <summary><span data-ttu-id="ecd5d-468"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーにメッセージを書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-468">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-469">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-469">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-470">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-470">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-471">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-471">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-472">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-472">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-473">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-473">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-474"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-474">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-475">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-475">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-476">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-476">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecd5d-477">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-477">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-478">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-478">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-479">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-479">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-480">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-480">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-481">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-481">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-482">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-482">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-483">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-483">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-484">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-484">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-485">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-485">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-486"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-486">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-487">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-487">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-488">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-488">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ecd5d-489">0 個以上の書式項目が混在したテキストを含む複合書式指定文字列。各書式項目は、<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-489">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="ecd5d-490">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-490">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="ecd5d-491"><see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書式指定されたメッセージを書き込み、続けて行終端記号を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-491">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-492">このメソッドは、 [.net の複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を文字列に埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-492">This method uses the [.NET composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="ecd5d-493">この[](~/docs/csharp/language-reference/keywords/params.md)メソッドの構文C#の params (in) キーワードまたは[ParamArray](~/docs/visual-basic/language-reference/modifiers/paramarray.md) (in Visual Basic) キーワードは、オブジェクト配列が単一の値になる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-493">The  [params](~/docs/csharp/language-reference/keywords/params.md) (in C#) or [ParamArray](~/docs/visual-basic/language-reference/modifiers/paramarray.md) (in Visual Basic) keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="ecd5d-494">この例外は、<xref:System.String> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-494">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="ecd5d-495">明示的なオーバーロードが優先されるため、1つの文字列の `arg` 値が既定で <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> のオーバーロードになります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-495">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="ecd5d-496">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-496">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-497">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-497">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ecd5d-498">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-498">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-499">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-499">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-500">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Debug.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-500">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-501">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-501">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-502">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-502">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-503">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-503">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-504">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-504">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-505">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-505">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-506">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-506">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-507"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-507">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-508">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、2番目のエラーメッセージと `category` を1番目のメッセージと同じ行に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-508">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-509">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-509">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecd5d-510">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> の場合、デバッグについての情報を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-510">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-511">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-511">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-512">条件が <see langword="true" /> の場合、コレクションのトレース リスナーに値が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-512">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="ecd5d-513">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-513">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="ecd5d-514">条件が <see cref="M:System.Object.ToString" /> の場合、オブジェクトの <see cref="P:System.Diagnostics.Debug.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-514">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-515">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-515">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-516">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-516">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-517">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-517">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-518">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-518">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-519">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-519">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-520"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-520">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-521">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にオブジェクトの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-521">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-522">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-522">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-523"><see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-523">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-524">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-524">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-525">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-525">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="ecd5d-526">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-526">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-527">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-527">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-528">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-528">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-529">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-529">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-530">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-530">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-531">条件が <see langword="true" /> の場合、コレクションのトレース リスナーにメッセージが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-531">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-532">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-532">A message to write.</span></span></param>
        <summary><span data-ttu-id="ecd5d-533">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> である場合、メッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-533">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-534">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-534">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-535">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-535">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-536">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-536">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-537">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-537">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-538">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-538">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-539"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-539">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-540">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-540">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-541">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-541">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-542"><see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-542">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-543">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-543">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-544">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-544">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="ecd5d-545">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-545">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-546">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-546">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-547">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-547">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-548">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-548">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-549">評価する条件式です。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-549">The conditional expression to evaluate.</span></span> <span data-ttu-id="ecd5d-550">条件が <see langword="true" /> の場合、コレクションのトレース リスナーにカテゴリ名と値が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-550">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span></span></param>
        <param name="value"><span data-ttu-id="ecd5d-551">名前が <see cref="P:System.Diagnostics.Debug.Listeners" /> に送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-551">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-552">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-552">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-553">条件が <see cref="M:System.Object.ToString" /> の場合は、カテゴリ名とオブジェクトの <see cref="P:System.Diagnostics.Debug.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-553">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-554">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-554">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-555">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-555">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-556">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-556">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-557">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-557">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-558">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-558">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-559">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-559">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-560"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-560">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-561">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-561">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-562">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-562">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-563"><see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-563">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-564">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-564">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-565">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-565">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="ecd5d-566">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-566">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-567">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-567">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-568">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-568">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-569">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-569">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="category" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="ecd5d-570">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-570"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="ecd5d-571">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-571">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="ecd5d-572">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-572">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="ecd5d-573">条件が <see cref="P:System.Diagnostics.Debug.Listeners" /> である場合、カテゴリ名とメッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-573">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd5d-574">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-574">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="ecd5d-575">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-575">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="ecd5d-576">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-576">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd5d-577">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-577">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="ecd5d-578">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-578">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="ecd5d-579">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Debug.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-579">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="ecd5d-580"><xref:System.Diagnostics.Debug.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-580">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="ecd5d-581">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、2番目のエラーメッセージと `category` を1番目のメッセージと同じ行に出力します。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-581">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="ecd5d-582">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-582">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ecd5d-583"><see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-583">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="ecd5d-584">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-584">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="ecd5d-585">ただし、トレースがオフになっている場合は、最初の例の方がはるかに高速になります。つまり、 <c>mySwitch</c>が <see langword="false" />に評価される場合、<see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-585">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span></span> <span data-ttu-id="ecd5d-586">2番目の例では、常に <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-586">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="ecd5d-587">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ecd5d-587">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
<span data-ttu-id="ecd5d-588">1 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-588">First example:</span></span> 
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
<span data-ttu-id="ecd5d-589">2 番目の例:</span><span class="sxs-lookup"><span data-stu-id="ecd5d-589">Second example:</span></span> 
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
