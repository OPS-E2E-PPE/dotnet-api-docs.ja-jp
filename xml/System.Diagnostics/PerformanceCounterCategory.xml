<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3012dcd014fe5772579b2a46a4efdd884947d0fa" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137588" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パフォーマンス カウンターのカテゴリを定義するパフォーマンス オブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  パフォーマンスカウンターを作成または削除するには、名前付きミューテックスを使用して、基になるコードを同期する必要があります。 高い特権を持つアプリケーションが名前付きミューテックスをロックした場合、パフォーマンスカウンターを作成または削除しようとすると、ロックが解除されるまでアプリケーションは応答を停止します。 この問題を回避するために、信頼されていないコードには <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> アクセス許可を付与しないでください。 また、<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> アクセス許可によって他のアクセス許可がバイパスされる可能性があるため、信頼性の高いコードにのみ付与する必要があります。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> インスタンスの <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティは、パフォーマンスビューアーアプリケーションの [カウンターの追加] ダイアログボックスの [パフォーマンスオブジェクト] フィールドに表示されます。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> クラスには、コンピューター上のカウンターおよびカテゴリと対話するためのいくつかのメソッドが用意されています。 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドを使用すると、カスタムカテゴリを定義できます。 <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> メソッドを使用すると、コンピューターからカテゴリを削除することができます。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> メソッドを使用すると、カテゴリの一覧を表示できます。一方、<xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> は、1つのカテゴリに関連付けられているすべてのカウンターとインスタンスデータを取得します。  
  
 パフォーマンスカウンターは、アプリケーションに関するパフォーマンスデータを公開します。 カテゴリには、物理コンポーネント (プロセッサ、ディスク、メモリなど) とシステムオブジェクト (プロセスやスレッドなど) が含まれます。 同じパフォーマンスオブジェクトに関連付けられているシステムカウンターは、共通のフォーカスを示すカテゴリにグループ化されます。 <xref:System.Diagnostics.PerformanceCounter> クラスのインスタンスを作成するときは、まずコンポーネントが操作するカテゴリを指定し、そのカテゴリのカウンターを選択します。  
  
 たとえば、1つの Windows カウンターカテゴリはメモリカテゴリです。 このカテゴリ内のシステムカウンターは、使用可能なバイト数やキャッシュされたバイト数などのメモリデータを追跡します。 アプリケーションにキャッシュされたバイト数を使用する場合は、<xref:System.Diagnostics.PerformanceCounter> コンポーネントのインスタンスを作成し、そのインスタンスをメモリカテゴリに接続してから、そのカテゴリから適切なカウンター (この場合はキャッシュされたバイト) を選択します。  
  
 システムでは多数のカウンターカテゴリを使用できますが、最も頻繁にやり取りされるカテゴリは、Cache、Memory、Objects、PhysicalDisk、Process、Processor、Server、System、および Thread の各カテゴリです。  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.PerformanceCounter> クラスの <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> メソッドによってカウンターが解放され、そのカテゴリに対して [再利用] オプションが選択されている場合は、カウンターのインスタンスが再利用されます。 これにより、別のプロセスまたはコードの別の部分がカウンターインスタンスに書き込もうとしている場合に競合状態が発生する可能性があります。  
  
> [!NOTE]
>  アプリケーションの実行中ではなく、アプリケーションのインストール中に新しいパフォーマンスカウンターカテゴリを作成することを強くお勧めします。 これにより、オペレーティングシステムが登録されているパフォーマンスカウンターカテゴリの一覧を更新できるようになります。 一覧が更新されていない場合は、カテゴリを使用しようとすると失敗します。  
  
> [!NOTE]
>  [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] と共にインストールされるパフォーマンスカウンターカテゴリには個別の共有メモリが使用され、各パフォーマンスカウンターカテゴリには独自のメモリがあります。 レジストリキーに FileMappingSize という名前の DWORD を作成することによって、個別の共有メモリのサイズを指定することができます。 HKEY_LOCAL_MACHINE \SYSTEM\CurrentControlSet\Services\\*\<カテゴリ名 >*/パフォーマンスです。 FileMappingSize 値は、カテゴリの共有メモリサイズに設定されます。 既定のサイズは 131072 decimal です。 FileMappingSize 値が存在しない場合は、machine.config ファイルで指定された `performanceCounters` 要素の `fileMappingSize` 属性値が使用され、構成ファイルの処理に追加のオーバーヘッドが発生します。 アプリケーションの起動のパフォーマンスを向上させるには、レジストリでファイルマッピングサイズを設定します。 ファイルマッピングサイズの詳細については、「 [&lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> とその <xref:System.Diagnostics.PerformanceCounterCategory> がローカルコンピューターまたは別のコンピューターに存在するかどうかを判断します。 これらのオブジェクトがローカルコンピューター上に存在しない場合は、必要に応じて作成します。 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> メソッドを使用して、<xref:System.Diagnostics.PerformanceCounterCategory> が存在するかどうかを判断します。  <xref:System.Diagnostics.PerformanceCounterCategory> が存在せず、カウンター名も指定されていない場合、またはコンピューターがリモートコンピューターの場合、この例は終了します。  
  
 <xref:System.Diagnostics.PerformanceCounter> 名が指定されている場合、この例では <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッドを使用して、結果をユーザーに表示します。 <xref:System.Diagnostics.PerformanceCounter> が存在しない場合、ユーザーは新しい <xref:System.Diagnostics.PerformanceCounter>で <xref:System.Diagnostics.PerformanceCounterCategory> を削除して再作成することができます。 ユーザーがこれを行った場合、<xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> 方法を使用してカテゴリが削除されます。  
  
 要求された場合、この例では、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドを使用して、新しい <xref:System.Diagnostics.PerformanceCounterCategory> と <xref:System.Diagnostics.PerformanceCounter> を作成します。 インスタンス名を指定した場合、この例では <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> メソッドを使用して結果を表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティを空のままにし、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターに設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Diagnostics.PerformanceCounterCategory> インスタンスをサーバー上のパフォーマンスオブジェクトに関連付ける前に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティを設定する必要があります。 それ以外の場合は、例外がスローされます。  
  
   
  
## Examples  
 次のコード例では、コマンドラインから <xref:System.Diagnostics.PerformanceCounterCategory> 名とコンピューター名を受け入れます。  このメソッドは、指定されたパラメーターの数に適したコンストラクターオーバーロードを使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成し、そのプロパティを表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティを指定した値に設定し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターに設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、コマンドラインから <xref:System.Diagnostics.PerformanceCounterCategory> 名とコンピューター名を受け入れます。 このメソッドは、指定されたパラメーターの数に適したコンストラクターオーバーロードを使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成し、そのプロパティを表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> が空の文字列 ("") です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">カテゴリ名などのカテゴリ情報を読み取るために使用します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</param>
        <param name="machineName">パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューター。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティを指定した値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、コマンドラインから <xref:System.Diagnostics.PerformanceCounterCategory> 名とコンピューター名を受け入れます。 このメソッドは、指定されたパラメーターの数に適したコンストラクターオーバーロードを使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成し、そのプロパティを表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
または 
<paramref name="machineName" /> 構文が無効です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">コンピューター名やカテゴリ名などのカテゴリ情報を読み取る場合。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カテゴリのヘルプ テキストを取得します。</summary>
        <value>このカテゴリが測定するパフォーマンス オブジェクトの説明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>を使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 ユーザーに <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名の入力を求めるプロンプトが表示されたら、入力した値の <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> のプロパティを設定します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティの値が表示されます。 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできない場合は、エラーメッセージが表示されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 カテゴリ ヘルプを取得する前に、カテゴリ名を設定する必要があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このカテゴリを定義するパフォーマンス オブジェクト名を取得または設定します。</summary>
        <value>この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスを関連付けるパフォーマンス カウンター カテゴリまたはパフォーマンス オブジェクトの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>を使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 ユーザーに <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名の入力を求めるプロンプトが表示されたら、入力した値の <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> のプロパティを設定します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティの値が表示されます。 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできない場合は、エラーメッセージが表示されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が空の文字列 ("") です。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パフォーマンス カウンター カテゴリ タイプを取得します。</summary>
        <value><see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> プロパティは、<xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトが複数のインスタンスを持つことができるかどうかを示します。 指定できる値は、<xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>、<xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>、または <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>です。  
  
 パフォーマンスカウンターカテゴリには、単一インスタンスと複数インスタンスの2種類があります。 既定では、カテゴリは作成時には単一インスタンスであり、別のインスタンスが追加されると複数インスタンスになります。 カテゴリは、アプリケーションのセットアップ時に作成され、インスタンスは実行時に追加されます。 .NET Framework バージョン1.0 および1.1 では、パフォーマンスカウンターのカテゴリが複数インスタンスであるか単一インスタンスであるかを知る必要はありません。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]では、<xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙を使用して、パフォーマンスカウンターが複数のインスタンスを持つことができるかどうかを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したカウンターが特定のカテゴリに登録されているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <summary>指定したカウンターがこのカテゴリに登録されているかどうかを判断します。カテゴリは、<see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティで指定されます。</summary>
        <returns>カウンターが、<see langword="true" /> プロパティと <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティで指定されたカテゴリに登録されている場合は <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出す前に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティを設定する必要があります。 それ以外の場合は、例外がスローされます。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> プロパティを設定していない場合、このメソッドはローカルコンピューター (".") を使用します。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> が存在するかどうかを判断します。 指定されている場合は、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得します。 適切な <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>を使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> メソッドを使用して、指定した <xref:System.Diagnostics.PerformanceCounter> が存在するかどうかを判断し、ユーザーに通知します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが設定されていません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">指定したパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <summary>指定したカウンターが、ローカル コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
        <returns>カウンターがローカル コンピューター上の指定したカテゴリに登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> が存在するかどうかを判断します。 指定されている場合は、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得します。 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッドの静的なオーバーロードを使用して、指定された <xref:System.Diagnostics.PerformanceCounter> 名が <xref:System.Diagnostics.PerformanceCounterCategory>に存在するかどうかを判断します。 オーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> が <see langword="null" /> です。  
  
または 
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> が空の文字列 ("") です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">指定したパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="machineName">パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューターの名前。</param>
        <summary>指定したカウンターが、リモート コンピューター上の指定したカテゴリに登録されているかどうかを判断します。</summary>
        <returns>カウンターが指定したコンピューター上の指定したカテゴリに登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> が存在するかどうかを判断します。 指定されている場合は、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得します。 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッドの静的なオーバーロードを使用して、指定された <xref:System.Diagnostics.PerformanceCounter> 名が <xref:System.Diagnostics.PerformanceCounterCategory>に存在するかどうかを判断します。 オーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> が <see langword="null" /> です。  
  
または 
<paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
または 
<paramref name="machineName" /> が無効です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>カスタム パフォーマンス カウンター カテゴリと 1 つ以上のカウンターをシステムに登録します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタム カテゴリの説明。</param>
        <param name="counterData">新しいカテゴリの一部として作成するカウンターを指定する <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
        <summary>指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
        <returns>新しいカスタム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、"orders" という名前の <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトが存在するかどうかを判断します。 そうでない場合は、2つのパフォーマンスカウンターを含む <xref:System.Diagnostics.CounterCreationDataCollection> オブジェクトを使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterData" /> コレクションで指定されているカウンター名が <see langword="null" /> または空の文字列 ("") です。  
  
または 
<paramref name="counterData" /> コレクションで指定されているカウンターが既に存在します。  
  
または 
<paramref name="counterName" /> パラメーターの構文が無効です。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。  
  
または 
<paramref name="counterData" /> コレクションのレイアウトが、ベース カウンターに適合していません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリに対する管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタム カテゴリの説明。</param>
        <param name="categoryType"><see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値の 1 つ。</param>
        <param name="counterData">新しいカテゴリの一部として作成するカウンターを指定する <see cref="T:System.Diagnostics.CounterCreationDataCollection" />。</param>
        <summary>指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
        <returns>新しいカスタム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` パラメーターは、パフォーマンスカウンターのカテゴリが単一インスタンスと複数インスタンスのどちらであるかを指定します。 既定では、カテゴリは作成時には単一インスタンスであり、別のインスタンスが追加されると複数インスタンスになります。 カテゴリは、アプリケーションのセットアップ時に作成され、インスタンスは実行時に追加されます。 .NET Framework バージョン1.0 および1.1 では、パフォーマンスカウンターのカテゴリが複数インスタンスであるか単一インスタンスであるかを知る必要はありません。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]では、<xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙を使用して、パフォーマンスカウンターが複数のインスタンスを持つことができるかどうかを示します。  
  
 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] と共にインストールされるパフォーマンスカウンターカテゴリには個別の共有メモリが使用され、各パフォーマンスカウンターカテゴリには独自のメモリがあります。  レジストリキーに FileMappingSize という名前の DWORD を作成することによって、個別の共有メモリのサイズを指定することができます。 HKEY_LOCAL_MACHINE \SYSTEM\CurrentControlSet\Services\\*\<カテゴリ名 >*/パフォーマンスです。 FileMappingSize 値は、カテゴリの共有メモリサイズに設定されます。 既定のサイズは 131072 decimal です。 FileMappingSize 値が存在しない場合は、machine.config ファイルで指定された `performanceCounters` 要素の `fileMappingSize` 属性値が使用され、構成ファイルの処理に追加のオーバーヘッドが発生します。 アプリケーションの起動のパフォーマンスを向上させるには、レジストリでファイルマッピングサイズを設定します。  
  
> [!NOTE]
>  アプリケーションの実行中ではなく、アプリケーションのインストール中に新しいパフォーマンスカウンターカテゴリを作成することを強くお勧めします。 これにより、オペレーティングシステムが登録されているパフォーマンスカウンターカテゴリの一覧を更新できるようになります。 一覧が更新されていない場合は、カテゴリを使用しようとすると失敗します。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドの使用方法を示しています。 この例では、1秒あたりの注文数に対して、複数インスタンスのカスタムパフォーマンスカウンターカテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterData" /> コレクションで指定されているカウンター名が <see langword="null" /> または空の文字列 ("") です。  
  
または 
<paramref name="counterData" /> コレクションで指定されているカウンターが既に存在します。  
  
または 
 <paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> は <see langword="null" /> です。  
  
または 
 <paramref name="counterData" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="categoryType" /> 値が <see langword="MultiInstance" />、<see langword="SingleInstance" />、<see langword="Unknown" /> のいずれの値でもありません。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。  
  
または 
<paramref name="counterData" /> コレクションのレイアウトが、ベース カウンターに適合していません。 カウンターのタイプが <see langword="AverageCount64" />、<see langword="AverageTimer32" />、<see langword="CounterMultiTimer" />、<see langword="CounterMultiTimerInverse" />、<see langword="CounterMultiTimer100Ns" />、<see langword="CounterMultiTimer100NsInverse" />、<see langword="RawFraction" />、<see langword="SampleFraction" />、または <see langword="SampleCounter" /> の場合は、直後にベース カウンター タイプのいずれか (<see langword="AverageBase" />、<see langword="MultiBase" />、<see langword="RawBase" />、または <see langword="SampleBase" />) が必要です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリに対する管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタム カテゴリの説明。</param>
        <param name="counterName">新しいカテゴリの一部として作成する <see langword="NumberOfItems32" /> タイプの新しいカウンターの名前。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けるカウンターの説明。</param>
        <summary><see langword="NumberOfItems32" /> タイプの単一のカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
        <returns>新しいシステム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> メソッドを使用して、それぞれのヘルプテキストを含む <xref:System.Diagnostics.PerformanceCounterCategory> と1つの <xref:System.Diagnostics.PerformanceCounter> を作成します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。  
  
または 
<paramref name="counterName" /> で指定されているカウンターが既に存在します。  
  
または 
 <paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> は <see langword="null" /> です。  
  
または 
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリに対する管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterName" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterHelp" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">作成してシステムに登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタム カテゴリの説明。</param>
        <param name="categoryType">カテゴリが <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />、または <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> のいずれであるかを指定する、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" /> 値の 1 つ。</param>
        <param name="counterName">新しいカテゴリの一部として作成する新しいカウンターの名前。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けるカウンターの説明。</param>
        <summary><see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> タイプの単一のカウンターが含まれているカスタム パフォーマンス カウンター カテゴリをローカル コンピューターに登録します。</summary>
        <returns>新しいシステム カテゴリ (パフォーマンス オブジェクト) と関連付ける <see cref="T:System.Diagnostics.PerformanceCounterCategory" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` パラメーターは、パフォーマンスカウンターのカテゴリが単一インスタンスと複数インスタンスのどちらであるかを指定します。 既定では、カテゴリは作成時には単一インスタンスであり、別のインスタンスが追加されると複数インスタンスになります。 カテゴリは、アプリケーションのセットアップ時に作成され、インスタンスは実行時に追加されます。 .NET Framework バージョン1.0 および1.1 では、パフォーマンスカウンターのカテゴリが複数インスタンスであるか単一インスタンスであるかを知る必要はありません。 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]では、<xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙を使用して、パフォーマンスカウンターが複数のインスタンスを持つことができるかどうかを示します。  
  
 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] と共にインストールされるパフォーマンスカウンターカテゴリには個別の共有メモリが使用され、各パフォーマンスカウンターカテゴリには独自のメモリがあります。 レジストリキーに FileMappingSize という名前の DWORD を作成することによって、個別の共有メモリのサイズを指定することができます。 HKEY_LOCAL_MACHINE \SYSTEM\CurrentControlSet\Services\\*\<カテゴリ名 >*/パフォーマンスです。 FileMappingSize 値は、カテゴリの共有メモリサイズに設定されます。 既定のサイズは 131072 decimal です。 FileMappingSize 値が存在しない場合は、machine.config ファイルで指定された `performanceCounters` 要素の `fileMappingSize` 属性値が使用され、構成ファイルの処理に追加のオーバーヘッドが発生します。 アプリケーションの起動のパフォーマンスを向上させるには、レジストリでファイルマッピングサイズを設定します。  
  
> [!NOTE]
>  アプリケーションの実行中ではなく、アプリケーションのインストール中に新しいパフォーマンスカウンターカテゴリを作成することを強くお勧めします。 これにより、オペレーティングシステムが登録されているパフォーマンスカウンターカテゴリの一覧を更新できるようになります。 一覧が更新されていない場合は、カテゴリを使用しようとすると失敗します。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドの使用方法を示しています。 この例では、カスタムの単一インスタンスパフォーマンスカウンターカテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="counterName" /> が <see langword="null" /> または空の文字列 ("") です。  
  
または 
<paramref name="counterName" /> で指定されているカウンターが既に存在します。  
  
または 
 <paramref name="counterName" /> に無効な構文が含まれています。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリが既にローカル コンピューター上に存在しています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> は <see langword="null" /> です。  
  
または 
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリに対する管理タスクを実行します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">削除するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <summary>カテゴリとそれに関連付けられているカウンターをローカル コンピューターから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 システムから削除できるのは、カスタムパフォーマンスカウンターカテゴリだけです。 カテゴリからカウンターを削除することはできません。 これを行うには、カテゴリを削除し、保持するカウンターを使用してカテゴリを再作成します。 例外を回避するには、カテゴリが存在することを確認してから削除します。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> メソッドを使用して、<xref:System.Diagnostics.PerformanceCounterCategory> とそれに含まれる <xref:System.Diagnostics.PerformanceCounter> オブジェクトを削除します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> パラメーターの構文が無効です。 円記号文字 ("\\") が含まれているか、長さが 80 文字を超えています。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリがカスタム カテゴリではないため、削除できません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>カテゴリがシステムに登録されているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <summary>カテゴリがローカル コンピューターに登録されているかどうかを判断します。</summary>
        <returns>カテゴリが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> メソッドを使用すると、コンピューター上のすべてのパフォーマンスカウンターの可用性がチェックされ、パフォーマンスが大幅に低下する可能性があります。 パフォーマンスカウンターへの書き込みのみを行う場合は、アプリケーションのインストール時にパフォーマンスカウンターを作成し、カウンターにアクセスするときにカテゴリが存在すると想定して、パフォーマンスカウンターのグローバル検索を回避できます。 パフォーマンスカウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、"orders" という名前の <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトが存在するかどうかを判断します。 そうでない場合は、2つのパフォーマンスカウンターを含む <xref:System.Diagnostics.CounterCreationDataCollection> オブジェクトを使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <param name="machineName">カテゴリを調べるコンピューターの名前。</param>
        <summary>指定したコンピューター上にカテゴリが登録されているかどうかを判断します。</summary>
        <returns>カテゴリが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> メソッドを使用すると、コンピューター上のすべてのパフォーマンスカウンターの可用性がチェックされ、パフォーマンスが大幅に低下する可能性があります。 パフォーマンスカウンターへの書き込みのみを行う場合は、アプリケーションのインストール時にパフォーマンスカウンターを作成し、カウンターにアクセスするときにカテゴリが存在すると想定して、パフォーマンスカウンターのグローバル検索を回避できます。 パフォーマンスカウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次の例では、`Orders` という名前の <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトが存在するかどうかを判断します。 存在しない場合、この例では、2つのパフォーマンスカウンターを含む <xref:System.Diagnostics.CounterCreationDataCollection> オブジェクトを使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> パラメーターが空の文字列 ("") です。  
  
または 
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.IO.IOException">ネットワーク パスが見つかりません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  
  
 または  
  
 管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ローカル コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>ローカル コンピューターに登録されているカテゴリを指す <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> メソッドを使用して、ローカルコンピューターまたは指定したコンピューターから <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトの配列を返します。 <xref:System.Diagnostics.PerformanceCounterCategory> 配列をカテゴリ名の配列に変換し、ユーザーに対して並べ替えと表示を行います。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> のオーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">検索対象のコンピューター。</param>
        <summary>指定したコンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>指定したコンピューターに登録されているカテゴリを指す <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ローカルコンピューター上のカテゴリを取得するには、別のオーバーロードを使用するか、"." を `machineName` パラメーターとして渡します。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> メソッドを使用して、ローカルコンピューターまたは指定したコンピューターから <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトの配列を返します。 <xref:System.Diagnostics.PerformanceCounterCategory> 配列をカテゴリ名の配列に変換し、ユーザーに対して並べ替えと表示を行います。 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> のオーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>インスタンスが 1 つだけ含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>この単一インスタンスのパフォーマンス カウンター カテゴリに関連付けられたカウンターを指す <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パフォーマンスオブジェクトインスタンスの詳細については、「<xref:System.Diagnostics.PerformanceCounter> クラスの概要」を参照してください。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory>内の <xref:System.Diagnostics.PerformanceCounter> オブジェクトの一覧を取得します。 まず、コンピューター名が指定されているかどうかに基づいて、適切なコンストラクターを持つ <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> メソッドを使用して <xref:System.Diagnostics.PerformanceCounter> オブジェクトの配列を返し、インスタンス名が指定されているかどうかに基づいて <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> オーバーロードを選択します。  
  
 この <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> オーバーロードは、単一インスタンスカテゴリで使用しない限り失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">カテゴリが、単一のインスタンスではありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリには関連付けられたインスタンスはありません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">関連付けられたカウンターの一覧を取得する対象のパフォーマンス オブジェクト インスタンス。</param>
        <summary>インスタンスが 1 つ以上含まれているパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>このパフォーマンス カウンター カテゴリの指定したオブジェクト インスタンスに関連付けられたカウンターを指す <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 単一インスタンスのカテゴリを表すには、`instanceName` パラメーターに空の文字列 ("") を渡します。  
  
 パフォーマンスオブジェクトインスタンスの詳細については、「<xref:System.Diagnostics.PerformanceCounter> クラスの概要」を参照してください。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory>内の <xref:System.Diagnostics.PerformanceCounter> オブジェクトの一覧を取得します。 まず、コンピューター名が指定されているかどうかに基づいて、適切なコンストラクターを持つ <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> メソッドを使用して <xref:System.Diagnostics.PerformanceCounter> オブジェクトの配列を返し、インスタンス名が指定されているかどうかに基づいて <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> オーバーロードを選択します。  
  
 インスタンスを含むカテゴリと共に使用しない限り、この <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> のオーバーロードは失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">この <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> インスタンスの <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> プロパティが設定されていません。  
  
または 
<paramref name="instanceName" /> パラメーターで指定されたインスタンスがカテゴリに含まれていません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このカテゴリに関連付けられたパフォーマンス オブジェクト インスタンスの一覧を取得します。</summary>
        <returns>このカテゴリに関連付けられたパフォーマンス オブジェクト インスタンス名を表す文字列の配列。または、カテゴリに含まれるパフォーマンス オブジェクト インスタンスが 1 つだけの場合は、空の文字列 ("") が格納された単一エントリの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory>内の <xref:System.Diagnostics.PerformanceCounter> オブジェクトの一覧を取得します。 まず、コンピューター名が指定されたかどうかに基づいて、適切なコンストラクターを使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> を使用して、インスタンス名を <xref:System.String>の配列として返します。これにより、並べ替えと表示がされます。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。  
  
または 
カテゴリには関連付けられたインスタンスはありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>カテゴリに指定したパフォーマンス オブジェクト インスタンスが含まれているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索に使用するパフォーマンス カウンター カテゴリのパフォーマンス オブジェクト インスタンス。</param>
        <summary>この <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティで識別されるカテゴリに、指定したパフォーマンス オブジェクト インスタンスがあるかどうかを判断します。</summary>
        <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> のオーバーロードは `static`ません。 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成し、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティを設定する必要があります。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> インスタンスが <xref:System.Diagnostics.PerformanceCounterCategory>内に存在するかどうかを判断します。 まず、コンピューター名が指定されたかどうかに基づいて、適切なコンストラクターを使用して <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> を使用して、指定したインスタンスが存在するかどうかを判断し、ユーザーに通知します。 インスタンス名が指定されていない場合、この例では既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
        <summary>ローカル コンピューター上の指定したカテゴリに、指定したパフォーマンス オブジェクト インスタンスが含まれているかどうかを判断します。</summary>
        <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定のカテゴリを指定せずに、パフォーマンスオブジェクトのインスタンスがコンピューターに存在するかどうかを判断することはできません。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> の静的なオーバーロードを使用して、指定された <xref:System.Diagnostics.PerformanceCounter> インスタンスが <xref:System.Diagnostics.PerformanceCounterCategory>に存在するかどうかを確認します。 オーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。 インスタンス名が指定されていない場合、この例では既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
または 
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> パラメーターが空の文字列 ("") です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクト インスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
        <param name="machineName">カテゴリ インスタンスのペアを検索するコンピューターの名前。</param>
        <summary>指定したコンピューターの指定したカテゴリに、指定したパフォーマンス オブジェクト インスタンスが含まれているかどうかを判断します。</summary>
        <returns>カテゴリに指定したパフォーマンス オブジェクト インスタンスが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定のカテゴリを指定せずに、パフォーマンスオブジェクトのインスタンスがコンピューターに存在するかどうかを判断することはできません。  
  
 "." を使用してローカルコンピューターを指定できます。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> の静的なオーバーロードを使用して、指定された <xref:System.Diagnostics.PerformanceCounter> インスタンスが <xref:System.Diagnostics.PerformanceCounterCategory>に存在するかどうかを確認します。 オーバーロードは、コンピューター名が指定されているかどうかに基づいて選択されます。 インスタンス名が指定されていない場合、この例では既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
または 
<paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="categoryName" /> パラメーターが空の文字列 ("") です。  
  
または 
<paramref name="machineName" /> パラメーターが正しくありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このカテゴリが存在するコンピューターの名前を取得または設定します。</summary>
        <value>パフォーマンス カウンター カテゴリと、それに関連付けられているカウンターが存在するコンピューターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> コンストラクターを使用して <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 ユーザーに対して <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名の入力を求めるプロンプトが表示されたら、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティと <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> プロパティを入力した値から設定します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティの値が表示されます。 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできない場合は、エラーメッセージが表示されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 構文が無効です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを読み取ります。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このパフォーマンス カウンター カテゴリに関連付けられたすべてのカウンターとパフォーマンス オブジェクト インスタンスのデータを読み取ります。</summary>
        <returns>カテゴリのカウンターとパフォーマンス オブジェクト インスタンスのデータを格納している <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>を呼び出す前に、<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティを設定する必要があります。  
  
 カテゴリ全体を一度に読み取ると、システムによってデータが提供されるため、1つのカウンターを読み取るのと同じ効率が得られます。  
  
> [!NOTE]
>  Windows Vista 以降、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、指定された <xref:System.Diagnostics.PerformanceCounterCategory> 名の <xref:System.Diagnostics.PerformanceCounterCategory> を作成します。 次に、<xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> を使用して、<xref:System.Diagnostics.PerformanceCounterCategory>内の <xref:System.Diagnostics.PerformanceCounter> オブジェクトのすべてのインスタンスのインスタンスデータを含む <xref:System.Diagnostics.InstanceDataCollectionCollection> を返します。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>
