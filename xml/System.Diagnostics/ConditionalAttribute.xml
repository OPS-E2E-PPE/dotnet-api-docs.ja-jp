<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77b6f31ef98a9f0cdc6bd6d948fbcad6f8a17db8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75138199" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f2e61-101">指定した条件付きコンパイル シンボルが定義されていない場合、メソッド呼び出しまたは属性を無視するようコンパイラに指示します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e61-102"><xref:System.Diagnostics.ConditionalAttribute> 属性を、メソッドおよびクラスに適用することができます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-102">You can apply the <xref:System.Diagnostics.ConditionalAttribute> attribute to methods and classes.</span></span> <span data-ttu-id="f2e61-103">ただし、クラスでの使用は <xref:System.Attribute> から派生した型に対してのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="f2e61-103">However, its use on classes is valid only for types that are derived from <xref:System.Attribute>.</span></span> <span data-ttu-id="f2e61-104">その他の種類に適用する場合、 <xref:System.Diagnostics.ConditionalAttribute> は無視されるか、コンパイラの警告またはエラー メッセージが生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-104"><xref:System.Diagnostics.ConditionalAttribute> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</span></span>  
  
 <span data-ttu-id="f2e61-105"><xref:System.Diagnostics.ConditionalAttribute> をメソッドに適用することは、<xref:System.Diagnostics.ConditionalAttribute> と関連付けられる条件付きコンパイル シンボルを定義しない限り、メソッドの呼び出しを Microsoft intermediate language (MSIL) にコンパイルしないことを、コンパイラに指示することを示します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-105">Applying <xref:System.Diagnostics.ConditionalAttribute> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <xref:System.Diagnostics.ConditionalAttribute> is defined.</span></span> <span data-ttu-id="f2e61-106">void ではないものを返すメソッドにこの属性を定義する場合、Visual Studio でコンパイル エラーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-106">You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</span></span> <span data-ttu-id="f2e61-107"><xref:System.Diagnostics.ConditionalAttribute> を属性に適用することは、条件付きコンパイル シンボルが定義されていない場合は、メタデータに属性を出力しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-107">Applying <xref:System.Diagnostics.ConditionalAttribute> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</span></span> <span data-ttu-id="f2e61-108">メソッドあるいは属性に渡されるどんな引数でも、コンパイラによって型チェックが行われます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-108">Any arguments passed to the method or attribute are still type-checked by the compiler.</span></span>  
  
 <span data-ttu-id="f2e61-109">条件付きコンパイルシンボルを定義するには、次の方法を使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-109">You can use the following techniques to define conditional compilation symbols:</span></span>  
  
-   <span data-ttu-id="f2e61-110">**/define:DEBUG** のように、コンパイラのコマンド ライン オプションを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-110">Use compiler command-line options; for example, **/define:DEBUG**.</span></span>  
  
-   <span data-ttu-id="f2e61-111">**set DEBUG=1** のように、オペレーティング システムのシェルで環境変数を使用します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-111">Use environment variables in the operating system shell; for example, **set DEBUG=1**.</span></span>  
  
-   <span data-ttu-id="f2e61-112">ソース コードでのプラグマを使用します。たとえば、次の例のようにコンパイル変数を定義します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-112">Use pragmas in the source code; for example, define the compilation variable as follows:</span></span>  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     <span data-ttu-id="f2e61-113">変数を未定義にするには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2e61-113">To undefine the variable, use the following:</span></span>  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 <span data-ttu-id="f2e61-114">共通言語仕様 (CLS) に準拠するコンパイラは、<xref:System.Diagnostics.ConditionalAttribute> を無視することを許可されています。</span><span class="sxs-lookup"><span data-stu-id="f2e61-114">Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="f2e61-115">C#、Visual Basic、および C++ のコンパイラは、<xref:System.Diagnostics.ConditionalAttribute> をサポートしています。 JScript コンパイラは、属性をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="f2e61-115">The C#, Visual Basic, and C++ compilers support <xref:System.Diagnostics.ConditionalAttribute>; the JScript compiler does not support the attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2e61-116">Visual Basic で、`AddressOf`演算子はこの属性の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="f2e61-116">In Visual Basic, the `AddressOf` operator is not affected by this attribute.</span></span> <span data-ttu-id="f2e61-117">たとえば、`Call CType(AddressOf delegate, Action)` は常に `delegate` を呼び出しますが、`Call delegate()` はそうしません。</span><span class="sxs-lookup"><span data-stu-id="f2e61-117">For example, `Call CType(AddressOf delegate, Action)` always invokes `delegate`, although `Call delegate()` might not.</span></span>  
  
 <span data-ttu-id="f2e61-118"><xref:System.Diagnostics.ConditionalAttribute> は、<xref:System.Diagnostics.Debug>と<xref:System.Diagnostics.Trace> クラスで定義されているメソッドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-118"><xref:System.Diagnostics.ConditionalAttribute> is applied to the methods that are defined in the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes.</span></span>  
  
 <span data-ttu-id="f2e61-119">属性を使用する方法の詳細については、[属性](~/docs/standard/attributes/index.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2e61-119">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2e61-120">次の例は、<xref:System.Diagnostics.ConditionalAttribute> の使い方を示しています。</span><span class="sxs-lookup"><span data-stu-id="f2e61-120">The following example demonstrates the use of <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="f2e61-121">この例では、 **/define**コンパイラオプションを使用して条件が定義されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="f2e61-121">The example assumes that the condition is defined with the **/define** compiler option.</span></span> <span data-ttu-id="f2e61-122">コンパイラオプションを変更することで、異なる結果を得ることができます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-122">You can obtain different results by changing the compiler option.</span></span> <span data-ttu-id="f2e61-123">必要に応じて、コンパイラオプションとして識別するのではなく、サンプルコードでプラグマを使用して条件を定義できます。</span><span class="sxs-lookup"><span data-stu-id="f2e61-123">You can optionally define the conditions by using pragmas in the sample code instead of identifying them as compiler options.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString"><span data-ttu-id="f2e61-124">大文字小文字が区別される、属性に関連付けられた条件付きコンパイルのシンボルを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="f2e61-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span></span></param>
        <summary><span data-ttu-id="f2e61-125"><see cref="T:System.Diagnostics.ConditionalAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2e61-126">次の例は、<xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> コンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f2e61-126">The following example demonstrates how to use the <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="f2e61-127">この例は、<xref:System.Diagnostics.ConditionalAttribute> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="f2e61-127">This example is part of a larger example provided for the <xref:System.Diagnostics.ConditionalAttribute> class.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2e61-128"><see cref="T:System.Diagnostics.ConditionalAttribute" /> 属性に関連付けられた条件付きコンパイル シンボルを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2e61-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span></span></summary>
        <value><span data-ttu-id="f2e61-129">大文字小文字が区別される、<see cref="T:System.Diagnostics.ConditionalAttribute" /> 属性に関連付けられた条件付きコンパイル シンボルを指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="f2e61-129">A string that specifies the case-sensitive conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2e61-130">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="f2e61-130">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
