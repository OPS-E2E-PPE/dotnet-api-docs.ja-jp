<Type Name="PerformanceCounter" FullName="System.Diagnostics.PerformanceCounter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85347a00a1df210e9113ec561570f0a7f406fbdd" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73340471" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounter extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounter&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounter sealed : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type PerformanceCounter = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.PerformanceCounterInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.PerformanceCounterDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows NT パフォーマンス カウンター コンポーネントを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounter> コンポーネントは、既存の定義済みカウンターまたはカスタムカウンターの読み取り、およびカスタムカウンターへのパフォーマンスデータの発行 (書き込み) に使用できます。  
  
 Windows パフォーマンスモニターの [[カウンターの追加] ダイアログボックス](https://go.microsoft.com/fwlink/p/?LinkId=257854)には、多数の定義済みカウンターが表示されます。 .NET Framework パフォーマンスカウンターの詳細については、「[パフォーマンスカウンター](~/docs/framework/debug-trace-profile/performance-counters.md)」を参照してください。  
  
 この型は <xref:System.IDisposable> インターフェイスを実装します。 型の使用が完了したら、直接的または間接的に型を破棄する必要があります。 直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。 間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。 詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。  
  
> [!IMPORTANT]
>  .NET Framework のバージョン1.0 および1.1 では、このクラスは即時呼び出し元が完全に信頼されている必要があります。 .NET Framework バージョン2.0 以降では、このクラスは特定のアクションに対して <xref:System.Diagnostics.PerformanceCounterPermission> を必要とします。 <xref:System.Diagnostics.PerformanceCounterPermission> は、信頼度の低いコードには許可しないことを強くお勧めします。  パフォーマンスカウンターの読み取りと書き込みの機能により、コードは、実行中のプロセスの列挙やそれらに関する情報の取得などのアクションを実行できます。  
>   
>  さらに、<xref:System.Diagnostics.PerformanceCounter> オブジェクトを信頼度の低いコードに渡すと、セキュリティ上の問題が発生する可能性があります。 <xref:System.Diagnostics.PerformanceCounterCategory> や <xref:System.Diagnostics.PerformanceCounter>などのパフォーマンスカウンターオブジェクトを低信頼性のコードに渡さないでください。  
  
 パフォーマンスカウンターから読み取るには、<xref:System.Diagnostics.PerformanceCounter> クラスのインスタンスを作成し、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、およびオプションで <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> または <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティを設定してから、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドを呼び出してパフォーマンスカウンターを読み取ります。  
  
 パフォーマンスカウンターデータをパブリッシュするには、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> メソッドを使用して1つ以上のカスタムカウンターを作成し、<xref:System.Diagnostics.PerformanceCounter> クラスのインスタンスを作成し、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A> および、必要に応じて <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> または <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティを設定してから、を呼び出し <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、<xref:System.Diagnostics.PerformanceCounter.Increment%2A>、または <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッド。または、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを設定して、カスタムカウンターの値を変更します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> の各メソッドでは、interlocks を使用してカウンター値を更新します。 これにより、マルチスレッドまたはマルチプロセスのシナリオでカウンター値を正確に保つことができますが、パフォーマンスが低下します。 インタロック操作によって提供される精度が不要な場合は、最大5倍のパフォーマンス向上のために、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを直接更新できます。  ただし、マルチスレッドのシナリオでは、カウンター値に対するいくつかの更新が無視され、データが不正確になる可能性があります。  
  
 このカウンターは、パフォーマンスデータを収集するメカニズムです。 レジストリには、すべてのカウンターの名前が格納されます。各カウンターは、システム機能の特定の領域に関連しています。 例としては、プロセッサのビジー時間、メモリの使用量、ネットワーク接続経由で受信したバイト数などがあります。  
  
 各カウンターは、名前とその位置によって一意に識別されます。 ファイルパスには、ドライブ、ディレクトリ、1つ以上のサブディレクトリ、およびファイル名が含まれているのと同じように、カウンター情報は、コンピューター、カテゴリ、カテゴリインスタンス、およびカウンター名の4つの要素で構成されます。  
  
 カウンター情報には、カウンターでデータを測定するカテゴリ (パフォーマンスオブジェクト) が含まれている必要があります。 コンピューターのカテゴリには、プロセッサ、ディスク、メモリなどの物理コンポーネントが含まれます。 また、プロセスやスレッドなどのシステムカテゴリもあります。 各カテゴリは、コンピューター内の機能要素に関連付けられており、一連の標準カウンターが割り当てられています。 これらのオブジェクトは、Windows 2000 システムモニター内の [カウンターの追加] ダイアログボックスの [パフォーマンス] オブジェクトのドロップダウンリストに表示されます。これらのオブジェクトは、カウンターパスに含める必要があります。 パフォーマンスデータは、関連付けられているカテゴリ別にグループ化されます。  
  
 場合によっては、同じカテゴリの複数のコピーを存在させることができます。 たとえば、複数のプロセスとスレッドが同時に実行され、一部のコンピューターには複数のプロセッサが含まれているとします。 カテゴリのコピーは category インスタンスと呼ばれ、各インスタンスには一連の標準カウンターが割り当てられます。 カテゴリに複数のインスタンスを含めることができる場合は、インスタンスの指定がカウンター情報に含まれている必要があります。  
  
 必要な計算を実行するために初期値または以前の値が必要なカウンターのパフォーマンスデータを取得するには、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドを2回呼び出し、アプリケーションで必要とされる情報を使用します。  
  
> [!NOTE]
>  [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] と共にインストールされるパフォーマンスカウンターカテゴリには個別の共有メモリが使用され、各パフォーマンスカウンターカテゴリには独自のメモリがあります。 レジストリキー HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<category name >*-performance のように、FileMappingSize という名前の DWORD を作成することによって、個別の共有メモリのサイズを指定できます。 FileMappingSize 値は、カテゴリの共有メモリサイズに設定されます。 既定のサイズは 131072 decimal です。 FileMappingSize 値が存在しない場合は、machine.config ファイルで指定された `performanceCounters` 要素の `fileMappingSize` 属性値が使用され、構成ファイルの処理に追加のオーバーヘッドが発生します。 アプリケーションの起動のパフォーマンスを向上させるには、レジストリでファイルマッピングサイズを設定します。 ファイルマッピングサイズの詳細については、「 [&lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> クラスを使用して、<xref:System.Diagnostics.PerformanceCounterType.AverageCount64> カウンター型を作成および使用する方法を示します。 この例では、カテゴリを作成し、カウンターを設定して、カウンターからデータを収集し、<xref:System.Diagnostics.CounterSampleCalculator> クラスを呼び出してパフォーマンスカウンターデータを解釈します。 中間と最終の結果がコンソールウィンドウに表示されます。 その他のパフォーマンスカウンターの種類のその他の例については、<xref:System.Diagnostics.PerformanceCounterType> 列挙体を参照してください。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
    <altmember cref="T:System.Diagnostics.CounterCreationData" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
    <altmember cref="T:System.Diagnostics.CounterSampleCalculator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼の場合。 このクラスは、部分的に信頼されているコードから使用することはできません。</permission>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>システム パフォーマンス カウンターにもカスタム パフォーマンス カウンターにも関連付けずに、<see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターのこのオーバーロードは、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティを空の文字列 ("") に設定し、<xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティをローカルコンピューター (".") に設定します。  
  
 このコンストラクターはパフォーマンスカウンターを初期化しないため、インスタンスはローカルコンピューター上の既存のカウンターに関連付けられません。 特定のパフォーマンスカウンターをポイントするには、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および必要に応じて <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティと <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティを設定してから、他のプロパティを読み取るかカウンターから読み取りを試行します。 パフォーマンスカウンターに書き込むには、<xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> プロパティを `false` に設定します。  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute>このメンバーに適用される属性が次<xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>プロパティ値: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124;です<xref:System.Security.Permissions.HostProtectionResource.SharedState>. <xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション (通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます) には影響しません。 詳細については、「<xref:System.Security.Permissions.HostProtectionAttribute> クラス」または「 [SQL Server プログラミングとホスト保護の属性](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> クラスの既定のインスタンスを作成します。 インスタンスが作成されると、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> の各プロパティ値が設定され、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドの呼び出しの結果が表示されます。  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンターに関連付けます。 このコンストラクターを使用するには、カテゴリに含まれるインスタンスが 1 つだけである必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター文字列の大文字と小文字は区別されません。  
  
 1つのパフォーマンスカウンターカテゴリインスタンスを含むカテゴリに属するローカルコンピューター上のカウンターにアクセスするには、このオーバーロードを使用します。 このコンストラクターを使用してこの <xref:System.Diagnostics.PerformanceCounter> インスタンスを複数のインスタンスを含むカテゴリに指定しようとすると、コンストラクターは例外をスローします。 このオーバーロードは、読み取り専用または読み取り/書き込みカウンターにアクセスできますが、読み取り専用モードではアクセスできます。 このオーバーロードを使用して作成された <xref:System.Diagnostics.PerformanceCounter> インスタンスは、カウンター自体が読み取り/書き込み可能であっても、カウンターに書き込むことができません。  
  
 このコンストラクターのオーバーロードにより、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> のプロパティが渡された値に設定され、<xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティがローカルコンピューター "." に設定され、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティが空の文字列 ("") に設定されます。  
  
 このコンストラクターは、パフォーマンスカウンターを初期化し、ローカルコンピューター上の既存のカウンター (システムまたはカスタムカウンター) にインスタンスを関連付けます。 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> プロパティと <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティに渡す値は、ローカルコンピューター上の既存のパフォーマンスカウンターをポイントする必要があります。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
- または - 
 <paramref name="counterName" /> が空の文字列 ("") です。  
  
または 
指定されたカテゴリが存在しません。  
  
- または - 
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。  
  
- または - 
 <paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="readOnly">カウンターに (カウンター自身が読み取り/書き込み可能であっても) 読み取り専用モードでアクセスする場合は <see langword="true" />。読み取り/書き込みモードでアクセスする場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスまたは読み取り/書き込み可能インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンターに関連付けます。 このコンストラクターを使用するには、カテゴリに含まれるインスタンスが 1 つだけである必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター文字列の大文字と小文字は区別されません。  
  
 このオーバーロードを使用して、1つのパフォーマンスカウンターカテゴリインスタンスを含むカテゴリに属するローカルコンピューター上の読み取り専用または読み取り/書き込みカウンターにアクセスします。 このコンストラクターを使用してこの <xref:System.Diagnostics.PerformanceCounter> インスタンスを複数のインスタンスを含むカテゴリに指定しようとすると、コンストラクターは例外をスローします。  
  
 このコンストラクターのオーバーロードにより、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> の各プロパティが、渡された値に設定され、<xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティがローカルコンピューター "." に設定され、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティが空の文字列 ("") に設定されます。  
  
 このコンストラクターは、パフォーマンスカウンターを初期化し、ローカルコンピューター上の既存のカウンター (システムまたはカスタムカウンター) にインスタンスを関連付けます。 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> プロパティと <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティに渡す値は、ローカルコンピューター上の既存のパフォーマンスカウンターをポイントする必要があります。 ポイントしたパフォーマンスカウンターインスタンスが有効でない場合は、コンストラクターを呼び出すと例外がスローされます。  
  
> [!NOTE]
>  このオーバーロードを使用してシステムカウンターに接続することはできますが、システムカウンターに書き込むことはできません。 したがって、システムカウンターに接続するときに `readOnly` を `false` に設定すると、コンストラクターが例外をスローします。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> クラスのインスタンスを作成します。 この例では、カテゴリ名、カウンター名、およびカウンターが読み取り専用でないことを示すフラグ値が渡されます。 このコード例は、<xref:System.Diagnostics.PerformanceCounter> クラスのより大きな例の一部です。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
または 
<paramref name="counterName" /> が空の文字列 ("") です。  
  
- または - 
指定されたカテゴリが存在しません。 (<paramref name="readOnly" /> が <see langword="true" /> の場合)  
  
- または - 
指定されたカテゴリは、.NET Framework カスタム カテゴリではありません (<paramref name="readOnly" /> が <see langword="false" /> の場合)。  
  
- または - 
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。  
  
- または - 
 <paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター文字列の大文字と小文字は区別されません。  
  
 このコンストラクターのオーバーロードにより、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> の各プロパティが、渡された値に設定され、<xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティがローカルコンピューター "." に設定されます。  
  
 このコンストラクターは、パフォーマンスカウンターを初期化し、ローカルコンピューター上の既存のカウンター (システムまたはカスタムカウンター) にインスタンスを関連付けます。 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティに渡す値は、ローカルコンピューター上の既存のパフォーマンスカウンターをポイントする必要があります。 指定したパフォーマンスカウンターインスタンスが有効でない場合は、コンストラクターを呼び出すと例外がスローされます。  
  
 このオーバーロードは、読み取り専用または読み取り/書き込みカウンターにアクセスできますが、読み取り専用モードではアクセスできます。 このオーバーロードを使用して作成された <xref:System.Diagnostics.PerformanceCounter> インスタンスは、カウンター自体が読み取り/書き込み可能であっても、カウンターに書き込むことができません。  
  
 パフォーマンスカテゴリのインスタンスを作成するには、<xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンストラクターに `instanceName` を指定します。 `instanceName` によって指定されたカテゴリインスタンスが既に存在する場合、新しいオブジェクトは既存の category インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
- または - 
 <paramref name="counterName" /> が空の文字列 ("") です。  
  
- または - 
指定されたカテゴリが有効ではありません。  
  
- または - 
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。  
  
- または - 
 <paramref name="instanceName" /> が 127 文字を超えています。  
  
- または - 
 <paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
        <param name="readOnly">読み取り専用モードでカウンターにアクセスする場合は <see langword="true" />。読み書き可能モードでアクセスする場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスまたは読み書き可能なインスタンスを初期化し、ローカル コンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター文字列の大文字と小文字は区別されません。  
  
 読み取り専用モードまたは読み取り/書き込みモードでパフォーマンスカウンターにアクセスするには、このオーバーロードを使用します。  
  
 コンストラクターのこのオーバーロードでは、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> の各プロパティが、渡された値に設定され、<xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティがローカルコンピューター "." に設定されます。  
  
 このコンストラクターは、パフォーマンスカウンターを初期化し、ローカルコンピューター上の既存のカウンター (システムまたはカスタムカウンター) にインスタンスを関連付けます。 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティに渡す値は、ローカルコンピューター上の既存のパフォーマンスカウンターをポイントする必要があります。 ポイントしたパフォーマンスカウンターインスタンスが有効でない場合は、コンストラクターを呼び出すと例外がスローされます。  
  
> [!NOTE]
>  このオーバーロードを使用してシステムカウンターに接続することはできますが、システムカウンターに書き込むことはできません。 したがって、システムカウンターに接続するときに `readOnly` を `false` に設定すると、コンストラクターが例外をスローします。  
  
 パフォーマンスカテゴリのインスタンスを作成するには、<xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンストラクターに `instanceName` を指定します。 `instanceName` によって指定されたカテゴリインスタンスが既に存在する場合、新しいオブジェクトは既存の category インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
または 
 <paramref name="counterName" /> が空の文字列 ("") です。  
  
または 
要求した読み取り/書き込みアクセス許可の設定は、このカウンターでは無効です。  
  
または 
指定されたカテゴリが存在しません (<paramref name="readOnly" /> が <see langword="true" /> の場合)。  
  
- または - 
指定されたカテゴリは、.NET Framework カスタム カテゴリではありません (<paramref name="readOnly" /> が <see langword="false" /> の場合)。  
  
- または - 
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。  
  
または 
 <paramref name="instanceName" /> が 127 文字を超えています。  
  
- または - 
 <paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスの名前。カテゴリに含まれるインスタンスが 1 つだけの場合は空の文字列 ("")。</param>
        <param name="machineName">パフォーマンス カウンターと、それに関連付けられているカテゴリが存在するコンピューター。</param>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しい読み取り専用インスタンスを初期化し、指定したコンピューターの指定したシステム パフォーマンス カウンターまたはカスタム パフォーマンス カウンター、およびカテゴリ インスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーター文字列の大文字と小文字は区別されません。  
  
 このコンストラクターのオーバーロードにより、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>、および <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> の各プロパティが、渡す値に設定されます。  
  
 このコンストラクターは、パフォーマンスカウンターを初期化し、指定したコンピューター上の既存のカウンター (システムまたはカスタムカウンター) にインスタンスを関連付けます。 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>、および <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティに渡す値は、既存のパフォーマンスカウンターをポイントする必要があります。 指定したパフォーマンスカウンターインスタンスが有効でない場合は、コンストラクターを呼び出すと例外がスローされます。 このオーバーロードは、読み取り専用または読み取り/書き込みカウンターにアクセスできますが、読み取り専用モードではアクセスできます。 このオーバーロードを使用して作成された <xref:System.Diagnostics.PerformanceCounter> インスタンスは、カウンター自体が読み取り/書き込み可能であっても、カウンターに書き込むことができません。  
  
> [!NOTE]
>  リモートパフォーマンスカウンターに書き込むことはできません。 リモートコンピューターに接続する <xref:System.Diagnostics.PerformanceCounter> クラスの読み取り/書き込みインスタンスを指定できるようにするオーバーロードはありません。  
  
 パフォーマンスカテゴリのインスタンスを作成するには、<xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンストラクターに `instanceName` を指定します。 `instanceName` によって指定されたカテゴリインスタンスが既に存在する場合、新しいオブジェクトは既存の category インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
> [!NOTE]
>  Windows Vista では、リモートコンピューターがワークグループのメンバーである場合、ローカルユーザーアカウントがフィルター処理されず、管理者アカウントに昇格できるように、UAC を無効にする必要がある場合があります。 セキュリティ上の理由から、UAC を無効にすることは最後の手段にする必要があります。 UAC を無効にする方法の詳細については、「[ユーザーアカウント制御と WMI](https://go.microsoft.com/fwlink/?LinkId=91617)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> が空の文字列 ("") です。  
  
- または - 
 <paramref name="counterName" /> が空の文字列 ("") です。  
  
- または - 
要求した読み取り/書き込みアクセス許可の設定は、このカウンターでは無効です。  
  
または 
指定したコンピューター上にカウンターが存在しません。  
  
または 
指定されたカテゴリは複数インスタンスとしてマークされているため、インスタンス名を使用してパフォーマンス カウンターを作成する必要があります。  
  
- または - 
 <paramref name="instanceName" /> が 127 文字を超えています。  
  
- または - 
 <paramref name="categoryName" /> および <paramref name="counterName" /> が異なる言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="machineName" /> パラメーターが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="performanceCounter.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスの初期化を開始します。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を開始します。 <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドは、初期化を終了します。 <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> メソッドと <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドを使用すると、完全に初期化される前にコンポーネントが使用されなくなります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターのパフォーマンス カウンター カテゴリ名を取得または設定します。</summary>
        <value>このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ (パフォーマンス オブジェクト) の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> は、パフォーマンスカウンターマネージャー MMC スナップインの [`Add Counter`] ダイアログボックスの [`Performance Object`] フィールドに表示されます。  
  
 パフォーマンスカウンタは、コンピュータ上のカテゴリ (パフォーマンスオブジェクト) の動作を監視します。 カテゴリには、物理コンポーネント (プロセッサ、ディスク、メモリなど) とシステムオブジェクト (プロセスやスレッドなど) が含まれます。 同じパフォーマンスオブジェクトに関連付けられているシステムカウンターは、共通のフォーカスを示すカテゴリにグループ化されます。 <xref:System.Diagnostics.PerformanceCounter> クラスのインスタンスを作成するときは、まずコンポーネントが操作するカテゴリを指定し、そのカテゴリのカウンターを選択します。  
  
 たとえば、1つの Windows カウンターカテゴリはメモリカテゴリです。 このカテゴリ内のシステムカウンターは、使用可能なバイト数やキャッシュされたバイト数などのメモリデータを追跡します。 アプリケーションにキャッシュされたバイト数を使用する場合は、<xref:System.Diagnostics.PerformanceCounter> コンポーネントのインスタンスを作成し、メモリカテゴリに接続してから、そのカテゴリから適切なカウンター (この場合はキャッシュされたバイト) を選択します。  
  
 システムでは多数のカウンターカテゴリを使用できますが、最も頻繁にやり取りされるカテゴリは、Cache、Memory、Objects、PhysicalDisk、Process、Processor、Server、System、および Thread の各カテゴリです。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> クラスの既定のインスタンスを作成します。 インスタンスが作成されると、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> の各プロパティ値が設定され、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドの呼び出しの結果が表示されます。  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> が <see langword="null" /> です。</exception>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="performanceCounter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パフォーマンス カウンターを閉じ、このパフォーマンス カウンター インスタンスで割り当てられたすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Diagnostics.PerformanceCounter> インスタンスをサーバー上のパフォーマンスカウンターに関連付けると、システムによってインスタンスが初期化され、カウンターサンプル情報を格納するためのメモリが割り当てられます。 <xref:System.Diagnostics.PerformanceCounter.Close%2A> メソッドは、オブジェクトによって割り当てられたリソースを解放します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSharedResources">
      <MemberSignature Language="C#" Value="public static void CloseSharedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseSharedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CloseSharedResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CloseSharedResources();" />
      <MemberSignature Language="F#" Value="static member CloseSharedResources : unit -&gt; unit" Usage="System.Diagnostics.PerformanceCounter.CloseSharedResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンターによって割り当てられた共有状態のパフォーマンス カウンター ライブラリを解放します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリの読み取り。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterHelp">
      <MemberSignature Language="C#" Value="public string CounterHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterHelp : string" Usage="System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("A description describing the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterHelp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターの説明を取得します。</summary>
        <value>このパフォーマンス カウンターが測定する項目または量の説明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーがカウンターの一覧からカウンターを選択し、[説明] ボタンをクリックすると、パフォーマンスカウンターマネージャー MMC スナップインの [カウンターの追加] ダイアログボックスに <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> というテキストが表示されます。  
  
 新しいカウンターを作成する場合は、<xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> のテキストを使用して、カウンターモニターの動作を説明します。これにより、カウンターをシステムモニターのディスプレイに追加するかどうかをユーザーが判断できます。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスがパフォーマンス カウンターに関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリの読み取り。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスに関連付けられているパフォーマンス カウンター名を取得または設定します。</summary>
        <value>カウンター名は、通常、カウントする量を説明します。 この名前は、パフォーマンス カウンター マネージャー MMC スナップインの [カウンターの追加] ダイアログ ボックスのカウンターの一覧に表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Performance Manager の [[カウンターの追加] ダイアログボックス](https://go.microsoft.com/fwlink/p/?LinkId=257854)から、使用可能な既存のカウンターの一覧を取得できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティを通常のカウンター名に設定する方法を示しています。  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterType As PerformanceCounterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterType CounterType { System::Diagnostics::PerformanceCounterType get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterType : System.Diagnostics.PerformanceCounterType" Usage="System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているパフォーマンス カウンターのカウンター タイプを取得します。</summary>
        <value>カウンターと監視中のアプリケーションがやり取りする方法と、カウンターに格納される値の性質 (計算される値か、計算されない値かなど) の両方を説明する <see cref="T:System.Diagnostics.PerformanceCounterType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterType> 列挙には、対話できるパフォーマンスカウンターの種類が含まれています。 カウンターの種類の中には、計算された値 (システムが取得したカウンターの測定値の平均など) を表すものがあります。 その他の型は、生の値またはつまりの値を表します。 次の表は、最も頻繁にやり取りされるカウンターの種類を示しています。  
  
|カウンターの責任|PerformanceCounterType 値|例|  
|------------------------------|----------------------------------|-------------|  
|項目または操作の単純なカウントを保持します。|`NumberOfItems32`|32ビット整数として受信した注文の数を追跡します。|  
|容量の大きい単純なカウントを維持します。|`NumberOfItems64`|非常に高いボリュームを持つサイトの注文の数を追跡します。これは、64ビットの整数として格納されます。|  
|1秒あたりの項目または操作の数を追跡します。|`RateOfCountsPerSecond32`|サイトで1秒あたりに受信した注文を追跡します。|  
|1秒あたりの項目または操作の数が多いことを追跡します。|`RateOfCountsPerSecond64`|大量のボリュームがあるサイトで1秒あたりに受信した注文を追跡します。|  
|プロセスの実行または項目の処理にかかる平均時間を計算する|`AverageTimer32`|注文の処理にかかる平均時間を計算します。|  
  
 型に対応するベースカウンターを使用する必要があるカウンターを作成する場合は、<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> メソッドに渡す <xref:System.Diagnostics.CounterCreationDataCollection> でカウンターとベースを宣言する必要があります。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリの読み取り。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public long Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Decrement" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrement () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Decrement();" />
      <MemberSignature Language="F#" Value="member this.Decrement : unit -&gt; int64" Usage="performanceCounter.Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターを 1 ずつデクリメントします。</summary>
        <returns>デクリメントされたカウンター値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムカウンターにのみ書き込むことができます。 すべてのシステムカウンターは読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> の各メソッドでは、interlocks を使用してカウンター値を更新します。 これにより、マルチスレッドまたはマルチプロセスのシナリオでカウンター値を正確に保つことができますが、パフォーマンスが低下します。 インタロック操作によって提供される精度が不要な場合は、最大5倍のパフォーマンス向上のために、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを直接更新できます。  ただし、マルチスレッドのシナリオでは、カウンター値に対するいくつかの更新が無視され、データが不正確になる可能性があります。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるデクリメントができません。  
  
- または - 
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
        <threadsafe>このメソッドはスレッドセーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileMappingSize">
      <MemberSignature Language="C#" Value="public static int DefaultFileMappingSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DefaultFileMappingSize" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared DefaultFileMappingSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static int DefaultFileMappingSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFileMappingSize : int" Usage="System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パフォーマンス カウンターが共有するグローバル メモリのサイズをバイト単位で指定します。 既定のサイズは 524,288 バイトです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="performanceCounter.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フォームまたは別のコンポーネントで使用する <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスの初期化を終了します。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントによって使用されるコンポーネントの初期化を終了します。 <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> メソッドは、初期化を開始します。 <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> メソッドと <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドを使用すると、完全に初期化される前にコンポーネントが使用されなくなります。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public long Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Function Increment () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Increment();" />
      <MemberSignature Language="F#" Value="member this.Increment : unit -&gt; int64" Usage="performanceCounter.Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターを 1 ずつインクリメントします。</summary>
        <returns>インクリメントされたカウンター値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムカウンターにのみ書き込むことができます。 すべてのシステムカウンターは読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> の各メソッドでは、interlocks を使用してカウンター値を更新します。 これにより、マルチスレッドまたはマルチプロセスのシナリオでカウンター値を正確に保つことができますが、パフォーマンスが低下します。 インタロック操作によって提供される精度が不要な場合は、最大5倍のパフォーマンス向上のために、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを直接更新できます。  ただし、マルチスレッドのシナリオでは、カウンター値に対するいくつかの更新が無視され、データが不正確になる可能性があります。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるインクリメントができません。  
  
または 
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
        <threadsafe>このメソッドはスレッドセーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public long IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementBy (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long IncrementBy(long value);" />
      <MemberSignature Language="F#" Value="member this.IncrementBy : int64 -&gt; int64" Usage="performanceCounter.IncrementBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">インクリメントする値の単位。 負の値を指定すると、カウンターはデクリメントされます。</param>
        <summary>有効な分割不可能な操作を通じて、関連付けられたパフォーマンス カウンターの値を指定した量ずつインクリメントまたはデクリメントします。</summary>
        <returns>新しいカウンター値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムカウンターにのみ書き込むことができます。 すべてのシステムカウンターは読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> の各メソッドでは、interlocks を使用してカウンター値を更新します。 これにより、マルチスレッドまたはマルチプロセスのシナリオでカウンター値を正確に保つことができますが、パフォーマンスが低下します。 インタロック操作によって提供される精度が不要な場合は、最大5倍のパフォーマンス向上のために、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを直接更新できます。  ただし、マルチスレッドのシナリオでは、カウンター値に対するいくつかの更新が無視され、データが不正確になる可能性があります。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> メソッドを使用してカウンターにインクリメントを追加する方法を示しています。 このコード例は、<xref:System.Diagnostics.PerformanceCounter> クラスのより大きな例の一部です。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは読み取り専用です。そのため、アプリケーションによるインクリメントができません。  
  
- または - 
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
- または - 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> プロパティが <see langword="false" /> の場合は、パフォーマンスカウンターカテゴリを記述します。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
        <threadsafe>このメソッドはスレッドセーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="InstanceLifetime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceLifetime As PerformanceCounterInstanceLifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterInstanceLifetime InstanceLifetime { System::Diagnostics::PerformanceCounterInstanceLifetime get(); void set(System::Diagnostics::PerformanceCounterInstanceLifetime value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceLifetime : System.Diagnostics.PerformanceCounterInstanceLifetime with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterInstanceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスの有効期間を取得または設定します。</summary>
        <value><see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.CounterType%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>の場合は、パフォーマンスカウンターの <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> 値を <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定される値は、<see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 列挙体のメンバーではありません。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> は <see cref="T:System.Diagnostics.PerformanceCounter" /> が初期化された後に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstanceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターのインスタンス名を取得または設定します。</summary>
        <value>パフォーマンス カウンター カテゴリ インスタンスの名前。単一インスタンス カウンターの場合は空の文字列 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  インスタンス名の長さは128文字未満でなければなりません。  
  
 場合によっては、カテゴリがインスタンスに分割され、カテゴリが関連付けられているオブジェクトの複数の発生に関するデータを追跡します。 インスタンスは、個々のカウンターではなく、全体としてカテゴリに適用されます。 カテゴリ内のすべてのカウンターには、カテゴリに対して定義されている各インスタンスがあります。 たとえば、Process カテゴリには、Idle および System という名前のインスタンスが含まれます。 このため、プロセスカテゴリ内のすべてのカウンターには、各インスタンスのデータが含まれ、アイドル状態のプロセスまたはシステムプロセスに関する情報が表示されます。  
  
 多くのカテゴリには複数のインスタンスが含まれていないため、このプロパティを空のままにして、インスタンスがカテゴリに関連付けられていないことを示すことができます。  
  
 この <xref:System.Diagnostics.PerformanceCounter> インスタンスがカスタムカテゴリを指している場合は、既存の category インスタンスからのみ選択できます。 新しい category インスタンスはカスタムカテゴリにのみ作成できます。これにより、必要な数のカウンターおよびカテゴリインスタンスを定義できます。  
  
 パフォーマンスカテゴリのインスタンスを作成するには、<xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンストラクターに `instanceName` を指定します。 `instanceName` によって指定されたカテゴリインスタンスが既に存在する場合、新しいオブジェクトは既存の category インスタンスを参照します。  
  
> [!NOTE]
>  インスタンス名には、"("、")"、"#"、"\\"、または "/" の文字は使用しないでください。 これらの文字のいずれかが使用されている場合、パフォーマンスコンソール (「[ランタイムプロファイリング](~/docs/framework/debug-trace-profile/runtime-profiling.md)」を参照) によってインスタンス値が正しく表示されないことがあります。  
  
 インスタンス名が自動的に生成され、文字 "(", ")"、"#"、"\\"、または "/" が含まれている可能性がある場合は、次の表の文字マッピングを使用します。  
  
|文字|マップされた文字|  
|---------------|----------------------|  
|(|[|  
|)|]|  
|#|_|  
|\|_|  
|/|_|  
  
 <xref:System.AppDomain.CurrentDomain%2A?displayProperty=nameWithType> プロパティから取得した <xref:System.AppDomain> オブジェクトの <xref:System.AppDomain.FriendlyName%2A> プロパティは、無効な文字を含めることができるインスタンス名の共通ソースです。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounter> クラスの既定のインスタンスを作成します。 インスタンスが作成されると、<xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> の各プロパティ値が設定され、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドの呼び出しの結果が表示されます。  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("What's the machine name format?")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターのコンピューター名を取得または設定します。</summary>
        <value>パフォーマンス カウンターと、それに関連付けられているカテゴリが存在するサーバー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値は、ローカルコンピューターに存在するカウンターにのみ書き込むことができます。 ただし、アクセス権のある企業内の任意のコンピューターからカウンター値を読み取ることができます。  
  
 リモートコンピューターを指すように <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティを設定すると、<xref:System.Diagnostics.PerformanceCounter> インスタンスはそのコンピューター上のカウンターを開こうとします。 カウンターが存在しない場合、このプロパティを設定すると例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> の書式が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.CounterSample NextSample ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.CounterSample NextSample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextSample" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSample () As CounterSample" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::CounterSample NextSample();" />
      <MemberSignature Language="F#" Value="member this.NextSample : unit -&gt; System.Diagnostics.CounterSample" Usage="performanceCounter.NextSample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンター サンプルを取得し、生の、つまり計算されない値を返します。</summary>
        <returns>このカウンターのためにシステムで取得された値の、次の生の値を表す <see cref="T:System.Diagnostics.CounterSample" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常、つまり値を含むカウンターに使用されます。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Diagnostics.PerformanceCounter.NextSample%2A> メソッドを使用して、カウンターの次のつまり値を取得する方法を示しています。 このコード例は、<xref:System.Diagnostics.PerformanceCounter> クラスのより大きな例の一部です。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリの読み取り。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="public float NextValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 NextValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextValue" />
      <MemberSignature Language="VB.NET" Value="Public Function NextValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float NextValue();" />
      <MemberSignature Language="F#" Value="member this.NextValue : unit -&gt; single" Usage="performanceCounter.NextValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンター サンプルを取得し、計算される値を返します。</summary>
        <returns>このカウンターのためにシステムで取得された計算される値の次の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  カウンターの計算値が2つのカウンターの読み取りに依存している場合、最初の読み取り操作では0.0 が返されます。 パフォーマンスカウンターのプロパティをリセットして別のカウンターを指定することは、新しいパフォーマンスカウンターを作成することと同じです。新しいプロパティを使用する最初の読み取り操作では0.0 が返されます。 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドの呼び出し間の推奨される遅延時間は1秒です。これにより、カウンターは次の増分読み取りを実行できます。  
  
> [!NOTE]
>  パフォーマンスカウンターを読み取るには、管理者特権が必要です。 Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Diagnostics.PerformanceCounterType.ElapsedTime> カウンターを作成し、<xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドを使用して、カウンターの値を一定期間にわたって表示します。  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスがパフォーマンス カウンターに正しく関連付けられていません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリの読み取り。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.RawValue : int64 with get, set" Usage="System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The raw value of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_RawValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このカウンターの、生の、つまり計算されない値を取得または設定します。</summary>
        <value>カウンターの生の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カウンターの種類が32ビットサイズで、このプロパティを大きすぎる値に設定しようとすると、プロパティによって値が32ビットに切り捨てられます。 ローカルコンピューター上のカスタムカウンターを読み取るときに、計算値ではなく <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを使用すると、生の値が十分である場合に、パフォーマンスが大幅に向上する可能性があります。  
  
 読み取るカウンターが読み取り専用である場合は、プロパティが呼び出されたときに、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを取得して、カウンターのサンプルを取得します。 この操作は、<xref:System.Diagnostics.PerformanceCounter.NextSample%2A> メソッドに最初に呼び出しを行うのと同じです。 その後 <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> を呼び出すと、両方の呼び出しが返された値に対して計算を実行できます。  
  
 システムカウンターは読み取り専用であるため、生の値を取得できますが、設定することはできません。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> の各メソッドでは、interlocks を使用してカウンター値を更新します。 これにより、マルチスレッドまたはマルチプロセスのシナリオでカウンター値を正確に保つことができますが、パフォーマンスが低下します。 インタロック操作によって提供される精度が不要な場合は、最大5倍のパフォーマンス向上のために、<xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティを直接更新できます。  ただし、マルチスレッドのシナリオでは、カウンター値に対するいくつかの更新が無視され、データが不正確になる可能性があります。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でパフォーマンスカウンターを読み取るには、Performance Monitor Users グループのメンバであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンスカウンターにアクセスするために特権を昇格させる必要がないようにするには、Performance Monitor Users グループに自分自身を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンスカウンターにアクセスするコードを実行するには、まず、特権を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## Examples  
 次の例では、<xref:System.Diagnostics.CounterSample> クラスを使用して、カウンターの <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティの値を表示します。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターの生の値を設定しようとしていますが、カウンターが読み取り専用です。  
  
- または - 
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
または 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理特権を使用せずに実行されているコードがパフォーマンス カウンターの読み取りを試みました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを作成しています。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The accessability level of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_ReadOnly")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードの場合は (カウンター自身がカスタム .NET Framework カウンターの場合でも) <see langword="true" />。読み取り/書き込みモードの場合は <see langword="false" />。 既定値は、コンストラクターによって設定された値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 システムカウンターの場合、<xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> は常に `true`必要があります。 システムカウンターに書き込むことはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInstance">
      <MemberSignature Language="C#" Value="public void RemoveInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInstance();" />
      <MemberSignature Language="F#" Value="member this.RemoveInstance : unit -&gt; unit" Usage="performanceCounter.RemoveInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクトの <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> プロパティで指定されたカテゴリ インスタンスを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンスは、カスタムカウンターに対してのみ削除できます。 すべてのシステムカウンターは読み取り専用であるため、1つを削除しようとすると、例外がスローされます。  
  
> [!NOTE]
>  パフォーマンスカウンターの共有メモリが解放されたときに発生する可能性のある競合状態を回避するために、<xref:System.AppDomain.DomainUnload> イベントハンドラーから <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> メソッドを呼び出すことをお勧めします。  
  
 パフォーマンスカテゴリのインスタンスを作成するには、<xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンストラクターに `instanceName` を指定します。 `instanceName` によって指定されたカテゴリインスタンスが既に存在する場合、新しいオブジェクトは既存の category インスタンスを参照します。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティの値が <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process>、パフォーマンスカウンターカテゴリが .NET Framework バージョン1.0 または1.1 で作成された場合、<xref:System.InvalidOperationException> がスローされます。 以前のバージョンで作成されたパフォーマンスカウンターカテゴリは、グローバル共有メモリを使用し、<xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> の値は <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global> である必要があります。 .NET Framework のバージョン1.0 または1.1 で実行されているアプリケーションでカテゴリが使用されていない場合は、カテゴリを削除して再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このカウンターは読み取り専用です。そのため、カテゴリに関連付けられたインスタンスは削除できません。  
  
- または - 
インスタンスがパフォーマンス カウンターに正しく関連付けられていません。  
  
- または - 
グローバル共有メモリを使用する場合、<see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> プロパティは <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> に設定されます。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">パフォーマンスカウンターカテゴリを作成しています。 <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
  </Members>
</Type>
