<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ad9cb3f5612ebbf9b00063e376a884076167252" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82317947" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納している <see cref="T:System.Diagnostics.DataReceivedEventArgs" />。</param>
    <summary><see cref="E:System.Diagnostics.Process.OutputDataReceived" /> の <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> イベントまたは <see cref="T:System.Diagnostics.Process" /> イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.DataReceivedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。  
  
 プロセスのリダイレクトされた <xref:System.Diagnostics.Process.StandardOutput%2A> または <xref:System.Diagnostics.Process.StandardError%2A> ストリーム出力を非同期に収集するには、イベントハンドラーを <xref:System.Diagnostics.Process.OutputDataReceived> または <xref:System.Diagnostics.Process.ErrorDataReceived> イベントに追加します。 これらのイベントは、プロセスが、対応するリダイレクトされたストリームに行を書き込むたびに発生します。 リダイレクトされたストリームが閉じられると、null 行がイベントハンドラーに送信されます。 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> プロパティにアクセスする前に、イベントハンドラーがこの条件を確認するようにしてください。 たとえば、`static` メソッド <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> を使用して、イベントハンドラーの <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> プロパティを検証できます。  
  
   
  
## Examples  
 次のコード例は、 **sort**コマンドのリダイレクトされた <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームに対して非同期読み取り操作を実行する方法を示しています。 **Sort**コマンドは、テキスト入力の読み取りと並べ替えを行うコンソールアプリケーションです。  
  
 この例では、`SortOutputHandler` イベントハンドラーの <xref:System.Diagnostics.DataReceivedEventHandler> デリゲートを作成し、デリゲートを <xref:System.Diagnostics.Process.OutputDataReceived> イベントに関連付けます。 イベントハンドラーは、リダイレクトされた <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームからテキスト行を受信し、テキストを書式設定して、画面にテキストを書き込みます。  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>
