<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c8f4df49b9f3e7cd9063718cc20e6c2c3f7893f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137133" /></Metadata><TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="033c5-101">コードの実行をトレースするための一連のメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-101">Provides a set of methods and properties that help you trace the execution of your code.</span></span> <span data-ttu-id="033c5-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="033c5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-103"><xref:System.Diagnostics.Trace> クラスのプロパティとメソッドを使用して、リリースビルドをインストルメント化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="033c5-104">インストルメンテーションを使用すると、実際の設定で実行されているアプリケーションの正常性を監視できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="033c5-105">トレースは、実行中のシステムに支障をきたすことなく、問題を特定して修正するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="033c5-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="033c5-106">このクラスには、<xref:System.Diagnostics.Trace.Assert%2A> ダイアログボックスを表示し、常に <xref:System.Diagnostics.Trace.Fail%2A>れるアサーションを出力するメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="033c5-107">このクラスには、<xref:System.Diagnostics.Trace.Write%2A>、<xref:System.Diagnostics.Trace.WriteLine%2A>、<xref:System.Diagnostics.Trace.WriteIf%2A>、および <xref:System.Diagnostics.Trace.WriteLineIf%2A>の各バリエーションで書き込みメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="033c5-108"><xref:System.Diagnostics.BooleanSwitch> クラスと <xref:System.Diagnostics.TraceSwitch> クラスは、トレース出力を動的に制御する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="033c5-109">これらのスイッチの値は、アプリケーションを再コンパイルせずに変更できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="033c5-110">構成ファイルを使用してスイッチを設定する方法の詳細については、「<xref:System.Diagnostics.Switch> クラス」と「[方法: トレーススイッチを作成、初期化、および構成](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="033c5-111">トレース出力のターゲットをカスタマイズするには、<xref:System.Diagnostics.TraceListener> インスタンスを <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに追加するか、インスタンスを削除します。</span><span class="sxs-lookup"><span data-stu-id="033c5-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="033c5-112"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションは、<xref:System.Diagnostics.Debug> と <xref:System.Diagnostics.Trace> の両方のクラスで共有されます。いずれかのクラスにトレースリスナーを追加すると、リスナーが両方に追加されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="033c5-113">既定では、トレース出力は <xref:System.Diagnostics.DefaultTraceListener> クラスを使用して生成されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-114"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにトレース リスナーを追加することで、トレース リスナーによって使用されるリソースが利用できない場合、トレース中に例外を発生させることになります。</span><span class="sxs-lookup"><span data-stu-id="033c5-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="033c5-115">条件とスローされる例外は、トレース リスナーに依存し、このトピックで列挙することはできません。</span><span class="sxs-lookup"><span data-stu-id="033c5-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="033c5-116">トレース リスナーから例外を検出し、処理するために、<xref:System.Diagnostics.Trace> メソッドの呼び出しを`try`/`catch`ブロックに配置することができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-117">トレースリスナーを部分信頼コードに追加した場合、トレースリスナーを追加するには <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> のアクセス許可が必要であるため、<xref:System.Security.SecurityException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="033c5-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="033c5-118">Visual Studio のサンドボックスで実行されている部分的に信頼されたコードをトレースするには、トレースリスナーを追加しないでください。</span><span class="sxs-lookup"><span data-stu-id="033c5-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="033c5-119">代わりに、**[出力]** ウィンドウで <xref:System.Diagnostics.Trace> および <xref:System.Diagnostics.Debug> メッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="033c5-120"><xref:System.Diagnostics.Trace> クラスには、<xref:System.Diagnostics.Trace.Indent%2A>のレベル、<xref:System.Diagnostics.Trace.IndentSize%2A>、および各書き込み後に <xref:System.Diagnostics.Trace.AutoFlush%2A> するかどうかを取得または設定するプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="033c5-121"><xref:System.Diagnostics.Trace>の <xref:System.Diagnostics.Trace.AutoFlush%2A> と <xref:System.Diagnostics.Trace.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="033c5-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-122">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="033c5-123"><xref:System.Diagnostics.ConditionalAttribute> 属性は、<xref:System.Diagnostics.Trace>のメソッドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="033c5-124"><xref:System.Diagnostics.ConditionalAttribute> をサポートするコンパイラは、"TRACE" が条件付きコンパイルシンボルとして定義されていない限り、これらのメソッドの呼び出しを無視します。</span><span class="sxs-lookup"><span data-stu-id="033c5-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="033c5-125"><xref:System.Diagnostics.ConditionalAttribute> がサポートされているかどうか、および条件付きコンパイルシンボルを定義するための構文を確認するには、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-126">Visual Studio プロジェクトでは、デバッグビルドに対して "デバッグ" 条件付きコンパイルシンボルが既定で定義されており、"トレース" シンボルはデバッグビルドとリリースビルドの両方に対して定義されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="033c5-127">この動作を無効にする方法については、Visual Studio のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="033c5-128">でC#"トレース" 条件付きコンパイルシンボルを定義するには、コマンドラインを使用してコードをコンパイルするときにコンパイラのコマンドラインに `/d:TRACE` オプションを追加するか、ファイルの先頭に `#define TRACE` を追加します。</span><span class="sxs-lookup"><span data-stu-id="033c5-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="033c5-129">Visual Basic で、`/d:TRACE=True` オプションをコンパイラのコマンドラインに追加するか、ファイルに `#Const TRACE=True` を追加します。</span><span class="sxs-lookup"><span data-stu-id="033c5-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="033c5-130"><xref:System.Diagnostics.ConditionalAttribute> はC++コンパイラでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="033c5-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="033c5-131">同等の機能を提供するには、<xref:System.Diagnostics.Trace> のメソッドの呼び出しを `#if defined(TRACE) ... #endif` ブロックで囲み、`/DTRACE` オプションをコンパイラのコマンドラインに追加するか、ファイルに `#define TRACE` を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-132">次の例では、<xref:System.Diagnostics.Trace> を使用して、プログラムの実行の開始と終了を示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="033c5-133">また、この例では、<xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> メソッドと <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> メソッドを使用して、トレース出力を区別します。</span><span class="sxs-lookup"><span data-stu-id="033c5-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="033c5-134"><xref:System.Diagnostics.Trace>の使用方法の詳細な例については、「[方法: アプリケーションコードにトレースステートメントを追加](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-135">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-135">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-136">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="033c5-137">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <threadsafe><span data-ttu-id="033c5-138">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="033c5-138">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-139">条件をチェックします。条件が <see langword="false" /> の場合、メッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-140">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="033c5-140">The conditional expression to evaluate.</span></span> <span data-ttu-id="033c5-141">条件が <see langword="true" /> の場合、エラー メッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="033c5-142">条件をチェックします。条件が <see langword="false" /> の場合、呼び出し履歴を見せるメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-143">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="033c5-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドは、デバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="033c5-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="033c5-145">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="033c5-146">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="033c5-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="033c5-148">結果が `false`場合は、エラーメッセージが <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="033c5-149">この動作は、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="033c5-150">アプリケーションがユーザーインターフェイスモードで実行されると、ファイルと行番号を含むコールスタックを表示するメッセージボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="033c5-151">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="033c5-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="033c5-152">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="033c5-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="033c5-153">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="033c5-154">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-155">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="033c5-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-156"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="033c5-157"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="033c5-158">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-159">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-160">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-160">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="033c5-161">次の例では、配列のインデックスを作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-161">The following example creates an index for an array.</span></span> <span data-ttu-id="033c5-162">その後、インデックスの値を設定する何らかのアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="033c5-163">次に、コードは <xref:System.Diagnostics.Trace.Assert%2A> を呼び出して、インデックス値が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="033c5-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="033c5-164">有効でない場合、<xref:System.Diagnostics.Trace.Assert%2A> は呼び出し履歴を出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-165">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="033c5-165">The conditional expression to evaluate.</span></span> <span data-ttu-id="033c5-166">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-167"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="033c5-168">条件をチェックします。条件が <see langword="false" /> の場合、指定したメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-169">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="033c5-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドは、デバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="033c5-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="033c5-171">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="033c5-172">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="033c5-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="033c5-174">結果が `false`場合は、指定された診断メッセージを <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに送信します。</span><span class="sxs-lookup"><span data-stu-id="033c5-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="033c5-175">この動作は、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="033c5-176">アプリケーションがユーザーインターフェイスモードで実行されると、ファイルと行番号を含むコールスタックを表示するメッセージボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="033c5-177">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="033c5-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="033c5-178">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="033c5-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="033c5-179">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="033c5-180">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-181">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="033c5-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-182"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="033c5-183"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="033c5-184">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-185">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-186">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-186">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="033c5-187">次の例では、`type` パラメーターが有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="033c5-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="033c5-188">渡された `type` が `null`場合、<xref:System.Diagnostics.Trace.Assert%2A> はメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-189">評価する条件式。</span><span class="sxs-lookup"><span data-stu-id="033c5-189">The conditional expression to evaluate.</span></span> <span data-ttu-id="033c5-190">条件が <see langword="true" /> の場合、指定したメッセージは送信されず、メッセージ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-191"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="033c5-192"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションに送信する詳細なメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="033c5-193">条件をチェックします。条件が <see langword="false" /> の場合、指定した 2 つのメッセージを出力し、コール スタックを示すメッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="033c5-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-194">リリースビルドでアサーションを実行する場合は、<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="033c5-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> メソッドは、デバッグビルドでのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="033c5-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="033c5-196">詳細については、「[マネージド コードのアサーション](/visualstudio/debugger/assertions-in-managed-code)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="033c5-197">通常、<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> メソッドは、プログラムの開発中に論理エラーを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="033c5-198"><xref:System.Diagnostics.Trace.Assert%2A> によって条件が評価されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="033c5-199">結果が `false`場合は、指定された診断メッセージと詳細メッセージを <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに送信します。</span><span class="sxs-lookup"><span data-stu-id="033c5-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="033c5-200">この動作は、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションに対して <xref:System.Diagnostics.TraceListener> を追加したり、削除したりすることによってカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="033c5-201">アプリケーションがユーザーインターフェイスモードで実行されると、ファイルと行番号を含むコールスタックを表示するメッセージボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="033c5-202">メッセージボックスには、**[中止]**、**[再試行]**、および **[無視]** の3つのボタンがあります。</span><span class="sxs-lookup"><span data-stu-id="033c5-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="033c5-203">**[中止]** ボタンをクリックすると、アプリケーションが終了します。</span><span class="sxs-lookup"><span data-stu-id="033c5-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="033c5-204">**[再試行]** をクリックすると、デバッガーでアプリケーションが実行されている場合はデバッガー内のコードに送信されます。デバッガーが起動していない場合は、デバッガーが開きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="033c5-205">**[無視]** をクリックすると、コード内の次の命令が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-206">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="033c5-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-207"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="033c5-208"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="033c5-209">構成ファイル内の <xref:System.Diagnostics.DefaultTraceListener> の動作は、アプリケーションの名前に対応するように変更できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-210">このファイルでは、assert メッセージボックスを有効または無効にしたり、<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> プロパティを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-211">構成ファイルは次のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-211">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="033c5-212">次の例では、`type` パラメーターが有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="033c5-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="033c5-213">渡された `type` が `null`場合、<xref:System.Diagnostics.Trace.Assert%2A> はメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-214">すべての書き込み後に <see cref="M:System.Diagnostics.Trace.Flush" /> で <see cref="P:System.Diagnostics.Trace.Listeners" /> を呼び出すかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="033c5-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span></span></summary>
        <value><span data-ttu-id="033c5-215">すべての書き込み後に <see langword="true" /> で <see cref="M:System.Diagnostics.Trace.Flush" /> を呼び出す場合は <see cref="P:System.Diagnostics.Trace.Listeners" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-215"><see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-216">既定値は、`false` です。</span><span class="sxs-lookup"><span data-stu-id="033c5-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="033c5-217">明示的に <xref:System.Diagnostics.Trace.Flush%2A> または <xref:System.Diagnostics.Trace.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="033c5-218"><xref:System.Diagnostics.Trace.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="033c5-219">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="033c5-220">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="033c5-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="033c5-221"><xref:System.Diagnostics.Trace>の <xref:System.Diagnostics.Trace.AutoFlush%2A> と <xref:System.Diagnostics.Trace.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-222">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-223">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-223">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-224">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="033c5-225">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="033c5-226">出力バッファーをフラッシュし、<see cref="P:System.Diagnostics.Trace.Listeners" /> を閉じます。</span><span class="sxs-lookup"><span data-stu-id="033c5-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-227">このメソッドは、出力がファイル (<xref:System.Diagnostics.TextWriterTraceListener>など) に移動する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-228">明示的に <xref:System.Diagnostics.Trace.Flush%2A> または <xref:System.Diagnostics.Trace.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="033c5-229"><xref:System.Diagnostics.Trace.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="033c5-230">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="033c5-231">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="033c5-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-232">次の例では、`myTextListener`という名前の <xref:System.Diagnostics.TextWriterTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="033c5-233">`myTextListener` では、`myOutputWriter` という <xref:System.IO.StreamWriter> を使用して、`TestFile.txt`という名前のファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="033c5-234">この例では、ファイル、ストリーム、テキストライターを作成し、1行のテキストをファイルに書き込んでから、出力をフラッシュして閉じます。</span><span class="sxs-lookup"><span data-stu-id="033c5-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-235">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-235">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-236">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="033c5-237">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-238">このトレースのスレッドの相関マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="033c5-238">Gets the correlation manager for the thread for this trace.</span></span></summary>
        <value><span data-ttu-id="033c5-239">このトレースのスレッドに関連付けられた <see cref="T:System.Diagnostics.CorrelationManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="033c5-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="033c5-240">これは高度なプロパティであり、ほとんどのアプリケーションでは使用しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="033c5-241"><xref:System.Diagnostics.CorrelationManager> クラスは、スレッドにバインドされたコンテキストに論理操作 id を格納し、格納されている id を持つスレッドによって生成される各トレースイベントに自動的にタグを付けるために使用するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-242">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-242">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-243">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="033c5-244">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-245">エラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-245">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-246">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-246">A message to emit.</span></span></param>
        <summary><span data-ttu-id="033c5-247">指定されたエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-247">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-248">既定のトレースリスナーの既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されるときにメッセージボックスに `message` パラメーターを出力し、<xref:System.Diagnostics.Trace.Listeners%2A> コレクション内の <xref:System.Diagnostics.TraceListener> インスタンスに出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-249">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="033c5-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-250"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="033c5-251"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="033c5-252">この動作をカスタマイズするには、に <xref:System.Diagnostics.TraceListener> を追加するか、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="033c5-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-253">次の例では、<xref:System.Diagnostics.Trace.Fail%2A> メソッドを使用して、例外処理中にメッセージを印刷します。</span><span class="sxs-lookup"><span data-stu-id="033c5-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="033c5-254">Switch ステートメントで <xref:System.Diagnostics.Trace.Fail%2A> メソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-255">出力するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-255">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="033c5-256">出力する詳細メッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-256">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="033c5-257">エラー メッセージ、および詳細なエラー メッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-257">Emits an error message, and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-258">既定の動作では、アプリケーションがユーザーインターフェイスモードで実行されるときに、既定のトレースリスナーによって `message` パラメーターと `detailedMessage` パラメーターがメッセージボックスに出力され、<xref:System.Diagnostics.Trace.Listeners%2A> コレクション内の <xref:System.Diagnostics.TraceListener> インスタンスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-259">メッセージボックスの表示は、<xref:System.Diagnostics.DefaultTraceListener>が存在するかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="033c5-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-260"><xref:System.Diagnostics.DefaultTraceListener> が <xref:System.Diagnostics.Trace.Listeners%2A> コレクションに含まれていない場合、メッセージボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="033c5-261"><xref:System.Diagnostics.DefaultTraceListener> は、 [&lt;クリア&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)、または <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> プロパティ (<xref:System.Diagnostics.Trace.Listeners%2A>) で`System.Diagnostics.Trace.Listeners.Clear()`メソッドを呼び出すことによって削除できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="033c5-262">この動作をカスタマイズするには、に <xref:System.Diagnostics.TraceListener> を追加するか、<xref:System.Diagnostics.Trace.Listeners%2A> コレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="033c5-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-263">次の例では、<xref:System.Diagnostics.Trace.Fail%2A> メソッドを使用して、例外処理中にメッセージを印刷します。</span><span class="sxs-lookup"><span data-stu-id="033c5-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="033c5-264">Switch ステートメントで <xref:System.Diagnostics.Trace.Fail%2A> メソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="033c5-265">出力バッファーをフラッシュします。また、バッファー内のデータが <see cref="P:System.Diagnostics.Trace.Listeners" /> に書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="033c5-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-266">明示的に <xref:System.Diagnostics.Trace.Flush%2A> または <xref:System.Diagnostics.Trace.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="033c5-267"><xref:System.Diagnostics.Trace.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="033c5-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="033c5-268">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="033c5-269">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="033c5-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-270">次の例では、`myTextListener`という名前の <xref:System.Diagnostics.TextWriterTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="033c5-271">`myTextListener` では、`myOutputWriter` という <xref:System.IO.StreamWriter> を使用して、`TestFile.txt`という名前のファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="033c5-272">この例では、ファイル、ストリーム、テキストライターを作成し、1行のテキストをファイルに書き込んでから、出力をフラッシュして閉じます。</span><span class="sxs-lookup"><span data-stu-id="033c5-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="033c5-273">現在の <see cref="P:System.Diagnostics.Trace.IndentLevel" /> を 1 だけ大きくします。</span><span class="sxs-lookup"><span data-stu-id="033c5-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="033c5-274">次の例では、インデントレベルを増減させると共に、トレースメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="033c5-275">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-276">インデント レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="033c5-276">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="033c5-277">インデント レベル。</span><span class="sxs-lookup"><span data-stu-id="033c5-277">The indent level.</span></span> <span data-ttu-id="033c5-278">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="033c5-278">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-279"><xref:System.Diagnostics.Trace.IndentLevel%2A> プロパティは、サイズ <xref:System.Diagnostics.Trace.IndentSize%2A> のインデントが適用される回数を表します。</span><span class="sxs-lookup"><span data-stu-id="033c5-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="033c5-280">このプロパティは、スレッドごと/要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-281">次の例では、インデントレベルを増減させると共に、トレースメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="033c5-282">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-283">1 つのインデントに含まれるスペースの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="033c5-283">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="033c5-284">インデントに含まれるスペースの数。</span><span class="sxs-lookup"><span data-stu-id="033c5-284">The number of spaces in an indent.</span></span> <span data-ttu-id="033c5-285">既定値は 4 です。</span><span class="sxs-lookup"><span data-stu-id="033c5-285">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-286"><xref:System.Diagnostics.TextWriterTraceListener> は、この数値をスペースとして解釈します。</span><span class="sxs-lookup"><span data-stu-id="033c5-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="033c5-287"><xref:System.Diagnostics.EventLogTraceListener> はこの値を無視します。</span><span class="sxs-lookup"><span data-stu-id="033c5-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="033c5-288">このプロパティは、スレッドごと/要求ごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="033c5-289"><xref:System.Diagnostics.Trace>の <xref:System.Diagnostics.Trace.AutoFlush%2A> と <xref:System.Diagnostics.Trace.IndentSize%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-290">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-291">トレース出力を監視しているリスナーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="033c5-291">Gets the collection of listeners that is monitoring the trace output.</span></span></summary>
        <value><span data-ttu-id="033c5-292">トレース出力を監視している型 <see cref="T:System.Diagnostics.TraceListenerCollection" /> のコレクションを表す <see cref="T:System.Diagnostics.TraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-293">リスナーは、トレース出力から書式設定された出力を生成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="033c5-294">既定では、コレクションには <xref:System.Diagnostics.DefaultTraceListener> クラスのインスタンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="033c5-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="033c5-295">既定のリスナーを削除する場合は、<xref:System.Diagnostics.TraceListenerCollection.Remove%2A> メソッドを呼び出し、<xref:System.Diagnostics.DefaultTraceListener>のインスタンスを渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="033c5-296">コンソールウィンドウに出力をリダイレクトするには、<xref:System.Diagnostics.ConsoleTraceListener> クラスのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="033c5-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-297"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションは、<xref:System.Diagnostics.Debug> と <xref:System.Diagnostics.Trace> の両方のクラスで共有されます。いずれかのクラスにトレースリスナーを追加すると、リスナーが両方に追加されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-298">次の例では、コンソール画面に出力する <xref:System.Diagnostics.ConsoleTraceListener> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="033c5-299">次に、コードは新しいリスナーを <xref:System.Diagnostics.Trace.Listeners%2A>に追加します。</span><span class="sxs-lookup"><span data-stu-id="033c5-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-300">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-300">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-301">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="033c5-302">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="033c5-303">トレース構成データを更新します。</span><span class="sxs-lookup"><span data-stu-id="033c5-303">Refreshes the trace configuration data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-304">トレース構成データは、アプリケーションの起動時にキャプチャされます。</span><span class="sxs-lookup"><span data-stu-id="033c5-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="033c5-305">アプリケーションの起動後に構成データが変更された場合は、<xref:System.Diagnostics.Trace.Refresh%2A> メソッドを呼び出して、トレース構成データを更新します。</span><span class="sxs-lookup"><span data-stu-id="033c5-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-306">エラー情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-307">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-307">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-308">指定されたメッセージを使用して、エラー メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-309"><xref:System.Diagnostics.Trace.TraceError%2A> は、トレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Error>を使用して各トレースリスナーの `TraceEvent` メソッドを呼び出し、情報メッセージをメッセージ文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="033c5-310">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="033c5-310">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="033c5-311">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="033c5-311">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="033c5-312">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにエラー メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-313"><xref:System.Diagnostics.Trace.TraceError%2A> はトレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Error>を使用してトレースリスナーの `TraceEvent` メソッドを呼び出し、メッセージの内容を書式設定情報を含むオブジェクト配列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="033c5-314">`format` と `args` パラメーターの詳細については、<xref:System.String.Format%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-315">情報メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-316">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-316">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-317">指定されたメッセージを使用して、情報メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> は、トレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Information>を使用して各トレースリスナーの `TraceEvent` メソッドを呼び出し、情報メッセージをメッセージ文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="033c5-319">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="033c5-319">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="033c5-320">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="033c5-320">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="033c5-321">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに情報メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> はトレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Information>を使用してトレースリスナーの `TraceEvent` メソッドを呼び出し、メッセージの内容を書式設定情報を含むオブジェクト配列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="033c5-323">`format` と `args` パラメーターの詳細については、<xref:System.String.Format%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-324">警告情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-325">書き込む情報メッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-325">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-326">指定されたメッセージを使用して、警告メッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> は、トレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Warning>を使用して各トレースリスナーの `TraceEvent` メソッドを呼び出し、情報メッセージをメッセージ文字列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="033c5-328">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="033c5-328">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="033c5-329">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="033c5-329">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="033c5-330">指定されたオブジェクトの配列および書式設定情報を使用して、<see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに警告メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> はトレースイベントの種類 <xref:System.Diagnostics.TraceEventType.Warning>を使用してトレースリスナーの `TraceEvent` メソッドを呼び出し、メッセージの内容を書式設定情報を含むオブジェクト配列として渡します。</span><span class="sxs-lookup"><span data-stu-id="033c5-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="033c5-332">`format` と `args` パラメーターの詳細については、<xref:System.String.Format%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="033c5-333">現在の <see cref="P:System.Diagnostics.Trace.IndentLevel" /> を 1 だけ減らします。</span><span class="sxs-lookup"><span data-stu-id="033c5-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="033c5-334">次の例では、インデントレベルを増減させると共に、トレースメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="033c5-335">この例を実行すると、次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c5-336">グローバル ロックを使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="033c5-336">Gets or sets a value indicating whether the global lock should be used.</span></span></summary>
        <value><span data-ttu-id="033c5-337">グローバル ロックを使用する場合、<see langword="true" />。それ以外の場合、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-337"><see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="033c5-338">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="033c5-338">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-339"><xref:System.Diagnostics.Trace.UseGlobalLock%2A>の値に関係なく、トレースリスナーがスレッドセーフでない場合は、常にグローバルロックが使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="033c5-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> プロパティは、リスナーがスレッドセーフかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="033c5-341">グローバルロックは、<xref:System.Diagnostics.Trace.UseGlobalLock%2A> の値が `false`、<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> の値が `true`場合にのみ使用されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="033c5-342">既定の動作では、グローバルロックが使用されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="033c5-343"><xref:System.Diagnostics.Trace>の <xref:System.Diagnostics.Trace.UseGlobalLock%2A> を設定するには、アプリケーションの名前に対応する構成ファイルを編集することもできます。</span><span class="sxs-lookup"><span data-stu-id="033c5-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="033c5-344">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-344">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="033c5-345">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-345">for operating with unmanaged code.</span></span> <span data-ttu-id="033c5-346">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="033c5-347">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="033c5-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-348">トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="033c5-349">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="033c5-350">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-351">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-352">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-353">ASP.NET は、Web ページ用に調整したトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="033c5-354">ASP.NET ページにトレースメッセージを書き込むには、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="033c5-355">既定では、ASP.NET Web ページに関連付けられているコードでは、ステートメント `Trace.Write("...")` は <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティの <xref:System.Web.TraceContext.Write%2A> メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="033c5-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-356">Web ページで <xref:System.Diagnostics.Trace?displayProperty=nameWithType> クラスを使用するには、`System.Diagnostics.Trace.Write("...")`などの名前空間を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-357">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-358">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-359">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では `value` パラメーターの最初の名前が <xref:System.Diagnostics.Trace.Listeners%2A>に出力されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-360"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-361">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="033c5-362">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-363">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-363">A message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-364"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-365">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-366">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-367">ASP.NET は、Web ページ用に調整したトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="033c5-368">ASP.NET ページにトレースメッセージを書き込むには、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="033c5-369">既定では、ASP.NET Web ページに関連付けられているコードでは、ステートメント `Trace.Write("...")` は <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティの <xref:System.Web.TraceContext.Write%2A> メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="033c5-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-370">Web ページで <xref:System.Diagnostics.Trace?displayProperty=nameWithType> クラスを使用するには、`System.Diagnostics.Trace.Write("...")`などの名前空間を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-371">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-372">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-373">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-374"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-375">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-376">行終端記号は2番目のメッセージの後に続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="033c5-377"><see cref="T:System.Object" /> の名前は <see cref="P:System.Diagnostics.Trace.Listeners" /> に送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-378">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-378">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-379">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-380">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-381">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-382">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-383">ASP.NET は、Web ページ用に調整したトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="033c5-384">ASP.NET ページにトレースメッセージを書き込むには、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="033c5-385">既定では、ASP.NET Web ページに関連付けられているコードでは、ステートメント `Trace.Write("...")` は <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティの <xref:System.Web.TraceContext.Write%2A> メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="033c5-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-386">Web ページで <xref:System.Diagnostics.Trace?displayProperty=nameWithType> クラスを使用するには、`System.Diagnostics.Trace.Write("...")`などの名前空間を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-387">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-388">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-389">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では `myObject` の名前と `category` を <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-390"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-391">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-392">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-393">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-393">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-394">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-394">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-395">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-396">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-397">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-398">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="033c5-399">ASP.NET は、Web ページ用に調整したトレース機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="033c5-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="033c5-400">ASP.NET ページにトレースメッセージを書き込むには、<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="033c5-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="033c5-401">既定では、ASP.NET Web ページに関連付けられているコードでは、ステートメント `Trace.Write("...")` は <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> プロパティの <xref:System.Web.TraceContext.Write%2A> メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="033c5-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="033c5-402">Web ページで <xref:System.Diagnostics.Trace?displayProperty=nameWithType> クラスを使用するには、`System.Diagnostics.Trace.Write("...")`などの名前空間を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-403">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-404">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-405">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-406"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-407">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-408">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-409">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> の場合、トレースについての情報を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-410">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-410"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="033c5-411">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="033c5-412">条件が <see cref="M:System.Object.ToString" /> の場合、オブジェクトの <see cref="P:System.Diagnostics.Trace.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-413">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-414">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-415">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-416">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-417">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、値パラメーターの最初の名前が <xref:System.Diagnostics.Trace.Listeners%2A>に出力されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-418"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-419">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="033c5-420">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-421"><see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-421">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-422">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-422">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-423">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.Write(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-423">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="033c5-424">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-424">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-425">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-425">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-426">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-426">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-427">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-427">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-428">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-428"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-429">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-429">A message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-430">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> である場合、メッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-430">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-431">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-431">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-432">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-432">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-433">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-433">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-434">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-434">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-435">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-435">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-436"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-436">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-437">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-437">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-438">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-438">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-439"><see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-439">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-440">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-440">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-441">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.Write(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-441">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="033c5-442">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-442">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-443">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-443">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-444">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-444">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-445">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-445">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-446">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-446"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="033c5-447">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-447">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-448">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-448">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-449">条件が <see cref="M:System.Object.ToString" /> の場合は、カテゴリ名とオブジェクトの <see cref="P:System.Diagnostics.Trace.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-449">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-450">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-450">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-451">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-451">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-452">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-452">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-453">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-453">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-454">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-454">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-455">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では `myObject` の名前と `category` を <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-455">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-456"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-456">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-457">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-457">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-458">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-458">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-459"><see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-459">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-460">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-460">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-461">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.Write(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-461">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="033c5-462">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-462">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-463">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-463">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-464">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-464">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-465">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-465">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-466">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-466"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-467">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-467">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-468">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-468">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-469">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> である場合、カテゴリ名とメッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-469">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-470">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-471">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-471">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-472">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-472">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-473">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-473">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-474">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-474">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-475">スイッチが <xref:System.Diagnostics.TraceLevel>`Verbose`に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-475">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-476"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-476">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-477">次に、<xref:System.Diagnostics.TraceLevel> が `Error` 以上に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-477">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-478">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-478">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-479"><see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-479">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-480">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-480">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-481">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.Write(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-481">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="033c5-482">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-482">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-483">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-483">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-484">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-484">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-485">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-485">**Second example**</span></span>  
  
```csharp  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-486">トレースについての情報を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-486">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="033c5-487">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-487">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="033c5-488">オブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-489">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-490">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-491">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-492">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-492">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-493">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-494"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-494">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-495">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にオブジェクトの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="033c5-496">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-496">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-497">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-497">A message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-498"><see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-498">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-499">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-499">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-500">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-501">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-502">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-503">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-504"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-505">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-506">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="033c5-507">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-507">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-508">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-508">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-509">カテゴリ名とオブジェクトの <see cref="M:System.Object.ToString" /> メソッドの値を <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-509">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-510">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-510">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-511">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-511">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-512">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-513">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-514">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-515">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-516"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-517">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-518">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="033c5-519">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-519">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-520">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-520">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-521">カテゴリ名とメッセージを <see cref="P:System.Diagnostics.Trace.Listeners" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-521">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-522">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-522">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-523">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-523">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-524">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-525">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-526">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-527">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-528"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-529">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、2番目のエラーメッセージと `category` を1番目のメッセージと同じ行に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="033c5-530">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="033c5-531">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> の場合、トレースについての情報を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-531">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-532">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-532"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="033c5-533">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="033c5-534">条件が <see cref="M:System.Object.ToString" /> の場合、オブジェクトの <see cref="P:System.Diagnostics.Trace.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-534">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-535">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-535">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-536">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-536">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-537">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-537">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-538">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-538">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-539">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-539">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-540"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-540">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-541">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行にオブジェクトの名前が出力されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-541">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="033c5-542">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-542">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-543"><see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-543">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-544">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-544">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-545">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-545">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="033c5-546">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-546">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-547">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-547">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-548">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-548">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-549">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-549">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-550">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-550"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-551">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-551">A message to write.</span></span></param>
        <summary><span data-ttu-id="033c5-552">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> である場合、メッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-552">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-553">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-554">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-554">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-555">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-555">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-556">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-556">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-557">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-557">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-558"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-558">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-559">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-559">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-560">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-560">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-561"><see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-561">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-562">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-562">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-563">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-563">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="033c5-564">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-564">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-565">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-565">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-566">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-566">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-567">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-567">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-568">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-568"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="033c5-569">名前が <see cref="T:System.Object" /> に送信される <see cref="P:System.Diagnostics.Trace.Listeners" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-569">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-570">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-570">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-571">条件が <see cref="M:System.Object.ToString" /> の場合は、カテゴリ名とオブジェクトの <see cref="P:System.Diagnostics.Trace.Listeners" /> メソッドの値を <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-571">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-572">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-572">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-573">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-573">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-574">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-574">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-575">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-575">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-576">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-576">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-577">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-577">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-578"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-578">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-579">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、この例では、最初のメッセージと同じ行に2番目のエラーメッセージを出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-579">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="033c5-580">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-580">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-581"><see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-581">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-582">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-582">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-583">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-583">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="033c5-584">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-584">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-585">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-585">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-586">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-586">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-587">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-587">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="033c5-588">メッセージが書き込まれるようにするには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="033c5-588"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="033c5-589">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="033c5-589">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="033c5-590">出力を編成するために使用するカテゴリ名。</span><span class="sxs-lookup"><span data-stu-id="033c5-590">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="033c5-591">条件が <see cref="P:System.Diagnostics.Trace.Listeners" /> である場合、カテゴリ名とメッセージを <see langword="true" /> コレクションのトレース リスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="033c5-591">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c5-592">既定では、出力は <xref:System.Diagnostics.DefaultTraceListener>のインスタンスに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="033c5-592">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="033c5-593">`category` パラメーターを使用して、出力メッセージをグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="033c5-593">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="033c5-594">このメソッドは、トレースリスナーの <xref:System.Diagnostics.TraceListener.WriteLine%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="033c5-594">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c5-595">次の例では、`generalSwitch`という名前の <xref:System.Diagnostics.TraceSwitch> を作成します。</span><span class="sxs-lookup"><span data-stu-id="033c5-595">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="033c5-596">このスイッチは、コードサンプルの外部で設定されています。</span><span class="sxs-lookup"><span data-stu-id="033c5-596">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="033c5-597">スイッチが <xref:System.Diagnostics.TraceLevel>`Error` 以上に設定されている場合、この例では、最初のエラーメッセージを <xref:System.Diagnostics.Trace.Listeners%2A>に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-597">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="033c5-598"><xref:System.Diagnostics.Trace.Listeners%2A> コレクションにリスナーを追加する方法の詳細については、<xref:System.Diagnostics.TraceListenerCollection> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="033c5-598">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="033c5-599">次に、<xref:System.Diagnostics.TraceLevel> が `Verbose`に設定されている場合、2番目のエラーメッセージと `category` を1番目のメッセージと同じ行に出力します。</span><span class="sxs-lookup"><span data-stu-id="033c5-599">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="033c5-600">2番目のメッセージの後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="033c5-600">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="033c5-601"><see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> ステートメントを使用する代わりに、<see langword="If...Then" /> ステートメントを使用してアプリケーションをインストルメント化することで、パフォーマンスの低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="033c5-601">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="033c5-602">次の2つのコード例では、同じデバッグメッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="033c5-602">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="033c5-603">ただし、最初の例は、トレースがオフになっている場合により高速になります。これは、 <c>mySwitch</c>が <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />を呼び出さない <see langword="false" /> に評価されるためです。</span><span class="sxs-lookup"><span data-stu-id="033c5-603">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="033c5-604">2番目の例では、常に <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />を呼び出します。 <c>TraceError</c>が <see langword="false" />、トレース出力は生成されません。</span><span class="sxs-lookup"><span data-stu-id="033c5-604">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="033c5-605">これにより、任意の複雑なコードを不必要に実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="033c5-605">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="033c5-606">**最初の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-606">**First example**</span></span>  
  
```csharp  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="033c5-607">**2番目の例**</span><span class="sxs-lookup"><span data-stu-id="033c5-607">**Second example**</span></span>  
  
```csharp  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para></block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
