<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55c3f5428a272cbf65dabf708f52d354fdcdc448" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77228238" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <TypeSignature Language="F#" Value="type ProcessStartInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9792-101">プロセスを起動するときに使用する値のセットを指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-101">Specifies a set of values that are used when you start a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-102"><xref:System.Diagnostics.ProcessStartInfo> は、<xref:System.Diagnostics.Process> コンポーネントと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="b9792-103"><xref:System.Diagnostics.Process> クラスを使用してプロセスを開始すると、実行中のプロセスにアタッチするときに使用可能な情報に加えて、プロセス情報にもアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="b9792-104"><xref:System.Diagnostics.ProcessStartInfo> クラスを使用して、開始するプロセスをより適切に制御できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="b9792-105">少なくとも、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティを手動で設定するか、コンストラクターを使用して設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="b9792-106">ファイル名は、任意のアプリケーションまたはドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="b9792-106">The file name is any application or document.</span></span> <span data-ttu-id="b9792-107">ここで、ドキュメントは、開いている、または既定のアクションが関連付けられている任意のファイルの種類として定義されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="b9792-108">コンピューターに登録されているファイルの種類と関連付けられているアプリケーションを表示するには、**[フォルダーオプション]** ダイアログボックスを使用します。これは、オペレーティングシステムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="b9792-109">**[詳細設定**] ボタンをクリックすると、特定の登録済みファイルの種類に関連付けられているアクションが開いているかどうかを示すダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="b9792-110">また、そのファイルに対して実行するアクションを定義するその他のプロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="b9792-111"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> プロパティの <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティの型に固有の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="b9792-112">たとえば、ドキュメントの種類として [印刷] を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="b9792-113">また、ファイルのオープンプロシージャに渡すコマンドライン引数として <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> プロパティ値を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="b9792-114">たとえば、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティでテキストエディターアプリケーションを指定する場合は、<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> プロパティを使用して、エディターで開くテキストファイルを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="b9792-115">通常、標準入力はキーボードであり、標準出力と標準エラーはモニター画面です。</span><span class="sxs-lookup"><span data-stu-id="b9792-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="b9792-116">ただし、<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>、および <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> の各プロパティを使用すると、プロセスがファイルまたはその他のデバイスに対して出力を取得したり、出力を返したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="b9792-117"><xref:System.Diagnostics.Process> コンポーネントで <xref:System.Diagnostics.Process.StandardInput%2A>、<xref:System.Diagnostics.Process.StandardOutput%2A>、または <xref:System.Diagnostics.Process.StandardError%2A> プロパティを使用する場合は、最初に <xref:System.Diagnostics.ProcessStartInfo> プロパティで対応する値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="b9792-118">それ以外の場合、ストリームに対して読み取りまたは書き込みを行うと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="b9792-119"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティを設定して、オペレーティングシステムシェルを使用してプロセスを開始するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="b9792-120"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `false`に設定されている場合、新しいプロセスは、呼び出しプロセスの標準入力、標準出力、および標準エラーストリームを継承します。ただし、それぞれ <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>、または <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> プロパティが `true`に設定されている場合を除きます。</span><span class="sxs-lookup"><span data-stu-id="b9792-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="b9792-121"><xref:System.Diagnostics.ProcessStartInfo> のプロパティの値は、プロセスが開始されるまでの間に変更できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="b9792-122">プロセスを開始した後、これらの値を変更しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-123">このクラスには、すべてのメンバーに適用されるクラスレベルのリンク確認要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9792-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="b9792-124"><xref:System.Security.SecurityException> は、直前の呼び出し元に完全信頼のアクセス許可がない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="b9792-125">セキュリティ要求の詳細については、「[リンク確認要求](~/docs/framework/misc/link-demands.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b9792-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9792-126">次のコード例では、<xref:System.Diagnostics.ProcessStartInfo> クラスを使用して Internet Explorer を起動し、宛先 Url を <xref:System.Diagnostics.ProcessStartInfo> 引数として指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b9792-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9792-127"><see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b9792-127">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9792-128">プロセスを起動するときに使用するファイル名を指定せずに、<see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b9792-128">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-129">プロセスを開始する前に、少なくとも <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-129">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="b9792-130">ファイル名は、任意のアプリケーションまたはドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="b9792-130">The file name is any application or document.</span></span> <span data-ttu-id="b9792-131">この場合、ドキュメントは、開いている、または既定のアクションが関連付けられている任意のファイルの種類として定義されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-131">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="b9792-132">コンピューターに登録されているファイルの種類と関連付けられているアプリケーションを表示するには、**[フォルダーオプション]** ダイアログボックスを使用します。これは、オペレーティングシステムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-132">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="b9792-133">**[詳細設定**] ボタンをクリックすると、特定の登録済みファイルの種類に関連付けられているアクションが開いているかどうかを示すダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-133">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="b9792-134">必要に応じて、プロセスを開始する前に他のプロパティを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-134">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="b9792-135"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> プロパティは、"print" など、実行するアクションを、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティに示されているファイルと共に指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-135">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="b9792-136"><xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> プロパティは、システムがファイルを開いたときにコマンドライン引数を渡す方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b9792-136">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b9792-137">プロセスを起動するときに使用するアプリケーションまたはドキュメント。</span><span class="sxs-lookup"><span data-stu-id="b9792-137">An application or document with which to start a process.</span></span></param>
        <summary><span data-ttu-id="b9792-138"><see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化し、アプリケーションやドキュメントなど、プロセスを起動するときに使用するファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-138">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-139">ファイル名は、任意のアプリケーションまたはドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="b9792-139">The file name is any application or document.</span></span> <span data-ttu-id="b9792-140">この場合、ドキュメントは、開いている、または既定のアクションが関連付けられている任意のファイルの種類として定義されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-140">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="b9792-141">コンピューターに登録されているファイルの種類と関連付けられているアプリケーションを表示するには、**[フォルダーオプション]** ダイアログボックスを使用します。これは、オペレーティングシステムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-141">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="b9792-142">**[詳細設定**] ボタンをクリックすると、特定の登録済みファイルの種類に関連付けられているアクションが開いているかどうかを示すダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-142">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="b9792-143">このコンストラクターを呼び出した後、プロセスが開始されるまで、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-143">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="b9792-144">プロセスを開始した後、これらの値を変更しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-144">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo (fileName, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b9792-145">プロセスを起動するときに使用するアプリケーション。</span><span class="sxs-lookup"><span data-stu-id="b9792-145">An application with which to start a process.</span></span></param>
        <param name="arguments"><span data-ttu-id="b9792-146">プロセスを起動するときにアプリケーションに渡すコマンド ライン引数。</span><span class="sxs-lookup"><span data-stu-id="b9792-146">Command-line arguments to pass to the application when the process starts.</span></span></param>
        <summary><span data-ttu-id="b9792-147">プロセスを起動するときに使用するアプリケーション ファイル名およびアプリケーションに渡すコマンド ライン引数のセットを指定して、<see cref="T:System.Diagnostics.ProcessStartInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b9792-147">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-148">ファイル名は、任意のアプリケーションまたはドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="b9792-148">The file name is any application or document.</span></span> <span data-ttu-id="b9792-149">この場合、ドキュメントは、開いている、または既定のアクションが関連付けられている任意のファイルの種類として定義されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-149">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="b9792-150">コンピューターに登録されているファイルの種類と関連付けられているアプリケーションを表示するには、**[フォルダーオプション]** ダイアログボックスを使用します。これは、オペレーティングシステムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-150">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="b9792-151">**[詳細設定**] ボタンをクリックすると、特定の登録済みファイルの種類に関連付けられているアクションが開いているかどうかを示すダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-151">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="b9792-152">このコンストラクターを呼び出した後、プロセスが開始されるまで、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> または <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> プロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-152">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="b9792-153">プロセスを開始した後、これらの値を変更しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-153">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-154">アプリケーションを起動するときに使用するコマンド ライン引数のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b9792-154">Gets a collection of command-line arguments to use when starting the application.</span></span></summary>
        <value><span data-ttu-id="b9792-155">コマンドライン引数のコレクション。</span><span class="sxs-lookup"><span data-stu-id="b9792-155">A collection of command-line arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="b9792-156">`ArgumentList`は、.NET Core 2.1 および .NET Standard 2.1 以降でサポートされており、<xref:System.Diagnostics.ProcessStartInfo.Arguments> プロパティは互いに独立しています。</span><span class="sxs-lookup"><span data-stu-id="b9792-156">`ArgumentList`, which is supported starting with .NET Core 2.1 and .NET Standard 2.1, and the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property are independent of one another.</span></span> <span data-ttu-id="b9792-157">つまり、`ArgumentList` コレクションに割り当てられた文字列は、<xref:System.Diagnostics.ProcessStartInfo.Arguments> プロパティの設定には使用されず、<xref:System.Diagnostics.ProcessStartInfo.Arguments> プロパティに割り当てられた文字列は `ArgumentList` コレクションに割り当てられている個々の文字列に解析されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-157">That is, the strings assigned to the `ArgumentList` collection are not used to populate the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property, and the string assigned to the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property is not parsed into individual strings that are assigned to `ArgumentList` collection.</span></span> 

<span data-ttu-id="b9792-158">`ArgumentList` は <xref:System.Diagnostics.ProcessStartInfo.Arguments> プロパティよりも簡単に使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-158">`ArgumentList` is easier to use than the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property.</span></span> <span data-ttu-id="b9792-159">各文字列はコレクションのメンバーに割り当てられるため、引用符で区切られたトリプルエスケープ文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-159">Because each string is assigned to a member of the collection, you can single- rather than triple-escape strings that are delimited by quotation marks.</span></span> <span data-ttu-id="b9792-160">たとえば、次の例では、`ArgumentList` コレクションのメンバーとして `-full "Mary Smith"` が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9792-160">For example, the following example include `-full "Mary Smith"` as a member of the `ArgumentList` collection:</span></span>

```csharp
info.ArgumentList.Add("-full \"Mary Smith\"");
```

<span data-ttu-id="b9792-161"><xref:System.Diagnostics.ProcessStartInfo.Arguments> プロパティへの対応する割り当ては次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="b9792-161">The corresponding assignment to the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property is:</span></span>

```csharp
info.Arguments = "-full \"\"\"Mary Smith\"\"\""
```

<span data-ttu-id="b9792-162">このプロパティを使用してコマンドライン引数を設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.Arguments> を空の文字列に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-162">If you use this property to set command-line arguments, <xref:System.Diagnostics.ProcessStartInfo.Arguments> must be set to an empty string.</span></span>

## Examples

<span data-ttu-id="b9792-163">この例では、プロセスの開始情報に2つの引数を追加します。</span><span class="sxs-lookup"><span data-stu-id="b9792-163">This example adds two arguments to the process start info.</span></span>

```csharp
var info = new System.Diagnostics.ProcessStartInfo("names.exe");
info.ArgumentList.Add("-first Mary");
info.ArgumentList.Add("-last Smith");
```
```vb
Dim info As New System.Diagnostics.ProcessStartInfo("names.exe")
info.ArgumentList.Add("-first Mary")
info.ArgumentList.Add("-last Smith")
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessArguments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-164">アプリケーションを起動するときに使用するコマンド ライン引数のセットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-164">Gets or sets the set of command-line arguments to use when starting the application.</span></span></summary>
        <value><span data-ttu-id="b9792-165"><see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したターゲット アプリケーションに渡す引数を格納した単一の文字列。</span><span class="sxs-lookup"><span data-stu-id="b9792-165">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span> <span data-ttu-id="b9792-166">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b9792-166">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="b9792-167">`Arguments` プロパティに割り当てられた文字列の長さは、32699未満である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-167">The length of the string assigned to the `Arguments` property must be less than 32,699.</span></span>
  
<span data-ttu-id="b9792-168">引数はターゲット アプリケーションで解析され、解釈されるため、そのアプリケーションの想定に合わせたものでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="b9792-168">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span></span> <span data-ttu-id="b9792-169">次の例に示すように、.NET アプリケーションの場合、スペースは複数の引数間の区切り記号として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-169">For .NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span></span> <span data-ttu-id="b9792-170">1 つの引数にスペースが含まれる場合は引用符で囲む必要がありますが、これらの引用符はターゲット アプリケーションに渡されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-170">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span></span> <span data-ttu-id="b9792-171">最後に解析された引数に引用符を含めるには、各マークをトリプルエスケープします。</span><span class="sxs-lookup"><span data-stu-id="b9792-171">To include quotation marks in the final parsed argument, triple-escape each mark.</span></span>
<span data-ttu-id="b9792-172">このプロパティを使用してコマンドライン引数を設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.ArgumentList> に要素を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="b9792-172">If you use this property to set command-line arguments, <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> must not contain any elements.</span></span>
  
<span data-ttu-id="b9792-173">.NET Core 2.1 および .NET Standard 2.1 以降でサポートされている `Arguments` と <xref:System.Diagnostics.ProcessStartInfo.ArgumentList>は、互いに独立しています。</span><span class="sxs-lookup"><span data-stu-id="b9792-173">`Arguments` and <xref:System.Diagnostics.ProcessStartInfo.ArgumentList>, which is supported starting with .NET Core 2.1 and .NET Standard 2.1, are independent of one another.</span></span> <span data-ttu-id="b9792-174">つまり、`Arguments` プロパティに割り当てられた文字列は <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> コレクションに設定されず、<xref:System.Diagnostics.ProcessStartInfo.ArgumentList> コレクションのメンバーは `Arguments` プロパティに割り当てられません。</span><span class="sxs-lookup"><span data-stu-id="b9792-174">That is, the string assigned to the `Arguments` property does not populate the <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> collection, and the members of the <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> collection are not assigned to the `Arguments` property.</span></span>

## Examples  
 <span data-ttu-id="b9792-175">最初の例では、コンソールに引数を表示する小規模なアプリケーション (argsecho) を作成します。</span><span class="sxs-lookup"><span data-stu-id="b9792-175">The first example creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="b9792-176">2番目の例では、argsecho を呼び出すアプリケーションを作成し、`Arguments` プロパティのさまざまなバリエーションを示します。</span><span class="sxs-lookup"><span data-stu-id="b9792-176">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the `Arguments` property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic3.cpp)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic3.cs)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic3.vb)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic2.cpp)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic2.cs)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic2.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreateNoWindow : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessCreateNoWindow")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-177">プロセスを新しいウィンドウで起動するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-177">Gets or sets a value indicating whether to start the process in a new window.</span></span></summary>
        <value><span data-ttu-id="b9792-178">プロセス用の新しいウィンドウを作成せずにプロセスを起動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-178"><see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-179">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-180"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティが `true` か、<xref:System.Diagnostics.ProcessStartInfo.UserName%2A> プロパティと <xref:System.Diagnostics.ProcessStartInfo.Password%2A> プロパティが `null`ない場合、<xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> プロパティ値は無視され、新しいウィンドウが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-180">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="b9792-181">.NET Core では、macOS や Linux などの Unix のようなプラットフォームでの windows の直接作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b9792-181">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="b9792-182">このようなプラットフォームでは、このプロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-182">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-183">プロセスを開始するときに使用されるドメインを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-183">Gets or sets a value that identifies the domain to use when starting the process.</span></span> <span data-ttu-id="b9792-184">この値が <see langword="null" /> の場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> プロパティを UPN 形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-184">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span></summary>
        <value><span data-ttu-id="b9792-185">プロセスを開始するときに使用する Active Directory ドメイン。</span><span class="sxs-lookup"><span data-stu-id="b9792-185">The Active Directory domain to use when starting the process.</span></span> <span data-ttu-id="b9792-186">この値が <see langword="null" /> の場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> プロパティを UPN 形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-186">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span></value>
        <remarks><span data-ttu-id="b9792-187">このプロパティは、主に、Active Directory を使用するエンタープライズ環境内のユーザーにとって重要です。</span><span class="sxs-lookup"><span data-stu-id="b9792-187">This property is primarily of interest to users within enterprise environments that use Active Directory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-188">このプロセスと子のプロセスに適用される環境変数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9792-188">Gets the environment variables that apply to this process and its child processes.</span></span></summary>
        <value><span data-ttu-id="b9792-189">このプロセスと子のプロセスに適用される環境変数を格納している汎用ディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="b9792-189">A generic dictionary containing the environment variables that apply to this process and its child processes.</span></span> <span data-ttu-id="b9792-190">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-190">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-191">環境変数には、ファイルの検索パス、一時ファイルのディレクトリ、アプリケーション固有のオプションなどの情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9792-191">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="b9792-192"><xref:System.Diagnostics.ProcessStartInfo.Environment%2A> プロパティを直接設定することはできませんが、プロパティによって返されるジェネリックディクショナリを変更することはできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-192">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="b9792-193">たとえば、次のコードでは、TempPath 環境変数 `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-193">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="b9792-194"><xref:System.Diagnostics.ProcessStartInfo.Environment%2A> プロパティを変更した後にプロセスを開始するには、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティを `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-194">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="b9792-195"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true`場合、<xref:System.Diagnostics.Process.Start%2A> メソッドが呼び出されると <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-195">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="b9792-196">.NET Framework アプリケーションでは、<xref:System.Diagnostics.ProcessStartInfo.Environment%2A> プロパティの使用は、<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> プロパティの使用と同じです。</span><span class="sxs-lookup"><span data-stu-id="b9792-196">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessEnvironmentVariables")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-197">ファイルの検索パス、一時ファイルのディレクトリ、アプリケーション固有のオプションなどの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9792-197">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span></summary>
        <value><span data-ttu-id="b9792-198">このプロセスおよび子プロセスに適用される環境変数を提供する文字列ディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="b9792-198">A string dictionary that provides environment variables that apply to this process and child processes.</span></span> <span data-ttu-id="b9792-199">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-199">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-200"><xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> プロパティを設定することはできませんが、プロパティによって返される <xref:System.Collections.Specialized.StringDictionary> を変更することはできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-200">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="b9792-201">たとえば、次のコードでは、TempPath 環境変数 `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-201">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="b9792-202"><xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> プロパティを変更した後にプロセスを開始するには、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティを `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-202">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="b9792-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true`場合、<xref:System.Diagnostics.Process.Start%2A> メソッドが呼び出されると <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-203">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialog : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessErrorDialog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-204">プロセスを起動できなかったときにエラー ダイアログ ボックスを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-204">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span></span></summary>
        <value><span data-ttu-id="b9792-205">プロセスを起動できなかったときにエラー ダイアログ ボックスを画面に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-205"><see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-206">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-206">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9792-207"><xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> を `true`に設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> を `true` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-207"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialogParentHandle : nativeint with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-208">プロセスを起動できないときにエラー ダイアログ ボックスを表示するのに使用するウィンドウ ハンドルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-208">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span></span></summary>
        <value><span data-ttu-id="b9792-209">プロセスの起動失敗によって生成されるエラー ダイアログ ボックスのハンドルへのポインター。</span><span class="sxs-lookup"><span data-stu-id="b9792-209">A pointer to the handle of the error dialog box that results from a process start failure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-210"><xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> が `true`場合、<xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> プロパティは、表示されるダイアログボックスの親ウィンドウを指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-210">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="b9792-211">アプリケーションの前にダイアログボックスを保持する親を指定すると便利です。</span><span class="sxs-lookup"><span data-stu-id="b9792-211">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessFileName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-212">起動するアプリケーションまたはドキュメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-212">Gets or sets the application or document to start.</span></span></summary>
        <value><span data-ttu-id="b9792-213">起動するアプリケーション名。または、アプリケーションに関連付けられていて、既定の "open" アクションが利用できるファイル タイプのドキュメント名。</span><span class="sxs-lookup"><span data-stu-id="b9792-213">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span></span> <span data-ttu-id="b9792-214">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b9792-214">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-215">プロセスを開始する前に、少なくとも <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-215">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="b9792-216">ファイル名は、任意のアプリケーションまたはドキュメントです。</span><span class="sxs-lookup"><span data-stu-id="b9792-216">The file name is any application or document.</span></span> <span data-ttu-id="b9792-217">ドキュメントは、開いている、または既定のアクションが関連付けられている任意のファイルの種類として定義されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-217">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="b9792-218">コンピューターに登録されているファイルの種類と関連付けられているアプリケーションを表示するには、**[フォルダーオプション]** ダイアログボックスを使用します。これは、オペレーティングシステムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-218">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="b9792-219">**[詳細設定**] ボタンをクリックすると、特定の登録済みファイルの種類に関連付けられているアクションが開いているかどうかを示すダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-219">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="b9792-220">使用できるファイルの種類のセットは、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b9792-220">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="b9792-221"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true`場合は、任意のドキュメントを開始し、<xref:System.Diagnostics.Process> コンポーネントを使用して、印刷などのファイルに対する操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-221">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="b9792-222"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `false`場合は、<xref:System.Diagnostics.Process> コンポーネントを使用して実行可能ファイルのみを開始できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-222">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="b9792-223">ClickOnce アプリケーションを起動するには、最初にアプリケーションをインストールした場所 (Web アドレスなど) に <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-223">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="b9792-224">ハードディスクにインストールされている場所を指定して ClickOnce アプリケーションを起動しないでください。</span><span class="sxs-lookup"><span data-stu-id="b9792-224">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadUserProfile : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-225">Windows ユーザー プロファイルをレジストリから読み込むかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-225">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span></span></summary>
        <value><span data-ttu-id="b9792-226">Windows ユーザー プロファイルを読み込む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-226"><see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-227">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-227">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-228">このプロパティは、プロセスがユーザー名、パスワード、およびドメインを使用して開始されている場合に参照されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-228">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="b9792-229">値が `true`場合、`HKEY_USERS` レジストリキーのユーザーのプロファイルが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="b9792-229">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="b9792-230">プロファイルの読み込みには時間がかかることがあります。</span><span class="sxs-lookup"><span data-stu-id="b9792-230">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="b9792-231">したがって、この値は、`HKEY_CURRENT_USER` レジストリキーの情報にアクセスする必要がある場合にのみ使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b9792-231">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="b9792-232">Windows Server 2003 および Windows 2000 では、プロセスが子プロセスを作成したかどうかにかかわらず、新しいプロセスが終了した後にプロファイルがアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-232">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="b9792-233">Windows XP では、新しいプロセスの後にプロファイルがアンロードされ、作成されたすべての子プロセスが終了しました。</span><span class="sxs-lookup"><span data-stu-id="b9792-233">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : System.Security.SecureString with get, set" Usage="System.Diagnostics.ProcessStartInfo.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-234">プロセスを開始するときに使用するユーザー パスワードを格納するセキュリティ文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-234">Gets or sets a secure string that contains the user password to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="b9792-235">プロセスの開始時に使用するユーザー パスワード。</span><span class="sxs-lookup"><span data-stu-id="b9792-235">The user password to use when starting the process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="b9792-236"><xref:System.Diagnostics.ProcessStartInfo.UserName%2A> と <xref:System.Diagnostics.ProcessStartInfo.Password%2A> が指定されている場合は、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-236">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="b9792-237">プロパティが設定されていない場合、既定の作業ディレクトリは%SYSTEMROOT%\system32. になります。</span><span class="sxs-lookup"><span data-stu-id="b9792-237">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-238">ユーザー資格情報を使用してプロセスを開始する場合は、<xref:System.Diagnostics.ProcessStartInfo> オブジェクトの <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>、<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>、および <xref:System.Diagnostics.ProcessStartInfo.Password%2A> の各プロパティを設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b9792-238">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="b9792-239"><xref:System.Security.SecureString> オブジェクトは、テキスト値があるという <xref:System.String> のオブジェクトに似ています。</span><span class="sxs-lookup"><span data-stu-id="b9792-239">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="b9792-240">ただし、<xref:System.Security.SecureString> オブジェクトの値は自動的に暗号化されます。アプリケーションが読み取り専用としてマークし、アプリケーションまたは .NET Framework のガベージコレクターによってコンピューターのメモリから削除できるようになるまで、この値を変更できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-240">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="b9792-241">セキュリティで保護された文字列の詳細と、このプロパティを設定するためにパスワードを取得する方法の例については、<xref:System.Security.SecureString> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b9792-241">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-242"><xref:System.Diagnostics.ProcessStartInfo.Password%2A> プロパティの値を指定する場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティを `false`にする必要があります。または、<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> メソッドが呼び出されたときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-242">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordInClearText : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-243">プロセスの開始時に使用する、クリア テキストのユーザーのパスワードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-243">Gets or sets the user password in clear text to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="b9792-244">クリア テキストのユーザー パスワード。</span><span class="sxs-lookup"><span data-stu-id="b9792-244">The user password in clear text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardError : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardError")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-245">アプリケーションのエラー出力を <see cref="P:System.Diagnostics.Process.StandardError" /> ストリームに書き込むかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-245">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></summary>
        <value><span data-ttu-id="b9792-246">エラー出力を <see langword="true" /> に書き込む場合は <see cref="P:System.Diagnostics.Process.StandardError" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-246"><see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-247">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-247">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-248"><xref:System.Diagnostics.Process> がテキストを標準エラーストリームに書き込む場合、そのテキストは通常、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-248">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="b9792-249"><xref:System.Diagnostics.Process.StandardError%2A> ストリームをリダイレクトすることにより、プロセスのエラー出力を操作または非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-249">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="b9792-250">たとえば、テキストをフィルター処理したり、異なる形式を設定したり、コンソールと指定したログファイルの両方に出力を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-250">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-251"><xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> を `true`に設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> を `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-251">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="b9792-252">それ以外の場合、<xref:System.Diagnostics.Process.StandardError%2A> ストリームからの読み取りでは、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-252">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="b9792-253">リダイレクトされた <xref:System.Diagnostics.Process.StandardError%2A> ストリームは、同期的または非同期的に読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-253">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="b9792-254"><xref:System.IO.StreamReader.Read%2A>、<xref:System.IO.StreamReader.ReadLine%2A>、<xref:System.IO.StreamReader.ReadToEnd%2A> などのメソッドは、プロセスのエラー出力ストリームに対して同期読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9792-254">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="b9792-255">これらの同期読み取り操作は、関連付けられた <xref:System.Diagnostics.Process> が <xref:System.Diagnostics.Process.StandardError%2A> ストリームに書き込むか、ストリームを閉じるまで完了しません。</span><span class="sxs-lookup"><span data-stu-id="b9792-255">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="b9792-256">これに対し、<xref:System.Diagnostics.Process.BeginErrorReadLine%2A> は、<xref:System.Diagnostics.Process.StandardError%2A> ストリームで非同期の読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="b9792-256">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="b9792-257">このメソッドは、ストリーム出力に対して指定されたイベントハンドラーを有効にし、すぐに呼び出し元に戻します。これにより、ストリーム出力がイベントハンドラーに送られている間に他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-257">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-258">非同期出力を処理するアプリケーションは、<xref:System.Diagnostics.Process.WaitForExit%2A?displayProperty=nameWithType> メソッドを呼び出して、出力バッファーがフラッシュされたことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-258">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A?displayProperty=nameWithType> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="b9792-259">同期読み取り操作では、<xref:System.Diagnostics.Process.StandardError%2A> ストリームから読み取った呼び出し元と、そのストリームに書き込む子プロセスとの間に依存関係が生じます。</span><span class="sxs-lookup"><span data-stu-id="b9792-259">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="b9792-260">これらの依存関係により、デッドロック状態が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-260">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="b9792-261">呼び出し元が子プロセスのリダイレクトされたストリームから読み取る場合は、子に依存します。</span><span class="sxs-lookup"><span data-stu-id="b9792-261">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="b9792-262">呼び出し元は、子がストリームに書き込むかストリームを閉じるまで、読み取り操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-262">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="b9792-263">子プロセスは、リダイレクトされたストリームを埋めるために十分なデータを書き込むときに、親に依存します。</span><span class="sxs-lookup"><span data-stu-id="b9792-263">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="b9792-264">子プロセスは、親が完全なストリームから読み取るか、ストリームを閉じるまで、次の書き込み操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-264">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="b9792-265">デッドロック状態は、呼び出し元と子プロセスが相互に操作を完了するのを待機していて、どちらも続行できない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b9792-265">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="b9792-266">呼び出し元と子プロセスの間の依存関係を評価することによって、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-266">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  

<span data-ttu-id="b9792-267">このセクションの最後の2つの例では、<xref:System.Diagnostics.Process.Start%2A> メソッドを使用して、 *Write500Lines*という名前の実行可能ファイルを起動します。</span><span class="sxs-lookup"><span data-stu-id="b9792-267">The last two examples in this section use the <xref:System.Diagnostics.Process.Start%2A> method to launch an executable named *Write500Lines.exe*.</span></span> <span data-ttu-id="b9792-268">次の例には、ソースコードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9792-268">The following example contains its source code.</span></span>

[!code-csharp[Executable launched by Process.Start](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/write500lines.cs)]
[!code-vb[Executable launched by Process.Start](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/write500lines.vb)]

<span data-ttu-id="b9792-269">次の例は、リダイレクトされたエラーストリームから読み取り、子プロセスが終了するまで待機する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b9792-269">The following example shows how to read from a redirected error stream and wait for the child process to exit.</span></span> <span data-ttu-id="b9792-270">`p.WaitForExit`する前に `p.StandardError.ReadToEnd` を呼び出すことによって、デッドロック状態を回避します。</span><span class="sxs-lookup"><span data-stu-id="b9792-270">It avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="b9792-271">デッドロック状態が発生するのは、親プロセスが `p.StandardError.ReadToEnd` 前に `p.WaitForExit` を呼び出し、子プロセスが、リダイレクトされたストリームを埋めるために十分なテキストを書き込む場合です。</span><span class="sxs-lookup"><span data-stu-id="b9792-271">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="b9792-272">親プロセスは、子プロセスが終了するまで無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-272">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="b9792-273">子プロセスは、親が完全な <xref:System.Diagnostics.Process.StandardError%2A> ストリームから読み取るのを無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-273">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>   

[!code-csharp[Reading from the error stream](~/samples/snippets/csharp/api/system.diagnostics/process/standarderror/stderror-sync.cs)]
[!code-vb[Reading from the error stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standarderror/stderror-sync.vb)]  
  
<span data-ttu-id="b9792-274">標準出力と標準エラーストリームの両方からすべてのテキストを読み取ると、同様の問題が発生します。</span><span class="sxs-lookup"><span data-stu-id="b9792-274">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="b9792-275">たとえば、 C#次のコードでは、両方のストリームに対して読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9792-275">The following C# code, for example, performs a read operation on both streams.</span></span> <span data-ttu-id="b9792-276"><xref:System.Diagnostics.Process.StandardError%2A> ストリームで非同期の読み取り操作を実行することによって、デッドロック状態を回避します。</span><span class="sxs-lookup"><span data-stu-id="b9792-276">It avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="b9792-277">デッドロック状態が発生するのは、親プロセスが `p.StandardOutput.ReadToEnd` 続けて `p.StandardError.ReadToEnd` を呼び出し、子プロセスがそのエラーストリームを埋めるために十分なテキストを書き込む場合です。</span><span class="sxs-lookup"><span data-stu-id="b9792-277">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="b9792-278">親プロセスは、子プロセスが <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームを閉じるまで無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-278">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="b9792-279">子プロセスは、親が完全な <xref:System.Diagnostics.Process.StandardError%2A> ストリームから読み取るのを無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-279">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
[!code-csharp[Reading from both streams](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-async.cs)]
[!code-vb[Reading from both streams](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-async.vb)]  

<span data-ttu-id="b9792-280">非同期の読み取り操作を使用すると、これらの依存関係とデッドロックの可能性を回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-280">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="b9792-281">または、2つのスレッドを作成し、各ストリームの出力を個別のスレッドで読み取ることによって、デッドロック状態を回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-281">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9792-282">次の例では、ユーザーが指定した引数と共に `net use` コマンドを使用して、ネットワークリソースをマップします。</span><span class="sxs-lookup"><span data-stu-id="b9792-282">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="b9792-283">次に、net コマンドの標準エラーストリームを読み取り、コンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b9792-283">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardInput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardInput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-284">アプリケーションの入力を <see cref="P:System.Diagnostics.Process.StandardInput" /> ストリームから読み取るかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-284">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span></span></summary>
        <value><span data-ttu-id="b9792-285"><see langword="true" /> から入力を読み取る場合は <see cref="P:System.Diagnostics.Process.StandardInput" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-285"><see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-286">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-286">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-287"><xref:System.Diagnostics.Process> は、標準入力ストリーム (通常はキーボード) から入力テキストを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-287">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="b9792-288"><xref:System.Diagnostics.Process.StandardInput%2A> ストリームをリダイレクトすることによって、プロセスの入力をプログラムで指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-288">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="b9792-289">たとえば、キーボード入力を使用する代わりに、指定されたファイルの内容または別のアプリケーションからの出力のテキストを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-289">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-290"><xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> を `true`に設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> を `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-290">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="b9792-291">それ以外の場合、<xref:System.Diagnostics.Process.StandardInput%2A> ストリームへの書き込みでは、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-291">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9792-292">次の例は、プロセスの <xref:System.Diagnostics.Process.StandardInput%2A> ストリームをリダイレクトする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b9792-292">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="b9792-293">`sort` コマンドは、テキスト入力の読み取りと並べ替えを行うコンソールアプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="b9792-293">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="b9792-294">この例では、リダイレクトされた入力を使用して `sort` コマンドを開始します。</span><span class="sxs-lookup"><span data-stu-id="b9792-294">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="b9792-295">次に、ユーザーにテキストの入力を求め、リダイレクトされた <xref:System.Diagnostics.Process.StandardInput%2A> ストリームを介して `sort` プロセスにテキストを渡します。</span><span class="sxs-lookup"><span data-stu-id="b9792-295">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="b9792-296">`sort` の結果は、コンソールでユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-296">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardOutput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardOutput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-297">アプリケーションのテキスト出力を <see cref="P:System.Diagnostics.Process.StandardOutput" /> ストリームに書き込むかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-297">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span></span></summary>
        <value><span data-ttu-id="b9792-298">出力を <see langword="true" /> に書き込む場合は <see cref="P:System.Diagnostics.Process.StandardOutput" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-298"><see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9792-299">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-299">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-300"><xref:System.Diagnostics.Process> が標準ストリームにテキストを書き込む場合、そのテキストは通常、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-300">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="b9792-301"><xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> を `true` に設定して <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームをリダイレクトすることで、プロセスの出力を操作または非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-301">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="b9792-302">たとえば、テキストをフィルター処理したり、異なる形式を設定したり、コンソールと指定したログファイルの両方に出力を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-302">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-303"><xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> を `true`に設定する場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> を `false` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-303">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="b9792-304">それ以外の場合、<xref:System.Diagnostics.Process.StandardOutput%2A> ストリームからの読み取りでは、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-304">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="b9792-305">リダイレクトされた <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームは、同期的または非同期的に読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b9792-305">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="b9792-306"><xref:System.IO.StreamReader.Read%2A>、<xref:System.IO.StreamReader.ReadLine%2A>、<xref:System.IO.StreamReader.ReadToEnd%2A> などのメソッドは、プロセスの出力ストリームに対して同期読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9792-306">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="b9792-307">これらの同期読み取り操作は、関連付けられた <xref:System.Diagnostics.Process> が <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームに書き込むか、ストリームを閉じるまで完了しません。</span><span class="sxs-lookup"><span data-stu-id="b9792-307">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="b9792-308">これに対し、<xref:System.Diagnostics.Process.BeginOutputReadLine%2A> は、<xref:System.Diagnostics.Process.StandardOutput%2A> ストリームで非同期の読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="b9792-308">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="b9792-309">このメソッドは、ストリーム出力に対して指定されたイベントハンドラー (<xref:System.Diagnostics.Process.OutputDataReceived>を参照) を有効にし、すぐに呼び出し元に戻します。これにより、ストリーム出力がイベントハンドラーに送られている間に、他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-309">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-310">非同期出力を処理するアプリケーションは、<xref:System.Diagnostics.Process.WaitForExit%2A> メソッドを呼び出して、出力バッファーがフラッシュされたことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-310">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="b9792-311">同期読み取り操作では、<xref:System.Diagnostics.Process.StandardOutput%2A> ストリームから読み取った呼び出し元と、そのストリームに書き込む子プロセスとの間に依存関係が生じます。</span><span class="sxs-lookup"><span data-stu-id="b9792-311">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="b9792-312">これらの依存関係により、デッドロック状態が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-312">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="b9792-313">呼び出し元が子プロセスのリダイレクトされたストリームから読み取る場合は、子に依存します。</span><span class="sxs-lookup"><span data-stu-id="b9792-313">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="b9792-314">呼び出し元は、子がストリームに書き込むかストリームを閉じるまで、読み取り操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-314">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="b9792-315">子プロセスは、リダイレクトされたストリームを埋めるために十分なデータを書き込むときに、親に依存します。</span><span class="sxs-lookup"><span data-stu-id="b9792-315">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="b9792-316">子プロセスは、親が完全なストリームから読み取るか、ストリームを閉じるまで、次の書き込み操作を待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-316">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="b9792-317">デッドロック状態は、呼び出し元と子プロセスが相互に操作を完了するのを待機していて、どちらも続行できない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b9792-317">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="b9792-318">呼び出し元と子プロセスの間の依存関係を評価することによって、デッドロックを回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-318">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
<span data-ttu-id="b9792-319">このセクションの最後の2つの例では、<xref:System.Diagnostics.Process.Start%2A> メソッドを使用して、 *Write500Lines*という名前の実行可能ファイルを起動します。</span><span class="sxs-lookup"><span data-stu-id="b9792-319">The last two examples in this section use the <xref:System.Diagnostics.Process.Start%2A> method to launch an executable named *Write500Lines.exe*.</span></span> <span data-ttu-id="b9792-320">次の例には、ソースコードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b9792-320">The following example contains its source code.</span></span>

[!code-csharp[Executable launched by Process.Start](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/write500lines.cs)]
[!code-vb[Executable launched by Process.Start](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/write500lines.vb)]

<span data-ttu-id="b9792-321">次の例は、リダイレクトされたストリームから読み取り、子プロセスが終了するまで待機する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b9792-321">The following example shows how to read from a redirected stream and wait for the child process to exit.</span></span> <span data-ttu-id="b9792-322">この例では、`p.WaitForExit`する前に `p.StandardOutput.ReadToEnd` を呼び出すことによって、デッドロック状態を回避します。</span><span class="sxs-lookup"><span data-stu-id="b9792-322">The example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="b9792-323">デッドロック状態が発生するのは、親プロセスが `p.StandardOutput.ReadToEnd` 前に `p.WaitForExit` を呼び出し、子プロセスが、リダイレクトされたストリームを埋めるために十分なテキストを書き込む場合です。</span><span class="sxs-lookup"><span data-stu-id="b9792-323">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="b9792-324">親プロセスは、子プロセスが終了するまで無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-324">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="b9792-325">子プロセスは、親が完全な <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームから読み取るのを無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-325">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  

[!code-csharp[Reading synchronously from a redirected output stream](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-sync.cs)]  
[!code-vb[Reading synchronously from a redirected output stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-sync.vb)] 

<span data-ttu-id="b9792-326">標準出力と標準エラーストリームの両方からすべてのテキストを読み取ると、同様の問題が発生します。</span><span class="sxs-lookup"><span data-stu-id="b9792-326">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="b9792-327">次の例では、両方のストリームに対して読み取り操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b9792-327">The following example performs a read operation on both streams.</span></span> <span data-ttu-id="b9792-328"><xref:System.Diagnostics.Process.StandardError%2A> ストリームで非同期の読み取り操作を実行することによって、デッドロック状態を回避します。</span><span class="sxs-lookup"><span data-stu-id="b9792-328">It avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="b9792-329">デッドロック状態が発生するのは、親プロセスが `p.StandardOutput.ReadToEnd` 続けて `p.StandardError.ReadToEnd` を呼び出し、子プロセスがそのエラーストリームを埋めるために十分なテキストを書き込む場合です。</span><span class="sxs-lookup"><span data-stu-id="b9792-329">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="b9792-330">親プロセスは、子プロセスが <xref:System.Diagnostics.Process.StandardOutput%2A> ストリームを閉じるまで無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-330">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="b9792-331">子プロセスは、親が完全な <xref:System.Diagnostics.Process.StandardError%2A> ストリームから読み取るのを無期限に待機します。</span><span class="sxs-lookup"><span data-stu-id="b9792-331">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>   
[!code-csharp[Reading from a redirected output and error stream](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-async.cs)]  
[!code-vb[Reading from a redirected output and error stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-async.vb)]    

<span data-ttu-id="b9792-332">非同期の読み取り操作を使用すると、これらの依存関係とデッドロックの可能性を回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-332">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="b9792-333">または、2つのスレッドを作成し、各ストリームの出力を個別のスレッドで読み取ることによって、デッドロック状態を回避できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-333">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-334">エラー出力に最適なエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-334">Gets or sets the preferred encoding for error output.</span></span></summary>
        <value><span data-ttu-id="b9792-335">エラー出力に最適なエンコーディングを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9792-335">An object that represents the preferred encoding for error output.</span></span> <span data-ttu-id="b9792-336">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-336">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-337"><xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> プロパティの値が `null`場合、プロセスではエラー出力に既定の標準エラーエンコーディングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-337">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="b9792-338">プロセスを開始する前に、<xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-338">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="b9792-339">このプロパティを設定しても、プロセスが指定されたエンコーディングを使用することは保証されません。プロセスは、サポートされているエンコーディングのみを使用します。</span><span class="sxs-lookup"><span data-stu-id="b9792-339">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="b9792-340">サポートされているエンコーディングを確認するには、アプリケーションをテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-340">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardInputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-341">標準入力に最適なエンコードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-341">Gets or sets the preferred encoding for standard input.</span></span></summary>
        <value><span data-ttu-id="b9792-342">標準入力の優先エンコーディングを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9792-342">An object that represents the preferred encoding for standard input.</span></span> <span data-ttu-id="b9792-343">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-343">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-344">`StandardInputEncoding` プロパティの値が `null`場合、プロセスでは標準入力に既定の標準入力エンコーディングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-344">If the value of the `StandardInputEncoding` property is `null`, the process uses the default standard input encoding for the standard input.</span></span> <span data-ttu-id="b9792-345">プロセスを開始する前に、`StandardInputEncoding` プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-345">The `StandardInputEncoding` property must be set before the process is started.</span></span> <span data-ttu-id="b9792-346">このプロパティを設定しても、プロセスが指定されたエンコーディングを使用することは保証されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-346">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="b9792-347">アプリケーションをテストして、プロセスがどのエンコーディングをサポートしているかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-347">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-348">標準出力に最適なエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-348">Gets or sets the preferred encoding for standard output.</span></span></summary>
        <value><span data-ttu-id="b9792-349">標準出力に最適なエンコーディングを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b9792-349">An object that represents the preferred encoding for standard output.</span></span> <span data-ttu-id="b9792-350">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-350">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-351"><xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> プロパティの値が `null`場合、プロセスは標準出力に既定の標準出力エンコーディングを使用します。</span><span class="sxs-lookup"><span data-stu-id="b9792-351">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="b9792-352">プロセスを開始する前に、<xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-352">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="b9792-353">このプロパティを設定しても、プロセスが指定されたエンコーディングを使用することは保証されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-353">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="b9792-354">アプリケーションをテストして、プロセスがどのエンコーディングをサポートしているかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-354">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-355">プロセスを開始するときに使用するユーザー名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-355">Gets or sets the user name to use when starting the process.</span></span> <span data-ttu-id="b9792-356">UPN 形式 (<paramref name="user" />@<paramref name="DNS_domain_name" />) を使用する場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> プロパティを <see langword="null" /> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-356">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="b9792-357">プロセスの開始時に使用するユーザー名。</span><span class="sxs-lookup"><span data-stu-id="b9792-357">The user name to use when starting the process.</span></span> <span data-ttu-id="b9792-358">UPN 形式 (<paramref name="user" />@<paramref name="DNS_domain_name" />) を使用する場合は、<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> プロパティを <see langword="null" /> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-358">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="b9792-359"><xref:System.Diagnostics.ProcessStartInfo.UserName%2A> と <xref:System.Diagnostics.ProcessStartInfo.Password%2A> が指定されている場合は、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-359">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="b9792-360">プロパティが設定されていない場合、既定の作業ディレクトリは%SYSTEMROOT%\system32. になります。</span><span class="sxs-lookup"><span data-stu-id="b9792-360">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="b9792-361"><xref:System.Diagnostics.ProcessStartInfo.UserName%2A> プロパティが `null` または空の文字列でない場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> プロパティを `false`する必要があります。または、<xref:System.InvalidOperationException> メソッドが呼び出されたときに <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-361">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseShellExecute : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessUseShellExecute")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-362">プロセスの起動にオペレーティング システムのシェルを使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-362">Gets or sets a value indicating whether to use the operating system shell to start the process.</span></span></summary>
        <value><span data-ttu-id="b9792-363">プロセスを起動するときにシェルを使用する場合は <see langword="true" />。プロセスを実行可能ファイルから直接作成する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9792-363"><see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span></span> <span data-ttu-id="b9792-364">既定では、.NET Core アプリで .NET Framework アプリと <see langword="false" /> に <see langword="true" /> ます。</span><span class="sxs-lookup"><span data-stu-id="b9792-364">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[## Remarks

<span data-ttu-id="b9792-365">このプロパティを `false` に設定すると、入力ストリーム、出力ストリーム、およびエラーストリームをリダイレクトできます。</span><span class="sxs-lookup"><span data-stu-id="b9792-365">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>

<span data-ttu-id="b9792-366">このコンテキスト (`UseShellExecute`) の "シェル" は、コマンドシェル (`bash` や `sh`など) ではなくグラフィカルシェル (Windows シェルに似ています) を参照し、ユーザーがグラフィカルなアプリケーションを起動したり、ドキュメントを開いたりできるようにします。</span><span class="sxs-lookup"><span data-stu-id="b9792-366">The word "shell" in this context (`UseShellExecute`) refers to a graphical shell (similar to the Windows shell) rather than command shells (for example, `bash` or `sh`) and lets users launch graphical applications or open documents.</span></span>

> [!NOTE]
> <span data-ttu-id="b9792-367"><xref:System.Diagnostics.ProcessStartInfo.UserName> プロパティが `null` でも空の文字列でもない場合、または <xref:System.InvalidOperationException> メソッドが呼び出されたときに <xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType> がスローされる場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> を `false` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-367"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType> method is called.</span></span>

<span data-ttu-id="b9792-368">オペレーティングシステムシェルを使用してプロセスを開始する場合は、任意のドキュメント (既定のオープンアクションを持つ実行可能ファイルに関連付けられている登録済みのファイルの種類) を開始し、<xref:System.Diagnostics.Process> オブジェクトを使用して、印刷などのファイルに対する操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-368">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="b9792-369"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> が `false`場合は、<xref:System.Diagnostics.Process> オブジェクトを使用して実行可能ファイルだけを開始できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-369">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>

> [!NOTE]
> <span data-ttu-id="b9792-370"><xref:System.Diagnostics.ProcessStartInfo.ErrorDialog> プロパティを `true`に設定した場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> を `true` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-370"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog> property to `true`.</span></span>

<span data-ttu-id="b9792-371"><xref:System.Diagnostics.ProcessStartInfo.WindowStyle> を <xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>に設定した場合は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> を `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-371">If you set the <xref:System.Diagnostics.ProcessStartInfo.WindowStyle> to <xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>, <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be set to `true`.</span></span>

### <a name="workingdirectory"></a><span data-ttu-id="b9792-372">WorkingDirectory</span><span class="sxs-lookup"><span data-stu-id="b9792-372">WorkingDirectory</span></span>

<span data-ttu-id="b9792-373"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> プロパティの動作は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> プロパティの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b9792-373">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> property.</span></span> <span data-ttu-id="b9792-374"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> が `true`場合、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> プロパティは実行可能ファイルの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-374">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property specifies the location of the executable.</span></span> <span data-ttu-id="b9792-375"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> が空の文字列の場合は、現在のディレクトリに実行可能ファイルが含まれていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="b9792-375">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> is an empty string, it is assumed that the current directory contains the executable.</span></span>

<span data-ttu-id="b9792-376"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> が `false`場合、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> プロパティは実行可能ファイルの検索には使用されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-376">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property is not used to find the executable.</span></span> <span data-ttu-id="b9792-377">代わりに、開始されたプロセスによってのみ使用され、新しいプロセスのコンテキスト内でのみ意味を持ちます。</span><span class="sxs-lookup"><span data-stu-id="b9792-377">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="b9792-378"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> が `false`場合、<xref:System.Diagnostics.ProcessStartInfo.FileName> プロパティには、実行可能ファイルへの完全修飾パスか、PATH 環境変数で指定されたフォルダー内で検索を試行する単純な実行可能ファイル名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-378">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>

## Examples

[!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
[!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
[!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]

]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b9792-379">ユニバーサル Windows プラットフォーム (UWP) アプリで値を <see langword="true" /> に設定することが試みられます。</span><span class="sxs-lookup"><span data-stu-id="b9792-379">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span></span></exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessVerb")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-380"><see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したアプリケーションまたはドキュメントを開くときに使用する動詞を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-380">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="b9792-381">プロセスが開くファイルを使用して実行するアクション。</span><span class="sxs-lookup"><span data-stu-id="b9792-381">The action to take with the file that the process opens.</span></span> <span data-ttu-id="b9792-382">既定では、処理が行われないことを示す、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b9792-382">The default is an empty string (""), which signifies no action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-383">各ファイル名拡張子には、独自の一連の動詞があります。これは、<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> プロパティを使用して取得できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-383">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="b9792-384">たとえば、"`print`" 動詞は、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>を使用して指定されたドキュメントを印刷します。</span><span class="sxs-lookup"><span data-stu-id="b9792-384">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="b9792-385">既定の動詞は、空の文字列 ("") を使用して指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-385">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="b9792-386">動詞の例としては、"Edit"、"Open"、"OpenAsReadOnly"、"Print"、"Printto" などがあります。</span><span class="sxs-lookup"><span data-stu-id="b9792-386">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="b9792-387"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> プロパティによって返される動詞のセットに出現する動詞のみを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-387">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="b9792-388"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> プロパティを使用する場合は、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティの値を設定するときに、ファイル名拡張子を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-388">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="b9792-389"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> プロパティの値を手動で入力した場合、ファイル名に拡張子を付ける必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-389">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9792-390">次のコード例では、指定された動詞とファイル名を使用して新しいプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="b9792-390">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="b9792-391">このコード例は、<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> プロパティ用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b9792-391">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : string[]" Usage="System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-392"><see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで指定したファイルの種類に関連付けられている動詞のセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="b9792-392">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="b9792-393"><see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> プロパティで示されたファイルにシステムが適用できるアクション。</span><span class="sxs-lookup"><span data-stu-id="b9792-393">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9792-394"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> プロパティを使用すると、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティによって指定されたファイルと共に使用できる動詞を特定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-394">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="b9792-395"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> プロパティは、set 内の任意の動詞の値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="b9792-395">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="b9792-396">動詞の例としては、"Edit"、"Open"、"OpenAsReadOnly"、"Print"、"Printto" などがあります。</span><span class="sxs-lookup"><span data-stu-id="b9792-396">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="b9792-397"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> プロパティを使用する場合は、<xref:System.Diagnostics.ProcessStartInfo.FileName%2A> プロパティの値を設定するときに、ファイル名拡張子を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-397">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="b9792-398">ファイル名拡張子によって、使用可能な動詞のセットが決まります。</span><span class="sxs-lookup"><span data-stu-id="b9792-398">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9792-399">次のコード例では、選択したファイル名に対して定義された動詞を表示します。</span><span class="sxs-lookup"><span data-stu-id="b9792-399">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="b9792-400">定義されている動詞のいずれかを選択した場合、この例では、選択した動詞と入力ファイル名を使用して新しいプロセスを開始します。</span><span class="sxs-lookup"><span data-stu-id="b9792-400">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Diagnostics.ProcessWindowStyle with get, set" Usage="System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWindowStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-401">プロセスを起動するときに使用するウィンドウの状態を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-401">Gets or sets the window state to use when the process is started.</span></span></summary>
        <value><span data-ttu-id="b9792-402">プロセスの起動時のウィンドウを、最大化、最小化、通常 (最大化も最小化もしていない状態)、または非表示のどの状態にするかを示す列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="b9792-402">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span></span> <span data-ttu-id="b9792-403">既定では、 <see langword="Normal" />です。</span><span class="sxs-lookup"><span data-stu-id="b9792-403">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b9792-404">ウィンドウ スタイルが <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 列挙メンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-404">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWorkingDirectory")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9792-405"><see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> プロパティが <see langword="false" /> の場合に、開始するプロセスの作業ディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-405">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span></span> <span data-ttu-id="b9792-406"><see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> が <see langword="true" /> の場合に、開始するプロセスを含むディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-406">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span></span></summary>
        <value><span data-ttu-id="b9792-407"><see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> が <see langword="true" /> の場合、起動するプロセスがあるディレクトリの完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="b9792-407">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span></span> <span data-ttu-id="b9792-408"><see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> プロパティが <see langword="false" /> の場合、開始するプロセスの作業ディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="b9792-408">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span></span> <span data-ttu-id="b9792-409">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b9792-409">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="b9792-410"><xref:System.Diagnostics.ProcessStartInfo.UserName%2A> と <xref:System.Diagnostics.ProcessStartInfo.Password%2A> が指定されている場合は、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9792-410">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="b9792-411">プロパティが設定されていない場合、既定の作業ディレクトリは%SYSTEMROOT%\system32. になります。</span><span class="sxs-lookup"><span data-stu-id="b9792-411">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="b9792-412">ディレクトリが既にシステムパス変数の一部である場合は、このプロパティでディレクトリの場所を繰り返す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="b9792-412">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="b9792-413"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティの動作は、<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> の `false`時よりも <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true` 場合に異なります。</span><span class="sxs-lookup"><span data-stu-id="b9792-413">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="b9792-414"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true`場合、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティは実行可能ファイルの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="b9792-414">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="b9792-415"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> が空の文字列の場合は、実行可能ファイルを格納するために現在のディレクトリが認識されます。</span><span class="sxs-lookup"><span data-stu-id="b9792-415">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9792-416"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `true`場合、実行可能ファイルを起動するアプリケーションの作業ディレクトリは、実行可能ファイルの作業ディレクトリでもあります。</span><span class="sxs-lookup"><span data-stu-id="b9792-416">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="b9792-417"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> が `false`場合、<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> プロパティは実行可能ファイルの検索には使用されません。</span><span class="sxs-lookup"><span data-stu-id="b9792-417">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="b9792-418">代わりに、その値は、開始されたプロセスに適用され、新しいプロセスのコンテキスト内でのみ意味を持ちます。</span><span class="sxs-lookup"><span data-stu-id="b9792-418">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
