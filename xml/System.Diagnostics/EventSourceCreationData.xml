<Type Name="EventSourceCreationData" FullName="System.Diagnostics.EventSourceCreationData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f016b4cd3f5dfb1ff546d3e717138ecfc0bd68e0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137666" /></Metadata><TypeSignature Language="C#" Value="public class EventSourceCreationData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSourceCreationData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSourceCreationData" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSourceCreationData" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSourceCreationData" />
  <TypeSignature Language="F#" Value="type EventSourceCreationData = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d445f-101">ローカル コンピューターまたはリモート コンピューターでイベント ログ ソースを作成するために使用される構成設定を表します。</span><span class="sxs-lookup"><span data-stu-id="d445f-101">Represents the configuration settings used to create an event log source on the local computer or a remote computer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-102"><xref:System.Diagnostics.EventSourceCreationData> クラスを使用して、ローカライズされたエントリをイベントログに書き込むための新しいソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-102">Use the <xref:System.Diagnostics.EventSourceCreationData> class to configure a new source for writing localized entries to an event log.</span></span> <span data-ttu-id="d445f-103">このクラスを使用して、イベントログから読み取る必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d445f-103">It is not necessary to use this class to read from an event log.</span></span>  
  
 <span data-ttu-id="d445f-104">このクラスは、新しいイベントソースとそれに関連付けられているイベントログの構成設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-104">This class defines the configuration settings for a new event source and its associated event log.</span></span> <span data-ttu-id="d445f-105">関連付けられているイベントログは、ローカルコンピューターまたはリモートコンピューターに配置できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-105">The associated event log can be on the local computer or a remote computer.</span></span> <span data-ttu-id="d445f-106">ローカルコンピューター上の新規または既存のイベントログの新しいソースを作成するには、<xref:System.Diagnostics.EventSourceCreationData> の <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> と <xref:System.Diagnostics.EventSourceCreationData.Source%2A> のプロパティを設定し、<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d445f-106">To create a new source for a new or existing event log on the local computer, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.Source%2A> properties of an <xref:System.Diagnostics.EventSourceCreationData> and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d445f-107">このメソッドは、<xref:System.Diagnostics.EventSourceCreationData.Source%2A> プロパティで指定したイベントソースを作成し、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>で指定されたイベントログに登録します。</span><span class="sxs-lookup"><span data-stu-id="d445f-107">This method creates the event source you specify in the <xref:System.Diagnostics.EventSourceCreationData.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>.</span></span> <span data-ttu-id="d445f-108">この動作は、<xref:System.Diagnostics.EventLogInstaller> クラスを使用してイベントログのイベントソースを登録することと似ています。</span><span class="sxs-lookup"><span data-stu-id="d445f-108">This behavior is similar to using the <xref:System.Diagnostics.EventLogInstaller> class to register an event source for an event log.</span></span>  
  
 <span data-ttu-id="d445f-109">イベントログにイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドと <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-109">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="d445f-110">イベントを書き込むには、イベントソースを指定する必要があります。ソースとの最初のエントリを書き込む前に、イベントソースを作成して構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-110">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="d445f-111">アプリケーションのインストール時に新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-111">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="d445f-112">これにより、オペレーティングシステムが登録済みのイベントソースとその構成の一覧を更新できるようになります。</span><span class="sxs-lookup"><span data-stu-id="d445f-112">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="d445f-113">オペレーティングシステムがイベントソースの一覧を更新しておらず、新しいソースでイベントを作成しようとすると、書き込み操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="d445f-113">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="d445f-114">新しいソースを構成するには、<xref:System.Diagnostics.EventLogInstaller>を使用するか、<xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-114">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="d445f-115">新しいイベントソースを作成するには、コンピューターの管理者権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="d445f-115">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="d445f-116">既存のイベントログまたは新しいイベントログのイベントソースを作成できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-116">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="d445f-117">新しいイベントログ用に新しいソースを作成すると、そのログのソースが登録されますが、最初のエントリが書き込まれるまでログは作成されません。</span><span class="sxs-lookup"><span data-stu-id="d445f-117">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="d445f-118">各ソースは、一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-118">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="d445f-119">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-119">For example, your application might need multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="d445f-120">既存のソースの構成の詳細を変更するには、ソースを削除してから、新しい構成を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-120">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="d445f-121">他のアプリケーションまたはコンポーネントが既存のソースを使用する場合は、既存のソースを削除するのではなく、更新された構成で新しいソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-121">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
 <span data-ttu-id="d445f-122">イベントソースは、イベントカテゴリとメッセージ文字列のローカライズされたリソースに登録できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-122">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="d445f-123">アプリケーションでは、実際の文字列を指定するのではなく、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-123">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="d445f-124">イベントビューアーは、リソース識別子を使用して、ローカライズされたリソースファイルの対応する文字列を検索し、現在の言語設定に基づいて表示します。</span><span class="sxs-lookup"><span data-stu-id="d445f-124">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="d445f-125">イベントカテゴリ、メッセージ、およびパラメーター挿入文字列用に別のファイルを登録するか、3種類のすべての文字列に同じリソースファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-125">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="d445f-126"><xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> プロパティを使用して、ローカライズされたエントリをイベントログに書き込むようにソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-126">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="d445f-127">アプリケーションが文字列値をイベントログに直接書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d445f-127">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="d445f-128">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-128">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="d445f-129"><xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドは、指定された文字列をイベントログに直接書き込みます。ローカライズ可能なメッセージリソースファイルは使用しません。</span><span class="sxs-lookup"><span data-stu-id="d445f-129">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="d445f-130">ローカライズされたメッセージリソースファイルを使用してイベントを書き込むには、<xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-130">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="d445f-131">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-131">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="d445f-132">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-132">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="d445f-133">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、そのソースを使用して、イベントログに直接文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-133">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-134">次のコード例では、コマンドライン引数からイベントソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-134">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="d445f-135">入力引数は、イベントソース名、イベントログ名、コンピューター名、およびイベントメッセージリソースファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-135">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="d445f-136">このコード例では、ソースが既存のイベントソースと競合していないことを確認し、指定されたイベントログの新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-136">The code example verifies that the source does not conflict with an existing event source, and then creates the new event source for the specified event log.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#1)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#1)]
 [!code-vb[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-137">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-137">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-138">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-138">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSourceCreationData (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSourceCreationData(System::String ^ source, System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventSourceCreationData : string * string -&gt; System.Diagnostics.EventSourceCreationData" Usage="new System.Diagnostics.EventSourceCreationData (source, logName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d445f-139">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="d445f-139">The name to register with the event log as a source of entries.</span></span></param>
        <param name="logName"><span data-ttu-id="d445f-140">ソースのエントリが書き込まれるログの名前。</span><span class="sxs-lookup"><span data-stu-id="d445f-140">The name of the log to which entries from the source are written.</span></span></param>
        <summary><span data-ttu-id="d445f-141">指定したイベント ソースおよびイベント ログ名を使用して、<see cref="T:System.Diagnostics.EventSourceCreationData" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d445f-141">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSourceCreationData" /> class with a specified event source and event log name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-142">イベントログにエントリを書き込むには、最初にイベントログのイベントソースを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-142">To write entries to an event log, you must first create an event source for the event log.</span></span> <span data-ttu-id="d445f-143">新しいソースを登録するには、<xref:System.Diagnostics.EventSourceCreationData> インスタンスを初期化し、アプリケーションのインスタンスのプロパティを構成して、<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d445f-143">To register a new source, initialize an <xref:System.Diagnostics.EventSourceCreationData> instance, configure the instance properties for your application, and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d445f-144">ソースが登録されたら、<xref:System.Diagnostics.EventLog.WriteEvent%2A> または <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドを使用して、ソースからエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-144">After the source is registered, you can write entries from the source using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods.</span></span>  
  
 <span data-ttu-id="d445f-145">イベントソースは、イベントカテゴリとメッセージ文字列のローカライズされたリソースに登録できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-145">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="d445f-146">アプリケーションでは、実際の文字列を指定するのではなく、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-146">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="d445f-147">イベントビューアーは、リソース識別子を使用して、ローカライズされたリソースファイルの対応する文字列を検索し、現在の言語設定に基づいて表示します。</span><span class="sxs-lookup"><span data-stu-id="d445f-147">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="d445f-148">イベントカテゴリ、メッセージ、およびパラメーター挿入文字列用に別のファイルを登録するか、3種類のすべての文字列に同じリソースファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-148">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="d445f-149"><xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>、および <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> プロパティを使用して、ローカライズされたエントリをイベントログに書き込むようにソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-149">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="d445f-150">アプリケーションが文字列値をイベントログに直接書き込む場合は、これらのプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d445f-150">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="d445f-151">ソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-151">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="d445f-152">アプリケーションがリソース識別子と文字列値の両方を使用してエントリを書き込む場合は、2つの異なるソースを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-152">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="d445f-153">たとえば、リソースファイルを使用して1つのソースを構成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドで使用して、リソース識別子を使用してエントリをイベントログに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-153">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="d445f-154">次に、リソースファイルを含まない別のソースを作成し、そのソースを <xref:System.Diagnostics.EventLog.WriteEntry%2A> メソッドで使用して、文字列をイベントログに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-154">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log.</span></span>  
  
 <span data-ttu-id="d445f-155">次の表に、<xref:System.Diagnostics.EventSourceCreationData>のプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="d445f-155">The following table shows initial property values for an <xref:System.Diagnostics.EventSourceCreationData>.</span></span>  
  
|<span data-ttu-id="d445f-156">プロパティ</span><span class="sxs-lookup"><span data-stu-id="d445f-156">Property</span></span>|<span data-ttu-id="d445f-157">初期値</span><span class="sxs-lookup"><span data-stu-id="d445f-157">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventSourceCreationData.Source%2A>|<span data-ttu-id="d445f-158">`source` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d445f-158">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>|<span data-ttu-id="d445f-159">`logName` パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d445f-159">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>|<span data-ttu-id="d445f-160">ローカルコンピューター (".")。</span><span class="sxs-lookup"><span data-stu-id="d445f-160">The local computer (".").</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>|<span data-ttu-id="d445f-161">0</span><span class="sxs-lookup"><span data-stu-id="d445f-161">Zero</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>|<span data-ttu-id="d445f-162">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="d445f-162">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>|<span data-ttu-id="d445f-163">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="d445f-163">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>|<span data-ttu-id="d445f-164">`null` (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="d445f-164">`null` (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d445f-165">次のコード例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d445f-165">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="d445f-166">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-166">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="d445f-167">最後に、コード例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-167">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="d445f-168">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-168">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="d445f-169">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="d445f-169">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="d445f-170">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-170">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-171">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-171">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-172">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-172">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.LogName" />
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventSourceCreationData.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-173">カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-173">Gets or sets the number of categories in the category resource file.</span></span></summary>
        <value><span data-ttu-id="d445f-174">カテゴリ リソース ファイル内のカテゴリの数。</span><span class="sxs-lookup"><span data-stu-id="d445f-174">The number of categories in the category resource file.</span></span> <span data-ttu-id="d445f-175">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="d445f-175">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-176"><xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> プロパティと <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> プロパティを使用して、ローカライズされたカテゴリ文字列を持つイベントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-176">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="d445f-177">イベントを記述するときにカテゴリを指定すると、イベントビューアーによってイベントエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-177">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="d445f-178">イベントログカテゴリは、イベントをフィルター処理したり、イベントに関する詳細情報を提供したりするためのアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="d445f-178">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="d445f-179">たとえば、アプリケーションでは、さまざまなコンポーネントまたは異なる操作に対して個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-179">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="d445f-180">イベントカテゴリは省略可能です。アプリケーションでカテゴリを使用しない場合は、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> と <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> のプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="d445f-180">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="d445f-181">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、プラットフォーム SDK ドキュメントの「Message Compiler」 ( [https://msdn.microsoft.com](https://msdn.microsoft.com/)) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d445f-181">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [https://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-182">次のコード例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d445f-182">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="d445f-183">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-183">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="d445f-184">最後に、コード例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-184">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="d445f-185">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-185">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="d445f-186">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="d445f-186">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="d445f-187">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-187">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d445f-188">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="d445f-188">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-189">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-189">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-190">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-190">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-191">ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-191">Gets or sets the path of the resource file that contains category strings for the source.</span></span></summary>
        <value><span data-ttu-id="d445f-192">カテゴリ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="d445f-192">The path of the category resource file.</span></span> <span data-ttu-id="d445f-193">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="d445f-193">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-194"><xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> プロパティと <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> プロパティを使用して、ローカライズされたカテゴリ文字列を持つイベントを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-194">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="d445f-195">イベントを記述するときにカテゴリを指定すると、イベントビューアーによってイベントエントリのカテゴリが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-195">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="d445f-196">イベントログカテゴリは、イベントをフィルター処理したり、イベントに関する詳細情報を提供したりするためのアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="d445f-196">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="d445f-197">たとえば、アプリケーションでは、さまざまなコンポーネントまたは異なる操作に対して個別のカテゴリを定義できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-197">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="d445f-198">イベントカテゴリは省略可能です。アプリケーションでカテゴリを使用しない場合は、<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> と <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> のプロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="d445f-198">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="d445f-199">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、プラットフォーム SDK ドキュメントの「Message Compiler」 ( [https://msdn.microsoft.com](https://msdn.microsoft.com/)) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d445f-199">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [https://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-200">次のコード例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d445f-200">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="d445f-201">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-201">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="d445f-202">最後に、コード例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-202">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="d445f-203">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-203">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="d445f-204">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="d445f-204">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="d445f-205">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-205">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-206">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-206">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-207">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-207">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.LogName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogName : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.LogName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-208">ソースがエントリを書き込むイベント ログの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-208">Gets or sets the name of the event log to which the source writes entries.</span></span></summary>
        <value><span data-ttu-id="d445f-209">イベント ログの名前。</span><span class="sxs-lookup"><span data-stu-id="d445f-209">The name of the event log.</span></span> <span data-ttu-id="d445f-210">ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-210">This can be Application, System, or a custom log name.</span></span> <span data-ttu-id="d445f-211">既定値は "Application" です。</span><span class="sxs-lookup"><span data-stu-id="d445f-211">The default value is "Application."</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-212"><xref:System.Diagnostics.EventSourceCreationData.LogName%2A> プロパティを使用して、アプリケーションが新しいソースを使用してエントリを書き込むイベントログを識別します。</span><span class="sxs-lookup"><span data-stu-id="d445f-212">Use the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to identify the event log that your application writes entries to using the new source.</span></span> <span data-ttu-id="d445f-213">イベントログには、新しいログまたは既存のログを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d445f-213">The event log can be a new log or an existing log.</span></span> <span data-ttu-id="d445f-214">アプリケーションとサービスは、アプリケーションログまたはカスタムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-214">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="d445f-215">デバイスドライバーは、システムログに書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-215">Device drivers should write to the System log.</span></span> <span data-ttu-id="d445f-216"><xref:System.Diagnostics.EventSourceCreationData.LogName%2A> プロパティを明示的に設定しない場合、イベントログの既定値はアプリケーションログになります。</span><span class="sxs-lookup"><span data-stu-id="d445f-216">If you do not explicitly set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d445f-217">セキュリティログは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d445f-217">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="d445f-218">新しいソースの既存のログを対象にするには、[<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>] プロパティを既存のイベントログ名に設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-218">To target an existing log for the new source, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to the existing event log name.</span></span> <span data-ttu-id="d445f-219">ソースの新しいイベントログを作成するには、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-219">To create a new event log for the source, you must set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property.</span></span> <span data-ttu-id="d445f-220">イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '\*'、'?'、または '\\' を含めないでください。</span><span class="sxs-lookup"><span data-stu-id="d445f-220">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span> <span data-ttu-id="d445f-221">イベントログ名の最初の8文字は、指定したコンピューター上のイベントログの既存の名前の最初の8文字と異なる必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-221">The first 8 characters of the event log name must be different from the first 8 characters of existing names of event logs on the specified computer.</span></span>  
  
 <span data-ttu-id="d445f-222">オペレーティング システムではイベント ログはファイルとして保存されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-222">The operating system stores event logs as files.</span></span> <span data-ttu-id="d445f-223"><xref:System.Diagnostics.EventLogInstaller> または <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法を使用して新しいイベントログを作成する場合、関連付けられているファイルは、指定したコンピューターの%SystemRoot%\System32\Config ディレクトリに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-223">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="d445f-224">ファイル名を設定するには、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A> プロパティの最初の8文字に ".evt" というファイル名拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="d445f-224">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property with the ".evt" file name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-225">次のコード例では、コマンドライン引数からイベントソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-225">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="d445f-226">入力引数は、イベントソース名、イベントログ名、コンピューター名、およびイベントメッセージリソースファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-226">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="d445f-227">この例は、<xref:System.Diagnostics.EventSourceCreationData> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="d445f-227">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-228">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-228">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-229">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-229">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-230">イベント ソースを登録するコンピューターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-230">Gets or sets the name of the computer on which to register the event source.</span></span></summary>
        <value><span data-ttu-id="d445f-231">イベント ソースを登録するシステムの名前。</span><span class="sxs-lookup"><span data-stu-id="d445f-231">The name of the system on which to register the event source.</span></span> <span data-ttu-id="d445f-232">既定値はローカル コンピューター (".") です。</span><span class="sxs-lookup"><span data-stu-id="d445f-232">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-233"><xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 値を空の文字列にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="d445f-233">The <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="d445f-234">コンピューター名が明示的に設定されていない場合は、既定でローカルコンピューター (".") に設定されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-234">If the machine name is not explicitly set, it defaults to the local computer (".").</span></span>  
  
 <span data-ttu-id="d445f-235">リモートコンピューターにソースを登録する場合、十分なアクセス許可を持つレジストリ値を書き込むには、そのコンピューターの管理者権限を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-235">When registering a source on a remote computer, you must have administrative rights on that computer to write the registry values with sufficient permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-236">次のコード例では、コマンドライン引数からイベントソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-236">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="d445f-237">入力引数は、イベントソース名、イベントログ名、コンピューター名、およびイベントメッセージリソースファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-237">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="d445f-238">この例は、<xref:System.Diagnostics.EventSourceCreationData> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="d445f-238">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d445f-239">コンピューター名が無効です。</span><span class="sxs-lookup"><span data-stu-id="d445f-239">The computer name is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-240">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-240">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-241">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-241">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-242">ソースのメッセージ書式指定文字列が格納されたメッセージ リソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-242">Gets or sets the path of the message resource file that contains message formatting strings for the source.</span></span></summary>
        <value><span data-ttu-id="d445f-243">メッセージ リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="d445f-243">The path of the message resource file.</span></span> <span data-ttu-id="d445f-244">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="d445f-244">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-245">ローカライズされたイベントメッセージを書き込むようにイベントログソースを構成するには、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-245">Use the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="d445f-246">イベントメッセージは、ユーザーにイベントを記述するアプリケーション定義の文字列です。</span><span class="sxs-lookup"><span data-stu-id="d445f-246">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="d445f-247">アプリケーションでは、リソース識別子を使用してイベントログエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-247">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="d445f-248">リソース識別子は、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>にあるメッセージにインデックスを付けます。</span><span class="sxs-lookup"><span data-stu-id="d445f-248">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>.</span></span> <span data-ttu-id="d445f-249">イベントビューアーは、リソース識別子を使用して、ローカライズされたメッセージリソースファイルから、現在の言語設定に基づいて、対応する文字列を検索して表示します。</span><span class="sxs-lookup"><span data-stu-id="d445f-249">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized message resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="d445f-250">イベントソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-250">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="d445f-251"><xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用して、メッセージリソースファイルで構成されたソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-251">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="d445f-252">アプリケーションで、ローカライズされたリソースファイル内のリソース識別子を使用せずに、イベントメッセージ文字列を直接書き込む場合は、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="d445f-252">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="d445f-253">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、プラットフォーム SDK ドキュメントの「Message Compiler」 ( [https://msdn.microsoft.com](https://msdn.microsoft.com/)) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d445f-253">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [https://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-254">次のコード例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d445f-254">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="d445f-255">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-255">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="d445f-256">最後に、コード例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-256">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="d445f-257">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-257">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="d445f-258">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="d445f-258">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="d445f-259">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-259">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-260">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-260">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-261">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-262">ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-262">Gets or sets the path of the resource file that contains message parameter strings for the source.</span></span></summary>
        <value><span data-ttu-id="d445f-263">パラメーター リソース ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="d445f-263">The path of the parameter resource file.</span></span> <span data-ttu-id="d445f-264">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="d445f-264">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-265"><xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> プロパティを使用して、挿入されたパラメーター文字列を使用してローカライズされたイベントメッセージを書き込むようにイベントログソースを構成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-265">Use the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="d445f-266"><xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> プロパティで指定したローカライズされた各イベントメッセージには、挿入文字列のプレースホルダーを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-266">Each localized event message specified in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="d445f-267">これらのプレースホルダーは、イベントメッセージ内の言語に依存しない文字列の位置とリソース識別子を指定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d445f-267">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="d445f-268">イベントビューアーは、<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> の対応する文字列を使用してプレースホルダーを塗りつぶし、ローカライズされたイベントエントリのイベントログメッセージを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-268">The Event Viewer fills in the placeholders using the corresponding strings from the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="d445f-269">たとえば、メッセージテキストファイルの次のセクションでは、パラメータープレースホルダーを含む文字列を定義しています。</span><span class="sxs-lookup"><span data-stu-id="d445f-269">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="d445f-270">パラメーターリソースファイル内では、次に示すように、プレースホルダーに対応するリソース識別子を使用して挿入文字列を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-270">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="d445f-271">イベントソースは、ローカライズされたエントリを書き込むか、または直接文字列を書き込むために構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-271">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="d445f-272"><xref:System.Diagnostics.EventLog.WriteEvent%2A> メソッドを使用して、メッセージリソースファイルで構成されたソースのローカライズされたエントリを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="d445f-272">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="d445f-273">アプリケーションでイベントメッセージ文字列をイベントログに直接書き込む場合、または <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> プロパティにパラメーター挿入プレースホルダーを含むメッセージが含まれていない場合は、<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> プロパティを設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="d445f-273">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="d445f-274">イベントメッセージの定義とイベントリソースファイルの作成の詳細については、プラットフォーム SDK ドキュメントの「Message Compiler」 ( [https://msdn.microsoft.com](https://msdn.microsoft.com/)) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d445f-274">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [https://msdn.microsoft.com](https://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-275">次のコード例では、`SampleApplicationSource` という名前のイベントソースがローカルコンピューターに登録されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d445f-275">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="d445f-276">イベントソースが存在しない場合、この例では、ソースのメッセージリソースファイルを設定し、新しいイベントソースを作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-276">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="d445f-277">最後に、コード例では、`DisplayNameMsgId` のリソース識別子の値と `messageFile`のリソースファイルパスを使用して、イベントログのローカライズされた表示名を設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-277">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="d445f-278">このコード例では、リソースライブラリ EventLogMsgs に組み込まれている次のメッセージテキストファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-278">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="d445f-279">メッセージテキストファイルは、メッセージリソースファイルの作成元のソースです。</span><span class="sxs-lookup"><span data-stu-id="d445f-279">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="d445f-280">メッセージテキストファイルは、カテゴリ、イベントメッセージ、およびパラメーター挿入文字列のリソース識別子とテキストを定義します。</span><span class="sxs-lookup"><span data-stu-id="d445f-280">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="d445f-281">具体的には、リソース識別子1004に定義されたメッセージは、リソース識別子5002に定義されているパラメーター文字列のプレースホルダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="d445f-281">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-282">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-282">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-283">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-283">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventSourceCreationData.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d445f-284">イベント ソースとしてイベント ログに登録する名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-284">Gets or sets the name to register with the event log as an event source.</span></span></summary>
        <value><span data-ttu-id="d445f-285">エントリのソースとしてイベント ログに登録する名前。</span><span class="sxs-lookup"><span data-stu-id="d445f-285">The name to register with the event log as a source of entries.</span></span> <span data-ttu-id="d445f-286">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="d445f-286">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d445f-287">ソース名は、多くの場合、アプリケーションの名前、または大規模なアプリケーション内のコンポーネントの名前です。</span><span class="sxs-lookup"><span data-stu-id="d445f-287">The source name is often the name of the application, or the name of a component within a large application.</span></span> <span data-ttu-id="d445f-288"><xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> メソッドでは、<xref:System.Diagnostics.EventSourceCreationData.Source%2A>、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>、および <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> プロパティを使用して、新しいソースとそれに関連付けられているイベントログのターゲットコンピューターでレジストリ値を作成します。</span><span class="sxs-lookup"><span data-stu-id="d445f-288">The <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method uses the <xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>, and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="d445f-289">新しいソース名は、既存のソース名またはターゲットコンピューターの既存のイベントログ名と一致することはできません。</span><span class="sxs-lookup"><span data-stu-id="d445f-289">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span>  
  
 <span data-ttu-id="d445f-290">ソースのレジストリ値が作成されると、アプリケーションはソースを使用して、構成されているイベントログにエントリを書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-290">After the registry values for the source are created, your application can use the source to write entries to the configured event log.</span></span>  
  
 <span data-ttu-id="d445f-291">各ソースは、一度に1つのイベントログにのみ書き込むことができます。ただし、アプリケーションで複数のソースを使用して複数のイベントログに書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="d445f-291">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="d445f-292">たとえば、アプリケーションによっては、異なるイベントログまたは異なるリソースファイル用に複数のソースが構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d445f-292">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d445f-293">次のコード例では、コマンドライン引数からイベントソースの構成プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-293">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="d445f-294">入力引数は、イベントソース名、イベントログ名、コンピューター名、およびイベントメッセージリソースファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="d445f-294">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="d445f-295">この例は、<xref:System.Diagnostics.EventSourceCreationData> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="d445f-295">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d445f-296">完全信頼を使用して <see cref="T:System.Diagnostics.EventSourceCreationData" /> のメンバーを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="d445f-296">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span></span> <span data-ttu-id="d445f-297">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="d445f-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
