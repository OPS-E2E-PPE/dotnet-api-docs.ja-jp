<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99270c78a460ba2880fd3c42bbbbf992bcbe2daf" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375188" /></Metadata><TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b812-101">プロパティ、フィールド、またはパラメーターの値が <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> オブジェクトによって提供される必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="6b812-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b812-102">属性付きプログラミングモデルでは、<xref:System.ComponentModel.Composition.ImportAttribute> を使用して、指定されたパーツのインポート (または依存関係) を宣言します。</span><span class="sxs-lookup"><span data-stu-id="6b812-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="6b812-103">プロパティ、フィールド、またはメソッドを装飾することができます。</span><span class="sxs-lookup"><span data-stu-id="6b812-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="6b812-104">コンポジション中、パーツのインポートは、その部分が属する <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> オブジェクトによって、その <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> オブジェクトに提供されたエクスポートを使用して格納されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="6b812-105">インポートが特定のエクスポートに一致するかどうかは、主にコントラクト名とコントラクト型を比較することによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="6b812-106">通常、コードで import 属性を使用するときにこれらのいずれかを指定する必要はありません。これらは、装飾されたメンバーの型から自動的に推論されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="6b812-107">インポートが別の型のエクスポートと一致する必要がある場合は (たとえば、装飾されたメンバーの型のサブクラス、またはそのメンバーによって実装されるインターフェイス)、コントラクト型を明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b812-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="6b812-108">コントラクト名を明示的に指定することもできます。たとえば、同じ型の複数のコントラクトを区別する場合は、メタデータを使用して行う方が適切です。</span><span class="sxs-lookup"><span data-stu-id="6b812-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="6b812-109">メタデータの詳細については、「<xref:System.ComponentModel.Composition.PartMetadataAttribute>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6b812-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b812-110">次の例は、<xref:System.ComponentModel.Composition.ImportAttribute> で修飾されたメンバーを持つ3つのクラスと、それらに一致する3つのエクスポートを示しています。</span><span class="sxs-lookup"><span data-stu-id="6b812-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde"><span data-ttu-id="6b812-111">属性付きプログラミング モデルの概要</span><span class="sxs-lookup"><span data-stu-id="6b812-111">Attributed Programming Model Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6b812-112"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6b812-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b812-113"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> クラスの新しいインスタンスを初期化して、既定のコントラクト名のエクスポートをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6b812-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b812-114">既定のコントラクト名は、この属性でマークされているプロパティ、フィールド、またはパラメーターの型に対して <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> メソッドを呼び出した結果です。</span><span class="sxs-lookup"><span data-stu-id="6b812-114">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="6b812-115">コントラクト名を比較するには、<xref:System.StringComparer.Ordinal%2A> プロパティを使用して、大文字と小文字を区別する、非言語的な比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b812-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="6b812-116">インポートするエクスポートのコントラクト名。<see langword="null" /> または空の文字列 ("") を指定すると、既定のコントラクト名が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-116">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="6b812-117"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> クラスの新しいインスタンスを初期化して、指定したコントラクト名のエクスポートをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6b812-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b812-118">既定のコントラクト名は、この属性でマークされているプロパティ、フィールド、またはパラメーターの型で <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> メソッドを呼び出した結果です。</span><span class="sxs-lookup"><span data-stu-id="6b812-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="6b812-119">コントラクト名を比較するには、<xref:System.StringComparer.Ordinal%2A> プロパティを使用して、大文字と小文字を区別する、非言語的な比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b812-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="6b812-120">エクスポートのコントラクト名の派生元の型。<see langword="null" /> を指定すると、既定のコントラクト名が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-120">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="6b812-121"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> クラスの新しいインスタンスを初期化して、指定した型から派生したコントラクト名のエクスポートをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6b812-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b812-122">コントラクト名は、`contractType` で <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> メソッドを呼び出した結果です。</span><span class="sxs-lookup"><span data-stu-id="6b812-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="6b812-123">既定のコントラクト名は、この属性でマークされているプロパティ、フィールド、またはパラメーターの型で <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> メソッドを呼び出した結果です。</span><span class="sxs-lookup"><span data-stu-id="6b812-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="6b812-124">コントラクト名を比較するには、<xref:System.StringComparer.Ordinal%2A> プロパティを使用して、大文字と小文字を区別する、非言語的な比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="6b812-124">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ImportAttribute : string * Type -&gt; System.ComponentModel.Composition.ImportAttribute" Usage="new System.ComponentModel.Composition.ImportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="6b812-125">インポートするエクスポートのコントラクト名。<see langword="null" /> または空の文字列 ("") を指定すると、既定のコントラクト名が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b812-125">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="6b812-126">インポートするエクスポートの型。</span><span class="sxs-lookup"><span data-stu-id="6b812-126">The type of the export to import.</span></span></param>
        <summary><span data-ttu-id="6b812-127"><see cref="T:System.ComponentModel.Composition.ImportAttribute" /> クラスの新しいインスタンスを初期化して、指定したコントラクト名と型のエクスポートをインポートします。</span><span class="sxs-lookup"><span data-stu-id="6b812-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDefault : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-128">指定のコントラクト名のエクスポートがコンテナーに存在しない場合に、プロパティ、フィールド、またはパラメーターをその型の既定値に設定するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b812-128">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span></span></summary>
        <value><span data-ttu-id="6b812-129"><see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> を持つエクスポートが <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> に存在しない場合に、プロパティ、フィールド、またはパラメーターをその型の既定値に設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b812-129"><see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6b812-130">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b812-130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b812-131">プロパティ、フィールド、またはパラメーターの型の既定値は、参照型の場合は `null`、数値型の場合は0です。</span><span class="sxs-lookup"><span data-stu-id="6b812-131">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="6b812-132">その他の値型の場合、フィールドが値型の場合は値型の各フィールドが0に初期化され、フィールドが参照型の場合は `null` になります。</span><span class="sxs-lookup"><span data-stu-id="6b812-132">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowRecomposition : bool with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-133">一致するコントラクトを持つエクスポートがコンテナーで変更された場合に、プロパティまたはフィールドを再合成するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b812-133">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span></span></summary>
        <value><span data-ttu-id="6b812-134">一致する <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> を持つエクスポートが <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> で追加または削除された場合に、プロパティまたはフィールドを再合成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6b812-134"><see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6b812-135">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6b812-135">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-136">インポートするエクスポートのコントラクト名を取得します。</span><span class="sxs-lookup"><span data-stu-id="6b812-136">Gets the contract name of the export to import.</span></span></summary>
        <value><span data-ttu-id="6b812-137">インポートするエクスポートのコントラクト名。</span><span class="sxs-lookup"><span data-stu-id="6b812-137">The contract name of the export to import.</span></span> <span data-ttu-id="6b812-138">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="6b812-138">The default is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-139">インポートするエクスポートの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="6b812-139">Gets the type of the export to import.</span></span></summary>
        <value><span data-ttu-id="6b812-140">インポートするエクスポートの型。</span><span class="sxs-lookup"><span data-stu-id="6b812-140">The type of the export to import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-141">このインポートを満たすために使用されるエクスポートに対して、インポーターが特定の <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> を必要としていることを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b812-141">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="6b812-142">次のいずれかの値です。</span><span class="sxs-lookup"><span data-stu-id="6b812-142">One of the following values:</span></span> 
 <span data-ttu-id="6b812-143">インポーターが特定の <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /> を必要としない場合は <see cref="T:System.ComponentModel.Composition.CreationPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="6b812-143"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span> <span data-ttu-id="6b812-144">既定値です。</span><span class="sxs-lookup"><span data-stu-id="6b812-144">This is the default.</span></span>  
  
 <span data-ttu-id="6b812-145">使用されるすべてのエクスポートをコンテナー内のすべてのパーツで共有する必要がある場合は <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" />。</span><span class="sxs-lookup"><span data-stu-id="6b812-145"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span></span>  
  
 <span data-ttu-id="6b812-146">使用されるすべてのエクスポートをコンテナー内で共有しないようにする場合は <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" />。</span><span class="sxs-lookup"><span data-stu-id="6b812-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span></span> <span data-ttu-id="6b812-147">この場合、各パーツは独自のインスタンスを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="6b812-147">In this case, each part receives their own instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.ComponentModel.Composition.ImportSource with get, set" Usage="System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b812-148">このインポートを処理できるスコープを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6b812-148">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span></span></summary>
        <value><span data-ttu-id="6b812-149">このインポートを処理できるスコープを指定する値。</span><span class="sxs-lookup"><span data-stu-id="6b812-149">A value that specifies the scopes from which this import may be satisfied.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
