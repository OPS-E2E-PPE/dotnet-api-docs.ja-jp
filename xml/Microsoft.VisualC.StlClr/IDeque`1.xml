<Type Name="IDeque&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e5d78b7d7085073d7efac6f9ffba320e420346f6" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376933" /></Metadata><TypeSignature Language="C#" Value="public interface IDeque&lt;TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDeque`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IDeque`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDeque(Of TValue)&#xA;Implements ICloneable, ICollection, IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IDeque : ICloneable, Microsoft::VisualC::StlClr::Generic::IRandomAccessContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IDeque&lt;'Value&gt; = interface&#xA;    interface IRandomAccessContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="76d02-101">格納されている型。</span><span class="sxs-lookup"><span data-stu-id="76d02-101">The type that is contained.</span></span></typeparam>
    <summary><span data-ttu-id="76d02-102">STL/CLR <c>deque</c> オブジェクトのインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="76d02-102">Defines the interface of an STL/CLR <c>deque</c> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="76d02-103">詳細については、「 [deque (STL/CLR)](/cpp/dotnet/deque-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-103">For more information, see [deque (STL/CLR)](/cpp/dotnet/deque-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="assign">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76d02-104">コンテナーのすべての要素を、指定した要素で置き換えます。</span><span class="sxs-lookup"><span data-stu-id="76d02-104">Replaces all elements of the container with the given elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-105">詳細については、「 [deque:: assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-105">For more information, see [deque::assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member assign : System.Collections.IEnumerable -&gt; unit" Usage="iDeque.assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="76d02-106">コンテナーに挿入する列挙体。</span><span class="sxs-lookup"><span data-stu-id="76d02-106">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-107">コンテナーのすべての要素を、指定した <see cref="T:System.Collections.IEnumerable" /> オブジェクト内の要素で置き換えます。</span><span class="sxs-lookup"><span data-stu-id="76d02-107">Replaces all elements of the container with the elements in the given <see cref="T:System.Collections.IEnumerable" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-108">詳細については、「 [deque:: assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-108">For more information, see [deque::assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member assign : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iDeque.assign (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="76d02-109">コンテナーに挿入する範囲の開始位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-109">The starting position of the range to insert into the container.</span></span></param>
        <param name="_Last"><span data-ttu-id="76d02-110">コンテナーに挿入する範囲の末尾を越えた最初の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-110">The first position beyond the end of the range to insert into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-111">コンテナーのすべての要素を、指定した <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> オブジェクトで指定される要素で置き換えます。</span><span class="sxs-lookup"><span data-stu-id="76d02-111">Replaces all elements of the container with the elements specified by the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-112">詳細については、「 [deque:: assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-112">For more information, see [deque::assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="assign">
      <MemberSignature Language="C#" Value="public void assign (int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void assign(int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub assign (_Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void assign(int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member assign : int * 'Value -&gt; unit" Usage="iDeque.assign (_Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Count"><span data-ttu-id="76d02-113">コンテナーに挿入する要素の数。</span><span class="sxs-lookup"><span data-stu-id="76d02-113">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="76d02-114">コンテナーに挿入する要素の値。</span><span class="sxs-lookup"><span data-stu-id="76d02-114">The value of the element to insert into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-115">コンテナーのすべての要素を、指定した数の指定した要素で置き換えます。</span><span class="sxs-lookup"><span data-stu-id="76d02-115">Replaces all elements of the container with the given number of specified elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-116">詳細については、「 [deque:: assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-116">For more information, see [deque::assign (STL/CLR)](/cpp/dotnet/deque-assign-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="at">
      <MemberSignature Language="C#" Value="public TValue at (int _Pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at(int32 _Pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at (_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at(int _Pos);" />
      <MemberSignature Language="F#" Value="abstract member at : int -&gt; " Usage="iDeque.at _Pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="76d02-117">アクセスする要素の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-117">Position of element to access.</span></span></param>
        <summary><span data-ttu-id="76d02-118">コンテナー内の指定した位置にある要素にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="76d02-118">Accesses an element at a specified position in the container.</span></span></summary>
        <returns><span data-ttu-id="76d02-119">被制御シーケンス内の位置 <paramref name="pos" /> にある要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-119">The element of the controlled sequence at position <paramref name="pos" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-120">詳細については、「 [deque:: at (STL/CLR)](/cpp/dotnet/deque-at-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-120">For more information, see [deque::at (STL/CLR)](/cpp/dotnet/deque-at-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back">
      <MemberSignature Language="C#" Value="public TValue back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.back" />
      <MemberSignature Language="VB.NET" Value="Public Function back () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % back();" />
      <MemberSignature Language="F#" Value="abstract member back : unit -&gt; " Usage="iDeque.back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-121">コンテナーの最後の要素にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="76d02-121">Accesses the last element of the container.</span></span></summary>
        <returns><span data-ttu-id="76d02-122">被制御シーケンスの最後の要素。被制御シーケンスは空でない必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d02-122">The last element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-123">詳細については、「 [deque:: back (STL/CLR)](/cpp/dotnet/deque-back-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-123">For more information, see [deque::back (STL/CLR)](/cpp/dotnet/deque-back-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="back_item">
      <MemberSignature Language="C#" Value="public TValue back_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue back_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IDeque`1.back_item" />
      <MemberSignature Language="VB.NET" Value="Public Property back_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue back_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.back_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt;.back_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d02-124">空でない <c>deque</c> コレクションの最後の要素にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="76d02-124">Accesses the last element of a non-empty <c>deque</c> collection.</span></span></summary>
        <value><span data-ttu-id="76d02-125">被制御シーケンスの最後の要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-125">The last element of the controlled sequence.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-126">詳細については、「 [deque:: back_item (STL/CLR)](/cpp/dotnet/deque-back-item-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-126">For more information, see [deque::back_item (STL/CLR)](/cpp/dotnet/deque-back-item-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void begin(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin : ContainerRandomAccessIterator -&gt; unit" Usage="iDeque.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-127">被制御シーケンスの最初の要素、または空のシーケンスの末尾の次の位置を指定するランダム アクセス反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-127">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="76d02-128">これを使用して被制御シーケンスの現在の先頭 (<paramref name="current" />) を指定する反復子を取得しますが、このステータスは被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="76d02-128">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="76d02-129">被制御シーケンスの先頭を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-129">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="76d02-130">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-130">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="76d02-131">詳細については、「 [deque:: begin (STL/CLR)](/cpp/dotnet/deque-begin-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-131">For more information, see [deque::begin (STL/CLR)](/cpp/dotnet/deque-begin-stl-clr).</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="begin_bias">
      <MemberSignature Language="C#" Value="public int begin_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 begin_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias" />
      <MemberSignature Language="VB.NET" Value="Public Function begin_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int begin_bias();" />
      <MemberSignature Language="F#" Value="abstract member begin_bias : unit -&gt; int" Usage="iDeque.begin_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-132">現在のシーケンスの先頭のバイアスを取得します。</span><span class="sxs-lookup"><span data-stu-id="76d02-132">Gets the bias of the beginning of the current sequence.</span></span> <span data-ttu-id="76d02-133">バイアスとは、現在の要素ゼロを基準としたオフセットです。</span><span class="sxs-lookup"><span data-stu-id="76d02-133">The bias is the offset of the current element zero.</span></span></summary>
        <returns><span data-ttu-id="76d02-134">現在のシーケンスの先頭のバイアス。</span><span class="sxs-lookup"><span data-stu-id="76d02-134">The bias of the beginning of the current sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iDeque.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-135">コンテナー内のすべての要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-135">Removes all elements in the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-136">詳細については、「 [deque:: clear (STL/CLR)](/cpp/dotnet/deque-clear-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-136">For more information, see [deque::clear (STL/CLR)](/cpp/dotnet/deque-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iDeque.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-137">コンテナーが要素を保持していないかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="76d02-137">Tests whether the container holds no elements.</span></span></summary>
        <returns><span data-ttu-id="76d02-138">コンテナーが空である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="76d02-138"><see langword="true" /> if the container is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-139">詳細については、「 [deque:: empty (STL/CLR)](/cpp/dotnet/deque-empty-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-139">For more information, see [deque::empty (STL/CLR)](/cpp/dotnet/deque-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void end(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end : ContainerRandomAccessIterator -&gt; unit" Usage="iDeque.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-140">被制御シーケンスの末尾の直後の位置を指すランダム アクセス反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-140">A random-access iterator that points to the location immediately beyond the end of the controlled sequence.</span></span> <span data-ttu-id="76d02-141">これを使用して被制御シーケンスの現在の (<paramref name="current" />) 末尾を指定する反復子を取得しますが、このステータスは被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="76d02-141">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="76d02-142">被制御シーケンスの末尾を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-142">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="76d02-143">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-143">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="76d02-144">詳細については、「 [deque:: end (STL/CLR)](/cpp/dotnet/deque-end-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-144">For more information, see [deque::end (STL/CLR)](/cpp/dotnet/deque-end-stl-clr).</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end_bias">
      <MemberSignature Language="C#" Value="public int end_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 end_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias" />
      <MemberSignature Language="VB.NET" Value="Public Function end_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int end_bias();" />
      <MemberSignature Language="F#" Value="abstract member end_bias : unit -&gt; int" Usage="iDeque.end_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-145">現在のシーケンスの末尾のバイアスを取得します。</span><span class="sxs-lookup"><span data-stu-id="76d02-145">Gets the bias of the end of the current sequence.</span></span> <span data-ttu-id="76d02-146">バイアスとは、現在の要素ゼロを基準としたオフセットです。</span><span class="sxs-lookup"><span data-stu-id="76d02-146">The bias is the offset of the current element zero.</span></span></summary>
        <returns><span data-ttu-id="76d02-147">現在のシーケンスの末尾のバイアス。</span><span class="sxs-lookup"><span data-stu-id="76d02-147">The bias of the end of the current sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76d02-148">指定した位置にある要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-148">Removes elements at specified positions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-149">詳細については、「 [deque:: erase (STL/CLR)](/cpp/dotnet/deque-erase-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-149">For more information, see [deque::erase (STL/CLR)](/cpp/dotnet/deque-erase-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase : ContainerRandomAccessIterator * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iDeque.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-150">削除された要素の後の最初の残存要素を指定する反復子。このような要素が存在しない場合は <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />。</span><span class="sxs-lookup"><span data-stu-id="76d02-150">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="76d02-151">消去する要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-151">The element to erase.</span></span></param>
        <summary><span data-ttu-id="76d02-152">指定した位置にある要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-152">Removes the element at the specified position.</span></span></summary>
        <returns><span data-ttu-id="76d02-153">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-153">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="76d02-154">詳細については、「 [deque:: erase (STL/CLR)](/cpp/dotnet/deque-stl-clr#erase)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-154">For more information, see [deque::erase (STL/CLR)](/cpp/dotnet/deque-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void erase(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerRandomAccessIterator(Of TValue), _First_iter As ContainerRandomAccessIterator(Of TValue), _Last_iter As ContainerRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase : ContainerRandomAccessIterator * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; -&gt; unit" Usage="iDeque.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-155">削除された要素の後の最初の残存要素を指定する反復子。このような要素が存在しない場合は <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />。</span><span class="sxs-lookup"><span data-stu-id="76d02-155">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="76d02-156">消去する範囲の先頭位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-156">The beginning position of the range to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="76d02-157">消去する範囲の最後の要素の次の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-157">The position one beyond the last element of the range to erase.</span></span></param>
        <summary><span data-ttu-id="76d02-158">指定した反復子間の要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-158">Removes the elements between the specified iterators.</span></span></summary>
        <returns><span data-ttu-id="76d02-159">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-159">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="76d02-160">詳細については、「 [deque:: erase (STL/CLR)](/cpp/dotnet/deque-stl-clr#erase)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-160">For more information, see [deque::erase (STL/CLR)](/cpp/dotnet/deque-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front">
      <MemberSignature Language="C#" Value="public TValue front ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue front() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.front" />
      <MemberSignature Language="VB.NET" Value="Public Function front () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % front();" />
      <MemberSignature Language="F#" Value="abstract member front : unit -&gt; " Usage="iDeque.front " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-161">コンテナーの最初の要素にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="76d02-161">Accesses the first element of the container.</span></span></summary>
        <returns><span data-ttu-id="76d02-162">被制御シーケンスの最初の要素。被制御シーケンスは空でない必要があります。</span><span class="sxs-lookup"><span data-stu-id="76d02-162">The first element of the controlled sequence, which must be non-empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-163">詳細については、「 [deque:: front (STL/CLR)](/cpp/dotnet/deque-front-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-163">For more information, see [deque::front (STL/CLR)](/cpp/dotnet/deque-front-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="front_item">
      <MemberSignature Language="C#" Value="public TValue front_item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue front_item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IDeque`1.front_item" />
      <MemberSignature Language="VB.NET" Value="Public Property front_item As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue front_item { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.front_item : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt;.front_item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76d02-164">空でない <c>deque</c> コレクションの最初の要素にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="76d02-164">Accesses the first element of a non-empty <c>deque</c> collection.</span></span></summary>
        <value><span data-ttu-id="76d02-165">被制御シーケンスの最初の要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-165">The first element of the controlled sequence.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-166">詳細については、「 [deque:: front_item (STL/CLR)](/cpp/dotnet/deque-front-item-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-166">For more information, see [deque::front_item (STL/CLR)](/cpp/dotnet/deque-front-item-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="get_generation">
      <MemberSignature Language="C#" Value="public uint get_generation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 get_generation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation" />
      <MemberSignature Language="VB.NET" Value="Public Function get_generation () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 get_generation();" />
      <MemberSignature Language="F#" Value="abstract member get_generation : unit -&gt; uint32" Usage="iDeque.get_generation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-167">基になるコンテナーの現在の変更ジェネレーションを取得します。</span><span class="sxs-lookup"><span data-stu-id="76d02-167">Gets the current change generation of the underlying container.</span></span></summary>
        <returns><span data-ttu-id="76d02-168">基になるコンテナーの現在の変更ジェネレーション。</span><span class="sxs-lookup"><span data-stu-id="76d02-168">The current change generation of the underlying container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76d02-169">コンテナー内の指定した位置に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-169">Adds elements at a specified position in the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-170">詳細については、「 [deque:: insert (STL/CLR)](/cpp/dotnet/deque-insert-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-170">For more information, see [deque::insert (STL/CLR)](/cpp/dotnet/deque-insert-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where_iter, System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where_iter, class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where_iter As ContainerRandomAccessIterator(Of TValue), _Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where_iter, System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * System.Collections.IEnumerable -&gt; unit" Usage="iDeque.insert (_Where_iter, _Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Where_iter"><span data-ttu-id="76d02-171">その前に挿入を行うコンテナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-171">The location in the container in front of which to insert.</span></span></param>
        <param name="_Right"><span data-ttu-id="76d02-172">コンテナーに挿入する要素の列挙体。</span><span class="sxs-lookup"><span data-stu-id="76d02-172">The enumeration of elements to insert into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-173">コンテナー内の指定した位置に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-173">Adds elements at a specified position in the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerRandomAccessIterator(Of TValue), _Where As ContainerRandomAccessIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert : ContainerRandomAccessIterator * Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iDeque.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-174">新しく挿入される要素を指定する反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-174">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="76d02-175">その前に挿入を行うコンテナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-175">The location in the container in front of which to insert.</span></span></param>
        <param name="_Val"><span data-ttu-id="76d02-176">コンテナーに挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-176">The element to be inserted into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-177">コンテナー内の指定した位置に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-177">Adds an element at a specified position in the container.</span></span></summary>
        <returns><span data-ttu-id="76d02-178">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-178">An iterator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iDeque.insert (_Where, _First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="76d02-179">その前に挿入を行うコンテナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-179">The location in the container in front of which to insert.</span></span></param>
        <param name="_First"><span data-ttu-id="76d02-180">コンテナーに挿入する範囲の先頭。</span><span class="sxs-lookup"><span data-stu-id="76d02-180">The beginning of the range to insert into the container.</span></span></param>
        <param name="_Last"><span data-ttu-id="76d02-181">コンテナーに挿入する範囲の末尾を越えた最初の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-181">The first position beyond the end of the range to insert into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-182">コンテナー内の指定した位置に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-182">Adds elements at a specified position in the container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt; _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1&lt;!TValue&gt; _Where, int32 _Count, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Where As ContainerRandomAccessIterator(Of TValue), _Count As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::ContainerRandomAccessIterator&lt;TValue&gt; ^ _Where, int _Count, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;'Value&gt; * int * 'Value -&gt; unit" Usage="iDeque.insert (_Where, _Count, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator&lt;TValue&gt;" />
        <Parameter Name="_Count" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Where"><span data-ttu-id="76d02-183">その前に挿入を行うコンテナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-183">The location in the container in front of which to insert.</span></span></param>
        <param name="_Count"><span data-ttu-id="76d02-184">コンテナーに挿入する要素の数。</span><span class="sxs-lookup"><span data-stu-id="76d02-184">The number of elements to insert into the container.</span></span></param>
        <param name="_Val"><span data-ttu-id="76d02-185">コンテナーに挿入する要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-185">The element to be inserted into the container.</span></span></param>
        <summary><span data-ttu-id="76d02-186">コンテナー内の指定した位置に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-186">Adds an element at a specified position in the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="76d02-187">詳細については、「 [deque:: insert (STL/CLR)](/cpp/dotnet/deque-stl-clr#insert)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-187">For more information, see [deque::insert (STL/CLR)](/cpp/dotnet/deque-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[int _Pos] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(_Pos As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[int] { TValue get(int _Pos); void set(int _Pos, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Pos"><span data-ttu-id="76d02-188">取得または設定する要素の位置。</span><span class="sxs-lookup"><span data-stu-id="76d02-188">The position of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="76d02-189">コンテナー内の指定した位置にある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-189">Gets or sets the element at the indicated position in the container.</span></span></summary>
        <value><span data-ttu-id="76d02-190">指定した位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-190">The element at the indicated position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-191">詳細については、「 [deque:: operator (STL/CLR)](/cpp/dotnet/deque-operator-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-191">For more information, see [deque::operator(STL/CLR)](/cpp/dotnet/deque-operator-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="pop_back">
      <MemberSignature Language="C#" Value="public void pop_back ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void pop_back() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back" />
      <MemberSignature Language="VB.NET" Value="Public Sub pop_back ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void pop_back();" />
      <MemberSignature Language="F#" Value="abstract member pop_back : unit -&gt; unit" Usage="iDeque.pop_back " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-192">空でないコンテナーの最後の要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-192">Removes the last element of a non-empty container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-193">詳細については、「 [deque::p op_back (STL/CLR)](/cpp/dotnet/deque-pop-back-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-193">For more information, see [deque::pop_back (STL/CLR)](/cpp/dotnet/deque-pop-back-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="pop_front">
      <MemberSignature Language="C#" Value="public void pop_front ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void pop_front() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front" />
      <MemberSignature Language="VB.NET" Value="Public Sub pop_front ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void pop_front();" />
      <MemberSignature Language="F#" Value="abstract member pop_front : unit -&gt; unit" Usage="iDeque.pop_front " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-194">空でないコンテナーの最初の要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="76d02-194">Removes the first element of a non-empty container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-195">詳細については、「 [deque::p op_front (STL/CLR)](/cpp/dotnet/deque-pop-front-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-195">For more information, see [deque::pop_front (STL/CLR)](/cpp/dotnet/deque-pop-front-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="push_back">
      <MemberSignature Language="C#" Value="public void push_back (TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void push_back(!TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub push_back (_Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void push_back(TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member push_back : 'Value -&gt; unit" Usage="iDeque.push_back _Val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Val"><span data-ttu-id="76d02-196">コンテナーの末尾に追加する要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-196">The element to append to the end of the container.</span></span></param>
        <summary><span data-ttu-id="76d02-197">コンテナーの末尾に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-197">Adds an element to the end of a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-198">詳細については、「 [deque::p ush_back (STL/CLR)](/cpp/dotnet/deque-push-back-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-198">For more information, see [deque::push_back (STL/CLR)](/cpp/dotnet/deque-push-back-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="push_front">
      <MemberSignature Language="C#" Value="public void push_front (TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void push_front(!TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub push_front (_Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void push_front(TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member push_front : 'Value -&gt; unit" Usage="iDeque.push_front _Val" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Val"><span data-ttu-id="76d02-199">コンテナーの先頭に追加する要素。</span><span class="sxs-lookup"><span data-stu-id="76d02-199">The element to add to the beginning of the container.</span></span></param>
        <summary><span data-ttu-id="76d02-200">コンテナーの先頭に要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="76d02-200">Adds an element to the beginning of a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-201">詳細については、「 [deque::p ush_front (STL/CLR)](/cpp/dotnet/deque-push-front-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-201">For more information, see [deque::push_front (STL/CLR)](/cpp/dotnet/deque-push-front-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin : ReverseRandomAccessIterator -&gt; unit" Usage="iDeque.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-202">被制御シーケンスの最後の要素、または空のシーケンスの先頭を越えた位置を指定する反転反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-202">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="76d02-203">したがって、これは反転シーケンスの <paramref name="beginning" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-203">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="76d02-204">これを使用して被制御シーケンスの逆順に見た現在の (<paramref name="current" />) 先頭を指定する反復子を取得しますが、このステータスは被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="76d02-204">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="76d02-205">反転被制御シーケンスの先頭を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-205">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="76d02-206">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-206">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="76d02-207">詳細については、「 [deque:: rbegin (STL/CLR)](/cpp/dotnet/deque-rbegin-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-207">For more information, see [deque::rbegin (STL/CLR)](/cpp/dotnet/deque-rbegin-stl-clr).</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void rend(class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseRandomAccessIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseRandomAccessIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend : ReverseRandomAccessIterator -&gt; unit" Usage="iDeque.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-208">被制御シーケンスの先頭の次の位置を指す反転反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-208">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="76d02-209">したがって、これは反転シーケンスの <paramref name="end" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-209">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="76d02-210">これを使用して被制御シーケンスの逆順に見た現在の末尾 (<paramref name="current" />) を指定する反復子を取得しますが、このステータスは被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="76d02-210">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="76d02-211">反転被制御シーケンスの末尾を指定します。</span><span class="sxs-lookup"><span data-stu-id="76d02-211">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="76d02-212">反復子。</span><span class="sxs-lookup"><span data-stu-id="76d02-212">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="76d02-213">詳細については、「 [deque:: rend (STL/CLR)](/cpp/dotnet/deque-rend-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-213">For more information, see [deque::rend (STL/CLR)](/cpp/dotnet/deque-rend-stl-clr).</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="resize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76d02-214">要素の数を変更します。</span><span class="sxs-lookup"><span data-stu-id="76d02-214">Changes the number of elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-215">詳細については、「 [deque:: resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-215">For more information, see [deque::resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize);" />
      <MemberSignature Language="F#" Value="abstract member resize : int -&gt; unit" Usage="iDeque.resize _Newsize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="76d02-216">被制御シーケンスの新しいサイズ。</span><span class="sxs-lookup"><span data-stu-id="76d02-216">The new size of the controlled sequence.</span></span></param>
        <summary><span data-ttu-id="76d02-217">要素の数を変更します。</span><span class="sxs-lookup"><span data-stu-id="76d02-217">Changes the number of elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-218">詳細については、「 [deque:: resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-218">For more information, see [deque::resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="resize">
      <MemberSignature Language="C#" Value="public void resize (int _Newsize, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void resize(int32 _Newsize, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub resize (_Newsize As Integer, _Val As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void resize(int _Newsize, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member resize : int * 'Value -&gt; unit" Usage="iDeque.resize (_Newsize, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newsize" Type="System.Int32" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="_Newsize"><span data-ttu-id="76d02-219">被制御シーケンスの新しいサイズ。</span><span class="sxs-lookup"><span data-stu-id="76d02-219">The new size of the controlled sequence.</span></span></param>
        <param name="_Val"><span data-ttu-id="76d02-220">埋め込み要素の値。</span><span class="sxs-lookup"><span data-stu-id="76d02-220">The value of the padding element.</span></span></param>
        <summary><span data-ttu-id="76d02-221">要素の数を変更します。</span><span class="sxs-lookup"><span data-stu-id="76d02-221">Changes the number of elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-222">詳細については、「 [deque:: resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-222">For more information, see [deque::resize (STL/CLR)](/cpp/dotnet/deque-resize-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iDeque.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76d02-223">要素の数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="76d02-223">Counts the number of elements.</span></span></summary>
        <returns><span data-ttu-id="76d02-224">被制御シーケンスの長さ。</span><span class="sxs-lookup"><span data-stu-id="76d02-224">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d02-225">詳細については、「 [deque:: size (STL/CLR)](/cpp/dotnet/deque-size-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-225">For more information, see [deque::size (STL/CLR)](/cpp/dotnet/deque-size-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt; );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IDeque`1&lt;!TValue&gt; ) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap ( As IDeque(Of TValue))" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IDeque&lt;TValue&gt; ^ );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt; -&gt; unit" Usage="iDeque.swap " FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt; A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IDeque`1&lt;!TValue&gt; A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (A_0 As IDeque(Of TValue))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IDeque&lt;TValue&gt; ^ A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt; -&gt; unit" Usage="iDeque.swap A_0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="76d02-226">コンテンツを交換するコンテナー。</span><span class="sxs-lookup"><span data-stu-id="76d02-226">Container to swap contents with.</span></span></param>
        <param name="A_0"><span data-ttu-id="76d02-227">コンテンツを交換するコンテナー。</span><span class="sxs-lookup"><span data-stu-id="76d02-227">Container to swap contents with.</span></span></param>
        <summary><span data-ttu-id="76d02-228">2 つのコンテナーのコンテンツを交換します。</span><span class="sxs-lookup"><span data-stu-id="76d02-228">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="76d02-229">詳細については、「 [deque:: swap (STL/CLR)](/cpp/dotnet/deque-swap-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="76d02-229">For more information, see [deque::swap (STL/CLR)](/cpp/dotnet/deque-swap-stl-clr).</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
