<Type Name="BinaryDelegate&lt;TArg1,TArg2,TResult&gt;" FullName="Microsoft.VisualC.StlClr.BinaryDelegate&lt;TArg1,TArg2,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="217911ed33de178c5bbbc4e0046efaa2aeae7bb8" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78804386" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult BinaryDelegate&lt;TArg1,TArg2,TResult&gt;(TArg1 , TArg2 );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryDelegate`3&lt;TArg1, TArg2, TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function BinaryDelegate(Of TArg1, TArg2, TResult)( As TArg1,  As TArg2) As TResult " FrameworkAlternate="netframework-3.5;netframework-4.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA;public delegate TResult BinaryDelegate(TArg1 , TArg2 );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
  <TypeSignature Language="F#" Value="type BinaryDelegate&lt;'TArg1, 'TArg2, 'Result&gt; = delegate of 'TArg1 * 'TArg2 -&gt; 'Result" />
  <TypeSignature Language="C#" Value="public delegate TResult BinaryDelegate&lt;TArg1,TArg2,TResult&gt;(TArg1 A_0, TArg2 A_1);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function BinaryDelegate(Of TArg1, TArg2, TResult)(A_0 As TArg1, A_1 As TArg2) As TResult " FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TArg1, typename TArg2, typename TResult&gt;&#xA;public delegate TResult BinaryDelegate(TArg1 A_0, TArg2 A_1);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArg1" />
    <TypeParameter Name="TArg2" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1708")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="" Type="TArg1" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
    <Parameter Name="A_0" Type="TArg1" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
    <Parameter Name="" Type="TArg2" Index="1" FrameworkAlternate="netframework-3.5;netframework-4.0" />
    <Parameter Name="A_1" Type="TArg2" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TArg1"><span data-ttu-id="dd51f-101">最初のデリゲート引数の型。</span><span class="sxs-lookup"><span data-stu-id="dd51f-101">The type of the first delegate argument.</span></span></typeparam>
    <typeparam name="TArg2"><span data-ttu-id="dd51f-102">2番目のデリゲート引数の型。</span><span class="sxs-lookup"><span data-stu-id="dd51f-102">The type of the second delegate argument.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="dd51f-103">デリゲートの戻り値の型。</span><span class="sxs-lookup"><span data-stu-id="dd51f-103">The return type of the delegate.</span></span></typeparam>
    <param name="A_0"><span data-ttu-id="dd51f-104">最初の引数。</span><span class="sxs-lookup"><span data-stu-id="dd51f-104">The first argument.</span></span></param>
    <param name=""><span data-ttu-id="dd51f-105">最初の引数。</span><span class="sxs-lookup"><span data-stu-id="dd51f-105">The first argument.</span></span></param>
    <param name=""><span data-ttu-id="dd51f-106">2 番目の引数。</span><span class="sxs-lookup"><span data-stu-id="dd51f-106">The second argument.</span></span></param>
    <param name="A_1"><span data-ttu-id="dd51f-107">2 番目の引数。</span><span class="sxs-lookup"><span data-stu-id="dd51f-107">The second argument.</span></span></param>
    <summary><span data-ttu-id="dd51f-108">2 つの引数を持つデリゲートを記述します。</span><span class="sxs-lookup"><span data-stu-id="dd51f-108">Describes a two-argument delegate.</span></span> <span data-ttu-id="dd51f-109">これを使用して、引数とデリゲートの戻り値の型を指定します。</span><span class="sxs-lookup"><span data-stu-id="dd51f-109">You use it to specify the arguments and return type of the delegate.</span></span></summary>
    <returns><span data-ttu-id="dd51f-110">デリゲートの戻り値の型。</span><span class="sxs-lookup"><span data-stu-id="dd51f-110">The return type of the delegate.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd51f-111">このデリゲートは、STL/CLR `binary_delegate` クラスに共通するものです。</span><span class="sxs-lookup"><span data-stu-id="dd51f-111">This delegate is the generic equivalent of the STL/CLR `binary_delegate` class.</span></span> <span data-ttu-id="dd51f-112">詳細については、「 [binary_delegate (STL/CLR)](/cpp/dotnet/binary-delegate-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="dd51f-112">For more information, see [binary_delegate (STL/CLR)](/cpp/dotnet/binary-delegate-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
