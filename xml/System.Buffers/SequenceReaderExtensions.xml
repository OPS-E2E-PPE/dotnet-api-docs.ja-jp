<Type Name="SequenceReaderExtensions" FullName="System.Buffers.SequenceReaderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e6e4b266aae568b918ac9aa5640861486554138" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75153617" /></Metadata><TypeSignature Language="C#" Value="public static class SequenceReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SequenceReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.SequenceReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SequenceReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class SequenceReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type SequenceReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2abd4-101">バイナリ データからのエンディアン固有の数値の読み取りを許可する <see cref="T:System.Buffers.SequenceReader`1" /> クラスの拡張機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-101">Provides extended functionality for the <see cref="T:System.Buffers.SequenceReader`1" /> class that allows reading of endian specific numeric values from binary data.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int16 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-102">値の読み取り元となるバイト シーケンス リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2abd4-102">The byte sequence reader instance from which the value is to be read.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-103">メソッドから制御が戻るときに、ビッグ エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-103">When the method returns, the value read out of the byte sequence reader, as big endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-104">ビッグ エンディアンとしての <see cref="T:System.Int16" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-104">Tries to read an <see cref="T:System.Int16" /> as big endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-105">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-105"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-106">値の読み取り元となるバイト シーケン スリーダー。</span><span class="sxs-lookup"><span data-stu-id="2abd4-106">The byte sequence reader from which to read the value.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-107">メソッドから制御が戻るときに、ビッグ エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-107">When the method returns, the value read out of the byte sequence reader, as big endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-108">ビッグ エンディアンとしての <see cref="T:System.Int32" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-108">Tries to read an <see cref="T:System.Int32" /> as big endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-109">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-109"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int64 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-110">値の読み取り元となるバイト シーケンス リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2abd4-110">The byte sequence reader instance from which the value is to be read.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-111">メソッドから制御が戻るときに、ビッグ エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-111">When the method returns, the value read out of the byte sequence reader, as big endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-112">ビッグ エンディアンとしての <see cref="T:System.Int64" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-112">Tries to read an <see cref="T:System.Int64" /> as big endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-113">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-113"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int16 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-114">値の読み取り元となるバイト シーケンス リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2abd4-114">The byte sequence reader instance from which the value is to be read.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-115">メソッドから制御が戻るときに、リトル エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-115">When the method returns, the value read out of the byte sequence reader, as little endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-116">リトル エンディアンとしての <see cref="T:System.Int16" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-116">Tries to read an <see cref="T:System.Int16" /> as little endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-117">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-117"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-118">値の読み取り元となるバイト シーケンス リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2abd4-118">The byte sequence reader instance from which the value is to be read.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-119">メソッドから制御が戻るときに、リトル エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-119">When the method returns, the value read out of the byte sequence reader, as little endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-120">リトル エンディアンとしての <see cref="T:System.Int32" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-120">Tries to read an <see cref="T:System.Int32" /> as little endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-121">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-121"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int64 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2abd4-122">値の読み取り元となるバイト シーケンス リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="2abd4-122">The byte sequence reader instance from which the value is to be read.</span></span></param>
        <param name="value"><span data-ttu-id="2abd4-123">メソッドから制御が戻るときに、リトル エンディアンとして、バイト シーケンス リーダーから読み取られる値。</span><span class="sxs-lookup"><span data-stu-id="2abd4-123">When the method returns, the value read out of the byte sequence reader, as little endian.</span></span></param>
        <summary><span data-ttu-id="2abd4-124">リトル エンディアンとしての <see cref="T:System.Int64" /> の読み取りを試行します。</span><span class="sxs-lookup"><span data-stu-id="2abd4-124">Tries to read an <see cref="T:System.Int64" /> as little endian.</span></span></summary>
        <returns><span data-ttu-id="2abd4-125">読み取り操作が成功した場合は <see langword="true" />、<see langword="false" /> のための十分なデータがない場合は <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="2abd4-125"><see langword="true" /> if the read operation is successful; <see langword="false" /> if there isn't enough data for an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
