<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e45acad5c4f1a4b69e24bb97fd9fc9afdbe9d87" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/06/2019" /><Meta Name="ms.locfileid" Value="74154510" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="eef49-101">リソースプール内のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="eef49-101">The type of the objects that are in the resource pool.</span></span></typeparam>
    <summary><span data-ttu-id="eef49-102">T[] 型のインスタンスを再利用できるようにするリソース プールを提供します。</span><span class="sxs-lookup"><span data-stu-id="eef49-102">Provides a resource pool that enables reusing instances of type T[].</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="eef49-103"><xref:System.Buffers.ArrayPool%601> クラスを使用してバッファーをレンタルして返す (<xref:System.Buffers.ArrayPool%601.Rent%2A> メソッドと <xref:System.Buffers.ArrayPool%601.Return%2A> メソッドを使用) と、配列が頻繁に作成されて破棄される場合にパフォーマンスを向上させることができます。これにより、ガベージコレクターで大量のメモリ負荷が発生します。</span><span class="sxs-lookup"><span data-stu-id="eef49-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="eef49-104">このクラスはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="eef49-104">This class is thread-safe.</span></span> <span data-ttu-id="eef49-105">すべてのメンバーは、同時に複数のスレッドによって使用される場合があります。</span><span class="sxs-lookup"><span data-stu-id="eef49-105">All members may be used by multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eef49-106"><see cref="T:System.Buffers.ArrayPool`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="eef49-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="eef49-107">このコンストラクターは保護されていることに注意してください。このメソッドは、<xref:System.Buffers.ArrayPool%601> クラスから派生したクラスによってのみ呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eef49-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eef49-108"><see cref="T:System.Buffers.ArrayPool`1" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="eef49-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <returns><span data-ttu-id="eef49-109"><see cref="T:System.Buffers.ArrayPool`1" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="eef49-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength"><span data-ttu-id="eef49-110">プールに格納できる配列インスタンスの最大長。</span><span class="sxs-lookup"><span data-stu-id="eef49-110">The maximum length of an array instance that may be stored in the pool.</span></span></param>
        <param name="maxArraysPerBucket"><span data-ttu-id="eef49-111">プール内の各バケットに格納できる配列インスタンスの最大数。</span><span class="sxs-lookup"><span data-stu-id="eef49-111">The maximum number of array instances that may be stored in each bucket in the pool.</span></span> <span data-ttu-id="eef49-112">プールは、アクセスを高速化するため、類似する長さの配列をバケットにグループ化します。</span><span class="sxs-lookup"><span data-stu-id="eef49-112">The pool groups arrays of similar lengths into buckets for faster access.</span></span></param>
        <summary><span data-ttu-id="eef49-113">指定した構成を使って、<see cref="T:System.Buffers.ArrayPool`1" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="eef49-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="eef49-114">指定した構成を備えた <see cref="T:System.Buffers.ArrayPool`1" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="eef49-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="eef49-115">このメソッドによって作成された <xref:System.Buffers.ArrayPool%601> クラスのインスタンスは、配列をバケットにグループ化します。各バケットで `maxArraysPerBucket` を超えることはなく、これらの配列の長さが `maxArrayLength` を超えていないことになります。</span><span class="sxs-lookup"><span data-stu-id="eef49-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength"><span data-ttu-id="eef49-116">配列の最小長。</span><span class="sxs-lookup"><span data-stu-id="eef49-116">The minimum length of the array.</span></span></param>
        <summary><span data-ttu-id="eef49-117">要求した長さ以上のバッファーを取得します。</span><span class="sxs-lookup"><span data-stu-id="eef49-117">Retrieves a buffer that is at least the requested length.</span></span></summary>
        <returns><span data-ttu-id="eef49-118">長さが <paramref name="minimumLength" /> 以上である T 型の配列。</span><span class="sxs-lookup"><span data-stu-id="eef49-118">An array of type T that is at least <paramref name="minimumLength" /> in length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="eef49-119">このバッファーは呼び出し元に貸与されており、<xref:System.Buffers.ArrayPool%601.Return%2A> メソッドを使用して同じプールに返される必要があります。これにより、<xref:System.Buffers.ArrayPool%601.Rent%2A> メソッドの後続の呼び出しで再利用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="eef49-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="eef49-120">レンタルバッファーを返せなかったことは、致命的なエラーではありません。</span><span class="sxs-lookup"><span data-stu-id="eef49-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="eef49-121">ただし、プールでは、失われたものを置き換えるために新しいバッファーを作成する必要があるため、アプリケーションのパフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="eef49-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eef49-122">前に <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> メソッドを使って取得した、プールに戻す必要があるバッファー。</span><span class="sxs-lookup"><span data-stu-id="eef49-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span></span></param>
        <param name="clearArray"><span data-ttu-id="eef49-123">再利用する前にバッファーの内容を消去する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="eef49-123">Indicates whether the contents of the buffer should be cleared before reuse.</span></span> <span data-ttu-id="eef49-124"><paramref name="clearArray" /> が <see langword="true" /> に設定されている場合、プールを後で再利用できるようにバッファーを格納するときに、<see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> メソッドはその内容の <paramref name="array" /> をクリアして、後で <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> メソッドを使う呼び出し元に以前の呼び出し元の内容が見えないようにします。</span><span class="sxs-lookup"><span data-stu-id="eef49-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span></span> <span data-ttu-id="eef49-125"><paramref name="clearArray" /> が <see langword="false" /> に設定されている場合、またはプールがバッファーを解放する場合は、配列の内容は変更されないままになります。</span><span class="sxs-lookup"><span data-stu-id="eef49-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span></span></param>
        <summary><span data-ttu-id="eef49-126">同じ <see cref="T:System.Buffers.ArrayPool`1" /> インスタンスで前に <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> メソッドを使って取得した配列を、プールに戻します。</span><span class="sxs-lookup"><span data-stu-id="eef49-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="eef49-127">バッファーがプールに返されると、呼び出し元はバッファーのすべての所有権を取得し、それを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="eef49-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="eef49-128"><xref:System.Buffers.ArrayPool%601.Rent%2A> メソッドへの特定の呼び出しから返される参照は、<xref:System.Buffers.ArrayPool%601.Return%2A> メソッドを使用して1回だけ返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="eef49-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="eef49-129">既定の <xref:System.Buffers.ArrayPool%601> は、返されたバッファーに保持して再度レンタルすることができます。また、プールに十分なバッファーが格納されていることがわかった場合は、返されたバッファーを解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="eef49-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eef49-130">共有されている <see cref="T:System.Buffers.ArrayPool`1" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="eef49-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="eef49-131">共有 <see cref="T:System.Buffers.ArrayPool`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="eef49-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="eef49-132">共有プールは、一般的な適用性を目的とした <xref:System.Buffers.ArrayPool%601> クラスの既定の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="eef49-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="eef49-133">共有クラスは、複数のサイズの配列を保持し、実際に要求されたよりも大きな配列を渡すことができますが、要求された数よりも小さい配列は戻されません。</span><span class="sxs-lookup"><span data-stu-id="eef49-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="eef49-134"><xref:System.Buffers.ArrayPool%601.Rent%2A> メソッドを使用して共有クラスからバッファーをレンタルすると、適切なバッファーが使用可能な場合はプールから既存のバッファーが取得され、使用できない場合は新しいバッファーに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="eef49-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
