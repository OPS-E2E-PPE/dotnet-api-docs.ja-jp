<Type Name="IBufferWriter&lt;T&gt;" FullName="System.Buffers.IBufferWriter&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f197293aeeaad672a44378eeb96020fab6417a09" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75153760" /></Metadata><TypeSignature Language="C#" Value="public interface IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBufferWriter`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IBufferWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBufferWriter(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IBufferWriter" />
  <TypeSignature Language="F#" Value="type IBufferWriter&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><see cref="T:System.Buffers.IBufferWriter`1" />内の項目の型。</typeparam>
    <summary><typeparamref name="T" /> データを書き込むことができる出力シンクを表します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advance(int count);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit" Usage="iBufferWriter.Advance count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><see cref="T:System.Span`1" /> または <see cref="T:System.Memory`1" /> に書き込まれたデータ項目の数。</param>
        <summary><see cref="T:System.Buffers.IBufferWriter`1" /> データ項目が出力 <paramref name="count" /> または <see cref="T:System.Span`1" /> に書き込まれたことを <see cref="T:System.Memory`1" /> に通知します。</summary>
        <remarks>さらに多くのデータの書き込みを続行するには、事前に呼び出した後に新しいバッファーを要求する必要があります。以前に取得したバッファーに書き込むことはできません。</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;!T&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;'T&gt;" Usage="iBufferWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">返される <see cref="T:System.Memory`1" /> の最小の長さ。 0 の場合は、空でないバッファーが返されます。</param>
        <summary>少なくとも要求されたサイズを持つ (<see cref="T:System.Memory`1" /> で指定します)、書き込み先の <paramref name="sizeHint" /> を返します。</summary>
        <returns>少なくとも <see cref="T:System.Memory`1" /> のサイズを持つ <paramref name="sizeHint" />。 <paramref name="sizeHint" /> が 0 の場合は、空でないバッファーを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

連続する呼び出しが同じバッファーまたは同じサイズのバッファーを返すという保証はありません。

これは <xref:System.Span%601.Empty?displayProperty=nameWithType>を返さないようにする必要がありますが、要求されたバッファーサイズが使用できない場合は、をスローすることができます。

さらにデータの書き込みを続けるには、`Advance` を呼び出した後に新しいバッファーを要求する必要があります。前に取得したバッファーに書き込むことはできません。

         ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">要求したバッファー サイズは使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public Span&lt;T&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;!T&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;'T&gt;" Usage="iBufferWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">返される <see cref="T:System.Span`1" /> の最小の長さ。 0 の場合は、空でないバッファーが返されます。</param>
        <summary>少なくとも要求されたサイズを持つ (<see cref="T:System.Span`1" /> で指定します)、書き込み先の <paramref name="sizeHint" /> を返します。</summary>
        <returns>少なくとも <see cref="T:System.Span`1" /> のサイズを持つ <paramref name="sizeHint" />。 <paramref name="sizeHint" /> が 0 の場合は、空でないバッファーを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
連続する呼び出しが同じバッファーまたは同じサイズのバッファーを返すという保証はありません。

このメソッドは <xref:System.Span%601.Empty?displayProperty=nameWithType>を返さないようにする必要がありますが、要求されたバッファーサイズが使用できない場合は、をスローすることができます。

さらにデータの書き込みを続けるには、`Advance` を呼び出した後に新しいバッファーを要求する必要があります。前に取得したバッファーに書き込むことはできません。
         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
