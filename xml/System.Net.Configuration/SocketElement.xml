<Type Name="SocketElement" FullName="System.Net.Configuration.SocketElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60b87bb220a18c2a93abb8a2d86bdb9c112b54ff" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83894432" /></Metadata><TypeSignature Language="C#" Value="public sealed class SocketElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SocketElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.SocketElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SocketElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type SocketElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Net.Sockets.Socket" /> オブジェクトの構成に使用する情報を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、 [&lt;socket&gt; 要素 (ネットワーク設定)](/dotnet/framework/configure-apps/file-schema/network/socket-element-network-settings)構成要素に対応します。  
  
 このクラスは、構成ファイルに格納できる情報にプログラムでアクセスできるようにします。  
  
 このクラスは、接続に完了ポートを使用するかどうか、接続を受け入れるために完了ポートを使用するかどうか、IPv6 ソケットの既定の IP 保護レベルを指定するために使用されます。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">ネットワーク設定スキーマ</related>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/socket-element-network-settings">Socket 要素 (ネットワーク設定)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.SocketElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.Configuration.SocketElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、<xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> プロパティと <xref:System.Net.Configuration.ConnectionManagementElement.MaxConnection%2A> プロパティを <xref:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept%2A> コレクションに追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseCompletionPortsForAccept">
      <MemberSignature Language="C#" Value="public bool AlwaysUseCompletionPortsForAccept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseCompletionPortsForAccept" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseCompletionPortsForAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseCompletionPortsForAccept { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AlwaysUseCompletionPortsForAccept : bool with get, set" Usage="System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForAccept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("alwaysUseCompletionPortsForAccept", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続の受け入れ時に完了ポートが使用されるかどうかを指定するブール値を取得または設定します。</summary>
        <value>完了ポートを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">ネットワーク設定スキーマ</related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/socket-element-network-settings">&lt;socket&gt; 要素 (ネットワーク設定)</related>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseCompletionPortsForConnect">
      <MemberSignature Language="C#" Value="public bool AlwaysUseCompletionPortsForConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseCompletionPortsForConnect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseCompletionPortsForConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseCompletionPortsForConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AlwaysUseCompletionPortsForConnect : bool with get, set" Usage="System.Net.Configuration.SocketElement.AlwaysUseCompletionPortsForConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("alwaysUseCompletionPortsForConnect", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続の確立時に完了ポートが使用されるかどうかを指定するブール値を取得または設定します。</summary>
        <value>完了ポートを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">ネットワーク設定スキーマ</related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/socket-element-network-settings">&lt;socket&gt; 要素 (ネットワーク設定)</related>
      </Docs>
    </Member>
    <Member MemberName="IPProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.IPProtectionLevel IPProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.IPProtectionLevel IPProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.SocketElement.IPProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IPProtectionLevel As IPProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::IPProtectionLevel IPProtectionLevel { System::Net::Sockets::IPProtectionLevel get(); void set(System::Net::Sockets::IPProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.IPProtectionLevel : System.Net.Sockets.IPProtectionLevel with get, set" Usage="System.Net.Configuration.SocketElement.IPProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ipProtectionLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.IPProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソケットに使用する既定の <see cref="T:System.Net.Sockets.IPProtectionLevel" /> を指定する値を取得または設定します。</summary>
        <value>現在のインスタンスの <see cref="T:System.Net.Sockets.IPProtectionLevel" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Configuration.SocketElement.IPProtectionLevel%2A> プロパティを使用すると、同じリンクローカルまたはサイトローカルプレフィックスを持つアドレスなど、指定されたスコープに IPv6 ソケットの制限を構成できます。 このオプションを使用すると、アプリケーションは IPv6 ソケットにアクセス制限を設けることができます。 この制限により、プライベート LAN で実行されるアプリケーションを外部からの攻撃に対して簡単かつ堅牢に強化できます。 このオプションは、リッスンしているソケットの範囲を拡大または縮小し、必要に応じてパブリックユーザーおよびプライベートユーザーからの無制限のアクセスを有効にするか、必要に応じて同じサイトへのアクセスのみを制限します。 このオプションには、<xref:System.Net.Sockets.IPProtectionLevel?displayProperty=nameWithType> 列挙体で指定された3つの保護レベルが定義されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/">ネットワーク設定スキーマ</related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/socket-element-network-settings">&lt;socket&gt; 要素 (ネットワーク設定)</related>
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.SocketElement.PostDeserialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PostDeserialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PostDeserialize();" />
      <MemberSignature Language="F#" Value="override this.PostDeserialize : unit -&gt; unit" Usage="socketElement.PostDeserialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.SocketElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Net.Configuration.SocketElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
