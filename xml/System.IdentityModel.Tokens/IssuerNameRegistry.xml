<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2254e69bbea9f0f10d4e552566f165fb6e8d6178" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77043534" /></Metadata><TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="659e1-101">発行者名レジストリの抽象基本クラス。</span><span class="sxs-lookup"><span data-stu-id="659e1-101">The abstract base class for an issuer name registry.</span></span> <span data-ttu-id="659e1-102">発行者名レジストリは、該当する発行者によって生成されたトークンの署名を検証するために必要な暗号化マテリアルにニーモニック名を関連付けるために使用されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="659e1-103">発行者名レジストリは、証明書利用者 (RP) アプリケーションによって信頼されている発行者のリストを管理します。</span><span class="sxs-lookup"><span data-stu-id="659e1-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-104">発行者名レジストリは、対応する発行者によって生成されるトークンの署名を検証するために必要な暗号マテリアルにニーモニック名を関連付けるために使用されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="659e1-105">次に、この名前を使用して、クレームの <xref:System.Security.Claims.Claim.Issuer%2A> または <xref:System.Security.Claims.Claim.OriginalIssuer%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="659e1-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="659e1-106"><xref:System.IdentityModel.Tokens.IssuerNameRegistry> クラスによって公開されるメソッドは、トークンを処理するセキュリティトークンハンドラーによってパイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="659e1-107">発行者名レジストリによってマップされていないマテリアルによって署名されたトークンは、信頼できないものとして破棄されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="659e1-108">発行者名レジストリによって返される名前は、RP アプリケーションのコンテキスト内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="659e1-109">コードでは、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> プロパティを設定することによって、使用する発行者名レジストリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="659e1-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="659e1-110">構成ファイルでは、 [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)要素の下に[&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)要素を指定することによって、発行者名レジストリを指定できます。</span><span class="sxs-lookup"><span data-stu-id="659e1-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="659e1-111">Windows Identity Foundation (WIF) では、<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> クラスの <xref:System.IdentityModel.Tokens.IssuerNameRegistry> クラスの実装が用意されています。</span><span class="sxs-lookup"><span data-stu-id="659e1-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="659e1-112">この実装を使用する場合は、RP アプリケーションの構成ファイルにある信頼された発行者の一覧を[&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)要素の下に指定できます。これは、<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>クラスがその要素の `type` 属性で参照されている場合に `<issuerNameRegistry>` 要素の子要素です。</span><span class="sxs-lookup"><span data-stu-id="659e1-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element's `type` attribute.</span></span> <span data-ttu-id="659e1-113">`<trustedIssuers>` 要素の下で、各発行者名は、署名を検証するために使用する必要がある x.509 証明書にマップされます。</span><span class="sxs-lookup"><span data-stu-id="659e1-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="659e1-114">カスタム発行者名レジストリを作成するには、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="659e1-115">このメソッドは、指定されたセキュリティトークンの発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="659e1-116"><xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>とは異なる Windows トークンに発行者名を指定する場合は、必要に応じて <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> メソッドをオーバーライドして、発行者名を取得するときにヒント機構を提供することができます。また、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> メソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="659e1-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="659e1-117"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> メソッドをオーバーライドして、発行者名レジストリを構成ファイルから初期化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="659e1-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="659e1-118">次のコードは、サブジェクト "CN = localhost" の証明書を使用する発行者のみを受け入れる <xref:System.IdentityModel.Tokens.IssuerNameRegistry> クラスの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="659e1-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="659e1-119">次のコードは、説明のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="659e1-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="659e1-120">サブジェクト名に基づいて証明書を検証することはお勧めできません。</span><span class="sxs-lookup"><span data-stu-id="659e1-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="659e1-121">このコードは、実稼働環境では使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="659e1-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="659e1-122">次に、信頼された発行者名レジストリを使用してアプリケーションを構成するために必要な XML を示します。</span><span class="sxs-lookup"><span data-stu-id="659e1-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md"><span data-ttu-id="659e1-123">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="659e1-123">&lt;issuerNameRegistry&gt;</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="659e1-124"><see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="659e1-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="659e1-125">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-125">When overridden in a derived class, returns the issuer name for the specified security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-126">トークンを処理するセキュリティトークンハンドラーによって、処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-126">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="659e1-127">メソッドは、RP アプリケーションのコンテキスト内で、発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-127">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="659e1-128">発行者名が返されるセキュリティ トークン。</span><span class="sxs-lookup"><span data-stu-id="659e1-128">The security token for which to return the issuer name.</span></span></param>
        <summary><span data-ttu-id="659e1-129">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-129">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span></summary>
        <returns><span data-ttu-id="659e1-130">発行者名。</span><span class="sxs-lookup"><span data-stu-id="659e1-130">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-131">実装では、認識された発行者を識別するために、null でも空でもない文字列を返す必要があります。または、認識されない発行者を識別する null 文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-131">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="659e1-132">トークンを処理するセキュリティトークンハンドラーによって、処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-132">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="659e1-133">メソッドは、RP アプリケーションのコンテキスト内で、発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-133">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="659e1-134">次のコードは、発行者名レジストリの <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="659e1-134">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="659e1-135">完全なサンプルは、<xref:System.IdentityModel.Tokens.IssuerNameRegistry> クラスの概要に関するトピックに記載されています。</span><span class="sxs-lookup"><span data-stu-id="659e1-135">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="659e1-136">次のコードは、説明のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="659e1-136">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="659e1-137">サブジェクト名に基づいて証明書を検証することはお勧めできません。</span><span class="sxs-lookup"><span data-stu-id="659e1-137">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="659e1-138">このコードは、実稼働環境では使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="659e1-138">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="659e1-139">発行者名が返されるセキュリティ トークン。</span><span class="sxs-lookup"><span data-stu-id="659e1-139">The security token for which to return the issuer name.</span></span></param>
        <param name="requestedIssuerName"><span data-ttu-id="659e1-140">要求で考慮される発行者名。</span><span class="sxs-lookup"><span data-stu-id="659e1-140">An issuer name to consider in the request.</span></span></param>
        <summary><span data-ttu-id="659e1-141">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-141">When overridden in a derived class, returns the name of the issuer of the specified security token.</span></span> <span data-ttu-id="659e1-142">指定した発行者名は、返す発行者名を判断するときに検討される場合があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-142">The specified issuer name may be considered in determining the issuer name to return.</span></span></summary>
        <returns><span data-ttu-id="659e1-143">発行者名。</span><span class="sxs-lookup"><span data-stu-id="659e1-143">The issuer name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-144">既定の実装では、`requestedIssuerName` パラメーターは無視され、単に <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="659e1-144">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="659e1-145">トークンを処理するセキュリティトークンハンドラーによって、処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-145">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="659e1-146">メソッドは、RP アプリケーションのコンテキスト内で、発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-146">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="659e1-147">Windows クレームで使用する既定の発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="659e1-147">Returns the default issuer name to be used for Windows claims.</span></span></summary>
        <returns><span data-ttu-id="659e1-148">Windows クレームの既定の発行者名。</span><span class="sxs-lookup"><span data-stu-id="659e1-148">The default issuer name for Windows claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-149">既定の実装では、<xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> が返されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-149">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="659e1-150">トークンを処理するセキュリティトークンハンドラーによって、処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-150">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="659e1-151">メソッドは、RP アプリケーションのコンテキスト内で、発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-151">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="659e1-152">構成 XML 要素。</span><span class="sxs-lookup"><span data-stu-id="659e1-152">The configuration XML elements.</span></span> <span data-ttu-id="659e1-153">リスト内の各ノードは <see cref="T:System.Xml.XmlElement" /> 型です。</span><span class="sxs-lookup"><span data-stu-id="659e1-153">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="659e1-154">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="659e1-154">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="659e1-155"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> メソッドは、構成インフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="659e1-155">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="659e1-156">このメソッドが呼び出されると、`nodelist` には、構成ファイルの[&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)要素の最上位レベルの子要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="659e1-156">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="659e1-157">これらのそれぞれに、派生クラスに対して定義した構成スキーマに応じて、属性または子要素が含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="659e1-157">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="659e1-158">既定の実装では、<xref:System.NotImplementedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="659e1-158">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="659e1-159">派生クラスでこのメソッドをオーバーライドして、構成ファイルから発行者名レジストリを初期化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="659e1-159">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md"><span data-ttu-id="659e1-160">&lt;issuerNameRegistry&gt;</span><span class="sxs-lookup"><span data-stu-id="659e1-160">&lt;issuerNameRegistry&gt;</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
