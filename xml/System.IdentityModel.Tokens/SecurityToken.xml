<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8593688029cc5decf30771d079c054849c9ad08a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75131595" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4858a-101">すべてのセキュリティ トークンを実装するために使用される基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-101">Represents a base class used to implement all security tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-102">セキュリティ トークンを使用して、認証資格情報を提供するか、メッセージを保護します。</span><span class="sxs-lookup"><span data-stu-id="4858a-102">Use a security token to provide authentication credentials or to protect a message.</span></span>  
  
 <span data-ttu-id="4858a-103">セキュリティトークンは、認証資格情報や暗号化キーマテリアルを提供するために使用できます。また、Security Token Service (STS) によって発行されたセキュリティトークンの場合は、サブジェクトに関するクレームのコレクションでも使用できます。</span><span class="sxs-lookup"><span data-stu-id="4858a-103">A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject.</span></span> <span data-ttu-id="4858a-104">すべてのセキュリティトークンは、<xref:System.IdentityModel.Tokens.SecurityToken> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="4858a-104">All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span>  
  
 <span data-ttu-id="4858a-105">.NET 4.5 以降では、Windows Identity Foundation (WIF) は .NET Framework に完全に統合されており、WIF によって公開されるクラスは、コード内でセキュリティトークンを処理するために推奨される方法です。</span><span class="sxs-lookup"><span data-stu-id="4858a-105">Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code.</span></span> <span data-ttu-id="4858a-106">WIF では、セキュリティトークンは XML 表現との間でシリアル化および逆シリアル化され、<xref:System.IdentityModel.Tokens.SecurityTokenHandler> 基底クラスから派生したクラスを使用して検証されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-106">In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class.</span></span> <span data-ttu-id="4858a-107">トークンを検証するには、トークンが有効であることを保証するだけでなく、認証と承認の決定に使用できるトークンから <xref:System.Security.Claims.ClaimsIdentity> インスタンスも返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-107">Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions.</span></span> <span data-ttu-id="4858a-108"><xref:System.Security.Claims.ClaimsIdentity> は、トークンに含まれている要求からだけでなく、トークン型自体に固有のクレームからも、トークンハンドラーによる <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> メソッドの実装によって構築されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-108">The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handler's implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.</span></span>  
  
 <span data-ttu-id="4858a-109">WIF には、次の種類のセキュリティトークンのサポートが付属しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-109">WIF ships with support for the following types of security tokens:</span></span>  
  
-   <span data-ttu-id="4858a-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>: SAML 2.0 アサーションに基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-110"><xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion.</span></span> <span data-ttu-id="4858a-111">このトークン型は、通常、WS-TRUST または WS-FEDERATION セキュリティトークン要求 (RST) に応答して Security Token Service によって発行されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-111">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="4858a-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>: SAML 1.1 アサーションに基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-112"><xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion.</span></span> <span data-ttu-id="4858a-113">このトークン型は、通常、WS-TRUST または WS-FEDERATION セキュリティトークン要求 (RST) に応答して Security Token Service によって発行されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-113">This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).</span></span>  
  
-   <span data-ttu-id="4858a-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> と <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: SOAP メッセージで受信または送信される Kerberos チケットに基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-114"><xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message</span></span>  
  
-   <span data-ttu-id="4858a-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>: RSA アルゴリズムを使用して作成されたキーに基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-115"><xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.</span></span>  
  
-   <span data-ttu-id="4858a-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>: セッションに関する情報を含むセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.</span></span>  
  
-   <span data-ttu-id="4858a-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>: ユーザー名とパスワードに基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-117"><xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.</span></span>  
  
-   <span data-ttu-id="4858a-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Windows ドメインまたはユーザーアカウントの id に基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-118"><xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.</span></span>  
  
-   <span data-ttu-id="4858a-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>: x.509 証明書に基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-119"><xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.</span></span>  
  
-   <span data-ttu-id="4858a-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Windows ドメインユーザーまたはローカルコンピューターのユーザーアカウントにマップされた x.509 証明書に基づくセキュリティトークンを表します。</span><span class="sxs-lookup"><span data-stu-id="4858a-120"><xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.</span></span>  
  
 <span data-ttu-id="4858a-121"><xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> と <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>という2つのセキュリティトークンクラスを使用して、一般的なケースの処理に役立てることができます。</span><span class="sxs-lookup"><span data-stu-id="4858a-121">Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.</span></span>  
  
 <span data-ttu-id="4858a-122">広範なセキュリティトークンは、次の3つの主なカテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-122">Broadly speaking security tokens fall into three major categories:</span></span>  
  
-   <span data-ttu-id="4858a-123">暗号化キーマテリアルを格納または参照するトークン。</span><span class="sxs-lookup"><span data-stu-id="4858a-123">Tokens that carry or reference cryptographic key material.</span></span> <span data-ttu-id="4858a-124">たとえば、<xref:System.IdentityModel.Tokens.RsaSecurityToken> と <xref:System.IdentityModel.Tokens.X509SecurityToken> の種類は、この目的でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-124">For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.</span></span>  
  
-   <span data-ttu-id="4858a-125">既に認証されているユーザーの資格情報を表すトークン。</span><span class="sxs-lookup"><span data-stu-id="4858a-125">Tokens that represent credentials for users that have already been authenticated.</span></span> <span data-ttu-id="4858a-126">たとえば、<xref:System.IdentityModel.Tokens.UserNameSecurityToken>、<xref:System.IdentityModel.Tokens.WindowsSecurityToken>、および証明書を使用して認証されたユーザーの場合、<xref:System.IdentityModel.Tokens.X509SecurityToken> の種類です。</span><span class="sxs-lookup"><span data-stu-id="4858a-126">For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.</span></span>  
  
-   <span data-ttu-id="4858a-127">WS-TRUST プロトコルまたは WS-FEDERATION プロトコルを使用するセキュリティトークン要求への応答として Security Token Service (STS) によって発行されるトークン。</span><span class="sxs-lookup"><span data-stu-id="4858a-127">Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol.</span></span> <span data-ttu-id="4858a-128">通常、これらは `wst:RequestSecurityTokenResponse` XML フラグメントで返されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-128">These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment.</span></span> <span data-ttu-id="4858a-129"><xref:System.IdentityModel.Tokens.Saml2SecurityToken> と <xref:System.IdentityModel.Tokens.SamlSecurityToken> の種類は、これらのトークンを表すためによく使用されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-129">The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.</span></span>  
  
 <span data-ttu-id="4858a-130">特別なトークンの種類である <xref:System.IdentityModel.Tokens.SessionSecurityToken>には、アクティブまたはパッシブのシナリオでセッションを使用するときにプリンシパルを再作成するために必要な情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4858a-130">A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.</span></span>  
  
 <span data-ttu-id="4858a-131">既存のトークンの種類に機能を追加するには、トークンに追加する新しい要素をサポートするために、特定の型とそれに関連付けられているトークンハンドラーから派生することができます。</span><span class="sxs-lookup"><span data-stu-id="4858a-131">To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token.</span></span> <span data-ttu-id="4858a-132">新しいトークン型のサポートを追加するには、<xref:System.IdentityModel.Tokens.SecurityToken> クラスから直接派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="4858a-132">To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class.</span></span> <span data-ttu-id="4858a-133">これを行う場合は、<xref:System.IdentityModel.Tokens.SecurityTokenHandler> クラスから派生することによって、トークンハンドラークラスも作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-133">When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span> <span data-ttu-id="4858a-134">トークンの使用方法によっては、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> クラスから派生することによって、<xref:System.IdentityModel.Tokens.IssuerTokenResolver> クラスと1つ以上のカスタムキー識別子句の型から派生することによって、カスタムトークンリゾルバーを作成することが必要になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="4858a-134">Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4858a-135"><xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4858a-135">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="4858a-136">このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4858a-136">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="4858a-137">これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4858a-137">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="4858a-138">このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4858a-138">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="4858a-139">次のコードは、`SimpleWebToken` クラスの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-139">The following code shows the implementation of the `SimpleWebToken` class.</span></span> <span data-ttu-id="4858a-140">このクラスは <xref:System.IdentityModel.Tokens.SecurityToken>を拡張します。</span><span class="sxs-lookup"><span data-stu-id="4858a-140">This class extends <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="4858a-141"><see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />、<see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />、<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />、および <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> の各プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-141">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />, and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties.</span></span> <span data-ttu-id="4858a-142"><see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />、<see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />、<see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />、および <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> の各メソッドは、すべて <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />型のキー識別子をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4858a-142">The <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />, and <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> methods all support key identifiers of type <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />.</span></span> <span data-ttu-id="4858a-143">派生クラスの他のキー識別子の型をサポートするには、これらのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-143">You must override these methods to support other key identifier types in your derived class.</span></span></para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4858a-144"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> クラスを初期化するために、派生クラスのコンストラクターによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-144">Called by constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="4858a-145">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="4858a-146">このセキュリティ トークンが、指定したキー識別子を作成できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-146">Gets a value that indicates whether this security token is capable of creating the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="4858a-147"><see langword="true" /> の型が <paramref name="T" /> の場合は <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-147"><see langword="true" /> when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-148"><xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="4858a-148">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="4858a-149">キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4858a-149">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="4858a-150">既定の実装では、<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>型のキー識別子句がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4858a-150">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="4858a-151">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</span></span></typeparam>
        <summary><span data-ttu-id="4858a-152">指定したキー識別句を作成します。</span><span class="sxs-lookup"><span data-stu-id="4858a-152">Creates the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="4858a-153">セキュリティ トークンのキー識別子句である <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-153">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-154"><xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="4858a-154">Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier.</span></span> <span data-ttu-id="4858a-155">キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4858a-155">To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.</span></span>  
  
 <span data-ttu-id="4858a-156">既定の実装では、<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>型のキー識別子句がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4858a-156">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.</span></span> <span data-ttu-id="4858a-157"><xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> 型のキー識別句を作成できない場合は、<xref:System.NotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4858a-157">If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4858a-158">セキュリティ トークンの一意の識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-158">Gets a unique identifier of the security token.</span></span></summary>
        <value><span data-ttu-id="4858a-159">セキュリティ トークンの一意の識別子。</span><span class="sxs-lookup"><span data-stu-id="4858a-159">The unique identifier of the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-160">通常は、セキュリティ トークンが XML にシリアル化されるときに、セキュリティ トークンの `Id` 属性に、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> プロパティの値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="4858a-160">Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4858a-161"><xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4858a-161">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="4858a-162">このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4858a-162">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="4858a-163">これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4858a-163">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="4858a-164">このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4858a-164">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="4858a-165">次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> プロパティのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-165">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4858a-166"><see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-166">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="4858a-167">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-167">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <param name="skiClause"><span data-ttu-id="4858a-168">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-168">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="4858a-169">このインスタンスのキー識別子を指定したキー識別子に解決できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="4858a-169">Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="4858a-170"><see langword="true" /> が <paramref name="keyIdentifierClause" /> で <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> プロパティと同じ一意の識別子を保持している場合は <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-170"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-171">既定の実装では、型のキー識別子句がサポートされ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span><span class="sxs-lookup"><span data-stu-id="4858a-171">The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="4858a-172">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-172">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <param name="skiClause"><span data-ttu-id="4858a-173">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-173">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</span></span></param>
        <summary><span data-ttu-id="4858a-174">指定したキー識別句のキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-174">Gets the key for the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="4858a-175">キーを表す <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-175">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-176"><xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> メソッドは、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> を呼び出して、指定したキー識別子句がこのインスタンスと同じかどうかを最初に確認します。</span><span class="sxs-lookup"><span data-stu-id="4858a-176">The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.</span></span>  
  
 <span data-ttu-id="4858a-177">コレクションが空でない場合、および <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> が `true`を返す場合、既定の実装は <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> コレクションの最初の要素を返します。それ以外の場合は `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="4858a-177">The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4858a-178"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> から継承した <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドを実装している場合に、<paramref name="keyIdentifierClause" /> を解決できないときは、<see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4858a-178">When you inherit from <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, and implement the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method and <paramref name="keyIdentifierClause" /> cannot be resolved, return <see langword="null" />.</span></span> <span data-ttu-id="4858a-179"><see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドから例外をスローすることはできません。</span><span class="sxs-lookup"><span data-stu-id="4858a-179">An exception should not be thrown from the <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> method.</span></span></para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4858a-180">セキュリティ トークンに関連付けられた暗号化キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-180">Gets the cryptographic keys associated with the security token.</span></span></summary>
        <value><span data-ttu-id="4858a-181">セキュリティ トークンに関連付けられている一連のキーを含む、<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 型の <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-181">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-182">トークンまたは SOAP メッセージを保護するために、このセキュリティトークンの暗号化キーを設定するには、<xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="4858a-182">Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message.</span></span> <span data-ttu-id="4858a-183">キーは、特に、トークンまたは SOAP メッセージのデジタル署名または暗号化に使用できます。</span><span class="sxs-lookup"><span data-stu-id="4858a-183">The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4858a-184"><xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4858a-184">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="4858a-185">このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4858a-185">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="4858a-186">これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4858a-186">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="4858a-187">このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4858a-187">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="4858a-188">次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> プロパティのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-188">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4858a-189"><see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-189">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4858a-190">このセキュリティ トークンの有効期間の開始時点を取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-190">Gets the first instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="4858a-191">このセキュリティ トークンの有効期間の開始時点を示す <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-191">A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-192"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。</span><span class="sxs-lookup"><span data-stu-id="4858a-192">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="4858a-193"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。</span><span class="sxs-lookup"><span data-stu-id="4858a-193">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4858a-194"><xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4858a-194">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="4858a-195">このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4858a-195">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="4858a-196">これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4858a-196">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="4858a-197">このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4858a-197">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="4858a-198">次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> プロパティのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-198">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4858a-199"><see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-199">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4858a-200">このセキュリティ トークンの有効期間の終了時点を取得します。</span><span class="sxs-lookup"><span data-stu-id="4858a-200">Gets the last instant in time at which this security token is valid.</span></span></summary>
        <value><span data-ttu-id="4858a-201">このセキュリティ トークンの有効期間の終了の時点を示す <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4858a-201">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4858a-202"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。</span><span class="sxs-lookup"><span data-stu-id="4858a-202">Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid.</span></span> <span data-ttu-id="4858a-203"><xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。</span><span class="sxs-lookup"><span data-stu-id="4858a-203">The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4858a-204"><xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="4858a-204">The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="4858a-205">このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="4858a-205">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="4858a-206">これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="4858a-206">It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens.</span></span> <span data-ttu-id="4858a-207">このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4858a-207">For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="4858a-208">次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="4858a-208">The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property.</span></span>  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4858a-209"><see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4858a-209">You must override the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
