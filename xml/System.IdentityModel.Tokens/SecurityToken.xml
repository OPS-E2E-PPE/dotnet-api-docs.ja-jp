<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ac8e49020ef481746923f2680ef925d9ea20383" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979318" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>すべてのセキュリティ トークンを実装するために使用される基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セキュリティ トークンを使用して、認証資格情報を提供するか、メッセージを保護します。  
  
 セキュリティトークンは、認証資格情報や暗号化キーマテリアルを提供するために使用できます。また、Security Token Service (STS) によって発行されたセキュリティトークンの場合は、サブジェクトに関するクレームのコレクションでも使用できます。 すべてのセキュリティトークンは、<xref:System.IdentityModel.Tokens.SecurityToken> クラスから派生します。  
  
 .NET 4.5 以降では、Windows Identity Foundation (WIF) は .NET Framework に完全に統合されており、WIF によって公開されるクラスは、コード内でセキュリティトークンを処理するために推奨される方法です。 WIF では、セキュリティトークンは XML 表現との間でシリアル化および逆シリアル化され、<xref:System.IdentityModel.Tokens.SecurityTokenHandler> 基底クラスから派生したクラスを使用して検証されます。 トークンを検証するには、トークンが有効であることを保証するだけでなく、認証と承認の決定に使用できるトークンから <xref:System.Security.Claims.ClaimsIdentity> インスタンスも返す必要があります。 <xref:System.Security.Claims.ClaimsIdentity> は、トークンに含まれている要求からだけでなく、トークン型自体に固有のクレームからも、トークンハンドラーによる <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> メソッドの実装によって構築されます。  
  
 WIF には、次の種類のセキュリティトークンのサポートが付属しています。  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: SAML 2.0 アサーションに基づくセキュリティトークンを表します。 このトークン型は、通常、WS-TRUST または WS-FEDERATION セキュリティトークン要求 (RST) に応答して Security Token Service によって発行されます。  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>: SAML 1.1 アサーションに基づくセキュリティトークンを表します。 このトークン型は、通常、WS-TRUST または WS-FEDERATION セキュリティトークン要求 (RST) に応答して Security Token Service によって発行されます。  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> と <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: SOAP メッセージで受信または送信される Kerberos チケットに基づくセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: RSA アルゴリズムを使用して作成されたキーに基づくセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: セッションに関する情報を含むセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: ユーザー名とパスワードに基づくセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Windows ドメインまたはユーザーアカウントの id に基づくセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: x.509 証明書に基づくセキュリティトークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Windows ドメインユーザーまたはローカルコンピューターのユーザーアカウントにマップされた x.509 証明書に基づくセキュリティトークンを表します。  
  
 <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> と <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>という2つのセキュリティトークンクラスを使用して、一般的なケースの処理に役立てることができます。  
  
 広範なセキュリティトークンは、次の3つの主なカテゴリに分類されます。  
  
-   暗号化キーマテリアルを格納または参照するトークン。 たとえば、<xref:System.IdentityModel.Tokens.RsaSecurityToken> と <xref:System.IdentityModel.Tokens.X509SecurityToken> の種類は、この目的でよく使用されます。  
  
-   既に認証されているユーザーの資格情報を表すトークン。 たとえば、<xref:System.IdentityModel.Tokens.UserNameSecurityToken>、<xref:System.IdentityModel.Tokens.WindowsSecurityToken>、および証明書を使用して認証されたユーザーの場合、<xref:System.IdentityModel.Tokens.X509SecurityToken> の種類です。  
  
-   WS-TRUST プロトコルまたは WS-FEDERATION プロトコルを使用するセキュリティトークン要求への応答として Security Token Service (STS) によって発行されるトークン。 通常、これらは `wst:RequestSecurityTokenResponse` XML フラグメントで返されます。 <xref:System.IdentityModel.Tokens.Saml2SecurityToken> と <xref:System.IdentityModel.Tokens.SamlSecurityToken> の種類は、これらのトークンを表すためによく使用されます。  
  
 特別なトークンの種類である <xref:System.IdentityModel.Tokens.SessionSecurityToken>には、アクティブまたはパッシブのシナリオでセッションを使用するときにプリンシパルを再作成するために必要な情報が含まれています。  
  
 既存のトークンの種類に機能を追加するには、トークンに追加する新しい要素をサポートするために、特定の型とそれに関連付けられているトークンハンドラーから派生することができます。 新しいトークン型のサポートを追加するには、<xref:System.IdentityModel.Tokens.SecurityToken> クラスから直接派生させることができます。 これを行う場合は、<xref:System.IdentityModel.Tokens.SecurityTokenHandler> クラスから派生することによって、トークンハンドラークラスも作成する必要があります。 トークンの使用方法によっては、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> クラスから派生することによって、<xref:System.IdentityModel.Tokens.IssuerTokenResolver> クラスと1つ以上のカスタムキー識別子句の型から派生することによって、カスタムトークンリゾルバーを作成することが必要になる場合もあります。  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。 このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。 これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。 このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。 次のコードは、`SimpleWebToken` クラスの実装を示しています。 このクラスは <xref:System.IdentityModel.Tokens.SecurityToken>を拡張します。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />、<see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />、<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />、および <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> の各プロパティをオーバーライドする必要があります。 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />、<see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />、<see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />、および <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> の各メソッドは、すべて <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />型のキー識別子をサポートしています。 派生クラスの他のキー識別子の型をサポートするには、これらのメソッドをオーバーライドする必要があります。</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> クラスを初期化するために、派生クラスのコンストラクターによって呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</typeparam>
        <summary>このセキュリティ トークンが、指定したキー識別子を作成できるかどうかを示す値を取得します。</summary>
        <returns><see langword="true" /> の型が <paramref name="T" /> の場合は <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。 キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。  
  
 既定の実装では、<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>型のキー識別子句がサポートされています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</typeparam>
        <summary>指定したキー識別句を作成します。</summary>
        <returns>セキュリティ トークンのキー識別子句である <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。 キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。  
  
 既定の実装では、<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>型のキー識別子句がサポートされています。 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> 型のキー識別句を作成できない場合は、<xref:System.NotSupportedException> がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンの一意の識別子を取得します。</summary>
        <value>セキュリティ トークンの一意の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、セキュリティ トークンが XML にシリアル化されるときに、セキュリティ トークンの `Id` 属性に、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> プロパティの値が設定されます。  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。 このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。 これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。 このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。 次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> プロパティのオーバーライドを示しています。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> プロパティをオーバーライドする必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>このインスタンスのキー識別子を指定したキー識別子に解決できるかどうかを示す値を返します。</summary>
        <returns><paramref name="keyIdentifierClause" /> が <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> で <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> プロパティと同じ一意の識別子を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、型のキー識別子句がサポートされ <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause keyIdentifierClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>指定したキー識別句のキーを取得します。</summary>
        <returns>キーを表す <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> メソッドは、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> を呼び出して、指定したキー識別子句がこのインスタンスと同じかどうかを最初に確認します。  
  
 コレクションが空でない場合、および <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> が `true`を返す場合、既定の実装は <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> コレクションの最初の要素を返します。それ以外の場合は `null`を返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> から継承した <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドを実装している場合に、<paramref name="keyIdentifierClause" /> を解決できないときは、<see langword="null" /> を返します。 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドから例外をスローすることはできません。</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンに関連付けられた暗号化キーを取得します。</summary>
        <value>セキュリティ トークンに関連付けられている一連のキーを含む、<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 型の <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トークンまたは SOAP メッセージを保護するために、このセキュリティトークンの暗号化キーを設定するには、<xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> プロパティを使用します。 キーは、特に、トークンまたは SOAP メッセージのデジタル署名または暗号化に使用できます。  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。 このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。 これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。 このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。 次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> プロパティのオーバーライドを示しています。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> プロパティをオーバーライドする必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このセキュリティ トークンの有効期間の開始時点を取得します。</summary>
        <value>このセキュリティ トークンの有効期間の開始時点を示す <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。 このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。 これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。 このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。 次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> プロパティのオーバーライドを示しています。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> プロパティをオーバーライドする必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このセキュリティ トークンの有効期間の終了時点を取得します。</summary>
        <value>このセキュリティ トークンの有効期間の終了の時点を示す <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。  
  
   
  
## Examples  
 <xref:System.IdentityModel.Tokens.SecurityToken> のトピックで使用されているコード例は、`Custom Token` のサンプルから抜粋したものです。 このサンプルには、単純な Web トークン (SWT) の処理を可能にするカスタムクラスが用意されています。 これには、`SimpleWebToken` クラスの実装、`SimpleWebTokenHandler` および SWT トークンをサポートするその他のクラスが含まれます。 このサンプルと、WIF で使用できるその他のサンプルと、それらをダウンロードする場所については、「 [WIF Code Sample Index](/dotnet/framework/security/wif-code-sample-)」を参照してください。 次のコードは、<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティのオーバーライドを示しています。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> プロパティをオーバーライドする必要があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
