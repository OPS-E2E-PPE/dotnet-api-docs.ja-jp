<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4720ad52ef1619f44f69d358d65641316870ff2" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73385453" /></Metadata><TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WindowsIdentity = class&#xA;    inherit ClaimsIdentity&#xA;    interface IIdentity&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e47a-101">Windows ユーザーを表します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-101">Represents a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-102"><xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> メソッドを呼び出して、現在のユーザーを表す <xref:System.Security.Principal.WindowsIdentity> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e47a-103">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1e47a-104">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1e47a-105">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1e47a-106">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1e47a-107">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-108">次の例は、<xref:System.Security.Principal.WindowsIdentity> クラスのメンバーの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="1e47a-109">アンマネージ Win32 `LogonUser` 関数の呼び出しを使用して Windows アカウントトークンを取得し、そのトークンを使用して別のユーザーの権限を借用する方法を示す例については、<xref:System.Security.Principal.WindowsImpersonationContext> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e47a-110"><see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity userToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="1e47a-111">コードが実行されている対象ユーザーのアカウント トークン。</span><span class="sxs-lookup"><span data-stu-id="1e47a-111">The account token for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="1e47a-112">指定した Windows アカウント トークンによって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-113">次の表に、<xref:System.Security.Principal.WindowsIdentity>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="1e47a-114">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1e47a-114">Property</span></span>|<span data-ttu-id="1e47a-115">初期値</span><span class="sxs-lookup"><span data-stu-id="1e47a-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-116">Windows API `LogonUser` 関数などのアンマネージコードを呼び出すことによって、`userToken` によって表されるトークンを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Windows API `LogonUser` function.</span></span> <span data-ttu-id="1e47a-117">Windows API `CloseHandle` 関数を呼び出すことによって、常に `userToken` を解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-117">Always release `userToken` by calling the Windows API `CloseHandle` function.</span></span> <span data-ttu-id="1e47a-118">アンマネージコードの呼び出しの詳細については、「[アンマネージ DLL 関数](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)の使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e47a-119"><paramref name="userToken" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-119"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="1e47a-120">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-120">-or-</span></span> 
 <span data-ttu-id="1e47a-121"><paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-121"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-122">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-122">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-123">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-123">-or-</span></span>  
  
 <span data-ttu-id="1e47a-124">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-124">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-125">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-126"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="1e47a-127"><see cref="T:System.Security.Principal.WindowsIdentity" /> の新しいインスタンスの生成元となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="1e47a-128">指定した <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを使用して、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity sUserPrincipalName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="1e47a-129">コードが実行されている対象ユーザーの UPN。</span><span class="sxs-lookup"><span data-stu-id="1e47a-129">The UPN for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="1e47a-130">指定した UPN (User Principal Name) で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-131">UPN の形式は、 *username*@*domainname*.com です。つまり、電子メールアドレスです。</span><span class="sxs-lookup"><span data-stu-id="1e47a-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="1e47a-132">`sUserPrincipalName` で識別された UPN は、Windows API `LsaLogonUser` 関数を通じてそのユーザーのトークンを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Windows API `LsaLogonUser` function.</span></span> <span data-ttu-id="1e47a-133">その後、トークンを使用してユーザーを識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="1e47a-134">指定された UPN を使用してログオンできないことが原因で、例外が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-135">このコンストラクターは、Windows Server 2003 以降のドメインに参加しているコンピューターでのみ使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="1e47a-136">以前のドメイン型に対しては例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="1e47a-137">この制限は、このコンストラクターが Windows Server 2003 で初めて導入された[KERB_S4U_LOGON 構造体](https://go.microsoft.com/fwlink/?LinkId=143533)を使用していることが原因です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1e47a-138">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1e47a-139">使用できるメモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-139">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-140">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-140">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-141">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-141">-or-</span></span>  
  
 <span data-ttu-id="1e47a-142">コンピューターは Windows 2003 以降のドメインに接続されていません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-142">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="1e47a-143">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-143">-or-</span></span>  
  
 <span data-ttu-id="1e47a-144">コンピューターは Windows 2003 以降を実行していません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-144">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="1e47a-145">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-145">-or-</span></span>  
  
 <span data-ttu-id="1e47a-146">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-146">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-147">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-147">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-148"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="1e47a-149">コードが実行されている対象ユーザーのアカウント トークン。</span><span class="sxs-lookup"><span data-stu-id="1e47a-149">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="1e47a-150">参照専用。ユーザーを識別するために使用する認証の種類。</span><span class="sxs-lookup"><span data-stu-id="1e47a-150">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="1e47a-151">指定した Windows アカウント トークンと指定した認証の種類によって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-152">次の表に、<xref:System.Security.Principal.WindowsIdentity>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="1e47a-153">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1e47a-153">Property</span></span>|<span data-ttu-id="1e47a-154">初期値</span><span class="sxs-lookup"><span data-stu-id="1e47a-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="1e47a-155">`type` パラメーターの値は、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> パラメーターを設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="1e47a-156">`type` が `null`場合、セキュリティシステムは <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> を windows Vista 以降のバージョンの Windows オペレーティングシステムで `Negotiate` に設定し、以前のバージョンの Windows オペレーティングシステムでは `Kerberos` します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="1e47a-157">セキュリティシステムでは、この値は使用されません。情報提供のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-158">Windows API `LogonUser` 関数などのアンマネージコードを呼び出すことによって、`userToken` によって表されるトークンを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Windows API `LogonUser` function.</span></span> <span data-ttu-id="1e47a-159">Windows API `CloseHandle` 関数を呼び出すことによって、常に `userToken` を解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-159">Always release `userToken` by calling the Windows API `CloseHandle` function.</span></span> <span data-ttu-id="1e47a-160">アンマネージコードの呼び出しの詳細については、「[アンマネージ DLL 関数](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)の使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-161">次のコードは、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> コンストラクターを使用して、指定した Windows アカウントトークンと指定した認証の種類によって表されるユーザーの <xref:System.Security.Principal.WindowsIdentity> クラスの新しいインスタンスを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="1e47a-162">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e47a-163"><paramref name="userToken" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-163"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="1e47a-164">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-164">-or-</span></span> 
 <span data-ttu-id="1e47a-165"><paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-165"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-166">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-166">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-167">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-167">-or-</span></span>  
  
 <span data-ttu-id="1e47a-168">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-168">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-169">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-169">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-170"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1e47a-171">ユーザーのアカウント情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-171">The object containing the account information for the user.</span></span></param>
        <param name="context"><span data-ttu-id="1e47a-172">ストリーム特性を示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-172">An object that indicates the stream characteristics.</span></span></param>
        <summary><span data-ttu-id="1e47a-173"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> ストリーム内の情報で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e47a-174"><see cref="T:System.Security.Principal.WindowsIdentity" /> はプロセス間でシリアル化することはできません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-174">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-175">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-175">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-176">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-176">-or-</span></span>  
  
 <span data-ttu-id="1e47a-177">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-177">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-178">プリンシパルオブジェクトを操作する権限。</span><span class="sxs-lookup"><span data-stu-id="1e47a-178">for ability to manipulate the principal object.</span></span> <span data-ttu-id="1e47a-179"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : string * string -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (sUserPrincipalName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="1e47a-180">コードが実行されている対象ユーザーの UPN。</span><span class="sxs-lookup"><span data-stu-id="1e47a-180">The UPN for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="1e47a-181">参照専用。ユーザーを識別するために使用する認証の種類。</span><span class="sxs-lookup"><span data-stu-id="1e47a-181">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="1e47a-182">指定した UPN (User Principal Name) と指定した認証の種類で表されるユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-182">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-183">`type` パラメーターの値は、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> パラメーターを設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-183">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="1e47a-184">`type` が `null`場合、セキュリティシステムは <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> を windows Vista 以降のバージョンの Windows オペレーティングシステムで `Negotiate` に設定し、以前のバージョンの Windows オペレーティングシステムでは `Kerberos` します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-184">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="1e47a-185">セキュリティシステムでは、この値は使用されません。情報提供のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-185">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="1e47a-186">`sUserPrincipalName` で識別された UPN は、Windows API `LsaLogonUser` 関数を通じてそのユーザーのトークンを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-186">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Windows API `LsaLogonUser` function.</span></span> <span data-ttu-id="1e47a-187">その後、トークンを使用してユーザーを識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-187">In turn that token is used to identify the user.</span></span> <span data-ttu-id="1e47a-188">指定された UPN を使用してログオンできないことが原因で、例外が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-188">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-189">このコンストラクターは、Windows Server 2003 以降のドメインに参加しているコンピューターでのみ使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-189">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="1e47a-190">以前のドメイン型に対しては例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-190">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="1e47a-191">この制限は、このコンストラクターが Windows Server 2003 で初めて導入された[KERB_S4U_LOGON 構造体](https://go.microsoft.com/fwlink/?LinkId=143533)を使用していることが原因です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-191">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](https://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1e47a-192">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-192">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1e47a-193">使用できるメモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-193">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-194">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-194">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-195">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-195">-or-</span></span>  
  
 <span data-ttu-id="1e47a-196">コンピューターは Windows 2003 以降のドメインに接続されていません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-196">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="1e47a-197">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-197">-or-</span></span>  
  
 <span data-ttu-id="1e47a-198">コンピューターは Windows 2003 以降を実行していません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-198">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="1e47a-199">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-199">-or-</span></span>  
  
 <span data-ttu-id="1e47a-200">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-200">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-201">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-201">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-202"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-202">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="1e47a-203">コードが実行されている対象ユーザーのアカウント トークン。</span><span class="sxs-lookup"><span data-stu-id="1e47a-203">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="1e47a-204">参照専用。ユーザーを識別するために使用する認証の種類。</span><span class="sxs-lookup"><span data-stu-id="1e47a-204">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="1e47a-205">列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1e47a-205">One of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="1e47a-206">指定した Windows アカウント トークン、指定した認証の種類、および指定した Windows アカウントの種類によって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-206">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-207">次の表に、<xref:System.Security.Principal.WindowsIdentity>のインスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-207">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="1e47a-208">プロパティ</span><span class="sxs-lookup"><span data-stu-id="1e47a-208">Property</span></span>|<span data-ttu-id="1e47a-209">初期値</span><span class="sxs-lookup"><span data-stu-id="1e47a-209">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="1e47a-210">`type` パラメーターの値は、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> パラメーターを設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-210">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="1e47a-211">`type` が `null`場合、セキュリティシステムは <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> を windows Vista 以降のバージョンの Windows オペレーティングシステムで `Negotiate` に設定し、以前のバージョンの Windows オペレーティングシステムでは `Kerberos` します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-211">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="1e47a-212">セキュリティシステムでは、この値は使用されません。情報提供のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-212">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-213">Windows API `LogonUser` 関数などのアンマネージコードを呼び出すことによって、`userToken` によって表されるトークンを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-213">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Windows API `LogonUser` function.</span></span> <span data-ttu-id="1e47a-214">Windows API `CloseHandle` 関数を呼び出すことによって、常に `userToken` を解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-214">Always release `userToken` by calling the Windows API `CloseHandle` function.</span></span> <span data-ttu-id="1e47a-215">アンマネージコードの呼び出しの詳細については、「[アンマネージ DLL 関数](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)の使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-215">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-216">次のコードは、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> コンストラクターを使用して、指定した Windows アカウントトークン、指定した認証の種類、および指定された Windows アカウントの種類によって表されるユーザーの <xref:System.Security.Principal.WindowsIdentity> クラスの新しいインスタンスを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-216">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="1e47a-217">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-217">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e47a-218"><paramref name="userToken" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-218"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="1e47a-219">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-219">-or-</span></span> 
 <span data-ttu-id="1e47a-220"><paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-220"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-221">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-221">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-222">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-222">-or-</span></span>  
  
 <span data-ttu-id="1e47a-223">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-223">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-224">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-224">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-225"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsIdentity : nativeint * string * System.Security.Principal.WindowsAccountType * bool -&gt; System.Security.Principal.WindowsIdentity" Usage="new System.Security.Principal.WindowsIdentity (userToken, type, acctType, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="1e47a-226">コードが実行されている対象ユーザーのアカウント トークン。</span><span class="sxs-lookup"><span data-stu-id="1e47a-226">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="1e47a-227">参照専用。ユーザーを識別するために使用する認証の種類。</span><span class="sxs-lookup"><span data-stu-id="1e47a-227">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="1e47a-228">列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1e47a-228">One of the enumeration values.</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="1e47a-229">ユーザーが認証されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-229"><see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e47a-230">指定した Windows アカウント トークン、指定した認証の種類、指定した Windows アカウントの種類、および指定した認証ステータスによって表されるユーザーを表す、<see cref="T:System.Security.Principal.WindowsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-230">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-231">`type` パラメーターの値は、<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> パラメーターを設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-231">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="1e47a-232">`type` が `null`場合、セキュリティシステムは <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> を windows Vista 以降のバージョンの Windows オペレーティングシステムで `Negotiate` に設定し、以前のバージョンの Windows オペレーティングシステムでは `Kerberos` します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-232">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="1e47a-233">セキュリティシステムでは、この値は使用されません。情報提供のみを目的としています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-233">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="1e47a-234">Windows API `LogonUser` 関数などのアンマネージコードを呼び出すことによって、`userToken` によって表されるトークンを取得できます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-234">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Windows API `LogonUser` function.</span></span> <span data-ttu-id="1e47a-235">Windows API `CloseHandle` 関数を呼び出すことによって、常に `userToken` を解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-235">Always release `userToken` by calling the Windows API `CloseHandle` function.</span></span> <span data-ttu-id="1e47a-236">アンマネージコードの呼び出しの詳細については、「[アンマネージ DLL 関数](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)の使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-236">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-237">次のコードは、<xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> コンストラクターを使用して、指定された Windows アカウントトークン、指定された認証の種類、指定された Windows アカウントの種類、および指定されたユーザーの <xref:System.Security.Principal.WindowsIdentity> クラスの新しいインスタンスを作成する方法を示しています。認証の状態。</span><span class="sxs-lookup"><span data-stu-id="1e47a-237">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="1e47a-238">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-238">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e47a-239"><paramref name="userToken" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-239"><paramref name="userToken" /> is 0.</span></span>  
  
<span data-ttu-id="1e47a-240">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-240">-or-</span></span> 
 <span data-ttu-id="1e47a-241"><paramref name="userToken" /> は、複製され、偽装に対して無効になっています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-241"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-242">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-242">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-243">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-243">-or-</span></span>  
  
 <span data-ttu-id="1e47a-244">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-244">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-245">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-245">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-246"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Usage="System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-247">この <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> インスタンスのこの <see cref="T:System.Security.Principal.WindowsIdentity" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-247">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span></span></summary>
        <value><span data-ttu-id="1e47a-248"><see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-248">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-249">ユーザーを識別するために使用する認証の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-249">Gets the type of authentication used to identify the user.</span></span></summary>
        <value><span data-ttu-id="1e47a-250">ユーザーを識別するために使用する認証の種類。</span><span class="sxs-lookup"><span data-stu-id="1e47a-250">The type of authentication used to identify the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-251">このプロパティは情報提供です。セキュリティシステムでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-251">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="1e47a-252">Windows Vista 以降のバージョンの Windows オペレーティングシステムでは、このプロパティの既定値は `Negotiate`です。これにより、ユーザーが構成したセキュリティポリシーに基づいて最適なセキュリティサポートプロバイダー (SSP) が選択されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-252">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="1e47a-253">以前のバージョンの Windows オペレーティングシステムの既定のプロパティ値は `Kerberos`です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-253">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1e47a-254">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-254">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1e47a-255">使用できるメモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-255">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-256">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-256">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="1e47a-257">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-257">-or-</span></span>  
  
 <span data-ttu-id="1e47a-258">コンピューターは Windows 2003 以降のドメインに接続されていません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-258">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="1e47a-259">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-259">-or-</span></span>  
  
 <span data-ttu-id="1e47a-260">コンピューターは Windows 2003 以降を実行していません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-260">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="1e47a-261">- または -</span><span class="sxs-lookup"><span data-stu-id="1e47a-261">-or-</span></span>  
  
 <span data-ttu-id="1e47a-262">ユーザーは、コンピューターが接続されているドメインのメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-262">The user is not a member of the domain the computer is attached to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__79))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-263">この Windows ID によって表されるユーザーのすべてのクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-263">Gets all claims for the user represented by this Windows identity.</span></span></summary>
        <value><span data-ttu-id="1e47a-264">この <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトに対するクレームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="1e47a-264">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="windowsIdentity.Clone " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Security.Claims.ClaimsIdentity" Usage="windowsIdentity.Clone " FrameworkAlternate="dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-265">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-265">Creates a new  object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="1e47a-266">現在のインスタンスのコピー。</span><span class="sxs-lookup"><span data-stu-id="1e47a-266">A copy of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberSignature Language="F#" Value="val mutable DefaultIssuer : string" Usage="System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-267">既定の <see cref="T:System.Security.Claims.ClaimsIdentity" /> 発行元の名前を識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-267">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-268"><see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> プロパティのキーを持つクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-268">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="1e47a-269"><see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> プロパティ キーを持つクレームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="1e47a-269">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e47a-270"><see cref="T:System.Security.Principal.WindowsIdentity" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-270">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-271"><see cref="T:System.Security.Principal.WindowsIdentity" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-271">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-272"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> を使い終わったら <xref:System.Security.Principal.WindowsIdentity> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-272">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="1e47a-273"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A>メソッドによって、<xref:System.Security.Principal.WindowsIdentity> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-273">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="1e47a-274"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A>呼び出し後は、<xref:System.Security.Principal.WindowsIdentity>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Security.Principal.WindowsIdentity> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-274">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="1e47a-275">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-275">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-276"><xref:System.Security.Principal.WindowsIdentity>への最後の参照を解放する前に、必ず<xref:System.Security.Principal.WindowsIdentity.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-276">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="1e47a-277">そうしないと、ガベージ コレクターが <xref:System.Security.Principal.WindowsIdentity> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-277">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="windowsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1e47a-278">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-278"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1e47a-279"><see cref="T:System.Security.Principal.WindowsIdentity" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-279">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-280">このメソッドは、パブリック `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-280">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1e47a-281">`Dispose()` は、`disposing` パラメーターを `true` に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-281">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1e47a-282"><xref:System.Object.Finalize%2A> は、`disposing` が `false` に設定された `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-282"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1e47a-283">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Principal.WindowsIdentity> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-283">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="1e47a-284">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-284">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1e47a-285">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-285">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1e47a-286">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-286">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1e47a-287"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-287">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="1e47a-288"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-288">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WindowsIdentity ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="windowsIdentity.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-289">現在のインスタンスに保持されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-289">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="1e47a-290">このメンバーは .NET Framework バージョン2.0 以降のバージョンでは削除されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-290">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>


<span data-ttu-id="1e47a-291">アプリケーションコードはこのメソッドを呼び出しません。ガベージコレクターによる終了処理が無効になっていない限り、ガベージコレクションの実行中に自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-291">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="1e47a-292">詳細については、次のトピックを参照してください。 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> および <xref:System.Object.Finalize></span><span class="sxs-lookup"><span data-stu-id="1e47a-292">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="1e47a-293">このメソッドは、<xref:System.Object.Finalize> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="1e47a-293">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberSignature Language="F#" Value="static member GetAnonymous : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetAnonymous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-294">匿名ユーザーを表すために、コード内で sentinel 値として使用できる <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-294">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span></span> <span data-ttu-id="1e47a-295">プロパティ値は、Windows オペレーティング システムが使用する組み込み匿名 ID を表しません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-295">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span></span></summary>
        <returns><span data-ttu-id="1e47a-296">匿名のユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-296">An object that represents an anonymous user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-297">このプロパティは、操作を匿名として扱うことができる空の <xref:System.Security.Principal.WindowsIdentity> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-297">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="1e47a-298">プロパティ値が Windows 匿名ユーザーに対応しておらず、権限借用に使用できません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-298">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="1e47a-299">また、このプロパティによって返される id は静的ではないことに注意してください。<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> を呼び出すたびに、異なる匿名 id が返されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-299">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="1e47a-300"><xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>から戻り値を検出するには、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-300">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="1e47a-301">ただし、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> は、Windows 匿名 id と、このメソッドによって返される匿名 id の両方を検出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-301">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="1e47a-302">後者の id を使用するには、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> プロパティに依存するのではなく、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> の戻り値をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="1e47a-302">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-303">次のコードは、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> メソッドを使用して、匿名の Windows ユーザーを表す <xref:System.Security.Principal.WindowsIdentity> オブジェクトを返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-303">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="1e47a-304">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-304">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e47a-305">現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-305">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberSignature Language="F#" Value="static member GetCurrent : unit -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-306">現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-306">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
        <returns><span data-ttu-id="1e47a-307">現在のユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-307">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-308">次のコードは、<xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> メソッドを使用して、現在の Windows ユーザーを表す <xref:System.Security.Principal.WindowsIdentity> オブジェクトを返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-308">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="1e47a-309">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-309">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-310">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-310">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-311">プリンシパルオブジェクトを操作する権限。</span><span class="sxs-lookup"><span data-stu-id="1e47a-311">for ability to manipulate the principal object.</span></span> <span data-ttu-id="1e47a-312"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-312">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : bool -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent ifImpersonating" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating"><span data-ttu-id="1e47a-313">スレッドが現在偽装中の場合にだけ <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すには、<see langword="true" />。スレッドが偽装中の場合にスレッドの <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すか、またはスレッドが現在偽装中でない場合にプロセスの <see cref="T:System.Security.Principal.WindowsIdentity" /> を返すには、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-313"><see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span></span></param>
        <summary><span data-ttu-id="1e47a-314"><paramref name="ifImpersonating" /> パラメーターの値に応じてスレッドまたはプロセスの Windows ID を表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-314">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="1e47a-315">Windows ユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-315">An object that represents a Windows user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-316">`ifImpersonating` が `true`、スレッドが偽装されていない場合、返される <xref:System.Security.Principal.WindowsIdentity> オブジェクトには値がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-316">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="1e47a-317">`ifImpersonating` が `false`、スレッドが偽装されている場合は、スレッドの <xref:System.Security.Principal.WindowsIdentity> が返されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-317">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="1e47a-318">`ifImpersonating` が `false`、スレッドが偽装されていない場合は、プロセスの <xref:System.Security.Principal.WindowsIdentity> が返されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-318">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-319">プリンシパルオブジェクトを操作する権限。</span><span class="sxs-lookup"><span data-stu-id="1e47a-319">for ability to manipulate the principal object.</span></span> <span data-ttu-id="1e47a-320"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-320">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Security.Principal.TokenAccessLevels -&gt; System.Security.Principal.WindowsIdentity" Usage="System.Security.Principal.WindowsIdentity.GetCurrent desiredAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="desiredAccess"><span data-ttu-id="1e47a-321">列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1e47a-321">A bitwise combination of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="1e47a-322">目的のトークン アクセス レベルを指定して現在の Windows ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-322">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span></span></summary>
        <returns><span data-ttu-id="1e47a-323">現在のユーザーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-323">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-324">`desiredAccess` パラメーターは、アクセストークンへの要求されたアクセスの種類を識別するアクセスマスクを指定します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-324">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="1e47a-325">これらの要求されたアクセスの種類は、トークンの随意アクセス制御リスト (DACL) と比較され、許可または拒否されるアクセスの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-325">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-326">プリンシパルオブジェクトを操作する権限。</span><span class="sxs-lookup"><span data-stu-id="1e47a-326">for ability to manipulate the principal object.</span></span> <span data-ttu-id="1e47a-327"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-327">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Security.Principal.IdentityReferenceCollection" Usage="System.Security.Principal.WindowsIdentity.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-328">現在の Windows ユーザーが属しているグループを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-328">Gets the groups the current Windows user belongs to.</span></span></summary>
        <value><span data-ttu-id="1e47a-329">現在の Windows ユーザーが属しているグループを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-329">An object representing the groups the current Windows user belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-330">次のコード例は、<xref:System.Security.Principal.WindowsIdentity.Groups%2A> プロパティを使用して、現在のユーザーが属するグループの id 参照を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-330">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="1e47a-331">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-331">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e47a-332">コードによって別の Windows ユーザーを偽装できるようにします。</span><span class="sxs-lookup"><span data-stu-id="1e47a-332">Allows code to impersonate a different Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberSignature Language="F#" Value="abstract member Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext&#xA;override this.Impersonate : unit -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="windowsIdentity.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e47a-333"><see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトによって表されるユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-333">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <returns><span data-ttu-id="1e47a-334">偽装前の Windows ユーザーを表すオブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-334">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-335">Windows NT プラットフォームでは、現在のユーザーは偽装を許可する十分な権限を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-335">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-336">次の例は、アンマネージ Win32 `LogonUser` 関数を呼び出して Windows アカウントトークンを取得する方法と、そのトークンを使用して別のユーザーの権限を借用した後、元の id に戻す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-336">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1e47a-337">偽装を実行しようとした匿名 ID。</span><span class="sxs-lookup"><span data-stu-id="1e47a-337">An anonymous identity attempted to perform an impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-338">Win32 エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-338">A Win32 error occurred.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1e47a-339">Microsoft Windows 98 および Windows Millennium Edition (Windows Me) プラットフォームにはユーザートークンがないため、これらのプラットフォームで偽装を行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-339">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="1e47a-340"><see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />を使用した後、<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> メソッドを呼び出して、偽装を終了することが重要です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-340">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; System.Security.Principal.WindowsImpersonationContext" Usage="System.Security.Principal.WindowsIdentity.Impersonate userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="1e47a-341">Windows アカウント トークンのハンドル。</span><span class="sxs-lookup"><span data-stu-id="1e47a-341">The handle of a Windows account token.</span></span> <span data-ttu-id="1e47a-342">通常、このトークンは、Windows API の <see langword="LogonUser" /> 関数の呼び出しなど、アンマネージド コードの呼び出しによって取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-342">This token is usually retrieved through a call to unmanaged code, such as a call to the Windows API <see langword="LogonUser" /> function.</span></span></param>
        <summary><span data-ttu-id="1e47a-343">指定したユーザー トークンによって表されるユーザーを偽装します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-343">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="1e47a-344">偽装前の Windows ユーザーを表すオブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-344">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-345">Windows NT プラットフォームでは、現在のユーザーは偽装を許可する十分な権限を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-345">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-346"><xref:System.IntPtr.Zero> の `userToken` 値を指定して <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> メソッドを呼び出すことは、Win32 `RevertToSelf` 関数を呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="1e47a-346">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="1e47a-347">現在、別のユーザーが偽装されている場合は、元のユーザーに制御が戻ります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-347">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="1e47a-348">アンマネージコードの呼び出しの詳細については、「[アンマネージ DLL 関数](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)の使用」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-348">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-349">次の例は、アンマネージ Win32 `LogonUser` 関数を呼び出して Windows アカウントトークンを取得する方法と、そのトークンを使用して別のユーザーの権限を借用した後、元の id に戻す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-349">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1e47a-350">Windows は、Windows NT ステータス コード STATUS_ACCESS_DENIED を返しました。</span><span class="sxs-lookup"><span data-stu-id="1e47a-350">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="1e47a-351">使用できるメモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-351">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1e47a-352">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-352">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-353">プリンシパルオブジェクトを操作し、アンマネージコードにアクセスする機能。</span><span class="sxs-lookup"><span data-stu-id="1e47a-353">for the ability to manipulate the principal object and access unmanaged code.</span></span> <span data-ttu-id="1e47a-354">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> および <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1e47a-354">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="1e47a-355">Microsoft Windows 98 および Windows Millennium Edition (Windows Me) プラットフォームにはユーザートークンがないため、これらのプラットフォームで偽装を行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-355">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="1e47a-356"><see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />を使用した後、<see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> メソッドを呼び出して、偽装を終了することが重要です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-356">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-357">ユーザーの偽装レベルを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-357">Gets the impersonation level for the user.</span></span></summary>
        <value><span data-ttu-id="1e47a-358">偽装レベルを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1e47a-358">One of the enumeration values that specifies the impersonation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-359">WMI (Windows Management Instrumentation) に接続するために使用する偽装レベルを記述します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-359">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-360">次のコード例は、<xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> プロパティを使用して、現在のユーザーの権限借用レベルを表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-360">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="1e47a-361">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-361">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-362">システムによってユーザー アカウントが匿名アカウントとして識別されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-362">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span></span></summary>
        <value><span data-ttu-id="1e47a-363">ユーザー アカウントが匿名アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-363"><see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-364"><xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> プロパティは、Windows 匿名 id と、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> メソッドによって返される匿名 id の両方を検出します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-364">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="1e47a-365">匿名アカウントは、通常、インターネットインフォメーションサービス (IIS) によって匿名アクセスが許可されている場合にのみ、ASP.NET ベースのアプリケーション内からのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-365">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-366">次のコードは、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> プロパティを使用して、ユーザーアカウントがシステムによって匿名アカウントとして識別されているかどうかを検出する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-366">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="1e47a-367">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-367">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-368">ユーザーが Windows により認証されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-368">Gets a value indicating whether the user has been authenticated by Windows.</span></span></summary>
        <value><span data-ttu-id="1e47a-369">ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-369"><see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGuest : bool" Usage="System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-370">システムによってユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> アカウントとして識別されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-370">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span></span></summary>
        <value><span data-ttu-id="1e47a-371">ユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-371"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-372">次のコードは、<xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> プロパティを使用して、ユーザーアカウントがシステムによって <xref:System.Security.Principal.WindowsAccountType.Guest> アカウントとして識別されているかどうかを示す値を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-372">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="1e47a-373">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-373">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystem : bool" Usage="System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-374">システムによってユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.System" /> アカウントとして識別されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-374">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span></span></summary>
        <value><span data-ttu-id="1e47a-375">ユーザー アカウントが <see cref="F:System.Security.Principal.WindowsAccountType.System" /> アカウントである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e47a-375"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-376">次のコードは、<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> プロパティを使用して、ユーザーアカウントがシステムによって <xref:System.Security.Principal.WindowsAccountType.System> アカウントとして識別されているかどうかを示す値を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-376">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="1e47a-377">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-377">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-378">ユーザーの Windows ログオン名を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-378">Gets the user's Windows logon name.</span></span></summary>
        <value><span data-ttu-id="1e47a-379">コードが実行されている対象ユーザーの Windows ログオン名。</span><span class="sxs-lookup"><span data-stu-id="1e47a-379">The Windows logon name of the user on whose behalf the code is being run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-380">ログオン名は、DOMAIN\USERNAME という形式になっています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-380">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-381">次のコードは、<xref:System.Security.Principal.WindowsIdentity.Name%2A> プロパティを使用して、ユーザーの Windows ログオン名を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-381">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="1e47a-382">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-382">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-383">トークン所有者のセキュリティ識別子 (SID) を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-383">Gets the security identifier (SID) for the token owner.</span></span></summary>
        <value><span data-ttu-id="1e47a-384">トークン所有者のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-384">An object for the token owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-385">SID は、すべての Windows NT 実装でユーザーまたはグループを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-385">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="1e47a-386">返される SID は、新しく作成されたオブジェクトに適用される既定の所有者 SID を識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-386">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-387">次のコード例は、<xref:System.Security.Principal.WindowsIdentity.Owner%2A> プロパティを使用して、トークン所有者のセキュリティ識別子を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-387">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="1e47a-388">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-388">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Action -&gt; unit" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="action" Type="System.Action" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle"><span data-ttu-id="1e47a-389">偽装した Windows ID の SafeAccessTokenHandle。</span><span class="sxs-lookup"><span data-stu-id="1e47a-389">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="action"><span data-ttu-id="1e47a-390">実行する System.Action。</span><span class="sxs-lookup"><span data-stu-id="1e47a-390">The System.Action to run.</span></span></param>
        <summary><span data-ttu-id="1e47a-391">指定したアクションを、偽装した Windows ID として実行します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-391">Runs the specified action as the impersonated Windows identity.</span></span> <span data-ttu-id="1e47a-392">偽装したメソッド呼び出しを使用して <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> で関数を実行するのではなく、<see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> を使用して関数をパラメーターとして直接指定することができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-392">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-393">次の例は、<xref:System.Security.Principal.WindowsIdentity> クラスを使用してユーザーを偽装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-393">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1e47a-394">このサンプルでは、コンソール画面でパスワードを入力するようにユーザーに求めます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-394">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="1e47a-395">コンソールウィンドウでは、マスクされた入力がネイティブでサポートされないため、パスワードは画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-395">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member RunImpersonated : Microsoft.Win32.SafeHandles.SafeAccessTokenHandle * Func&lt;'T&gt; -&gt; 'T" Usage="System.Security.Principal.WindowsIdentity.RunImpersonated (safeAccessTokenHandle, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1e47a-396">関数によって使用され、関数によって返されるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="1e47a-396">The type of object used by and returned by the function.</span></span></typeparam>
        <param name="safeAccessTokenHandle"><span data-ttu-id="1e47a-397">偽装した Windows ID の SafeAccessTokenHandle。</span><span class="sxs-lookup"><span data-stu-id="1e47a-397">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="func"><span data-ttu-id="1e47a-398">実行する System.Func。</span><span class="sxs-lookup"><span data-stu-id="1e47a-398">The System.Func to run.</span></span></param>
        <summary><span data-ttu-id="1e47a-399">指定した関数を、偽装した Windows ID として実行します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-399">Runs the specified function as the impersonated Windows identity.</span></span> <span data-ttu-id="1e47a-400">偽装したメソッド呼び出しを使用して <see cref="T:System.Security.Principal.WindowsImpersonationContext" /> で関数を実行するのではなく、<see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> を使用して関数をパラメーターとして直接指定することができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-400">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <returns><span data-ttu-id="1e47a-401">関数の結果。</span><span class="sxs-lookup"><span data-stu-id="1e47a-401">The result of the function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e47a-402">次の例は、<xref:System.Security.Principal.WindowsIdentity> クラスを使用してユーザーを偽装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-402">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1e47a-403">このサンプルでは、コンソール画面でパスワードを入力するようにユーザーに求めます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-403">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="1e47a-404">コンソールウィンドウでは、マスクされた入力がネイティブでサポートされないため、パスワードは画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-404">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="1e47a-405">逆シリアル化イベントのソース。</span><span class="sxs-lookup"><span data-stu-id="1e47a-405">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="1e47a-406"><see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、逆シリアル化が完了したときに逆シリアル化イベントによってコールバックされます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-406">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="1e47a-407"><see cref="T:System.Collections.Hashtable" /> をシリアル化するために必要な情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-407">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="1e47a-408"><see cref="T:System.Collections.Hashtable" /> に関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-408">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="1e47a-409"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、この実行コンテキストのインスタンスを再作成するのに必要な論理コンテキスト情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-409">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-410">このメソッドは、論理呼び出しコンテキスト情報を使用して <xref:System.Runtime.Serialization.SerializationInfo> を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-410">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="1e47a-411">逆シリアル化中に、実行コンテキストオブジェクトは、ストリームを介して送信される <xref:System.Runtime.Serialization.SerializationInfo> から再構成されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-411">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="1e47a-412">詳細については、「<xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-412">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1e47a-413">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-413">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1e47a-414">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-414">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : nativeint" Usage="System.Security.Principal.WindowsIdentity.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-415">ユーザーの Windows アカウント トークンを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-415">Gets the Windows account token for the user.</span></span></summary>
        <value><span data-ttu-id="1e47a-416">現在の実行スレッドに関連付けられているアクセス トークンのハンドル。</span><span class="sxs-lookup"><span data-stu-id="1e47a-416">The handle of the access token associated with the current execution thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-417"><xref:System.Security.Principal.WindowsIdentity.Token%2A> プロパティによって返されたアカウントトークンを明示的に解放しないでください。</span><span class="sxs-lookup"><span data-stu-id="1e47a-417">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="1e47a-418">トークンは <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> メソッドによって解放されます。このメソッドは、コードで呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-418">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="1e47a-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> も、ガベージコレクターによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-419"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-420"><xref:System.Security.Principal.WindowsIdentity.Token%2A> プロパティによって返されるアカウントトークンは、<xref:System.Security.Principal.WindowsIdentity> オブジェクトの作成に使用される Windows トークンの複製であり、.NET Framework によって自動的に解放されます。</span><span class="sxs-lookup"><span data-stu-id="1e47a-420">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="1e47a-421">これは、<xref:System.Security.Principal.WindowsIdentity> オブジェクトの作成に使用されるアカウントトークン (コンストラクターの `userToken` パラメーター) とは異なります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-421">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="1e47a-422">`userToken` は、`LogonUser` の呼び出しによって作成される Windows アカウントトークンで、メモリリークを回避するために閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e47a-422">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e47a-423">次のコードは、<xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> プロパティを使用して、ユーザーの Windows アカウントトークンを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1e47a-423">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="1e47a-424">このコード例は、<xref:System.Security.Principal.WindowsIdentity> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="1e47a-424">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1e47a-425">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1e47a-425">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1e47a-426"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="1e47a-426">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.SecurityIdentifier" Usage="System.Security.Principal.WindowsIdentity.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-427">ユーザーのセキュリティ識別子 (SID) を取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-427">Gets the security identifier (SID) for the user.</span></span></summary>
        <value><span data-ttu-id="1e47a-428">ユーザーのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e47a-428">An object for the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e47a-429">SID は、すべての Windows NT 実装でユーザーまたはグループを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-429">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e47a-430"><xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> メソッドによって返された <xref:System.Security.Principal.WindowsIdentity> オブジェクトは、Windows 匿名ユーザーと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-430">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="1e47a-431">このプロパティは、<xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> メソッドによって返された <xref:System.Security.Principal.WindowsIdentity> オブジェクトによって表される匿名ユーザーの `null` を取得します。匿名の Windows ユーザーを表す SID は取得されません。</span><span class="sxs-lookup"><span data-stu-id="1e47a-431">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e47a-432"><see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> プロパティのキーを持つクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="1e47a-432">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="1e47a-433"><see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> プロパティ キーを持つクレームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="1e47a-433">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
