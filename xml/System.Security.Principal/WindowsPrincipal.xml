<Type Name="WindowsPrincipal" FullName="System.Security.Principal.WindowsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b823181e7930f95f5af895f28fdcb51aa57e22a9" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73386026" /></Metadata><TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Inherits ClaimsPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Claims::ClaimsPrincipal" />
  <TypeSignature Language="F#" Value="type WindowsPrincipal = class&#xA;    inherit ClaimsPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f8d31-101">コードによって Windows ユーザーの Windows グループ メンバーシップを確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="f8d31-101">Enables code to check the Windows group membership of a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-102"><xref:System.Security.Principal.WindowsPrincipal> クラスは、主に Windows ユーザーのロールを確認するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-102">The <xref:System.Security.Principal.WindowsPrincipal> class is primarily used to check the role of a Windows user.</span></span> <span data-ttu-id="f8d31-103"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> メソッドのオーバーロードを使用すると、さまざまなロールコンテキストを使用してユーザーロールを確認できます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-103">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> method overloads let you check the user role by using different role contexts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8d31-104">次の例では、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドのオーバーロードを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-104">The following example demonstrates how to use the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method overloads.</span></span> <span data-ttu-id="f8d31-105"><xref:System.Security.Principal.WindowsBuiltInRole> 列挙は、組み込みのロールを識別する相対識別子 (Rid) のソースとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-105">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the relative identifiers (RIDs) that identify the built-in roles.</span></span> <span data-ttu-id="f8d31-106">Rid は、現在のプリンシパルのロールを決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-106">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity ntIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ntIdentity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsPrincipal(System::Security::Principal::WindowsIdentity ^ ntIdentity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsPrincipal : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsPrincipal" Usage="new System.Security.Principal.WindowsPrincipal ntIdentity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ntIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="ntIdentity"><span data-ttu-id="f8d31-107"><see cref="T:System.Security.Principal.WindowsPrincipal" /> の新しいインスタンスの生成元となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f8d31-107">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="f8d31-108">指定した <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクトを使用して、<see cref="T:System.Security.Principal.WindowsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-108">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsPrincipal" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8d31-109">次の例では、現在の <xref:System.Security.Principal.WindowsIdentity> オブジェクトから新しい <xref:System.Security.Principal.WindowsPrincipal> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-109">The following example creates a new <xref:System.Security.Principal.WindowsPrincipal> object from the current <xref:System.Security.Principal.WindowsIdentity> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8d31-110"><paramref name="ntIdentity" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-110"><paramref name="ntIdentity" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8d31-111">このプリンシパルからのすべての Windows デバイス クレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-111">Gets all Windows device claims from this principal.</span></span></summary>
        <value><span data-ttu-id="f8d31-112">このプリンシパルからのすべての Windows デバイス クレームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f8d31-112">A collection of all Windows device claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8d31-113">現在のプリンシパルの ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-113">Gets the identity of the current principal.</span></span></summary>
        <value><span data-ttu-id="f8d31-114">現在のプリンシパルの <see cref="T:System.Security.Principal.WindowsIdentity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f8d31-114">The <see cref="T:System.Security.Principal.WindowsIdentity" /> object of the current principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8d31-115">次の例では、<xref:System.Security.Principal.WindowsPrincipal> オブジェクトの <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> プロパティを使用して、ユーザーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-115">The following example retrieves the name of the user by using the <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> property of the <xref:System.Security.Principal.WindowsPrincipal> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8d31-116">現在のプリンシパルが、指定した Windows ユーザー グループに属しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-116">Determines whether the current principal belongs to a specified Windows user group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-117">このメソッドには4つのオーバーロードがあります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-117">There are four overloads for this method.</span></span> <span data-ttu-id="f8d31-118">パフォーマンス上の理由から、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> のオーバーロードを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f8d31-118">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is strongly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8d31-119"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドは、Windows 98 または Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-119">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (int rid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(int32 rid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (rid As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(int rid);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : int -&gt; bool&#xA;override this.IsInRole : int -&gt; bool" Usage="windowsPrincipal.IsInRole rid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.IsInRole : int -&gt; bool" Usage="windowsPrincipal.IsInRole rid" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rid"><span data-ttu-id="f8d31-120">プリンシパルのメンバーシップ状態を確認する Windows ユーザー グループの RID。</span><span class="sxs-lookup"><span data-stu-id="f8d31-120">The RID of the Windows user group in which to check for the principal's membership status.</span></span></param>
        <summary><span data-ttu-id="f8d31-121">現在のプリンシパルが、指定した相対識別子 (RID) の Windows ユーザー グループに属しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-121">Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</span></span></summary>
        <returns><span data-ttu-id="f8d31-122">現在のプリンシパルが、指定した Windows ユーザー グループのメンバーである、つまり特定のロール内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8d31-122"><see langword="true" /> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-123">新しく作成されたロール情報 (新しいユーザーや新しいグループなど) をテストする場合は、ログアウトしてログインし、ドメイン内のロール情報を強制的に伝達することが重要です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-123">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8d31-124">そうしないと、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> テストで `false`が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-124">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8d31-125">このメソッドは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-125">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8d31-126">パフォーマンス上の理由から、ユーザーのロールを決定するために、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> のオーバーロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f8d31-126">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-127">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-127">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8d31-128">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-128">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8d31-129">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-129">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8d31-130">管理者特権を必要とするタスクを実行しようとすると、[同意] ダイアログボックスを使用して、ロールを動的に昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-130">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8d31-131"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドを実行するコードでは、同意ダイアログボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-131">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8d31-132">組み込みの Administrators グループに含まれている場合でも、コードは false を返します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-132">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8d31-133">コードを実行する前に、アプリケーションアイコンを右クリックして、管理者として実行することを示すように、特権を昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-133">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8d31-134">相対識別子 (Rid) は、Windows ユーザーグループのセキュリティ識別子 (SID) のコンポーネントであり、クロスプラットフォームのローカリゼーションの問題を防ぐためにサポートされています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-134">Relative identifiers (RIDs) are components of a Windows user group's security identifier (SID) and are supported to help prevent cross-platform localization issues.</span></span> <span data-ttu-id="f8d31-135">多くのユーザーアカウント、ローカルグループ、およびグローバルグループには、すべてのバージョンの Windows で一定の既定の RID 値があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-135">Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.</span></span>  
  
 <span data-ttu-id="f8d31-136">たとえば、BUILTIN\Administrators ロールの RID は0x220 です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-136">For example, the RID for the BUILTIN\Administrators role is 0x220.</span></span> <span data-ttu-id="f8d31-137"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドの入力パラメーターとして0x220 を使用すると、現在のプリンシパルが管理者である場合に `true` が返されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-137">Using 0x220 as the input parameter for the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method results in `true` being returned if the current principal is an administrator.</span></span>  
  
 <span data-ttu-id="f8d31-138">次の表に、既定の RID 値の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-138">The following tables list the default RID values.</span></span>  
  
|<span data-ttu-id="f8d31-139">組み込みユーザー</span><span class="sxs-lookup"><span data-stu-id="f8d31-139">Built-in users</span></span>|<span data-ttu-id="f8d31-140">RID</span><span class="sxs-lookup"><span data-stu-id="f8d31-140">RID</span></span>|  
|---------------------|---------|  
|<span data-ttu-id="f8d31-141">DOMAINNAME\Administrator</span><span class="sxs-lookup"><span data-stu-id="f8d31-141">DOMAINNAME\Administrator</span></span>|<span data-ttu-id="f8d31-142">0x1F4</span><span class="sxs-lookup"><span data-stu-id="f8d31-142">0x1F4</span></span>|  
|<span data-ttu-id="f8d31-143">DOMAINNAME\Guest</span><span class="sxs-lookup"><span data-stu-id="f8d31-143">DOMAINNAME\Guest</span></span>|<span data-ttu-id="f8d31-144">0x1F5</span><span class="sxs-lookup"><span data-stu-id="f8d31-144">0x1F5</span></span>|  
  
|<span data-ttu-id="f8d31-145">組み込みのグローバルグループ</span><span class="sxs-lookup"><span data-stu-id="f8d31-145">Built-in global groups</span></span>|<span data-ttu-id="f8d31-146">RID</span><span class="sxs-lookup"><span data-stu-id="f8d31-146">RID</span></span>|  
|-----------------------------|---------|  
|<span data-ttu-id="f8d31-147">DOMAINNAME\Domain 管理者</span><span class="sxs-lookup"><span data-stu-id="f8d31-147">DOMAINNAME\Domain Admins</span></span>|<span data-ttu-id="f8d31-148">0x200</span><span class="sxs-lookup"><span data-stu-id="f8d31-148">0x200</span></span>|  
|<span data-ttu-id="f8d31-149">DOMAINNAME\Domain ユーザー</span><span class="sxs-lookup"><span data-stu-id="f8d31-149">DOMAINNAME\Domain Users</span></span>|<span data-ttu-id="f8d31-150">0x201</span><span class="sxs-lookup"><span data-stu-id="f8d31-150">0x201</span></span>|  
|<span data-ttu-id="f8d31-151">ゲストを DOMAINNAME\Domain</span><span class="sxs-lookup"><span data-stu-id="f8d31-151">DOMAINNAME\Domain Guests</span></span>|<span data-ttu-id="f8d31-152">0x202</span><span class="sxs-lookup"><span data-stu-id="f8d31-152">0x202</span></span>|  
  
|<span data-ttu-id="f8d31-153">組み込みのローカルグループ</span><span class="sxs-lookup"><span data-stu-id="f8d31-153">Built-in local groups</span></span>|<span data-ttu-id="f8d31-154">RID</span><span class="sxs-lookup"><span data-stu-id="f8d31-154">RID</span></span>|  
|----------------------------|---------|  
|<span data-ttu-id="f8d31-155">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="f8d31-155">BUILTIN\Administrators</span></span>|<span data-ttu-id="f8d31-156">0x220</span><span class="sxs-lookup"><span data-stu-id="f8d31-156">0x220</span></span>|  
|<span data-ttu-id="f8d31-157">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="f8d31-157">BUILTIN\Users</span></span>|<span data-ttu-id="f8d31-158">0x221</span><span class="sxs-lookup"><span data-stu-id="f8d31-158">0x221</span></span>|  
|<span data-ttu-id="f8d31-159">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="f8d31-159">BUILTIN\Guests</span></span>|<span data-ttu-id="f8d31-160">0x222</span><span class="sxs-lookup"><span data-stu-id="f8d31-160">0x222</span></span>|  
|<span data-ttu-id="f8d31-161">BUILTIN\Account 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-161">BUILTIN\Account Operators</span></span>|<span data-ttu-id="f8d31-162">0x224</span><span class="sxs-lookup"><span data-stu-id="f8d31-162">0x224</span></span>|  
|<span data-ttu-id="f8d31-163">BUILTIN\Server 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-163">BUILTIN\Server Operators</span></span>|<span data-ttu-id="f8d31-164">0x225</span><span class="sxs-lookup"><span data-stu-id="f8d31-164">0x225</span></span>|  
|<span data-ttu-id="f8d31-165">BUILTIN\Print 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-165">BUILTIN\Print Operators</span></span>|<span data-ttu-id="f8d31-166">0x226</span><span class="sxs-lookup"><span data-stu-id="f8d31-166">0x226</span></span>|  
|<span data-ttu-id="f8d31-167">BUILTIN\Backup 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-167">BUILTIN\Backup Operators</span></span>|<span data-ttu-id="f8d31-168">0x227</span><span class="sxs-lookup"><span data-stu-id="f8d31-168">0x227</span></span>|  
|<span data-ttu-id="f8d31-169">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="f8d31-169">BUILTIN\Replicator</span></span>|<span data-ttu-id="f8d31-170">0x228</span><span class="sxs-lookup"><span data-stu-id="f8d31-170">0x228</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f8d31-171">次のコード例は、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-171">The following code example demonstrates the use of  the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> methods.</span></span> <span data-ttu-id="f8d31-172"><xref:System.Security.Principal.WindowsBuiltInRole> 列挙は、組み込みのロールを識別する Rid のソースとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-172">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the RIDs that identify the built-in roles.</span></span> <span data-ttu-id="f8d31-173">Rid は、現在のプリンシパルのロールを決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-173">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (sid As SecurityIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool&#xA;override this.IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool" Usage="windowsPrincipal.IsInRole sid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool" Usage="windowsPrincipal.IsInRole sid" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="f8d31-174">Windows ユーザー グループを一意に識別する <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="f8d31-174">A <see cref="T:System.Security.Principal.SecurityIdentifier" /> that uniquely identifies a Windows user group.</span></span></param>
        <summary><span data-ttu-id="f8d31-175">現在のプリンシパルが、指定したセキュリティ識別子 (SID) の Windows ユーザー グループに属しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-175">Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</span></span></summary>
        <returns><span data-ttu-id="f8d31-176">現在のプリンシパルが、指定した Windows ユーザー グループのメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8d31-176"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-177"><xref:System.Security.Principal.SecurityIdentifier> は、Windows 2000、Windows Server、および Windows XP の実装でユーザーまたはグループを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-177">The <xref:System.Security.Principal.SecurityIdentifier> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations.</span></span> <span data-ttu-id="f8d31-178">新しく作成されたロール情報 (新しいユーザーや新しいグループなど) をテストする場合は、ログアウトしてログインし、ドメイン内のロール情報を強制的に伝達することが重要です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-178">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8d31-179">そうしないと、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> テストで `false`が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-179">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8d31-180">このメソッドは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-180">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-181">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-181">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8d31-182">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-182">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8d31-183">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-183">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8d31-184">管理者特権を必要とするタスクを実行しようとすると、[同意] ダイアログボックスを使用して、ロールを動的に昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-184">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8d31-185"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドを実行するコードでは、同意ダイアログボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-185">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8d31-186">組み込みの Administrators グループに含まれている場合でも、コードは false を返します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-186">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8d31-187">コードを実行する前に、アプリケーションアイコンを右クリックして、管理者として実行することを示すように、特権を昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-187">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8d31-188">パフォーマンス上の理由から、これはユーザーのロールを決定するために推奨されるオーバーロードです。</span><span class="sxs-lookup"><span data-stu-id="f8d31-188">For performance reasons, this is the preferable overload to determine a user's role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8d31-189">次のコード例は、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-189">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f8d31-190"><xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> 列挙値は、現在のプリンシパルが管理者であるかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-190">The <xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> enumeration value is used to determine whether the current principal is an administrator.</span></span> <span data-ttu-id="f8d31-191">完全なコード例については、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8d31-191">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#5)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8d31-192"><paramref name="sid" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-192"><paramref name="sid" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f8d31-193">Windows は Win32 エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-193">Windows returned a Win32 error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool&#xA;override this.IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="f8d31-194"><see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f8d31-194">One of the <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> values.</span></span></param>
        <summary><span data-ttu-id="f8d31-195">現在のプリンシパルが、指定した <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> の Windows ユーザー グループに属しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-195">Determines whether the current principal belongs to the Windows user group with the specified <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.</span></span></summary>
        <returns><span data-ttu-id="f8d31-196">現在のプリンシパルが、指定した Windows ユーザー グループのメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8d31-196"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-197">新しく作成されたロール情報 (新しいユーザーや新しいグループなど) をテストする場合は、ログアウトしてログインし、ドメイン内のロール情報を強制的に伝達することが重要です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-197">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8d31-198">そうしないと、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> テストで `false`が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-198">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8d31-199">このメソッドは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-199">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8d31-200">パフォーマンス上の理由から、ユーザーのロールを決定するために、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> のオーバーロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f8d31-200">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-201">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-201">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8d31-202">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-202">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8d31-203">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-203">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8d31-204">管理者特権を必要とするタスクを実行しようとすると、[同意] ダイアログボックスを使用して、ロールを動的に昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-204">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8d31-205"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドを実行するコードでは、同意ダイアログボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-205">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8d31-206">組み込みの Administrators グループに含まれている場合でも、コードは false を返します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-206">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8d31-207">コードを実行する前に、アプリケーションアイコンを右クリックして、管理者として実行することを示すように、特権を昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-207">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8d31-208">次の例では、<xref:System.Security.Principal.WindowsBuiltInRole> 列挙型を使用して、現在のプリンシパルが <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-208">The following example uses the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used to determine whether the current principal is an <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>.</span></span> <span data-ttu-id="f8d31-209">完全なコード例については、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8d31-209">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#4)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8d31-210"><paramref name="role" /> は有効な <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-210"><paramref name="role" /> is not a valid <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="f8d31-211">メンバーシップを確認する対象の Windows ユーザー グループの名前。</span><span class="sxs-lookup"><span data-stu-id="f8d31-211">The name of the Windows user group for which to check membership.</span></span></param>
        <summary><span data-ttu-id="f8d31-212">現在のプリンシパルが、指定した名前の Windows ユーザー グループに属しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-212">Determines whether the current principal belongs to the Windows user group with the specified name.</span></span></summary>
        <returns><span data-ttu-id="f8d31-213">現在のプリンシパルが、指定した Windows ユーザー グループのメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8d31-213"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8d31-214">新しく作成されたロール情報 (新しいユーザーや新しいグループなど) をテストする場合は、ログアウトしてログインし、ドメイン内のロール情報を強制的に伝達することが重要です。</span><span class="sxs-lookup"><span data-stu-id="f8d31-214">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8d31-215">そうしないと、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> テストで `false`が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-215">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8d31-216">このメソッドは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-216">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8d31-217">パフォーマンス上の理由から、ユーザーのロールを決定するために、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> のオーバーロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f8d31-217">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-218">Windows Vista では、ユーザー アカウント制御 (UAC: User Account Control) でユーザーの権限が決定されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-218">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8d31-219">ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-219">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8d31-220">既定では、ユーザーは標準ユーザー ロールに所属します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-220">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8d31-221">管理者特権を必要とするタスクを実行しようとすると、[同意] ダイアログボックスを使用して、ロールを動的に昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-221">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8d31-222"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> メソッドを実行するコードでは、同意ダイアログボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-222">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8d31-223">組み込みの Administrators グループに含まれている場合でも、コードは false を返します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-223">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8d31-224">コードを実行する前に、アプリケーションアイコンを右クリックして、管理者として実行することを示すように、特権を昇格させることができます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-224">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8d31-225">組み込みのロールの場合、`role` 文字列は "BUILTIN\\*RoleNameHere*" の形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-225">For built-in roles, the `role` string should be in the form "BUILTIN\\*RoleNameHere*".</span></span> <span data-ttu-id="f8d31-226">たとえば、Windows 管理者ロールのメンバーシップをテストするには、ロールを表す文字列を "BUILTIN\Administrators" にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-226">For example, to test for membership in the Windows administrator role, the string representing the role should be "BUILTIN\Administrators".</span></span> <span data-ttu-id="f8d31-227">円記号はエスケープする必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="f8d31-227">Note that the backslash might need to be escaped.</span></span> <span data-ttu-id="f8d31-228">次の表に、組み込みのロールの一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-228">The following table lists the built-in roles.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-229">文字列形式の BUILTIN ロールのスペルは、<xref:System.Security.Principal.WindowsBuiltInRole> 列挙型で使用されるスペルとは異なります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-229">The spelling for the BUILTIN roles in string format differs from the spelling used in the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration.</span></span> <span data-ttu-id="f8d31-230">たとえば、列挙における管理者のスペルは、"Administrators" ではなく "Administrator" になります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-230">For example, the spelling for an administrator in the enumeration is "Administrator", not "Administrators".</span></span> <span data-ttu-id="f8d31-231">このオーバーロードを使用する場合は、次の表のロールのスペルを使用します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-231">When using this overload, use the spelling for the role from the following table.</span></span>  
  
|<span data-ttu-id="f8d31-232">組み込みのローカルグループ</span><span class="sxs-lookup"><span data-stu-id="f8d31-232">Built-in local groups</span></span>|  
|----------------------------|  
|<span data-ttu-id="f8d31-233">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="f8d31-233">BUILTIN\Administrators</span></span>|  
|<span data-ttu-id="f8d31-234">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="f8d31-234">BUILTIN\Users</span></span>|  
|<span data-ttu-id="f8d31-235">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="f8d31-235">BUILTIN\Guests</span></span>|  
|<span data-ttu-id="f8d31-236">BUILTIN\Account 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-236">BUILTIN\Account Operators</span></span>|  
|<span data-ttu-id="f8d31-237">BUILTIN\Server 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-237">BUILTIN\Server Operators</span></span>|  
|<span data-ttu-id="f8d31-238">BUILTIN\Print 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-238">BUILTIN\Print Operators</span></span>|  
|<span data-ttu-id="f8d31-239">BUILTIN\Backup 演算子</span><span class="sxs-lookup"><span data-stu-id="f8d31-239">BUILTIN\Backup Operators</span></span>|  
|<span data-ttu-id="f8d31-240">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="f8d31-240">BUILTIN\Replicator</span></span>|  
  
 <span data-ttu-id="f8d31-241">コンピューター固有のロールの場合、`role` 文字列は "MachineName\\*RoleNameHere*" の形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-241">For machine-specific roles, the `role` string should be in the form "MachineName\\*RoleNameHere*".</span></span>  
  
 <span data-ttu-id="f8d31-242">ドメイン固有のロールの場合、`role` 文字列は "DomainName\\*RoleNameHere*" の形式にする必要があります。たとえば、`"SomeDomain\Domain Users`"のようになります。</span><span class="sxs-lookup"><span data-stu-id="f8d31-242">For domain-specific roles, the `role` string should be in the form "DomainName\\*RoleNameHere*"; for example, `"SomeDomain\Domain Users`".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8d31-243">.NET Framework バージョン1.0 では、`role` パラメーターで大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="f8d31-243">In the .NET Framework version 1.0, the `role` parameter is case-sensitive.</span></span> <span data-ttu-id="f8d31-244">.NET Framework バージョン1.1 以降では、`role` パラメーターでは大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="f8d31-244">In the .NET Framework version 1.1 and later, the `role` parameter is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8d31-245">次のコード例は、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8d31-245">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f8d31-246">`BUILTIN\Administrators` と `BUILTIN\Users` の文字列を使用して、現在のプリンシパルが管理者またはユーザーのどちらであるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-246">The strings `BUILTIN\Administrators` and `BUILTIN\Users` are used to determine whether the current principal is an administrator or a user.</span></span> <span data-ttu-id="f8d31-247">完全なコード例については、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8d31-247">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#3)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f8d31-248">プリンシパルオブジェクトを操作する権限。</span><span class="sxs-lookup"><span data-stu-id="f8d31-248">for the ability to manipulate the principal object.</span></span> <span data-ttu-id="f8d31-249">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span><span class="sxs-lookup"><span data-stu-id="f8d31-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span></span></permission>
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8d31-250">このプリンシパルからのすべての Windows ユーザー クレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="f8d31-250">Gets all Windows user claims from this principal.</span></span></summary>
        <value><span data-ttu-id="f8d31-251">このプリンシパルからのすべての Windows ユーザー クレームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="f8d31-251">A collection of all Windows user claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
