<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b69e5d40d9e01afbcafaeeea472bd573679486d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78711926" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <TypeSignature Language="F#" Value="type ExpressionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7aa3-101">シリアライザー間でコンテキストの状態を渡す方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-101">Provides a means of passing context state among serializers.</span></span> <span data-ttu-id="a7aa3-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7aa3-103"><xref:System.ComponentModel.Design.Serialization.ExpressionContext> はコンテキストスタックに配置され、シリアル化時に最も関連性の高い式が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="a7aa3-104">次C#のコードは、割り当ての例を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="a7aa3-105">シリアル化中に、複数のシリアライザーがこの1つのステートメントの作成を担当します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="a7aa3-106">これらのシリアライザーの1つは、"Hello" の作成を担当します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="a7aa3-107">そのシリアライザーが、式を作成しているコンテキストを認識している必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="a7aa3-108">前の例では、このコンテキストは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="a7aa3-109">次C#のコードは、コンテキストの知識が必要な状況を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="a7aa3-110">この場合、リソース式の作成を担当するシリアライザーには、ターゲットオブジェクトの名前が通知される必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="a7aa3-111">このためには、<xref:System.ComponentModel.Design.Serialization.ExpressionContext> クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="a7aa3-112">各シリアライザーが式を作成し、ステートメント全体を処理するシリアライザーを呼び出すと、シリアライザーはコンテキストスタックに式のコンテキストをプッシュします。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="a7aa3-113">各式コンテキストには、スタックで次の式のコンテキストを検索する親プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="a7aa3-114">これにより、便利なトラバーサル機能が提供されます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a7aa3-115"><see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="a7aa3-116">指定したコード式。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-116">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="a7aa3-117">指定したコード式の型。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-117">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="a7aa3-118">指定したコード式の所有者。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-118">The given code expression owner.</span></span></param>
        <summary><span data-ttu-id="a7aa3-119">指定した式と所有者を使用して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7aa3-120"><paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-120"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner, presetValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="a7aa3-121">指定したコード式。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-121">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="a7aa3-122">指定したコード式の型。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-122">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="a7aa3-123">指定したコード式の所有者。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-123">The given code expression owner.</span></span></param>
        <param name="presetValue"><span data-ttu-id="a7aa3-124">指定したコード式の事前定義された値。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-124">The given code expression preset value.</span></span></param>
        <summary><span data-ttu-id="a7aa3-125">現在の値を指定して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7aa3-126"><paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-126"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.CodeDom.CodeExpression" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7aa3-127">このコンテキストが表す式を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-127">Gets the expression this context represents.</span></span></summary>
        <value><span data-ttu-id="a7aa3-128">このコンテキストが表す式。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-128">The expression this context represents.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7aa3-129">式の <see cref="T:System.Type" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-129">Gets the <see cref="T:System.Type" /> of the expression.</span></span></summary>
        <value><span data-ttu-id="a7aa3-130">式の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-130">The <see cref="T:System.Type" /> of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7aa3-131"><xref:System.ComponentModel.Design.Serialization.ExpressionContext> を使用すると、式に代入するときにキャストが必要かどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7aa3-132">この式を所有するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-132">Gets the object owning this expression.</span></span></summary>
        <value><span data-ttu-id="a7aa3-133">この式を所有するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-133">The object owning this expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7aa3-134">式が `button1`という <xref:System.Windows.Forms.Button> のインスタンスの <xref:System.Windows.Forms.Control.Text%2A> プロパティへのプロパティ参照である場合、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> は `button1`を返します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PresetValue : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7aa3-135">式の事前定義された値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-135">Gets the preset value of an expression.</span></span></summary>
        <value><span data-ttu-id="a7aa3-136">式の事前定義された値。割り当てられていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7aa3-137">式の事前設定された値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="a7aa3-138">たとえば、式が <xref:System.Windows.Forms.Button>の <xref:System.Windows.Forms.Control.Controls%2A> プロパティを参照するプロパティ参照式である場合、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> プロパティには <xref:System.Windows.Forms.Control.Controls%2A> プロパティのインスタンスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="a7aa3-139">これは、プロパティが読み取り専用で、値を格納するためにオブジェクトによって事前に設定されているためです。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="a7aa3-140">一方、<xref:System.Windows.Forms.Control.Text%2A> や <xref:System.Windows.Forms.Control.Visible%2A> などのプロパティには事前設定された値がないため、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> プロパティは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="a7aa3-141">次C#のコードは、シリアライザーがこの情報を使用してシリアル化をガイドする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="a7aa3-142">最初または2番目の形式を生成する必要がある場合は、<xref:System.Windows.Forms.Padding> 構造体のシリアライザーに通知される必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="a7aa3-143">最初のフォームは、既定で生成されます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-143">The first form is generated by default.</span></span> <span data-ttu-id="a7aa3-144">2番目の形式は、現在シリアル化されている <xref:System.Windows.Forms.Padding> の値と等しい <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> を含むコンテキストスタックに <xref:System.ComponentModel.Design.Serialization.ExpressionContext> がある場合にのみ生成されます。</span><span class="sxs-lookup"><span data-stu-id="a7aa3-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>
