<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c7896b980f04c60e660dae39df0ce2d0f20d44b" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77097048" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <TypeSignature Language="F#" Value="type CodeDomSerializerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6f071-101"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> の各クラスの基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="6f071-101">Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-102"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラスは、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> クラスと <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> クラスの間の共有ベースとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-102">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class is used as a shared base between the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> and <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classes.</span></span> <span data-ttu-id="6f071-103">パブリック <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> クラスは、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="6f071-103">Public <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> classes derive from the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class.</span></span> <span data-ttu-id="6f071-104">各パブリッククラスは、独自のパブリック API を定義します。</span><span class="sxs-lookup"><span data-stu-id="6f071-104">Each public class defines its own public API.</span></span> <span data-ttu-id="6f071-105"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラスはパブリック API を定義しませんが、シリアル化プロセスを支援するために使用できる多数のユーティリティメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="6f071-105">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.DeserializeExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * System.CodeDom.CodeExpression -&gt; obj" Usage="codeDomSerializerBase.DeserializeExpression (manager, name, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-106">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="name"><span data-ttu-id="6f071-107">式の結果として作成されるオブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="6f071-107">The name of the object that results from the expression.</span></span> <span data-ttu-id="6f071-108">オブジェクトに名前を付ける必要がない場合は、<see langword="null" /> でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="6f071-108">Can be <see langword="null" /> if there is no need to name the object.</span></span></param>
        <param name="expression"><span data-ttu-id="6f071-109">解釈する <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-109">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</span></span></param>
        <summary><span data-ttu-id="6f071-110">指定した式をメモリ内オブジェクトに逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-110">Deserializes the given expression into an in-memory object.</span></span></summary>
        <returns><span data-ttu-id="6f071-111"><paramref name="expression" /> の解釈の結果として作成されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-111">An object resulting from interpretation of <paramref name="expression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-112">これは、派生クラスが式を逆シリアル化するために呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-112">This is a helper method that derived classes can call to deserialize an expression.</span></span> <span data-ttu-id="6f071-113">`expression` パラメーターで指定された CodeDOM 式を解釈および実行することによって、ステートメントを逆シリアル化した後、結果を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-113">It deserializes the statement by interpreting and executing the CodeDOM expression specified by the `expression` parameter, and then returns the results.</span></span> <span data-ttu-id="6f071-114">この式の結果としてオブジェクトを作成する必要がある場合は、`name` パラメーターによって指定された名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="6f071-114">If an object needs to be created as a result of this expression, it will be given the name specified by the `name` parameter.</span></span> <span data-ttu-id="6f071-115">オブジェクトに名前を指定する必要がない場合は、名前を `null` できます。</span><span class="sxs-lookup"><span data-stu-id="6f071-115">The name can be `null` if there is no need to name the object.</span></span> <span data-ttu-id="6f071-116">次の表では、特定の式を処理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="6f071-116">The following table describes how specific expressions are handled.</span></span>  
  
|<span data-ttu-id="6f071-117">式</span><span class="sxs-lookup"><span data-stu-id="6f071-117">Expression</span></span>|<span data-ttu-id="6f071-118">動作</span><span class="sxs-lookup"><span data-stu-id="6f071-118">Behavior</span></span>|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|<span data-ttu-id="6f071-119">この式は、`this` または `Me`を表します。</span><span class="sxs-lookup"><span data-stu-id="6f071-119">This expression represents `this` or `Me`.</span></span> <span data-ttu-id="6f071-120">この式に関連付けられているオブジェクトを検索するには、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> メソッドによって <xref:System.ComponentModel.Design.Serialization.RootContext>のコンテキストスタックが検索されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-120">To locate the object that is associated with this expression, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> method will look in the context stack for a <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span> <span data-ttu-id="6f071-121">このオブジェクトには、グラフのルートオブジェクトとそれを表す式が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6f071-121">This object contains the root object of the graph and the expression that represents it.</span></span> <span data-ttu-id="6f071-122">オブジェクトが存在し、式がと一致する場合、ルートオブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-122">If the object is present and the expression matches, the root object will be returned.</span></span> <span data-ttu-id="6f071-123">インスタンスが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-123">An error is reported if an instance cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|<span data-ttu-id="6f071-124">フィールド参照の対象がルートオブジェクトに評価される場合は、manager パラメーターの <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> メソッドを使用して、名前に基づいてオブジェクトインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-124">If the target of the field reference evaluates to the root object, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the manager parameter will be used to retrieve the object instance based on name.</span></span> <span data-ttu-id="6f071-125">それ以外の場合は、要求されたフィールドを検索するために、ターゲットオブジェクトに対して標準のリフレクションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-125">Otherwise, standard reflection is used against the target object to locate the requested field.</span></span> <span data-ttu-id="6f071-126">フィールドが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-126">An error is reported if the field cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<span data-ttu-id="6f071-127">`manager` パラメーターの <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> メソッドを使用して、指定された変数名を表すインスタンスを検索します。</span><span class="sxs-lookup"><span data-stu-id="6f071-127">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the `manager` parameter is used to locate the instance representing the given variable name.</span></span> <span data-ttu-id="6f071-128">インスタンスが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-128">An error is reported if an instance cannot be located.</span></span>|  
  
 <span data-ttu-id="6f071-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> は、オブジェクトに対して完全に解決されるまで、または式を簡略化できなくなるまで、式を解釈し続けます。</span><span class="sxs-lookup"><span data-stu-id="6f071-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</span></span> <span data-ttu-id="6f071-130">この場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> は最も単純化された式を含む <xref:System.CodeDom.CodeExpression> を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-130">In this case, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> will return a <xref:System.CodeDom.CodeExpression> that contains the most simplified expression.</span></span> <span data-ttu-id="6f071-131">次の式はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="6f071-131">The following expressions are not supported:</span></span>  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-132">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-132">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj&#xA;override this.DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj" Usage="codeDomSerializerBase.DeserializeInstance (manager, type, parameters, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-133">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-133">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="type"><span data-ttu-id="6f071-134">返されるインスタンスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-134">The <see cref="T:System.Type" /> of the instance to return.</span></span></param>
        <param name="parameters"><span data-ttu-id="6f071-135"><paramref name="type" /> のコンストラクターに渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="6f071-135">The parameters to pass to the constructor for <paramref name="type" />.</span></span></param>
        <param name="name"><span data-ttu-id="6f071-136">逆シリアル化されたオブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="6f071-136">The name of the deserialized object.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="6f071-137">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-137"><see langword="true" /> to add this object to the design container; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6f071-138">この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</span><span class="sxs-lookup"><span data-stu-id="6f071-138">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="6f071-139">指定した型のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-139">Returns an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="6f071-140"><paramref name="type" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="6f071-140">An instance of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-141"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> メソッドは、オブジェクトのインスタンスを取得するために逆シリアル化中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-141">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> method is invoked during deserialization to obtain an instance of an object.</span></span> <span data-ttu-id="6f071-142">このが呼び出されると、要求された型のインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-142">When this is called, an instance of the requested type should be returned.</span></span> <span data-ttu-id="6f071-143">既定の実装は、`manager` パラメーターの <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6f071-143">The default implementation invokes the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method of the `manager` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-144"><paramref name="manager" /> または <paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-144"><paramref name="manager" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-145">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-145">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.DeserializePropertiesFromResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.DeserializePropertiesFromResources (manager, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-146">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-146">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-147">プロパティを逆シリアル化する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-147">The object from which the properties are to be deserialized.</span></span></param>
        <param name="filter"><span data-ttu-id="6f071-148">逆シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-148">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</span></span></param>
        <summary><span data-ttu-id="6f071-149">インバリアント カルチャのリソース バンドルから、指定したオブジェクトのプロパティを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-149">Deserializes properties on the given object from the invariant culture's resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-150"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> メソッドは、派生クラスが呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-150">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="6f071-151">このメソッドは、指定されたオブジェクトのプロパティを検索し、インバリアントカルチャのリソースバンドルから値を読み込もうとします。</span><span class="sxs-lookup"><span data-stu-id="6f071-151">It looks for properties on the given object and attempts to load their values out of the invariant culture's resource bundle.</span></span> <span data-ttu-id="6f071-152">これは、通常、ソースコードに出力されないデザイン時のプロパティを処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-152">This is generally used to handle design-time properties that are not emitted into source code.</span></span> <span data-ttu-id="6f071-153">このプロパティは、インバリアントカルチャでのみ動作するため、ローカライズされたプロパティには使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="6f071-153">It should not be used for localized properties because it only operates on the invariant culture.</span></span>  
  
 <span data-ttu-id="6f071-154">このメソッドは、`filter` パラメーターによって指定された属性に一致する `value` パラメーターのすべてのプロパティを検査し、リソースバイナリオブジェクトでこれらのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-154">This method inspects all of the properties of the `value` parameter that match the attributes specified by the `filter` parameter, and then checks for those properties in a resource binary object.</span></span> <span data-ttu-id="6f071-155">これは、デザイン時のプロパティなど、コードで表現できないプロパティを逆シリアル化する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="6f071-155">This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</span></span>  
  
 <span data-ttu-id="6f071-156">このメソッドでは、デザイナーローダーがリソースを読み取るための <xref:System.ComponentModel.Design.IResourceService> を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-156">This method requires that a designer loader offers an <xref:System.ComponentModel.Design.IResourceService> to read resources.</span></span> <span data-ttu-id="6f071-157"><xref:System.ComponentModel.Design.IResourceService> がインバリアントカルチャの <xref:System.Resources.ResXResourceReader> を提供する場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> は XML リソース (.resx) ファイルのメタデータセクションからリソースを読み取ります。これは、最終的にコンパイルされたコードには含まれません。</span><span class="sxs-lookup"><span data-stu-id="6f071-157">If the <xref:System.ComponentModel.Design.IResourceService> provides a <xref:System.Resources.ResXResourceReader> for the invariant culture, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> will read resources from the XML resource (.resx) file's metadata section, which is not included in final compiled code.</span></span> <span data-ttu-id="6f071-158">このサービスが利用できない場合、リソースは読み込まれません。</span><span class="sxs-lookup"><span data-stu-id="6f071-158">If this service is not available, no resources will be read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-159">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-159">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatement : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; unit" Usage="codeDomSerializerBase.DeserializeStatement (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-160">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statement"><span data-ttu-id="6f071-161">逆シリアル化を行う対象の <see cref="T:System.CodeDom.CodeStatement" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-161">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="6f071-162">CodeDOM ステートメントを解釈して実行することにより、ステートメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-162">Deserializes a statement by interpreting and executing a CodeDOM statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-163"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> メソッドは、派生クラスが呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-163">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="6f071-164">`statement` パラメーターを解釈します。</span><span class="sxs-lookup"><span data-stu-id="6f071-164">It interprets the `statement` parameter.</span></span>  
  
 <span data-ttu-id="6f071-165">逆シリアル化される <xref:System.CodeDom.CodeStatement> は、コンテキストスタックにプッシュされます。</span><span class="sxs-lookup"><span data-stu-id="6f071-165">The <xref:System.CodeDom.CodeStatement> being deserialized will be pushed on the context stack.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-166">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-166">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAttributesFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-167">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-167">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="6f071-168">対象の型。</span><span class="sxs-lookup"><span data-stu-id="6f071-168">The target type.</span></span></param>
        <summary><span data-ttu-id="6f071-169">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-169">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="6f071-170">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="6f071-170">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttributesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-171">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-171">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="6f071-172">対象の型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-172">An object of the target type.</span></span></param>
        <summary><span data-ttu-id="6f071-173">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-173">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="6f071-174">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="6f071-174">A collection of attributes as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEventsHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-175">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-175">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="6f071-176">対象の型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-176">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="6f071-177">ターゲット バージョンの .NET Framework に渡す属性の配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-177">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="6f071-178">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-178">Gets a collection of events as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="6f071-179">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクション。</span><span class="sxs-lookup"><span data-stu-id="6f071-179">A collection of events as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.GetExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-180">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-180">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-181">式の取得対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-181">The object for which to get an expression.</span></span></param>
        <summary><span data-ttu-id="6f071-182">指定したオブジェクトの式を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-182">Returns an expression for the given object.</span></span></summary>
        <returns><span data-ttu-id="6f071-183"><see cref="T:System.CodeDom.CodeExpression" /> を表す <paramref name="value" />。<see langword="null" /> の既存の式が存在しない場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-183">A <see cref="T:System.CodeDom.CodeExpression" /> representing <paramref name="value" />, or <see langword="null" /> if there is no existing expression for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-184"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドは、指定されたオブジェクトを表す式を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-184">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method returns an expression representing the given object.</span></span> <span data-ttu-id="6f071-185">オブジェクトを記述する式が設定されていないことを示す `null`を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="6f071-185">It can return `null`, indicating that no expression has been set that describes the object.</span></span> <span data-ttu-id="6f071-186">式は、次の3つの方法のいずれかで取得されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-186">Expressions are acquired in one of three ways:</span></span>  
  
-   <span data-ttu-id="6f071-187">この式は、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドの前の呼び出しの結果である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-187">The expression could be the result of a prior call to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method.</span></span>  
  
-   <span data-ttu-id="6f071-188">式が <xref:System.ComponentModel.Design.Serialization.RootContext>で見つかった可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-188">The expression could have been found in the <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span>  
  
-   <span data-ttu-id="6f071-189">式は <xref:System.ComponentModel.Design.IReferenceService>を通じて派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="6f071-189">The expression could be derived through <xref:System.ComponentModel.Design.IReferenceService>.</span></span>  
  
 <span data-ttu-id="6f071-190"><xref:System.ComponentModel.Design.IReferenceService>を使用して式を派生させるために、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドは、指定されたオブジェクトの名前を参照サービスに照会します。</span><span class="sxs-lookup"><span data-stu-id="6f071-190">To derive expressions through <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method queries the reference service for a name for the given object.</span></span> <span data-ttu-id="6f071-191">式サービスが有効な名前を返した場合、<xref:System.ComponentModel.Design.IReferenceService>、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドは名前に "." があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-191">If the expression service returns a valid name, <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method checks to see if there is a "." in the name.</span></span> <span data-ttu-id="6f071-192">これは、式サービスが別のオブジェクトの読み取り専用プロパティの戻り値としてこのオブジェクトを検出したことを示します。</span><span class="sxs-lookup"><span data-stu-id="6f071-192">This indicates that the expression service found this object as the return value of a read-only property on another object.</span></span> <span data-ttu-id="6f071-193">"." がある場合は、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> によって参照がパートに分割されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-193">If there is a ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will split the reference into parts.</span></span> <span data-ttu-id="6f071-194">左端の部分は、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> メソッドで評価される名前です。</span><span class="sxs-lookup"><span data-stu-id="6f071-194">The leftmost part is a name that will be evaluated with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method.</span></span> <span data-ttu-id="6f071-195">後続の各部分では、プロパティ参照式が作成されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-195">For each subsequent part, a property reference expression will be built.</span></span> <span data-ttu-id="6f071-196">その後、最後の式が返されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-196">The final expression will then be returned.</span></span>  
  
 <span data-ttu-id="6f071-197">オブジェクトに式が設定されていない場合、またはオブジェクトが参照サービスで見つからなかった場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> は `null`を返します。これは、オブジェクトに対する既存の式が存在しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="6f071-197">If the object did not have an expression set, or if the object was not found in the reference service, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will return `null`, indicating there is no existing expression for the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-198"><paramref name="manager" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-198"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-199">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-199">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetPropertiesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-200">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-200">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="6f071-201">対象の型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-201">An object of the target type.</span></span></param>
        <param name="attributes"><span data-ttu-id="6f071-202">ターゲット バージョンの .NET Framework に渡す属性の配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-202">An array of attributes to pass to the target version of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="6f071-203">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-203">Gets a collection of properties as defined in the project's target version of the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="6f071-204">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクション。</span><span class="sxs-lookup"><span data-stu-id="6f071-204">A collection of properties as defined in the project's target version of the .NET Framework.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-205">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-205">The serialization manager.</span></span></param>
        <param name="type"><span data-ttu-id="6f071-206">使用するメタデータを持つ型。</span><span class="sxs-lookup"><span data-stu-id="6f071-206">The type to use metadata from.</span></span></param>
        <summary><span data-ttu-id="6f071-207">型のメタデータから生成されたリフレクション型を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-207">Gets a reflection type generated from type metadata.</span></span></summary>
        <returns><span data-ttu-id="6f071-208"><paramref name="type" /> のメタデータから生成されたリフレクション型。</span><span class="sxs-lookup"><span data-stu-id="6f071-208">A reflection type generated from the metadata of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-209">戻り値は `type` と等しくなく、非リフレクション型との比較には使用できません。</span><span class="sxs-lookup"><span data-stu-id="6f071-209">The return value will not be equal to `type` and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-210">シリアル化マネージャー。</span><span class="sxs-lookup"><span data-stu-id="6f071-210">The serialization manager.</span></span></param>
        <param name="instance"><span data-ttu-id="6f071-211">使用するメタデータを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-211">The object to use metadata from.</span></span></param>
        <summary><span data-ttu-id="6f071-212">オブジェクトのメタデータから生成されたリフレクション型を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-212">Gets a reflection type generated from object metadata.</span></span></summary>
        <returns><span data-ttu-id="6f071-213"><paramref name="object" /> のメタデータから生成されたリフレクション型。</span><span class="sxs-lookup"><span data-stu-id="6f071-213">A reflection type generated from the metadata of <paramref name="object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-214">戻り値は、オブジェクトの型と同じではなく、非リフレクション型との比較には使用できません。</span><span class="sxs-lookup"><span data-stu-id="6f071-214">The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f071-215">指定したオブジェクト値または型のシリアライザーを検索します。</span><span class="sxs-lookup"><span data-stu-id="6f071-215">Locates a serializer for the given object value or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-216">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-216">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-217">取得するシリアライザーを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-217">The object specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="6f071-218">指定したオブジェクト値のシリアライザーを検索します。</span><span class="sxs-lookup"><span data-stu-id="6f071-218">Locates a serializer for the given object value.</span></span></summary>
        <returns><span data-ttu-id="6f071-219"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> に適合する <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-219">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-220"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドは、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> メソッドの拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6f071-220">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f071-221"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> メソッドは、オブジェクトの値ではなく、オブジェクトの型を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="6f071-221">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span> <span data-ttu-id="6f071-222">外部パーティが <xref:System.ComponentModel.TypeDescriptor>を通じて特定のオブジェクトのメタデータをオーバーライドした場合、そのメタデータオーバーライドは、型のみを受け取る <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> メソッドによって認識されません。</span><span class="sxs-lookup"><span data-stu-id="6f071-222">If an external party had overridden metadata for a specific object through <xref:System.ComponentModel.TypeDescriptor>, that metadata override would not be seen by the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method, which only takes a type.</span></span> <span data-ttu-id="6f071-223"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドは、値のメタデータと値の型をチェックします。</span><span class="sxs-lookup"><span data-stu-id="6f071-223">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method checks the metadata of the value and the value's type.</span></span> <span data-ttu-id="6f071-224">2つの違いがある場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> は、値にカスタムデザイナーシリアライザー属性があるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-224">If the two differ, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will look to see if there is a custom designer serializer attribute on the value.</span></span> <span data-ttu-id="6f071-225">その場合は、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-225">If so, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will attempt to use it.</span></span> <span data-ttu-id="6f071-226">それ以外の場合は、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>になります。</span><span class="sxs-lookup"><span data-stu-id="6f071-226">Otherwise, it will defer to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-227"><paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-227"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-228">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-228">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, valueType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-229">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-229">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="valueType"><span data-ttu-id="6f071-230">取得するシリアライザーを指定する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-230">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="6f071-231">指定した型のシリアライザーを検索します。</span><span class="sxs-lookup"><span data-stu-id="6f071-231">Locates a serializer for the given type.</span></span></summary>
        <returns><span data-ttu-id="6f071-232"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> に適合する <paramref name="valueType" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-232">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-233"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドは、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> メソッドの拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="6f071-233">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6f071-234"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> メソッドは、オブジェクトの値ではなく、オブジェクトの型を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="6f071-234">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-235"><paramref name="manager" /> または <paramref name="valueType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-235"><paramref name="manager" /> or <paramref name="valueType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-236">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-236">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetTargetFrameworkProvider : IServiceProvider * obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="6f071-237">型説明のプロバイダー サービス。</span><span class="sxs-lookup"><span data-stu-id="6f071-237">The type description provider service.</span></span></param>
        <param name="instance"><span data-ttu-id="6f071-238"><paramref name="provider" /> が <see langword="null" /> の場合に、型説明のプロバイダー サービスの派生元にすることができるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-238">An object from which the type description provider service can be derived, if <paramref name="provider" /> is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6f071-239">型のフィルター処理に使用できる、ターゲット バージョンの .NET Framework を認識する <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="6f071-239">Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</span></span></summary>
        <returns><span data-ttu-id="6f071-240">.NET Framework を認識する型説明のプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="6f071-240">A .NET Framework-aware type description provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueName : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; string" Usage="codeDomSerializerBase.GetUniqueName (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-241">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-241">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-242">名前の取得対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-242">The object for which the name will be retrieved.</span></span></param>
        <summary><span data-ttu-id="6f071-243">指定したオブジェクトの一意の名前を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-243">Returns a unique name for the given object.</span></span></summary>
        <returns><span data-ttu-id="6f071-244"><paramref name="value" /> の一意の名前。</span><span class="sxs-lookup"><span data-stu-id="6f071-244">A unique name for <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-245"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> メソッドは <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6f071-245">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> method calls the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> method.</span></span> <span data-ttu-id="6f071-246">このメソッドが名前を返さない場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> は <xref:System.ComponentModel.Design.Serialization.INameCreationService> を使用して、オブジェクトの有効な名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="6f071-246">If this method does not return a name, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> uses <xref:System.ComponentModel.Design.Serialization.INameCreationService> to fabricate a valid name for the object.</span></span> <span data-ttu-id="6f071-247">サービスが使用できない場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> は、短い型名とインデックス番号を組み合わせて、一意になるように名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="6f071-247">If the service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> will fabricate a name based on the short type name combined with an index number to make it unique.</span></span> <span data-ttu-id="6f071-248">結果の名前は、新しい名前が返される前に <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> メソッドを呼び出すことによって、シリアル化マネージャーに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="6f071-248">The resulting name is associated with the serialization manager by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> method before the new name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-249"><paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-249"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-250">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-250">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f071-251">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-251">Returns a value indicating whether the given object has been serialized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-252">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-253">以前のシリアル化のテスト対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-253">The object to test for previous serialization.</span></span></param>
        <summary><span data-ttu-id="6f071-254">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-254">Returns a value indicating whether the given object has been serialized.</span></span></summary>
        <returns><span data-ttu-id="6f071-255"><see langword="true" /> がシリアル化されている場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-255"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-256">`value` パラメーターがシリアル化されていると見なされるには、`manager` パラメーターまたは別のシリアライザーが <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドを呼び出して、`value` と参照元の式の間にリレーションシップを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-256">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-257"><paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-257"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-258">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-258">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value, honorPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-259">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-259">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-260">以前のシリアル化のテスト対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-260">The object to test for previous serialization.</span></span></param>
        <param name="honorPreset"><span data-ttu-id="6f071-261">あらかじめ設定された式を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-261"><see langword="true" /> to include preset expressions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f071-262">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。オプションで、あらかじめ設定された式を考慮することもできます。</span><span class="sxs-lookup"><span data-stu-id="6f071-262">Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</span></span></summary>
        <returns><span data-ttu-id="6f071-263"><see langword="true" /> がシリアル化されている場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-263"><see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-264">`value` パラメーターがシリアル化されていると見なされるには、`manager` パラメーターまたは別のシリアライザーが <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドを呼び出して、`value` と参照元の式の間にリレーションシップを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-264">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-265"><paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-265"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-266">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-266">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberSignature Language="F#" Value="member this.SerializeCreationExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeCreationExpression (manager, value, isComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-267">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-267">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-268">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-268">The object to serialize.</span></span></param>
        <param name="isComplete"><span data-ttu-id="6f071-269"><see langword="true" /> が完全にシリアル化されている場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-269"><see langword="true" /> if <paramref name="value" /> was fully serialized; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f071-270">指定したオブジェクトの作成を表す式を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-270">Returns an expression representing the creation of the given object.</span></span></summary>
        <returns><span data-ttu-id="6f071-271"><paramref name="value" /> の作成を表す式。</span><span class="sxs-lookup"><span data-stu-id="6f071-271">An expression representing the creation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-272"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> メソッドを使用すると、`value` パラメーターの作成を表す式をシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="6f071-272">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> method can be used to serialize an expression that represents the creation of the `value` parameter.</span></span> <span data-ttu-id="6f071-273">インスタンス記述子に注意してください。</span><span class="sxs-lookup"><span data-stu-id="6f071-273">It is aware of instance descriptors.</span></span>  
  
 <span data-ttu-id="6f071-274">式が完全に構成されたオブジェクトを表す場合は、`isComplete` パラメーターが `true` に設定されます。または、オブジェクトのプロパティに対してさらにシリアル化を行う必要がある場合は `false` ます。</span><span class="sxs-lookup"><span data-stu-id="6f071-274">The `isComplete` parameter is set to `true` if the expression represents a fully configured object, or `false` if further serialization must be done on the object's properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-275"><paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-275"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-276">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-276">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvent : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.EventDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeEvent (manager, statements, value, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-277">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-277">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="6f071-278">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-278">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-279"><paramref name="descriptor" /> のバインド先となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-279">The object to which <paramref name="descriptor" /> is bound.</span></span></param>
        <param name="descriptor"><span data-ttu-id="6f071-280">シリアル化するイベントを指定する <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-280">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</span></span></param>
        <summary><span data-ttu-id="6f071-281">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-281">Serializes the given event into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-282"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> メソッドは、派生クラスが1つのイベントを特定の <xref:System.CodeDom.CodeStatementCollection>にシリアル化するために呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-282">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method is a helper method that derived classes can call to serialize a single event into the given <xref:System.CodeDom.CodeStatementCollection>.</span></span> <span data-ttu-id="6f071-283"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> は、指定されたイベントの <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> をシリアル化マネージャーに照会し、それをシリアル化するように <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> に要求します。</span><span class="sxs-lookup"><span data-stu-id="6f071-283"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> queries the serialization manager for a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the given event, and then asks the <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> to serialize it.</span></span>  
  
 <span data-ttu-id="6f071-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> は、`statements` と `descriptor` パラメーターを <xref:System.ComponentModel.Design.Serialization.ContextStack>に配置します。</span><span class="sxs-lookup"><span data-stu-id="6f071-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> places the `statements` and `descriptor` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 <span data-ttu-id="6f071-285"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> には、コンパイルされていないメソッドへのイベントバインドを検出するための <xref:System.ComponentModel.Design.IEventBindingService> が必要です。</span><span class="sxs-lookup"><span data-stu-id="6f071-285"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> requires an <xref:System.ComponentModel.Design.IEventBindingService> to discover event bindings to methods that are not compiled.</span></span> <span data-ttu-id="6f071-286">このサービスが存在しない場合、コンパイルされていないメソッドへのイベントバインドは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="6f071-286">If this service is not present, event bindings to non-compiled methods will not be written.</span></span> <span data-ttu-id="6f071-287">イベントのバインド先のオブジェクトを式に変換できる場合でも、コンパイルされたメソッドへのイベントバインドはシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-287">Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-288"><paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="descriptor" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-288"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException"><span data-ttu-id="6f071-289"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="6f071-289"><see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-290">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-290">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvents : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeEvents (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-291">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-291">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="6f071-292">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-292">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-293">イベントをシリアル化する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-293">The object on which events will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="6f071-294">シリアル化するイベントをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-294">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</span></span></param>
        <summary><span data-ttu-id="6f071-295">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-295">Serializes the specified events into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-296"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> メソッドは、派生クラスが呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-296">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="6f071-297">`filter` パラメーターと一致する `value` パラメーターのイベントを調べ、各イベントの <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6f071-297">It looks at events on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method for each event.</span></span>  
  
 <span data-ttu-id="6f071-298"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> メソッドは、`value` の <xref:System.ComponentModel.InheritanceAttribute> を <xref:System.ComponentModel.Design.Serialization.ContextStack>に配置します。</span><span class="sxs-lookup"><span data-stu-id="6f071-298">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-299"><paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-299"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-300">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-300">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperties : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeProperties (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-301">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-301">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="6f071-302">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-302">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-303">プロパティをシリアル化する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-303">The object on which the properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="6f071-304">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-304">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="6f071-305">指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-305">Serializes the properties on the given object into the given statement collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-306"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> メソッドは、派生クラスが呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-306">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="6f071-307">`filter` パラメーターと一致する `value` パラメーターのプロパティを調べ、各プロパティの <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6f071-307">It looks at properties on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method for each property.</span></span>  
  
 <span data-ttu-id="6f071-308"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> メソッドは、`value` の <xref:System.ComponentModel.InheritanceAttribute> を <xref:System.ComponentModel.Design.Serialization.ContextStack>に配置します。</span><span class="sxs-lookup"><span data-stu-id="6f071-308">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-309"><paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-309"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-310">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-310">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializePropertiesToResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializePropertiesToResources (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-311">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-311">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="6f071-312">使用されていません。</span><span class="sxs-lookup"><span data-stu-id="6f071-312">Not used.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-313">プロパティがシリアル化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-313">The object whose properties will be serialized.</span></span></param>
        <param name="filter"><span data-ttu-id="6f071-314">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="6f071-314">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span></span></param>
        <summary><span data-ttu-id="6f071-315">指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-315">Serializes the properties on the given object into the invariant culture's resource bundle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-316"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> メソッドは、派生クラスが呼び出すことができるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-316">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="6f071-317">`filter` パラメーターと一致する `value` パラメーターのプロパティを確認し、プロパティをインバリアントカルチャリソースバンドルにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-317">It looks at properties on the `value` parameter that match the `filter` parameter, and then it serializes the properties into the invariant culture resource bundle.</span></span> <span data-ttu-id="6f071-318">リソースサービスが <xref:System.Resources.ResXResourceWriter>を返す場合、プロパティ値は XML リソース (.resx) ファイルのメタデータセクションに格納されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-318">If the resource service returns a <xref:System.Resources.ResXResourceWriter>, the property values will be stored in the metadata section of the XML resource (.resx) file.</span></span> <span data-ttu-id="6f071-319">`statements` パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="6f071-319">The `statements` parameter is not used.</span></span>  
  
 <span data-ttu-id="6f071-320">リソースとしてシリアル化するには、プロパティが (コンテンツプロパティではなく) 単純であり、その値をシリアル化できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-320">To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</span></span> <span data-ttu-id="6f071-321">このパターンに準拠していないプロパティはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="6f071-321">Properties that do not conform to this pattern will be skipped.</span></span>  
  
 <span data-ttu-id="6f071-322"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> には、インバリアントカルチャのリソースを書き込むための <xref:System.Resources.ResourceWriter> を取得するための <xref:System.ComponentModel.Design.IResourceService> が必要です。</span><span class="sxs-lookup"><span data-stu-id="6f071-322"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the invariant culture.</span></span> <span data-ttu-id="6f071-323">このサービスが利用できない場合、リソースは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="6f071-323">If this service is not available, no resources will be written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-324"><paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-324"><paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-325">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-325">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperty : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeProperty (manager, statements, value, propertyToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-326">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-326">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="statements"><span data-ttu-id="6f071-327">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-327">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-328">プロパティをシリアル化する対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-328">The object on which the property will be serialized.</span></span></param>
        <param name="propertyToSerialize"><span data-ttu-id="6f071-329">シリアル化するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="6f071-329">The property to serialize.</span></span></param>
        <summary><span data-ttu-id="6f071-330">指定したオブジェクトのプロパティをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-330">Serializes a property on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-331"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> メソッドは `propertyToSerialize` パラメーターの <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> を取得し、それにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="6f071-331">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method retrieves a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the `propertyToSerialize` parameter and delegates to it.</span></span>  
  
 <span data-ttu-id="6f071-332"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> は、`statements` と `propertyToSerialize` パラメーターを <xref:System.ComponentModel.Design.Serialization.ContextStack>に配置します。</span><span class="sxs-lookup"><span data-stu-id="6f071-332"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> places the `statements` and `propertyToSerialize` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-333"><paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="propertyToSerialize" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-333"><paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-334">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-334">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResource : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResource (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-335">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-335">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="6f071-336"><paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</span><span class="sxs-lookup"><span data-stu-id="6f071-336">The name of the resource bundle into which <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-337">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-337">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="6f071-338">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-338">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-339"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> メソッドは、指定された名前で値をリソースバンドルにシリアル化するヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-339">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method is a helper method that serializes a value to a resource bundle under the given name.</span></span> <span data-ttu-id="6f071-340">リソースの書き込み先のカルチャは、シリアル化マネージャーの <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> コレクションで `ResourceCulture`というプロパティを検索することによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-340">The culture that the resource is written to is determined by searching the serialization manager's <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> collection for a property called `ResourceCulture`.</span></span> <span data-ttu-id="6f071-341">このプロパティが存在する場合、リソースはそのカルチャに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6f071-341">If this property exists, resources will be written to that culture.</span></span> <span data-ttu-id="6f071-342">それ以外の場合は、インバリアントカルチャにリソースが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6f071-342">Otherwise, resources will be written to the invariant culture.</span></span> <span data-ttu-id="6f071-343">`value` パラメーターはシリアル化可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-343">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="6f071-344"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> には、正しいカルチャのリソースを書き込むための <xref:System.Resources.ResourceWriter> を取得するための <xref:System.ComponentModel.Design.IResourceService> が必要です。</span><span class="sxs-lookup"><span data-stu-id="6f071-344"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="6f071-345">このサービスが使用できない場合は、リソースを表すコードでバイナリオブジェクトを作成 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="6f071-345">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="6f071-346">
            <see langword="ResourceCulture" /> は、シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> コレクションを介してアクセスされる読み取り/書き込みプロパティです。</span><span class="sxs-lookup"><span data-stu-id="6f071-346">
            <see langword="ResourceCulture" /> is a read-write property that is accessed through the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> collection.</span></span> <span data-ttu-id="6f071-347"><see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> メソッドは、このプロパティの値を変更することはありません。単にそれを読み取り、それが記述されるカルチャを識別します。</span><span class="sxs-lookup"><span data-stu-id="6f071-347">The <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> method never changes the value of this property; it merely reads it to identify the culture to which it will write.</span></span> <span data-ttu-id="6f071-348">プロパティは、リソースが解析されて読み込まれるときに、逆シリアル化中に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-348">The property is set during deserialization as resources are parsed and loaded.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-349">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-349">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResourceInvariant : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResourceInvariant (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-350">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-350">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="resourceName"><span data-ttu-id="6f071-351"><paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</span><span class="sxs-lookup"><span data-stu-id="6f071-351">The name of the resource bundle into which <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-352">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-352">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="6f071-353">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-353">Serializes the given object into a resource bundle using the given resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-354">リソースは常にインバリアントカルチャに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6f071-354">The resource is always written to the invariant culture.</span></span> <span data-ttu-id="6f071-355">`value` パラメーターはシリアル化可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-355">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="6f071-356"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> メソッドでは、正しいカルチャのリソースを書き込むための <xref:System.Resources.ResourceWriter> を取得するために <xref:System.ComponentModel.Design.IResourceService> が必要です。</span><span class="sxs-lookup"><span data-stu-id="6f071-356">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> method requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="6f071-357">このサービスが使用できない場合は、リソースを表すコードでバイナリオブジェクトを作成 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="6f071-357">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-358">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-358">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-359">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-359">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-360">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-360">The object to serialize.</span></span> <span data-ttu-id="6f071-361"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6f071-361">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6f071-362">指定したオブジェクトを式にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-362">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="6f071-363"><see cref="T:System.CodeDom.CodeExpression" /> をシリアル化できる場合は <paramref name="value" /> オブジェクト。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-363">A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-364">`value` パラメーターは `null`できます。この場合、プリミティブ式が返されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-364">The `value` parameter can be `null`, in which case a primitive expression will be returned.</span></span>  
  
 <span data-ttu-id="6f071-365"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは、型をシリアル化するために次の規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="6f071-365">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method uses the following rules for serializing types:</span></span>  
  
1.  <span data-ttu-id="6f071-366">まず、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドを呼び出して、オブジェクトに対して式が既に作成されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-366">It first calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method to see if an expression has already been created for the object.</span></span> <span data-ttu-id="6f071-367">その場合は、既存の式を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-367">If so, it returns the existing expression.</span></span>  
  
2.  <span data-ttu-id="6f071-368">次に、オブジェクトのシリアライザーを検索し、それをシリアル化するように要求します。</span><span class="sxs-lookup"><span data-stu-id="6f071-368">It then locates the object's serializer, and asks it to serialize.</span></span>  
  
3.  <span data-ttu-id="6f071-369">オブジェクトのシリアライザーの戻り値が <xref:System.CodeDom.CodeExpression>の場合は、式が返されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-369">If the return value of the object's serializer is a <xref:System.CodeDom.CodeExpression>, the expression is returned.</span></span>  
  
4.  <span data-ttu-id="6f071-370"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> を最後に1回呼び出し、シリアライザーが式を追加したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-370">It makes one last call to <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> to see if the serializer added an expression.</span></span>  
  
5.  <span data-ttu-id="6f071-371">最後に、`null`を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-371">Finally, it returns `null`.</span></span>  
  
 <span data-ttu-id="6f071-372">式を作成できず、適切なシリアライザーが見つからない場合は、シリアル化マネージャーでエラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-372">If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</span></span> <span data-ttu-id="6f071-373">シリアライザーが見つかったにもかかわらず、式を生成できなかった場合、エラーは報告されません。</span><span class="sxs-lookup"><span data-stu-id="6f071-373">No error will be reported if a serializer was found but it failed to produce an expression.</span></span> <span data-ttu-id="6f071-374">この場合は、シリアライザーによって既にエラーが報告されているか、オブジェクトのシリアル化が試行されていないことを前提としています。</span><span class="sxs-lookup"><span data-stu-id="6f071-374">In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</span></span>  
  
 <span data-ttu-id="6f071-375">シリアライザーがステートメントまたはステートメントのコレクションを返した場合、それらのステートメントは破棄されません。</span><span class="sxs-lookup"><span data-stu-id="6f071-375">If the serializer returned a statement or a collection of statements, those statements will not be discarded.</span></span> <span data-ttu-id="6f071-376"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは、まずコンテキストスタックで <xref:System.ComponentModel.Design.Serialization.StatementContext> を検索し、ステートメントをコンテキストオブジェクトの <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> プロパティに追加します。</span><span class="sxs-lookup"><span data-stu-id="6f071-376">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will first look for a <xref:System.ComponentModel.Design.Serialization.StatementContext> on the context stack and add statements to the statement context object's <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> property.</span></span> <span data-ttu-id="6f071-377">ステートメントコンテキストが存在しない場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは、<xref:System.CodeDom.CodeStatementCollection> のコンテキストを検索し、そこにステートメントを追加します。</span><span class="sxs-lookup"><span data-stu-id="6f071-377">If there is no statement context, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will look in the context for a <xref:System.CodeDom.CodeStatementCollection> and add the statements there.</span></span> <span data-ttu-id="6f071-378">ステートメントを追加する場所が見つからない場合は、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-378">If no place can be found to add the statements, an error will be generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f071-379">独自のオブジェクトをシリアル化する場合は、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> 内で <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="6f071-379">You should not call the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method within <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> when serializing your own object.</span></span> <span data-ttu-id="6f071-380">代わりに、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6f071-380">Instead, you should call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</span></span> <span data-ttu-id="6f071-381">`null`が返された場合は、独自の式を作成し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6f071-381">If it returns `null`, create your own expression and call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</span></span> <span data-ttu-id="6f071-382">その後、シリアル化の残りの部分に進みます。</span><span class="sxs-lookup"><span data-stu-id="6f071-382">Then proceed with the rest of your serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-383"><paramref name="manager" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-383"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-384">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-384">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f071-385">オブジェクトを式にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-385">Serializes an object into an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-386">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-386">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-387">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-387">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="6f071-388">指定したオブジェクトを式にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-388">Serializes the given object into an expression.</span></span></summary>
        <returns><span data-ttu-id="6f071-389">シリアル化された式として <see cref="T:System.CodeDom.CodeExpression" /> を格納している <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-389">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-390"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> メソッドは、値をリソース式にシリアル化するヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-390">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method is a helper method that serializes a value to a resource expression.</span></span> <span data-ttu-id="6f071-391">これは、リソースバイナリオブジェクトに値を書き込む <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> メソッドとは対照的です。</span><span class="sxs-lookup"><span data-stu-id="6f071-391">This is in contrast to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method, which writes a value to a resource binary object.</span></span> <span data-ttu-id="6f071-392"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> はさらに一歩進んで、リソースの復旧に使用できる式を返します。</span><span class="sxs-lookup"><span data-stu-id="6f071-392"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> goes one step further and returns an expression that can be used to recover the resource.</span></span> <span data-ttu-id="6f071-393">たとえば、戻り値は "rm" になります。GetValue ("中ビットマップ"); "。</span><span class="sxs-lookup"><span data-stu-id="6f071-393">For example, the return value might be "rm.GetValue("SomeBitmap");".</span></span> <span data-ttu-id="6f071-394">リソースの名前は、コンテキストスタックで見つかった場合は、<xref:System.ComponentModel.Design.Serialization.ExpressionContext>から計算されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-394">The name of the resource is calculated from the <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, if one can be found on the context stack.</span></span>  
  
 <span data-ttu-id="6f071-395"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> メソッドは、次のオブジェクトの <xref:System.ComponentModel.Design.Serialization.ContextStack> を確認します。</span><span class="sxs-lookup"><span data-stu-id="6f071-395">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will look on the <xref:System.ComponentModel.Design.Serialization.ContextStack> for the following objects:</span></span>  
  
-   <span data-ttu-id="6f071-396"><xref:System.CodeDom.CodeStatementCollection>-リソースマネージャーをに追加するステートメントのコレクション (宣言が必要な場合)。</span><span class="sxs-lookup"><span data-stu-id="6f071-396"><xref:System.CodeDom.CodeStatementCollection> - a collection of statements to add a resource manager to, if one needs to be declared.</span></span>  
  
-   <span data-ttu-id="6f071-397"><xref:System.ComponentModel.Design.Serialization.RootContext>-リソースマネージャーを作成するために必要なルート式。</span><span class="sxs-lookup"><span data-stu-id="6f071-397"><xref:System.ComponentModel.Design.Serialization.RootContext> - the root expression, which is needed to create a resource manager.</span></span>  
  
-   <span data-ttu-id="6f071-398"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>-リソースの名前を作成し、リソースマネージャー呼び出しの種類を決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f071-398"><xref:System.ComponentModel.Design.Serialization.ExpressionContext> - used to fabricate a name for the resource and to decide what type of resource manager call to make.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-399"><paramref name="manager" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-399"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-400">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-400">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value, ensureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-401">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-401">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-402">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-402">The object to serialize.</span></span></param>
        <param name="ensureInvariant"><span data-ttu-id="6f071-403">インバリアント カルチャにシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-403"><see langword="true" /> to serialize into the invariant culture; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f071-404">指定したオブジェクトをインバリアント カルチャに適した式にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="6f071-404">Serializes the given object into an expression appropriate for the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="6f071-405">シリアル化された式として <see cref="T:System.CodeDom.CodeExpression" /> を格納している <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-405">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-406">`ensureInvariant` パラメーターが `true`の場合、現在の `ResourceCulture` がインバリアントカルチャでない場合は、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> メソッドによって、リソース値がインバリアントカルチャのリソースファイルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="6f071-406">If the `ensureInvariant` parameter is `true`, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will also write the resource value into the invariant culture's resource file if the current `ResourceCulture` is not the invariant culture.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-407"><paramref name="manager" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-407"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-408">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-408">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f071-409">オブジェクトを式に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="6f071-409">Associates an object with an expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-410">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-410">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-411">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-411">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="6f071-412"><see cref="T:System.CodeDom.CodeExpression" /> を関連付ける <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-412">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="6f071-413">オブジェクトを式に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="6f071-413">Associates an object with an expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-414"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドは、<xref:System.CodeDom.CodeExpression> をオブジェクトに関連付けるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-414">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="6f071-415">この方法で式に関連付けられているオブジェクトには、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="6f071-415">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="6f071-416"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> は、式テーブルをコンテキストスタックに追加されたオブジェクトとして格納し、任意のシリアライザーの <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドからアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="6f071-416"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer's <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f071-417"><paramref name="manager" />、<paramref name="value" />、または <paramref name="expression" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6f071-417"><paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-418">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-418">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression * bool -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression, isPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="6f071-419">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-419">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span></span></param>
        <param name="value"><span data-ttu-id="6f071-420">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6f071-420">The object to serialize.</span></span></param>
        <param name="expression"><span data-ttu-id="6f071-421"><see cref="T:System.CodeDom.CodeExpression" /> を関連付ける <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-421">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</span></span></param>
        <param name="isPreset"><span data-ttu-id="6f071-422">あらかじめ設定された式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f071-422"><see langword="true" /> to specify a preset expression; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6f071-423">必要に応じて事前設定された式を指定し、オブジェクトを式に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="6f071-423">Associates an object with an expression, optionally specifying a preset expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f071-424"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドは、<xref:System.CodeDom.CodeExpression> をオブジェクトに関連付けるヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6f071-424">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="6f071-425">この方法で式に関連付けられているオブジェクトには、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="6f071-425">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="6f071-426"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> は、式テーブルをコンテキストスタックに追加されたオブジェクトとして格納し、任意のシリアライザーの <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドからアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="6f071-426">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer's <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md"><span data-ttu-id="6f071-427">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="6f071-427">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
