<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f4fe6a425a57892882654a469c0f4d8f4ea7968" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75149262" /></Metadata><TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="04042-101"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> インターフェイスの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-102"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> インターフェイスは、シリアル化を制御するオブジェクトへの形式に依存しないインターフェイスとして設計されています。</span><span class="sxs-lookup"><span data-stu-id="04042-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="04042-103">基本的に、シリアライザーにコンテキストとサービスを提供し、実際に逆シリアル化を実行します。</span><span class="sxs-lookup"><span data-stu-id="04042-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="04042-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> は、オブジェクトを追跡することによって、逆シリアル化プロセスを支援します。</span><span class="sxs-lookup"><span data-stu-id="04042-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="04042-105">これは <xref:System.ComponentModel.Design.IDesignerHost> インターフェイスの手法と似ています。デザイナーは実際にユーザーインターフェイス (UI) を提供し、<xref:System.ComponentModel.Design.IDesignerHost> さまざまなデザイナーが連携できるようにするための接着を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="04042-106"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> クラスは、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> を実装しています。</span><span class="sxs-lookup"><span data-stu-id="04042-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="04042-107">これは、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>のようなランタイムシリアライザーに似た汎用形式の逆シリアル化を提供するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="04042-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="04042-108"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> クラスは、次の3つの目標を達成します。</span><span class="sxs-lookup"><span data-stu-id="04042-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="04042-109">これは、さまざまな形式を逆シリアル化するために使用できる単純なターンキーオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="04042-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="04042-110">これはジェネリックであり、特定の形式に関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="04042-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="04042-111">これは、CodeDOM 逆シリアル化とマークアップ逆シリアル化でも同じように使用できます。</span><span class="sxs-lookup"><span data-stu-id="04042-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="04042-112">拡張可能であり、コピー/貼り付けと元に戻す/やり直しのシナリオで使用されるさまざまなシリアル化方法をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="04042-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="04042-113">デザイン時のシリアル化は、実行時のオブジェクトのシリアル化とは次の点で異なります。</span><span class="sxs-lookup"><span data-stu-id="04042-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="04042-114">通常、シリアル化を実行するオブジェクトは、実行時のオブジェクトとは別に、デザイン時のロジックをコンポーネントから削除できるようにします。</span><span class="sxs-lookup"><span data-stu-id="04042-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="04042-115">シリアル化スキームでは、オブジェクトが完全に初期化され、逆シリアル化中にプロパティとメソッドの呼び出しによって変更されることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="04042-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="04042-116">オブジェクトに設定されていない値 (プロパティに既定値が含まれている) を持つオブジェクトのプロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="04042-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="04042-117">逆に、逆シリアル化ストリームには穴が存在する場合があります。</span><span class="sxs-lookup"><span data-stu-id="04042-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="04042-118">オブジェクトの完全なシリアル化ではなく、シリアル化ストリーム内のコンテンツの品質に重点が置かれます。</span><span class="sxs-lookup"><span data-stu-id="04042-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="04042-119">これは、オブジェクトをシリアル化する方法が定義されていない場合、例外をスローするのではなく、そのオブジェクトがスキップされる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="04042-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="04042-120">シリアル化エンジンでは、ここでヒューリスティックを使用して、どのエラーを無視して回復不能にできるかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="04042-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="04042-121">シリアル化ストリームには、逆シリアル化に必要なデータよりも多くのデータが含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="04042-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="04042-122">たとえば、ソースコードのシリアル化では、ユーザーコードとオブジェクトグラフを逆シリアル化するために必要なコードが混在しています。</span><span class="sxs-lookup"><span data-stu-id="04042-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="04042-123">このユーザーコードは、シリアル化解除時に無視して、シリアル化時に保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="04042-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="04042-124">これらの違いにより、デザイン時のシリアル化には別のシリアル化モデルが適用されます。</span><span class="sxs-lookup"><span data-stu-id="04042-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="04042-125">このモデルでは、シリアル化するデータ型ごとに別個のシリアライザーオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="04042-126">各シリアライザーは、問題に全体として小さな影響を与えることになります。</span><span class="sxs-lookup"><span data-stu-id="04042-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="04042-127">これらのシリアライザーはすべて、共通のシリアル化マネージャーによって調整されます。</span><span class="sxs-lookup"><span data-stu-id="04042-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="04042-128">シリアル化マネージャーは、これらの異なるシリアライザー間で状態を維持する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="04042-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="04042-129">例として、次のクラスについて考えてみます。</span><span class="sxs-lookup"><span data-stu-id="04042-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="04042-130">このクラスのインスタンスは、3つの異なるシリアライザーを使用します。1つは `SampleObject`用、もう1つは文字列用、もう1つは整数です。</span><span class="sxs-lookup"><span data-stu-id="04042-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="04042-131">`SampleObject` がシリアル化グラフのルートであるため、`SampleObject` のシリアライザーはルートシリアライザーと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="04042-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="04042-132">さらに複雑なオブジェクトグラフも作成できます。</span><span class="sxs-lookup"><span data-stu-id="04042-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="04042-133">たとえば、`SampleObject` が次のように変更された場合にどうなるかを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="04042-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="04042-134">これにより、`SampleObject` が自身の別のインスタンスである子を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="04042-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="04042-135">次のコードは、オブジェクトグラフを塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="04042-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="04042-136">`root` をシリアル化すると、4つのシリアライザーが使用されます。1つはルートシリアライザー、もう1つは子 `SampleObject`のシリアライザー、もう1つは `int`のシリアライザー、もう1つは `string`のシリアライザーです。</span><span class="sxs-lookup"><span data-stu-id="04042-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="04042-137">シリアライザーは型に基づいてキャッシュされるため、`SampleObject`の各インスタンスに対してシリアライザーを作成する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="04042-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="04042-138"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> クラスは、シリアル化セッションの概念に基づいています。</span><span class="sxs-lookup"><span data-stu-id="04042-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="04042-139">セッションは、さまざまなシリアライザーによってアクセスできる状態を保持します。</span><span class="sxs-lookup"><span data-stu-id="04042-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="04042-140">セッションが破棄されると、この状態は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="04042-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="04042-141">これにより、シリアライザーの大部分がステートレスに保たれ、破損しているシリアライザーをクリーンアップすることができます。</span><span class="sxs-lookup"><span data-stu-id="04042-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="04042-142">次の表では、セッション間で状態を管理する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="04042-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="04042-143">グローバル状態</span><span class="sxs-lookup"><span data-stu-id="04042-143">Global State</span></span>  
 <span data-ttu-id="04042-144">この状態は、シリアル化マネージャーのオブジェクトによって所有されていますが、現在のシリアル化セッションからは独立しています。</span><span class="sxs-lookup"><span data-stu-id="04042-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="04042-145">Object</span><span class="sxs-lookup"><span data-stu-id="04042-145">Object</span></span>|<span data-ttu-id="04042-146">使用法</span><span class="sxs-lookup"><span data-stu-id="04042-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="04042-147">シリアル化プロバイダー</span><span class="sxs-lookup"><span data-stu-id="04042-147">Serialization providers</span></span>|<span data-ttu-id="04042-148">オブジェクトは、独自のシリアル化プロバイダーとして追加できます。</span><span class="sxs-lookup"><span data-stu-id="04042-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="04042-149">これらのプロバイダーは、シリアライザーの検索に使用されるため、シリアル化セッションを直後します。</span><span class="sxs-lookup"><span data-stu-id="04042-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="04042-150">セッション所有の状態</span><span class="sxs-lookup"><span data-stu-id="04042-150">Session-Owned State</span></span>  
 <span data-ttu-id="04042-151">この状態はセッションによって所有され、セッションが破棄されると破棄されます。</span><span class="sxs-lookup"><span data-stu-id="04042-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="04042-152">そのため、この状態を操作するプロパティやメソッドにアクセスしても、シリアル化マネージャーがアクティブなセッションにない場合は例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="04042-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="04042-153">Object</span><span class="sxs-lookup"><span data-stu-id="04042-153">Object</span></span>|<span data-ttu-id="04042-154">使用法</span><span class="sxs-lookup"><span data-stu-id="04042-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="04042-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> イベント</span><span class="sxs-lookup"><span data-stu-id="04042-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="04042-156"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> イベントは、名前のその他の解決を提供するために、シリアライザーによってアタッチされます。</span><span class="sxs-lookup"><span data-stu-id="04042-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="04042-157">セッションが終了すると、すべてのハンドラーがこのイベントからデタッチされます。</span><span class="sxs-lookup"><span data-stu-id="04042-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="04042-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベント</span><span class="sxs-lookup"><span data-stu-id="04042-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="04042-159"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベントは、セッションが破棄される直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="04042-160">次に、すべてのハンドラーがこのイベントからデタッチされます。</span><span class="sxs-lookup"><span data-stu-id="04042-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="04042-161">名前テーブル</span><span class="sxs-lookup"><span data-stu-id="04042-161">Name table</span></span>|<span data-ttu-id="04042-162">シリアル化マネージャーは、オブジェクトとその名前をマップするテーブルを保持します。</span><span class="sxs-lookup"><span data-stu-id="04042-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="04042-163">シリアライザーは、簡単に識別できるようにオブジェクトの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="04042-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="04042-164">この名前テーブルは、セッションが終了したときにクリアされます。</span><span class="sxs-lookup"><span data-stu-id="04042-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="04042-165">シリアライザーキャッシュ</span><span class="sxs-lookup"><span data-stu-id="04042-165">Serializer cache</span></span>|<span data-ttu-id="04042-166">シリアル化マネージャーは、指定するように要求されたシリアライザーのキャッシュを保持します。</span><span class="sxs-lookup"><span data-stu-id="04042-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="04042-167">セッションが終了すると、このキャッシュはクリアされます。</span><span class="sxs-lookup"><span data-stu-id="04042-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="04042-168">パブリック <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> メソッドは、いつでも安全に呼び出すことができますが、その値は、セッション内から呼び出された場合にのみキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="04042-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="04042-169">コンテキストスタック</span><span class="sxs-lookup"><span data-stu-id="04042-169">Context stack</span></span>|<span data-ttu-id="04042-170">シリアル化マネージャーは、コンテキストスタックと呼ばれるオブジェクトを保持します。このオブジェクトには、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="04042-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="04042-171">シリアライザーは、このスタックを使用して、他のシリアライザーが使用できる追加情報を格納できます。</span><span class="sxs-lookup"><span data-stu-id="04042-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="04042-172">たとえば、プロパティ値をシリアル化するシリアライザーは、シリアル化する値を要求する前に、シリアル化スタックでプロパティ名をプッシュできます。</span><span class="sxs-lookup"><span data-stu-id="04042-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="04042-173">このスタックは、セッションが終了したときにクリアされます。</span><span class="sxs-lookup"><span data-stu-id="04042-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="04042-174">エラー一覧</span><span class="sxs-lookup"><span data-stu-id="04042-174">Error list</span></span>|<span data-ttu-id="04042-175">シリアル化マネージャーは、シリアル化中に発生したエラーの一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="04042-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="04042-176">この一覧は、セッションが終了すると、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> プロパティを介してアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="04042-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="04042-177">セッション間で <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> プロパティにアクセスすると、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04042-178"><see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="04042-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04042-179"><see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="04042-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-180">このコンストラクターは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> プロパティと <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="04042-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04042-181"><see cref="T:System.IServiceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="04042-181">An <see cref="T:System.IServiceProvider" />.</span></span></param>
        <summary><span data-ttu-id="04042-182">指定したサービス プロバイダーで <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="04042-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-183">シリアライザーが、シリアル化マネージャーによって満たされないサービスを要求した場合、既定の実装はこれらの要求を `provider` パラメーターに転送します。</span><span class="sxs-lookup"><span data-stu-id="04042-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="04042-184">このコンストラクターは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> プロパティと <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="04042-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04042-185"><paramref name="provider" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-185"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-186">このシリアル化マネージャーのコンテナーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="04042-186">Gets or sets to the container for this serialization manager.</span></span></summary>
        <value><span data-ttu-id="04042-187">シリアル化マネージャーがコンポーネントを追加する <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="04042-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-188">コンテナーが存在する場合は、シリアル化マネージャーによって作成されたすべてのコンポーネントがコンテナーに追加されます。</span><span class="sxs-lookup"><span data-stu-id="04042-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="04042-189">このプロパティの既定の実装では、サービスプロバイダーが <xref:System.ComponentModel.Design.IDesignerHost> を検索し、デザイナーホストによって提供されるコンテナー (存在する場合) を使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="04042-190">それ以外の場合、このプロパティは `null` を返し、コンテナーにはコンポーネントを追加しません。</span><span class="sxs-lookup"><span data-stu-id="04042-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-191">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span><span class="sxs-lookup"><span data-stu-id="04042-191">The serialization manager has an active serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="04042-192">作成するインスタンスの型。</span><span class="sxs-lookup"><span data-stu-id="04042-192">The type to create an instance of.</span></span></param>
        <param name="arguments"><span data-ttu-id="04042-193">型のコンストラクターのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="04042-193">The parameters of the type's constructor.</span></span> <span data-ttu-id="04042-194">パラメーターなしのコンストラクターを呼び出すには、これが <see langword="null" /> でも空のコレクションでもかまいません。</span><span class="sxs-lookup"><span data-stu-id="04042-194">This can be <see langword="null" /> or an empty collection to invoke the parameterless constructor.</span></span></param>
        <param name="name"><span data-ttu-id="04042-195">オブジェクトに付ける名前。</span><span class="sxs-lookup"><span data-stu-id="04042-195">A name to give the object.</span></span> <span data-ttu-id="04042-196"><see langword="null" /> の場合、オブジェクトに名前は付けられません。ただし、オブジェクトをコンテナーに追加し、そのコンテナーによってオブジェクトに名前が付けられる場合を除きます。</span><span class="sxs-lookup"><span data-stu-id="04042-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="04042-197">オブジェクトが <see langword="true" /> を実装しているときに、コンテナーにオブジェクトを追加する場合は <see cref="T:System.ComponentModel.IComponent" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04042-197"><see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="04042-198">型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="04042-198">Creates an instance of a type.</span></span></summary>
        <returns><span data-ttu-id="04042-199"><paramref name="type" /> で指定した型の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="04042-199">A new instance of the type specified by <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-200">このメソッドは、シリアライザーが型のインスタンスを作成しようとしたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="04042-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="04042-201">既定の実装では、型の新しいインスタンスが作成されます。または、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> と <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> プロパティの値に応じて既存のインスタンスが返される場合があります。</span><span class="sxs-lookup"><span data-stu-id="04042-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="04042-202"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> メソッドは、リフレクションを使用してインスタンスを作成し、パラメーターに対していくつかの汎用 <xref:System.IConvertible> 変換を実行して、一致するコンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="04042-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="04042-203"><paramref name="type" /> は、<paramref name="arguments" /> に格納されたパラメーターを取得するコンストラクターを持ちません。</span><span class="sxs-lookup"><span data-stu-id="04042-203"><paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04042-204">新しいシリアル化セッションを作成します。</span><span class="sxs-lookup"><span data-stu-id="04042-204">Creates a new serialization session.</span></span></summary>
        <returns><span data-ttu-id="04042-205">新しいシリアル化セッションを表す <see cref="T:System.IDisposable" />。</span><span class="sxs-lookup"><span data-stu-id="04042-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-206">シリアル化マネージャー内のほとんどのデータは一時的なものであり、シリアル化セッションの有効期間中のみ存在します。</span><span class="sxs-lookup"><span data-stu-id="04042-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="04042-207">セッションが破棄されると、シリアル化は完了したと見なされ、この一時的な状態がクリアされます。</span><span class="sxs-lookup"><span data-stu-id="04042-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="04042-208">これにより、シリアル化マネージャーの1つのインスタンスを使用して、複数のオブジェクトツリーをシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="04042-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="04042-209">サービスプロバイダーやシリアル化マネージャーに追加されたカスタムシリアル化プロバイダーなど、一部の状態はセッションにまたがります。</span><span class="sxs-lookup"><span data-stu-id="04042-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-210">シリアル化マネージャーは、既にセッション内に存在します。</span><span class="sxs-lookup"><span data-stu-id="04042-210">The serialization manager is already within a session.</span></span> <span data-ttu-id="04042-211"><see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> のこのバージョンは、同時セッションをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="04042-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-212">シリアル化または逆シリアル化の実行時に発生したエラーのリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-212">Gets the list of errors that occurred during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="04042-213">シリアル化または逆シリアル化の実行時に発生したエラーのリスト。</span><span class="sxs-lookup"><span data-stu-id="04042-213">The list of errors that occurred during serialization or deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-214">シリアル化セッションがアクティブな間は、エラー一覧のみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="04042-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-215">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-215">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="04042-216">取得する型の名前。</span><span class="sxs-lookup"><span data-stu-id="04042-216">The name of the type to get.</span></span></param>
        <summary><span data-ttu-id="04042-217">指定された型名に対応する型を取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-217">Gets the type corresponding to the specified type name.</span></span></summary>
        <returns><span data-ttu-id="04042-218">指定された種類です。</span><span class="sxs-lookup"><span data-stu-id="04042-218">The specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="04042-219">シリアライザーの取得対象となるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="04042-219">The type of object for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="04042-220">取得するシリアライザーの型。</span><span class="sxs-lookup"><span data-stu-id="04042-220">The type of serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="04042-221">指定したオブジェクト型のシリアライザーを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-221">Gets the serializer for the given object type.</span></span></summary>
        <returns><span data-ttu-id="04042-222"><paramref name="objectType" /> のシリアライザー。見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-223">必要なシリアライザーの種類を要求することができます。</span><span class="sxs-lookup"><span data-stu-id="04042-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="04042-224">このメソッドは、指定されたオブジェクトの種類に対して要求された型のシリアライザーが存在しない場合に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="04042-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04042-225"><paramref name="objectType" /> または <paramref name="serializerType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-225"><paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="04042-226">取得するサービスの型。</span><span class="sxs-lookup"><span data-stu-id="04042-226">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="04042-227">要求したサービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-227">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="04042-228">要求したサービス。サービスを解決できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-229"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> メソッドは、コンストラクターで設定された、基になるコンテナーまたはサービスプロバイダーへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="04042-230">取得する型の名前。</span><span class="sxs-lookup"><span data-stu-id="04042-230">The name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="04042-231">要求された型を取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-231">Gets the requested type.</span></span></summary>
        <returns><span data-ttu-id="04042-232">要求された型。型を解決できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-233"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> メソッドは、サービスプロバイダーが <xref:System.ComponentModel.Design.ITypeResolutionService> を検索し、使用可能な場合はそのサービスに委任して型を解決します。</span><span class="sxs-lookup"><span data-stu-id="04042-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="04042-234"><xref:System.ComponentModel.Design.ITypeResolutionService> が使用できない場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> は <xref:System.Object.GetType%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="04042-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="04042-235">イベント データを格納している <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="04042-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="04042-236"><see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="04042-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-237">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="04042-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="04042-238">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="04042-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="04042-239"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="04042-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="04042-240">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="04042-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="04042-241">派生クラスで <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="04042-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="04042-242">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="04042-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="04042-243"><see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="04042-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-244">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="04042-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="04042-245">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="04042-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="04042-246"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="04042-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="04042-247">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="04042-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="04042-248">派生クラスで <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="04042-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="04042-249">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="04042-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="04042-250"><see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="04042-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-251">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="04042-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="04042-252">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="04042-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="04042-253"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="04042-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="04042-254">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="04042-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="04042-255">派生クラスで <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="04042-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-256"><see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドが、コンテナーに指定した名前が存在することをチェックする必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="04042-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span></span></summary>
        <value><span data-ttu-id="04042-257"><see langword="true" /> が指定したコンポーネント名を渡す場合は <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />。<see langword="false" /> がコンテナーに指定した名前が存在するかどうかチェックする場合は <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="04042-257"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="04042-258">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-259"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> メソッドの動作は、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="04042-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="04042-260">`true`すると、指定されたコンポーネント名が <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> に渡されます。</span><span class="sxs-lookup"><span data-stu-id="04042-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="04042-261">`false`した場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> はコンテナー内の指定された名前の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="04042-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="04042-262">名前がコンテナーに存在しない場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> は指定された名前を使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="04042-263">名前がコンテナーに存在する場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> は、コンテナーに追加するときに、コンポーネントの名前として null 値を渡します。これにより、新しい名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="04042-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="04042-264">この2番目のバリエーションは、オブジェクトが存在しないということを想定するのではなく、常にオブジェクトを複製するシリアライザーを実装する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="04042-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="04042-265">貼り付けコマンドでは、多くの場合、この種類のシリアライザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="04042-266">このプロパティは、シリアル化セッションを使用していない場合にのみ変更できます。</span><span class="sxs-lookup"><span data-stu-id="04042-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-267">このプロパティは、シリアル化セッション内から変更されました。</span><span class="sxs-lookup"><span data-stu-id="04042-267">This property was changed from within a serialization session.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-268">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="04042-269">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-270"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> プロパティは、シリアライザーが動作をガイドするために使用できるシリアル化プロパティのセットをシリアル化マネージャーに提供する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="04042-271">このオブジェクトのパブリックプロパティは、シリアル化マネージャーのターゲットオブジェクトを持つ新しいプロパティ記述子で検査およびラップされます。</span><span class="sxs-lookup"><span data-stu-id="04042-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-272"><see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを常に作成するかどうかを示す値が取得または設定されます。</span><span class="sxs-lookup"><span data-stu-id="04042-272">Gets or sets a value that indicates whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span></span></summary>
        <value><span data-ttu-id="04042-273"><see langword="true" /> が既存のインスタンスを返す場合は <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />。<see langword="false" /> が型の新しいインスタンスを作成する場合は <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="04042-273"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span></span> <span data-ttu-id="04042-274">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-274">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-275"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> プロパティが `false`の場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> メソッドは常に型の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="04042-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="04042-276"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> が `true`場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> はまず名前テーブルとコンテナーで同じ名前のオブジェクトを検索します。</span><span class="sxs-lookup"><span data-stu-id="04042-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="04042-277">このようなオブジェクトが存在し、同じ型の場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> は既存のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="04042-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="04042-278">この2番目のバリエーションは、常に新しいツリーを作成するのではなく、既存のオブジェクトセットにシリアル化状態を適用するシリアライザーを実装する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="04042-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="04042-279">**Undo**コマンドでは、多くの場合、この種類のシリアライザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="04042-280"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> プロパティが `true`場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> プロパティによって、2つのオブジェクトの型に応じて <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> の動作がさらに変更されます。</span><span class="sxs-lookup"><span data-stu-id="04042-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-281">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span><span class="sxs-lookup"><span data-stu-id="04042-281">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-282">セッションが作成されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-282">Occurs when a session is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-283">セッションが破棄されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-283">Occurs when a session is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04042-284">追加するシリアル化プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="04042-284">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="04042-285">シリアル化マネージャーにカスタムのシリアル化プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="04042-285">Adds a custom serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-286"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> メソッドを使用してシリアル化プロバイダーを要求する場合、シリアル化マネージャーは、適切なシリアライザーの型のメタデータを調べる前に、まずカスタムシリアル化プロバイダーに対してクエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="04042-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-287">このシリアル化セッションのコンテキスト スタックを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-287">Gets the context stack for this serialization session.</span></span></summary>
        <value><span data-ttu-id="04042-288">データを格納する <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</span><span class="sxs-lookup"><span data-stu-id="04042-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-289">コンテキストスタックは、スタックとして実装されているユーザー定義のストレージ領域を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="04042-290">このストレージ領域は、一般的に階層化されたプロセスであるため、シリアライザー間の通信を提供するのに便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="04042-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-291">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-291">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="04042-292">作成するデータ型。</span><span class="sxs-lookup"><span data-stu-id="04042-292">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="04042-293">型のコンストラクターに渡す引数。</span><span class="sxs-lookup"><span data-stu-id="04042-293">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="04042-294">オブジェクトの名前です。</span><span class="sxs-lookup"><span data-stu-id="04042-294">The name of the object.</span></span> <span data-ttu-id="04042-295">この名前は、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> を使用して後からオブジェクトにアクセスするときに使用できます。</span><span class="sxs-lookup"><span data-stu-id="04042-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="04042-296"><see langword="null" /> が渡された場合でもオブジェクトは作成されますが、そのオブジェクトには名前を指定する方法ではアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="04042-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="04042-297">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="04042-297"><see langword="true" /> to add this object to the design container.</span></span> <span data-ttu-id="04042-298">この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</span><span class="sxs-lookup"><span data-stu-id="04042-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="04042-299"><see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="04042-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="04042-300">新しく作成したオブジェクト インスタンス。</span><span class="sxs-lookup"><span data-stu-id="04042-300">The newly created object instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="04042-301">取得するオブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="04042-301">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="04042-302">指定した名前の作成済みオブジェクトのインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-302">Retrieves an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="04042-303">指定した名前を持つオブジェクトのインスタンス。その名前のオブジェクトが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04042-304"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-304"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-305">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-305">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04042-306">名前の取得対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-306">The object for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="04042-307">指定したオブジェクトの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-307">Retrieves a name for the specified object.</span></span></summary>
        <returns><span data-ttu-id="04042-308">オブジェクトの名前。オブジェクトに名前がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-309"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> メソッドで `value` パラメーターに対応する名前が見つからない場合、`null`を返す前に <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04042-310"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-310"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-311">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-311">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="04042-312">シリアライザーを取得する対象のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="04042-312">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="04042-313">取得するシリアライザーの型。</span><span class="sxs-lookup"><span data-stu-id="04042-313">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="04042-314">指定したオブジェクト型に対応する、要求された型のシリアライザーを取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-314">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="04042-315">要求されたシリアライザーのインスタンス。該当するシリアライザーが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="04042-316">読み込まれる型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="04042-316">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="04042-317">指定した名前の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="04042-317">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="04042-318">型のインスタンス。型を読み込めない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04042-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-319">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-319">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-320"><see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティを実装します。</span><span class="sxs-lookup"><span data-stu-id="04042-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="04042-321">シリアル化されるプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="04042-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="04042-322">削除する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</span><span class="sxs-lookup"><span data-stu-id="04042-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span></param>
        <summary><span data-ttu-id="04042-323">以前に追加したシリアル化プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="04042-323">Removes a previously added serialization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-324"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> メソッドは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> メソッドの呼び出しによって以前に追加されたカスタムシリアル化プロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="04042-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="04042-325">エラー情報を格納しているオブジェクト。通常は、<see cref="T:System.String" /> 型または <see cref="T:System.Exception" /> 型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span></span></param>
        <summary><span data-ttu-id="04042-326">シリアル化における回復可能なエラーの報告に使用します。</span><span class="sxs-lookup"><span data-stu-id="04042-326">Used to report a recoverable error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-327">シリアライザーは、エラー情報を使用して <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> メソッドを呼び出すことによって、回復可能なエラーを適切に処理するように記述できます。</span><span class="sxs-lookup"><span data-stu-id="04042-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="04042-328">シリアル化マネージャーは、完了後にエラーの一覧の報告をサポートする場合もあれば、このメソッドから例外をスローしてシリアル化プロセスを中止する場合もあります。</span><span class="sxs-lookup"><span data-stu-id="04042-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="04042-329">シリアライザーは、この関数を呼び出した後も続行されます。</span><span class="sxs-lookup"><span data-stu-id="04042-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="04042-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> は、`errorInformation` パラメーターを <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="04042-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="04042-331">`errorInformation` が `null`場合、アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="04042-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-332">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-332">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-333"><see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> が、指定した名前をシリアル化マネージャーの名前テーブルで見つけることができない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-333">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="04042-334">`ResolveName` イベントは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> メソッドが呼び出されたときに発生しますが、指定された名前をシリアル化マネージャーの名前テーブルで見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="04042-334">The `ResolveName` event is raised when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method is called, but it fails to find the specified name in the serialization manager's name table.</span></span>

<span data-ttu-id="04042-335">このイベントは、シリアライザーがオブジェクトの作成を依存関係によって順序付けする必要がないように、シリアライザーがオブジェクトを要求するための方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-335">This event provides a way for a serializer to demand-create an object so the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="04042-336">このデリゲートは、シリアル化または逆シリアル化が完了した直後にクリアされます。</span><span class="sxs-lookup"><span data-stu-id="04042-336">This delegate is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-337">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</span><span class="sxs-lookup"><span data-stu-id="04042-337">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-338">シリアル化が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="04042-338">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="04042-339">通常、シリアル化プロセスはシングルスレッドであり、ステートレスである必要があります。</span><span class="sxs-lookup"><span data-stu-id="04042-339">Typically the serialization process is single-threaded and should be stateless.</span></span> <span data-ttu-id="04042-340">これらの特性が満たされていない場合は、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベントを使用してプロセスを整理できます。</span><span class="sxs-lookup"><span data-stu-id="04042-340">When these characteristics are not true, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event can be used to help to organize the process.</span></span> <span data-ttu-id="04042-341">シリアライザーは、このイベントを追跡して、シリアル化プロセスが完了したことを知ることができます。</span><span class="sxs-lookup"><span data-stu-id="04042-341">A serializer can track this event to know that the serialization process is complete.</span></span>

<span data-ttu-id="04042-342">たとえば、シリアライザーがリソースファイルなどの別のファイルに書き込む必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="04042-342">For example, sometimes a serializer needs to write to another file, such as a resource file.</span></span> <span data-ttu-id="04042-343">このような場合、オブジェクトグラフのシリアル化には通常複数のシリアライザーが必要になるため、完了時にファイルを閉じるようにシリアライザーを設計するのは非効率的です。そのため、リソースファイルは何度も開かれて閉じられます。</span><span class="sxs-lookup"><span data-stu-id="04042-343">In such a case, it would be inefficient to design the serializer to close the file when it is finished because serialization of an object graph generally requires several serializers; therefore, the resource file would be opened and closed many times.</span></span> <span data-ttu-id="04042-344">代わりに、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベントを追跡したオブジェクトを使用してリソースファイルにアクセスできます。また、そのオブジェクトは、シリアル化の最後にリソースファイルを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="04042-344">Instead, the resource file could be accessed through an object that tracked the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and that object could close the resource file at the end of serialization.</span></span>

<span data-ttu-id="04042-345">関連する用途では、このイベントを使用して、シリアル化マネージャーにインストールされている一時サービスを削除できます。</span><span class="sxs-lookup"><span data-stu-id="04042-345">In a related use, this event can be used to remove a temporary service installed in the serialization manager.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-346">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</span><span class="sxs-lookup"><span data-stu-id="04042-346">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="04042-347">名前を設定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-347">The object to set the name.</span></span></param>
        <param name="name"><span data-ttu-id="04042-348">オブジェクトの名前として使用する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="04042-348">A <see cref="T:System.String" /> used as the name of the object.</span></span></param>
        <summary><span data-ttu-id="04042-349">指定したオブジェクトの名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="04042-349">Sets the name for the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-350"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> メソッドは、既存のオブジェクトの名前を設定する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="04042-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="04042-351">これにより、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> メソッドの呼び出しによってオブジェクトのインスタンスを作成できるため、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> メソッドのオーバーヘッドを回避できます。</span><span class="sxs-lookup"><span data-stu-id="04042-351">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04042-352">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-352">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04042-353">インスタンスによって指定されたオブジェクトに既に名前が付いているか、<paramref name="name" /> が別の名前付きオブジェクトによって既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="04042-353">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-354">このプロパティは、シリアル化セッション外部でアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="04042-354">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="04042-355">取得対象となるサービスの型を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-355">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="04042-356">このメンバーの説明については、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> メソッドのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="04042-356">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="04042-357"><paramref name="serviceType" /> 型のサービス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04042-357">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="04042-358">または</span><span class="sxs-lookup"><span data-stu-id="04042-358">-or-</span></span> 
 <span data-ttu-id="04042-359"><see langword="null" /> 型のサービス オブジェクトが存在しない場合は <paramref name="serviceType" />。</span><span class="sxs-lookup"><span data-stu-id="04042-359"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-360">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="04042-360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="04042-361">これは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> のインスタンスが <xref:System.IServiceProvider> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="04042-361">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04042-362"><see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドによって、一致する名前が同じ型を参照していることが検査されるかどうかを示す値が取得または設定されます。</span><span class="sxs-lookup"><span data-stu-id="04042-362">Gets or sets a value that indicates whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span></span></summary>
        <value><span data-ttu-id="04042-363"><see langword="true" /> が型を検査する場合は <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />。検査しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04042-363"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span></span> <span data-ttu-id="04042-364">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="04042-364">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04042-365"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> プロパティは、次の表で説明するように、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> プロパティが `true`されている場合に <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> メソッドの動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="04042-365">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="04042-366">`CreateInstance` の動作</span><span class="sxs-lookup"><span data-stu-id="04042-366">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="04042-367">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="04042-367">`true` or `false`</span></span>|<span data-ttu-id="04042-368">指定された型の新しいインスタンスを常に作成する</span><span class="sxs-lookup"><span data-stu-id="04042-368">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="04042-369">一致するインスタンスが見つかった場合は、型に関係なく返されます。</span><span class="sxs-lookup"><span data-stu-id="04042-369">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="04042-370">一致するインスタンスが見つかった場合は、その型がメソッドの呼び出しで指定されたものと同じである場合にのみ返されます。</span><span class="sxs-lookup"><span data-stu-id="04042-370">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="04042-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> は、同一のプロパティを持つが、共通の親またはインターフェイスを共有しないオブジェクトの型を別の型にモーフィングする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="04042-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04042-372">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span><span class="sxs-lookup"><span data-stu-id="04042-372">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>
