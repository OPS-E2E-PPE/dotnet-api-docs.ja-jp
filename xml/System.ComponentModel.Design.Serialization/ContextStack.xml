<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d053c65463d32991302ff1bb43c7d4efc8e487ce" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83473111" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextStack sealed" />
  <TypeSignature Language="F#" Value="type ContextStack = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d80ac-101">入れ子のシリアライザーで情報を使用できるように、シリアライザーによって使用するスタック オブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-101">Provides a stack object that can be used by a serializer to make information available to nested serializers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d80ac-102">シリアライザーによっては、自身の状態を正しく持続するために、オブジェクトのコンテキストに関する情報を必要とします。</span><span class="sxs-lookup"><span data-stu-id="d80ac-102">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="d80ac-103"><xref:System.ComponentModel.Design.Serialization.ContextStack> クラスを使用すると、シリアライザーは、シリアル化されているオブジェクトのコンテキストに関するデータを、別のシリアライザーがアクセスできるスタックに設定できます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-103">The <xref:System.ComponentModel.Design.Serialization.ContextStack> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</span></span> <span data-ttu-id="d80ac-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> プロパティの値は、使用する情報をいくつかのシリアライザーに共有するために <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-104">The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.</span></span>  
  
 <span data-ttu-id="d80ac-105">コンテキストスタックは、デザインドキュメントをシリアル化するプロセスを深く入れ子にすることができるため便利です。また、入れ子の各レベルのオブジェクトは、オブジェクトの状態を正しく保持するためにコンテキスト情報を必要とする場合があります。</span><span class="sxs-lookup"><span data-stu-id="d80ac-105">A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</span></span> <span data-ttu-id="d80ac-106">シリアライザーは、入れ子になったシリアライザーを呼び出す前に、コンテキストオブジェクトをスタックに設定できます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-106">A serializer can set a context object to the stack before invoking a nested serializer.</span></span> <span data-ttu-id="d80ac-107">スタックに設定された各オブジェクトは、入れ子になったシリアライザーの呼び出しが返された後に、それを設定するシリアライザーによって削除される必要があります。</span><span class="sxs-lookup"><span data-stu-id="d80ac-107">Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</span></span>  
  
 <span data-ttu-id="d80ac-108">通常、スタック上のオブジェクトには、シリアル化されている現在のオブジェクトのコンテキストに関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-108">Typically, the objects on the stack contain information about the context of the current object that is being serialized.</span></span> <span data-ttu-id="d80ac-109">親シリアライザーは、次にシリアル化するオブジェクトについてのコンテキスト情報をスタックに追加し、適切なシリアライザーを呼び出します。また、シリアライザーがオブジェクトでの実行を終了すると、スタックからコンテキスト情報を削除します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-109">A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</span></span> <span data-ttu-id="d80ac-110">このスタックにプッシュされるオブジェクトを決定するには、各シリアライザーの実装が必要です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-110">It is up to the implementation of each serializer to determine what objects get pushed on this stack.</span></span>  
  
 <span data-ttu-id="d80ac-111">例として、`Enabled` という名前のプロパティを持つオブジェクトのデータ型は <xref:System.Boolean>です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-111">As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>.</span></span> <span data-ttu-id="d80ac-112">シリアライザーがこの値をデータストリームに書き込む場合は、記述しているプロパティのコンテキストまたは型を含める必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="d80ac-112">If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</span></span> <span data-ttu-id="d80ac-113">ただし、シリアライザーには、<xref:System.Boolean> 値を書き込むように指示されているだけなので、この情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="d80ac-113">The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value.</span></span> <span data-ttu-id="d80ac-114">この情報をシリアライザーに提供するために、親シリアライザーはコンテキストスタックの `Enabled` プロパティを指す <xref:System.ComponentModel.PropertyDescriptor> をプッシュできます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-114">To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d80ac-115">次のコード例では、<xref:System.ComponentModel.Design.Serialization.ContextStack> を使用して、10個の値をプッシュしてから削除します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-115">The following code example demonstrates using a <xref:System.ComponentModel.Design.Serialization.ContextStack> to push and then remove 10 values.</span></span>  
  
 [!code-cpp[ContextStackExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d80ac-116"><see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d80ac-117">次のコード例は、<xref:System.ComponentModel.Design.Serialization.ContextStack> インスタンスを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d80ac-117">The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.</span></span>  
  
 [!code-cpp[ContextStackExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; unit" Usage="contextStack.Append context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d80ac-118">スタックに追加するコンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d80ac-118">A context object to append to the stack.</span></span></param>
        <summary><span data-ttu-id="d80ac-119">スタックの最上位にオブジェクトをプッシュせずに、スタックの末尾にオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-119">Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d80ac-120">このメソッドを使用すると、シリアライザーは、削除する必要のないコンテキストデータオブジェクトを追加することで、他のシリアライザーと通信できます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-120">This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</span></span> <span data-ttu-id="d80ac-121">他のすべてのオブジェクトを削除せずに、スタックの末尾に追加されたオブジェクトを削除する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="d80ac-121">There is no way to remove an object that was appended to the end of the stack without removing all other objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d80ac-122"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-122"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d80ac-123">スタック上の現在のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-123">Gets the current object on the stack.</span></span></summary>
        <value><span data-ttu-id="d80ac-124">スタック上の現在のオブジェクト。プッシュされたオブジェクトがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d80ac-124">The current object on the stack, or <see langword="null" /> if no objects were pushed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d80ac-125">現在のオブジェクトは、スタックの一番上にあるオブジェクト、または最後にスタックに追加されたオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d80ac-125">The current object is the object at the top of the stack, or the object last added to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d80ac-126">スタック上で、指定したレベルのオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-126">Gets or sets the object on the stack at the specified level.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(level As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int level); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="d80ac-127">スタック上で取得する対象のオブジェクトのレベル。</span><span class="sxs-lookup"><span data-stu-id="d80ac-127">The level of the object to retrieve on the stack.</span></span> <span data-ttu-id="d80ac-128">レベル 0 は、スタックの最上位レベル、レベル 1 は最上位の 1 つ下のレベルです。以下同様です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-128">Level 0 is the top of the stack, level 1 is the next down, and so on.</span></span> <span data-ttu-id="d80ac-129">このレベルは 0 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d80ac-129">This level must be 0 or greater.</span></span> <span data-ttu-id="d80ac-130">レベルがスタック上でのレベル数より大きい場合は、<see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-130">If level is greater than the number of levels on the stack, it returns <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d80ac-131">スタック上で、指定したレベルのオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-131">Gets the object on the stack at the specified level.</span></span></summary>
        <value><span data-ttu-id="d80ac-132">スタック上にある、指定したレベルのオブジェクト。そのレベルのオブジェクトがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d80ac-132">The object on the stack at the specified level, or <see langword="null" /> if no object exists at that level.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d80ac-133"><paramref name="level" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-133"><paramref name="level" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Type ^] { System::Object ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d80ac-134">コンテキスト スタックから取得する型。</span><span class="sxs-lookup"><span data-stu-id="d80ac-134">A type to retrieve from the context stack.</span></span></param>
        <summary><span data-ttu-id="d80ac-135">スタック上で、指定した型から継承されるか、指定した型を実装する最初のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-135">Gets the first object on the stack that inherits from or implements the specified type.</span></span></summary>
        <value><span data-ttu-id="d80ac-136">スタック上で、指定した型から継承されるか、指定した型を実装する最初のオブジェクト。その型を実装するオブジェクトがスタック上にない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d80ac-136">The first object on the stack that inherits from or implements the specified type, or <see langword="null" /> if no object on the stack implements the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d80ac-137">スタックの各レベルでチェックが行われ、`type`を実装または継承するオブジェクトが検索されます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-137">A check is made on each level of the stack, searching for an object that implements or inherits `type`.</span></span> <span data-ttu-id="d80ac-138">一致するものが見つかった場合は、それが返されます。</span><span class="sxs-lookup"><span data-stu-id="d80ac-138">If a match is found, it is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d80ac-139"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-139"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; obj" Usage="contextStack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d80ac-140">スタックから現在のオブジェクトを削除し、そのオブジェクトの値を返します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-140">Removes the current object off of the stack, returning its value.</span></span></summary>
        <returns><span data-ttu-id="d80ac-141">スタックから削除されたオブジェクト。スタックにオブジェクトがない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d80ac-141">The object removed from the stack; <see langword="null" /> if no objects are on the stack.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d80ac-142">次のコード例は、<xref:System.ComponentModel.Design.Serialization.ContextStack>から値を削除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d80ac-142">The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Push : obj -&gt; unit" Usage="contextStack.Push context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d80ac-143">スタックにプッシュするコンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d80ac-143">The context object to push onto the stack.</span></span></param>
        <summary><span data-ttu-id="d80ac-144">指定したオブジェクトをスタックにプッシュ (格納) します。</span><span class="sxs-lookup"><span data-stu-id="d80ac-144">Pushes, or places, the specified object onto the stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d80ac-145">次のコード例は、値を <xref:System.ComponentModel.Design.Serialization.ContextStack>にプッシュする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d80ac-145">The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d80ac-146"><paramref name="context" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d80ac-146"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
