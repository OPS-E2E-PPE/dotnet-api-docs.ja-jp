<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e826ef46bd739555d87fb8ff41c17289003a9c44" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82306840" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1e5d8-101">外部コンポーネントの非同期読み込みをサポートするためにデザイナー ローダーを拡張できるインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5d8-102"><xref:System.ComponentModel.Design.Serialization.DesignerLoader> は、このインターフェイスを実装して、外部コンポーネントを含むデザイナーの読み込みを管理できます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="1e5d8-103">このインターフェイスでは、外部コンポーネントが <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>を呼び出すことによってデザインサーフェイスの再読み込みを開始することもできます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="1e5d8-104">非同期読み込みのサポートを必要としない場合、デザイナーローダーはこのインターフェイスを実装する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="1e5d8-105"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> のカスタム実装を使用したデザイナーの読み込みは、さまざまな方法で行うことができます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="1e5d8-106">外部コンポーネントが読み込みプロセスに含まれることがあります。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="1e5d8-107">外部依存関係を使用した読み込みを容易にするために、デザイナーローダーサービスインターフェイスには、読み込みが完了したことを判断し、読み込みの各部分が完了したことを通知するメカニズムが用意されています。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="1e5d8-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> は、通常、読み込みが完了するタイミングを判断するために、残りの負荷の依存関係の数を追跡するカウンターをテストします。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="1e5d8-109">読み込みの各部分が完了すると <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> が呼び出され、サービスによってカウンターが減少します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="1e5d8-110">依存する読み込みプロセスの数を設定するには、読み込みが完了したときに <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> を呼び出す読み込みプロセスごとに <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="1e5d8-111">最後の読み込みが完了すると、サービスはローダーホストで <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e5d8-112">外部コンポーネントを、このインターフェイスが管理する読み込みプロセスの一部として登録します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-112">Registers an external component as part of the load process managed by this interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5d8-113">読み込みプロセスに参加している外部オブジェクトごとに1回 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="1e5d8-114">読み込みプロセスの作業が完了すると、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="1e5d8-115">デザイナーの読み込みが正常に終了した場合は <see langword="true" />。エラーが原因で読み込みを完了できなかった場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-115"><see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="1e5d8-116">読み込み中に発生したエラーがある場合は、そのエラーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-116">A collection of errors that occurred during the load, if any.</span></span> <span data-ttu-id="1e5d8-117">エラーが発生しなかった場合は、空のコレクションまたは <see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1e5d8-118">依存読み込みプロセスの 1 つが終了したことを示します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-118">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5d8-119">このメソッドは、依存読み込み操作が完了したことを通知するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="1e5d8-120"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>を呼び出すことによって登録されたすべてのプロセスに対して、既に完了している <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="1e5d8-121">依存読み込みが成功した場合、呼び出し元は `successful` パラメーターを `true` に設定し、空のコレクションまたは `null` を `errorCollection` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="1e5d8-122">依存する負荷によってエラーが発生した場合、呼び出し元は `successful` パラメーターを `false` に設定し、`errorCollection` パラメーターに失敗した理由または理由を示す例外のコレクションを渡します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e5d8-123">デザイン ドキュメントを再読み込みします。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-123">Reloads the design document.</span></span></summary>
        <returns><span data-ttu-id="1e5d8-124">再読み込み要求が受け入れられた場合は <see langword="true" />。ローダーが再読み込みを許可しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-124"><see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5d8-125">どのオブジェクトでも、このメソッドを呼び出して、ローダーがデザインドキュメントを再読み込みするように要求できます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="1e5d8-126">ローダーが再読み込みをサポートし、リロードに準拠している場合、デザイナーローダーは `true`を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="1e5d8-127">それ以外の場合は `false`を返し、再読み込みが行われないことを示します。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="1e5d8-128">呼び出し元は、直ちに再読み込みを行うことはできません。デザイナーローダーは、これを他の時間に対してスケジュールすることも、一度に再読み込みを試みることもできます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="1e5d8-129">デザイナーを再度読み込むことができない場合、呼び出し元はユーザーにメッセージを表示できます。</span><span class="sxs-lookup"><span data-stu-id="1e5d8-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
