<Type Name="DsmlSoapHttpConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapHttpConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37c8cbdc3214c77ab185dd75e407a3f2b38b8407" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77227678" /></Metadata><TypeSignature Language="C#" Value="public class DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DsmlSoapHttpConnection extends System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class DsmlSoapHttpConnection&#xA;Inherits DsmlSoapConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapHttpConnection : System::DirectoryServices::Protocols::DsmlSoapConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapHttpConnection = class&#xA;    inherit DsmlSoapConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DsmlSoapConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスは、HTTP 経由の SOAP を使用した DSML Gateway への接続を表します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier">接続のサーバーを指定する <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" /> コンストラクターは、<see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : Uri -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">接続のサーバーを指定する <see cref="T:System.Uri" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" /> コンストラクターは、<see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier">接続のサーバーを指定する <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> オブジェクト。</param>
        <param name="credential">ネットワーク資格情報を格納している <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" /> コンストラクターは、<see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential * System.DirectoryServices.Protocols.AuthType -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential, authType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier">接続のサーバーを指定する <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> オブジェクト。</param>
        <param name="credential">ネットワーク資格情報を格納している <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</param>
        <param name="authType">この接続に使用する認証の種類を指定する <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 値。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> コンストラクターは、指定した ID、ネットワーク資格情報、および認証の種類を使用して、<see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> クラスの新しいインスタンスを作成し、初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="authType" /> 値が DSML でサポートされる値ではありません。 DSML は、匿名、NTLM、基本、ネゴシエート、およびダイジェストだけをサポートします。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="authType" /> 値が <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 列挙体に定義されている定数ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.Abort : IAsyncResult -&gt; unit" Usage="dsmlSoapHttpConnection.Abort asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">非同期の要求を参照する <see cref="T:System.IAsyncResult" /> から派生するオブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" /> メソッドは、非同期の要求をキャンセルします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> への対応する呼び出しで <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> が返されませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthType : System.DirectoryServices.Protocols.AuthType with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" /> プロパティは、認証の種類を指定する <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 列挙値の 1 つを格納します。</summary>
        <value>認証の種類を指定する <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 列挙値の 1 つ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DsmlRequestDocument, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument * AsyncCallback * obj -&gt; IAsyncResult" Usage="dsmlSoapHttpConnection.BeginSendRequest (request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">送信する <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> オブジェクト。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 関数。</param>
        <param name="state">この要求の状態データを格納している <see cref="T:System.Object" />。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> メソッドは、サーバーへの、指定した <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> オブジェクトの非同期的な送信を開始します。</summary>
        <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> から派生するオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public override void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginSession();" />
      <MemberSignature Language="F#" Value="override this.BeginSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> メソッドは、DSML サーバーが新しいセッションを開始するように指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、DSML サーバーからの応答の待機中にブロックされ、<xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> プロパティに従ってタイムアウトします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">その接続で既にセッションが開かれている場合にスローされます。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">サーバーからの <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> に対する応答で返された XML が整形式でない場合にスローされます。</exception>
        <exception cref="T:System.Net.WebException">DSML サーバーとの通信でエラーが発生した場合、またはサーバーで使用できるセッションが不足した場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendRequest : IAsyncResult -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.EndSendRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">この要求の状態データを格納している <see cref="T:System.IAsyncResult" /> から派生するオブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" /> メソッドは、非同期の送信要求を完了します。</summary>
        <returns>要求の結果を格納している <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が <see langword="null" /> の場合にスローされます。</exception>
        <exception cref="T:System.ArgumentException">現在のインスタンスによって、<paramref name="asyncResult" /> への呼び出しから <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> が返されない場合にスローされます。</exception>
        <exception cref="T:System.IO.IOException">要求が完了しませんでした。 ストリームが使用できません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">サーバーによって返される応答が有効でない場合にスローされます。</exception>
        <exception cref="T:System.Net.WebException">以前に中止が呼び出された場合、または要求の処理中にエラーが発生した場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public override void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndSession();" />
      <MemberSignature Language="F#" Value="override this.EndSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" /> メソッドは、DSML サーバーとのセッションを終了し、<see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> プロパティをクリアします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、DSML サーバーからの応答の待機中にブロックされ、<xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> プロパティに従ってタイムアウトします。  
  
 DSML サーバーが独自のセッションを既に終了している場合は、<xref:System.Net.WebException> がスローされます。  例外がスローされた後も <xref:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId%2A> が有効な場合、要求はサーバーに到達せず、接続は引き続き有効と見なされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">DSML サーバーとの通信でエラーが発生した場合にスローされます。</exception>
        <exception cref="T:System.InvalidOperationException">開かれたセッションが存在しない場合にスローされます。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトを DSML サーバーに送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">要求を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> メソッドは、単一の <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクトを送信します。</summary>
        <returns>要求の結果を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.ErrorResponseException">DSML サーバーがエラー応答を返しました。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">この操作でエラー コードが返されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DsmlRequestDocument) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ SendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
      </Parameters>
      <Docs>
        <param name="request">サーバーに送信される <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" /> メソッドは、<see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> オブジェクトを DSML サーバーに送信します。</summary>
        <returns>要求の結果を格納している <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public override string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> プロパティは、アクティブなセッション ID を格納します。</summary>
        <value>アクティブなセッション ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapActionHeader">
      <MemberSignature Language="C#" Value="public string SoapActionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoapActionHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapActionHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoapActionHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapActionHeader : string with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" /> プロパティは、他の HTTP ヘッダーと共に送信される SOAP Action Header を格納します。</summary>
        <value>他の HTTP ヘッダーと共に送信される SOAP Action Header。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの既定値は "#batchRequest" です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" /> プロパティは、<see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> がタイムアウトするまでの時間の長さ (秒) を格納します。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> がタイムアウトするまでの時間の長さ (秒)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
