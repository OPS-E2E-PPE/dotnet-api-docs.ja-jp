<Type Name="LdapConnection" FullName="System.DirectoryServices.Protocols.LdapConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="351e90e61a137c7865866c483a0e30c6a34d80d1" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77227588" /></Metadata><TypeSignature Language="C#" Value="public class LdapConnection : System.DirectoryServices.Protocols.DirectoryConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi LdapConnection extends System.DirectoryServices.Protocols.DirectoryConnection implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.LdapConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class LdapConnection&#xA;Inherits DirectoryConnection&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LdapConnection : System::DirectoryServices::Protocols::DirectoryConnection, IDisposable" />
  <TypeSignature Language="F#" Value="type LdapConnection = class&#xA;    inherit DirectoryConnection&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスは、Microsoft Active Directory ドメイン サービスまたは LDAP サーバーへの TCP/IP または UDP の LDAP 接続を作成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.Protocols.LdapConnection> オブジェクトの <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> プロパティと <xref:System.DirectoryServices.Protocols.LdapSessionOptions> オブジェクトの <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> プロパティの両方が設定されている場合、<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> プロパティで指定された証明書は無視されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">接続ブロックを作成できない、またはサーバーとの接続を開くことができない場合にスローされます。</exception>
        <summary><see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスのインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier">サーバーを指定する <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" /> コンストラクターは、指定されたディレクトリ識別子を使用して、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスのインスタンスを作成します。 ログオン資格情報とネゴシエート認証を使用して、LDAP サーバーに接続します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">接続ブロックを作成できない、またはサーバーとの接続を開くことができない場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (server As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::String ^ server);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : string -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection server" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">サーバーを指定する文字列。ドメイン名、LDAP サーバー名、または LDAP サーバーの IP アドレスを表すドットで区切られた文字列です。 このパラメーターには、文字列の右端からコロン (:) で区切られた、ポート番号が含まれることもあります。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" /> コンストラクターは、指定されたサーバーを使用して <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスのインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">接続ブロックを作成できない、またはサーバーとの接続を開くことができない場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier * System.Net.NetworkCredential -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection (identifier, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier">サーバーを指定する <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> オブジェクト。</param>
        <param name="credential">使用する資格情報を指定する <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" /> コンストラクターは、指定されたディレクトリ識別子とネットワーク資格情報を使用して、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスのインスタンスを作成します。 ネゴシエート認証が使用されます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">接続ブロックを作成できない、またはサーバーとの接続を開くことができない場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier * System.Net.NetworkCredential * System.DirectoryServices.Protocols.AuthType -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection (identifier, credential, authType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier">サーバーを指定する <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> オブジェクト。</param>
        <param name="credential">使用する資格情報を指定する <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</param>
        <param name="authType">使用する認証の種類を指定する <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 値。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> コンストラクターは、指定したディレクトリ識別子、ネットワーク資格情報、および認証の種類を使用して、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> クラスのインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">接続ブロックを作成できない、またはサーバーとの接続を開くことができない場合にスローされます。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="authType" /> が範囲外の場合にスローされます。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="authType" /> が匿名と指定されているのに <paramref name="credential" /> で資格情報が指定されている場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.Abort : IAsyncResult -&gt; unit" Usage="ldapConnection.Abort asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">非同期の要求を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" /> メソッドは、非同期の要求をキャンセルします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> への対応する呼び出しで <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> が返されませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthType : System.DirectoryServices.Protocols.AuthType with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.AuthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> プロパティは、サポートされる認証の種類を格納します。</summary>
        <value>サポートされる認証の種類。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="authType" /> が範囲外の場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoBind">
      <MemberSignature Language="C#" Value="public bool AutoBind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoBind" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoBind As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoBind { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoBind : bool with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.AutoBind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" /> プロパティは、自動バインドが許可されるかどうかを指定します。</summary>
        <value>自動バインドが許可される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>サーバーにデータを非同期的に送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DirectoryRequest * System.DirectoryServices.Protocols.PartialResultProcessing * AsyncCallback * obj -&gt; IAsyncResult" Usage="ldapConnection.BeginSendRequest (request, partialMode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクト。</param>
        <param name="partialMode">返される部分的な結果のレベルを指定する <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 列挙体の値。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 関数。</param>
        <param name="state">この要求の状態データを格納している <see cref="T:System.Object" />。</param>
        <summary>サーバーにデータを非同期的に送信します。</summary>
        <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> が <see langword="null" /> (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.NotSupportedException">部分的な結果はサポートされていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partialMode" /> が <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" /> と等しい場合、コールバック関数を指定する必要があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, requestTimeout As TimeSpan, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DirectoryRequest * TimeSpan * System.DirectoryServices.Protocols.PartialResultProcessing * AsyncCallback * obj -&gt; IAsyncResult" Usage="ldapConnection.BeginSendRequest (request, requestTimeout, partialMode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクト。</param>
        <param name="requestTimeout">要求がタイムアウトするまでの時間 (秒)。</param>
        <param name="partialMode">返される部分的な結果のレベルを指定する <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 列挙体の値。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 関数。</param>
        <param name="state">この要求の状態データを格納している <see cref="T:System.Object" />。</param>
        <summary>サーバーにデータを非同期的に送信します。</summary>
        <returns>非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.NotSupportedException">部分的な結果はサポートされていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partialMode" /> が <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" /> と等しい場合、コールバック関数を指定する必要があります。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>LDAP バインドを送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind();" />
      <MemberSignature Language="F#" Value="member this.Bind : unit -&gt; unit" Usage="ldapConnection.Bind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind" /> メソッドは、現在の資格情報を使用して LDAP バインドを送信します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードのいずれにも対応していません。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> プロパティで、認証のために送信するクライアント証明書が複数指定されているか、<see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> プロパティが匿名で、1 つ以上の資格情報が指定されているかのいずれかです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Net.NetworkCredential newCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Net.NetworkCredential newCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (newCredential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Net::NetworkCredential ^ newCredential);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Net.NetworkCredential -&gt; unit" Usage="ldapConnection.Bind newCredential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCredential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="newCredential">使用する資格情報を指定する <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" /> メソッドは、指定した <see cref="T:System.Net.NetworkCredential" /> を使用して LDAP バインドを送信します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードに対応していません。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> プロパティで、認証のために送信するクライアント証明書が複数指定されているか、<see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> プロパティが匿名で、1 つ以上の資格情報が指定されているかのいずれかです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public override System.Net.NetworkCredential Credential { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkCredential ^ Credential {  void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Net.NetworkCredential" Usage="System.DirectoryServices.Protocols.LdapConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.Credential" /> プロパティは、オブジェクトのネットワーク資格情報を格納します。</summary>
        <value>オブジェクトのネットワーク資格情報。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>LDAP ハンドルを閉じ、オプションで解放もします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ldapConnection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" /> メソッドは、LDAP ハンドルを閉じたり、解放したりします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="ldapConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">接続が閉じられるときにハンドルが解放される場合は <see langword="true" />。接続が閉じられるときにハンドルが解放されない場合は <see langword="false" />。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" /> メソッドは、接続を閉じ、オプションで LDAP ハンドルを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendRequest : IAsyncResult -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.EndSendRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">この要求の状態データを格納している <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" /> メソッドは、非同期の要求を完了します。</summary>
        <returns>要求の結果を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクトが既に破棄されている場合にスローされます。  オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> が、<paramref name="asyncResult" /> 呼び出しで返された <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> に一致しません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードに対応していません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">サーバーがエラーのある <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクトを返した場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LdapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LdapConnection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="ldapConnection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" /> メソッドは、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> オブジェクトがガベージ コレクションにより収集される前に、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> オブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartialResults">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartialResults (asyncResult As IAsyncResult) As PartialResultsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::PartialResultsCollection ^ GetPartialResults(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.GetPartialResults : IAsyncResult -&gt; System.DirectoryServices.Protocols.PartialResultsCollection" Usage="ldapConnection.GetPartialResults asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.PartialResultsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">この要求の状態データを格納している <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" /> メソッドは、非同期操作の部分的な結果を取得します。</summary>
        <returns>部分的な結果を格納している <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクトは既に破棄されています。 オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> が、<paramref name="asyncResult" /> 呼び出しで返された <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> に一致しません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードに対応していません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">サーバーがエラーのある <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクトを返した場合にスローされます。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>LDAP v3 の操作として、単一の <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> を送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">要求を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクト。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> メソッドは、LDAP v3 の操作として、単一の <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> を送信します。</summary>
        <returns>サーバーからの応答を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクトは既に破棄されています。 オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.NotSupportedException">要求の種類は DsmlAuthRequest です。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードに対応していません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">サーバーがエラーのある <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクトを返した場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DirectoryRequest, requestTimeout As TimeSpan) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest * TimeSpan -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.SendRequest (request, requestTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="request">要求を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> オブジェクト。</param>
        <param name="requestTimeout">要求がタイムアウトするまでの時間の長さ (秒)。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" /> メソッドは、LDAP v3 の操作として、単一の <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> を送信します。</summary>
        <returns>サーバーからの応答を格納している <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">オブジェクトは既に破棄されています。 オブジェクト ハンドルが有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> が null (Visual Basic の場合は <see langword="Nothing" />) です。</exception>
        <exception cref="T:System.NotSupportedException">要求の種類は DsmlAuthRequest です。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP によって返されたエラー コードは、<see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列挙体のエラー コードに対応していません。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">サーバーがエラーのある <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> オブジェクトを返した場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionOptions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionOptions As LdapSessionOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::LdapSessionOptions ^ SessionOptions { System::DirectoryServices::Protocols::LdapSessionOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionOptions : System.DirectoryServices.Protocols.LdapSessionOptions" Usage="System.DirectoryServices.Protocols.LdapConnection.SessionOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.LdapSessionOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" /> プロパティは、セッション オプションを指定する <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> オブジェクトを格納します。</summary>
        <value>セッション オプションを指定する <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.Protocols.LdapConnection> オブジェクトの <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> プロパティと <xref:System.DirectoryServices.Protocols.LdapSessionOptions> オブジェクトの <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> プロパティの両方が設定されている場合、<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> プロパティで指定された証明書は無視されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" /> プロパティは、<see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> がタイムアウトするまでの時間の長さ (秒) を格納します。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> がタイムアウトするまでの時間の長さ (秒)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
