<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="367398b1e255f6e2e14ba2513fb433a4748755fa" /><Meta Name="ms.sourcegitcommit" Value="218a2e36017b9f4ffa6c10e1644404e6d7d6bd1e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/05/2019" /><Meta Name="ms.locfileid" Value="74839665" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スクリプト エンジンでコンパイルするコード項目を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
指定されたコード項目には、クラス、モジュール、またはその他のソーステキストを含めることができます。

IVsaCodeItem インターフェイスのメンバーを呼び出すためにアクセス許可は必要ありません。

スクリプトエンジンは、コード項目を追加するためにこのインターフェイスを実装します。

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">イベント ソースのプログラム的な名前。</param>
        <param name="eventSourceType">イベント ソースの型名。</param>
        <summary>イベント ソースをコード項目に追加します。 コード項目はイベント ソースを使用し、ホストで実装された IVsaSite.GetEventSourceInstance メソッドを呼び出して、イベントを指定したイベント ソースにフックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
スクリプトエンジンは、AddEventSource メソッドによって提供される情報を使用して、名前付きのイベントソースにイベントをフックします。 ホストによって実装されている指定したインスタンスメソッドを呼び出すことによって、イベントソースを取得します。 AddEventSource メソッドは、ホストが提供するオブジェクトによって発生するイベントを処理するクラスを作成します。

> [!NOTE]
> JScript .NET スクリプトエンジンでは、このメソッドはサポートされていません。 JScript .NET エンジンでイベントをフックする必要がある場合は、グローバル項目を使用して実行する必要があります。 JScript .NET エンジンでは、イベントソースではなく、AppGlobal 項目の種類が使用されます。 詳細については、「VsaItemType」を参照してください。


コード項目内では、イベントソースオブジェクトに名前でアクセスできます。また、アクセスすると、オブジェクトに対してイベントハンドラーを作成できます。 イベントソースの種類は、アンマネージホストによるイベントソースの実装を容易にするために、型オブジェクトとしてではなく文字列として渡されます。

コンパイラは、eventSourceType パラメーターを使用して、型によって提供されるメソッドにバインドします。 また、後でスクリプトエンジンが指定したインスタンスメソッドを呼び出して Type オブジェクトのインスタンスを要求するときにも使用されます。

スクリプトエンジンのイベントをフックするメカニズムの詳細については、指定したインスタンスメソッドを参照してください。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">コード項目に追加するテキスト。</param>
        <summary>指定したテキストをコード 項目の末尾に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
追加されたソーステキストは検証の対象になっていません。 このため、エラーがある場合は、IVsaEngine メソッドの次の呼び出し時にエラーが表示されます。

追加されたソーステキストは、1つの文字列として提供されます。 文字列に書式を設定する必要がある場合は、自分で入力する必要があります。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コード項目で表現される CodeDOM (Code Document Object Model) を取得します。</summary>
        <value>コード項目の CodeDOM。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
CodeDOM プロパティは、通常、スクリプトエンジンのコンパイル手順の一部として生成されるため、IVsaEngine メソッドを呼び出すまで使用できません。 VSA 実装によっては、明示的なコンパイル手順を必要とせずに、CodeDOM を動的に提供できる場合がありますが、ホストはこの動作に依存することはできません。 JScript .NET スクリプトエンジンなど、一部のスクリプトエンジンでは、この動作がサポートされていません。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">削除するイベント ソースのプログラム的な名前。</param>
        <summary>指定したイベント ソースをコード項目から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
イベントソースを削除しても、基になるイベントハンドラーはソーステキストから削除されません。 イベントは、イベントハンドラーへの通知を発生させなくなりました。 そのため、イベントソースを削除しても、基になる関数をソースコードに残しておくと、コンパイラエラーが発生します。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したコード項目のテキストを取得または設定します。自動生成されたコードがある場合は、これも含めます。</summary>
        <value>コード項目のソーステキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
このプロパティを設定した場合、テキストは検証の対象になりません。 このため、エラーがある場合は、IVsaEngine メソッドの次の呼び出し時にエラーが表示されます。

SourceText プロパティは、キャリッジリターンなどの書式設定文字を含む、1つの大きな文字列のソーステキストを返します。

このプロパティを取得するには、エンジンを閉じることはできません。 このプロパティを設定するには、エンジンを閉じないようにし、エンジンを実行しないようにする必要があります。

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
