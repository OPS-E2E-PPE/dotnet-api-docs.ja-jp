<Type Name="GlobalScope" FullName="Microsoft.JScript.GlobalScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="835b61597867dfca69e71b40be2c1db765479b77" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78805153" /></Metadata><TypeSignature Language="C#" Value="public class GlobalScope : Microsoft.JScript.ActivationObject, System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlobalScope extends Microsoft.JScript.ActivationObject implements class System.Reflection.IReflect, class System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.GlobalScope" />
  <TypeSignature Language="VB.NET" Value="Public Class GlobalScope&#xA;Inherits ActivationObject&#xA;Implements IExpando" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlobalScope : Microsoft::JScript::ActivationObject, System::Runtime::InteropServices::Expando::IExpando" />
  <TypeSignature Language="F#" Value="type GlobalScope = class&#xA;    inherit ActivationObject&#xA;    interface IExpando&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ActivationObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.Expando.IExpando</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ebe1-101">グローバル スコープを表します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-101">Represents the global scope.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.IActivationObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalScope (Microsoft.JScript.GlobalScope parent, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.JScript.GlobalScope parent, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As GlobalScope, engine As VsaEngine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlobalScope(Microsoft::JScript::GlobalScope ^ parent, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.GlobalScope : Microsoft.JScript.GlobalScope * Microsoft.JScript.Vsa.VsaEngine -&gt; Microsoft.JScript.GlobalScope" Usage="new Microsoft.JScript.GlobalScope (parent, engine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.JScript.GlobalScope" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="6ebe1-102">親オブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-102">A reference to the parent object.</span></span></param>
        <param name="engine"><span data-ttu-id="6ebe1-103">スクリプト エンジンへの参照。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-103">A reference to the scripting engine.</span></span></param>
        <summary><span data-ttu-id="6ebe1-104"><see cref="T:Microsoft.JScript.GlobalScope" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-104">Initializes a new instance of the <see cref="T:Microsoft.JScript.GlobalScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo AddField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo AddField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.AddField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ AddField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member AddField : string -&gt; System.Reflection.FieldInfo&#xA;override this.AddField : string -&gt; System.Reflection.FieldInfo" Usage="globalScope.AddField name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.Expando.IExpando.AddField(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-105">追加するフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-105">The name of the field to add.</span></span></param>
        <summary><span data-ttu-id="6ebe1-106">指定したフィールドをグローバル スコープに追加します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-106">Adds the specified field to the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-107">新しいフィールドが正常に追加された場合、そのフィールド。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-107">The new field, if it is successfully added.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public override object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="override this.GetDefaultThisObject : unit -&gt; obj" Usage="globalScope.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebe1-108">現在の既定のスコープを取得します。これは、<see langword="with" /> ステートメントのスコープに含まれるオブジェクトまたはグローバル スコープのどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-108">Gets the current default scope, which is either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-109">このオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-109">This object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="globalScope.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-110">検索するフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-110">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="6ebe1-111">検索する構文レベル。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-111">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="6ebe1-112">スコープの階層を検索して、指定した名前のフィールドを取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-112">Gets a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="6ebe1-113">このメソッドは、構文レベルで指定されたスコープのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-113">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-114">指定した名前のフィールド。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-114">A field that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="globalScope.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6ebe1-115">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-115">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="6ebe1-116">グローバル スコープのすべてのフィールドに対応する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-116">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-117">グローバル スコープのすべてのフィールドを含むオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-117">An array of objects that contains all fields of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public override Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="override this.GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="globalScope.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebe1-118">このオブジェクトへの参照を返して、グローバル スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-118">Gets the global scope by returning a reference to this object.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-119">このオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-119">This object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="globalScope.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-120">フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-120">The name of the field.</span></span></param>
        <summary><span data-ttu-id="6ebe1-121">指定した名前のフィールドのローカル宣言を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-121">Gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="6ebe1-122">これは、コンパイル時のエラー チェックに使用されます。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-122">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-123">フィールドのローカル宣言。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-123">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="globalScope.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-124">検索するメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-124">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6ebe1-125">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-125">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="6ebe1-126">指定した名前と一致するすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-126">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-127">引数 <paramref name="name" /> と一致するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-127">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="globalScope.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6ebe1-128">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-128">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="6ebe1-129">グローバル スコープのすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-129">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-130">グローバル スコープのすべてのメンバーを含むオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-130">An array of objects that contains all members of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="globalScope.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6ebe1-131">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="6ebe1-132">グローバル スコープのすべてのメソッドに対応する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-132">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-133">グローバル スコープのすべてのメソッドを含むオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-133">An array of objects that contains all methods of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="globalScope.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="6ebe1-134">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-134">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="6ebe1-135">グローバル スコープのすべてのプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-135">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the global scope.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-136">グローバル スコープのすべてのプロパティを含むオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-136">An array of objects that contains all properties of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IExpando.AddMethod (string name, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Function AddMethod (name As String, method As Delegate) As MethodInfo Implements IExpando.AddMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddMethod(System::String ^ name, Delegate ^ method) = System::Runtime::InteropServices::Expando::IExpando::AddMethod;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices.Expando.IExpando.AddMethod : string * Delegate -&gt; System.Reflection.MethodInfo&#xA;override this.System.Runtime.InteropServices.Expando.IExpando.AddMethod : string * Delegate -&gt; System.Reflection.MethodInfo" Usage="globalScope.System.Runtime.InteropServices.Expando.IExpando.AddMethod (name, method)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.Expando.IExpando.AddMethod(System.String,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-137">追加するメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-137">The name of the method to add.</span></span></param>
        <param name="method"><span data-ttu-id="6ebe1-138">追加したメソッドへのデリゲート。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-138">The delegate to the method.</span></span></param>
        <summary><span data-ttu-id="6ebe1-139">指定したメソッドをグローバル スコープに追加します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-139">Adds the specified method to the global scope.</span></span> <span data-ttu-id="6ebe1-140">このメソッドは、JScript では実装されていません。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-140">This method is not implemented in JScript.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-141">常に null。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-141">null in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IExpando.AddProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddProperty (name As String) As PropertyInfo Implements IExpando.AddProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddProperty(System::String ^ name) = System::Runtime::InteropServices::Expando::IExpando::AddProperty;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices.Expando.IExpando.AddProperty : string -&gt; System.Reflection.PropertyInfo&#xA;override this.System.Runtime.InteropServices.Expando.IExpando.AddProperty : string -&gt; System.Reflection.PropertyInfo" Usage="globalScope.System.Runtime.InteropServices.Expando.IExpando.AddProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.Expando.IExpando.AddProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6ebe1-142">追加するプロパティの名前です。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-142">The name of the property to add.</span></span></param>
        <summary><span data-ttu-id="6ebe1-143">指定したプロパティをグローバル スコープに追加します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-143">Adds the specified property to the global scope.</span></span> <span data-ttu-id="6ebe1-144">このメソッドは、JScript では実装されていません。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-144">This method is not implemented in JScript.</span></span></summary>
        <returns><span data-ttu-id="6ebe1-145">常に null。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-145">null in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.RemoveMember">
      <MemberSignature Language="C#" Value="void IExpando.RemoveMember (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveMember (m As MemberInfo) Implements IExpando.RemoveMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(System::Reflection::MemberInfo ^ m) = System::Runtime::InteropServices::Expando::IExpando::RemoveMember;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices.Expando.IExpando.RemoveMember : System.Reflection.MemberInfo -&gt; unit&#xA;override this.System.Runtime.InteropServices.Expando.IExpando.RemoveMember : System.Reflection.MemberInfo -&gt; unit" Usage="globalScope.System.Runtime.InteropServices.Expando.IExpando.RemoveMember m" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.Expando.IExpando.RemoveMember(System.Reflection.MemberInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="6ebe1-146">削除するメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-146">The name of the member to remove.</span></span></param>
        <summary><span data-ttu-id="6ebe1-147">グローバル スコープから指定したメンバーを削除します。</span><span class="sxs-lookup"><span data-stu-id="6ebe1-147">Removes the specified member from the global scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
  </Members>
</Type>
