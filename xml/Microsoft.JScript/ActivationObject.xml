<Type Name="ActivationObject" FullName="Microsoft.JScript.ActivationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78509785cd2920f7d645783656ba59894d15d870" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73379212" /></Metadata><TypeSignature Language="C#" Value="public abstract class ActivationObject : Microsoft.JScript.ScriptObject, Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActivationObject extends Microsoft.JScript.ScriptObject implements class Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.ActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ActivationObject&#xA;Inherits ScriptObject&#xA;Implements IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationObject abstract : Microsoft::JScript::ScriptObject, Microsoft::JScript::IActivationObject" />
  <TypeSignature Language="F#" Value="type ActivationObject = class&#xA;    inherit ScriptObject&#xA;    interface IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IActivationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スコープの階層に参加しているオブジェクトを表します。 このクラスには、スコープの解決およびメンバー情報の取得のためのメソッドが含まれています。 これは、コンパイルおよび実行時の状態のカテゴリに属します。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
    <altmember cref="T:System.Reflection.MemberInfo" />
    <altmember cref="T:System.Reflection.IReflect" />
  </Docs>
  <Members>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.JScript.JSVariableField CreateField (string name, System.Reflection.FieldAttributes attributeFlags, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype System.Reflection.FieldAttributes attributeFlags, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateField (name As String, attributeFlags As FieldAttributes, value As Object) As JSVariableField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::JScript::JSVariableField ^ CreateField(System::String ^ name, System::Reflection::FieldAttributes attributeFlags, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * System.Reflection.FieldAttributes * obj -&gt; Microsoft.JScript.JSVariableField&#xA;override this.CreateField : string * System.Reflection.FieldAttributes * obj -&gt; Microsoft.JScript.JSVariableField" Usage="activationObject.CreateField (name, attributeFlags, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.JSVariableField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributeFlags" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">フィールドの名前。</param>
        <param name="attributeFlags">フィールドの属性を記述する列挙値のビットごとの組み合わせ。 <see cref="F:System.Reflection.FieldAttributes.Static" /> は、自動的に追加されます。</param>
        <param name="value">フィールドの値。</param>
        <summary>指定した名前、値、および属性を使用して、新しいグローバル変数を作成します。</summary>
        <returns>指定した名前、値、および属性を持つグローバル変数。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="field_table">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList field_table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.ArrayList field_table" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ActivationObject.field_table" />
      <MemberSignature Language="VB.NET" Value="Protected field_table As ArrayList " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::ArrayList ^ field_table;" />
      <MemberSignature Language="F#" Value="val mutable field_table : System.Collections.ArrayList" Usage="Microsoft.JScript.ActivationObject.field_table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スコープ内に存在する変数の配列を格納します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public virtual object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj&#xA;override this.GetDefaultThisObject : unit -&gt; obj" Usage="activationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetDefaultThisObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の既定のスコープを取得します。これは、<see langword="with" /> ステートメントのスコープに含まれるオブジェクトまたはグローバル スコープのどちらかになります。</summary>
        <returns>現在の既定のスコープ。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="activationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">検索するフィールドの名前。</param>
        <param name="lexLevel">検索する構文レベル。</param>
        <summary>スコープの階層を検索して、指定した名前のフィールドを返します。 このメソッドは、構文レベルで指定されたスコープのみを検索します。</summary>
        <returns>指定した名前の <see cref="T:System.Reflection.FieldInfo" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コンパイル時に解決できないフィールドに適用されます。 これは、`eval` 式が外側のスコープ内のフィールドを参照している場合に発生します。 `eval` 式では、外側のスコープ内のフィールドと同じ名前を持つローカルフィールドを宣言できるため、フィールドを外部スコープフィールドに事前にバインドすることはできません。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public virtual Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope&#xA;override this.GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="activationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>静的変数を含むスコープ (モジュール スコープなど) が見つかるまでスコープの階層を検索して、グローバル スコープを取得します。</summary>
        <returns>グローバル スコープ。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo&#xA;override this.GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="activationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">フィールドの名前。</param>
        <summary>指定した名前のフィールドのローカル宣言を取得します。 これは、コンパイル時のエラー チェックに使用されます。</summary>
        <returns>フィールドのローカル宣言。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="activationObject.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">検索するメンバーの名前。</param>
        <param name="bindingAttr">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</param>
        <summary>指定した名前と一致するすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</summary>
        <returns>引数 <paramref name="name" /> と一致するオブジェクトの配列。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="activationObject.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">リフレクションによってメンバーの検索を制御する方法を指定する列挙値のビットごとの組み合わせ。</param>
        <summary>現在のオブジェクトのすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</summary>
        <returns>現在のオブジェクトのすべてのメンバーを含むオブジェクトの配列。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="override this.GetMemberValue : string * int -&gt; obj" Usage="activationObject.GetMemberValue (name, lexlevel)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj&#xA;override this.GetMemberValue : string * int -&gt; obj" Usage="activationObject.GetMemberValue (name, lexlevel)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">検索するメンバーの名前。</param>
        <param name="lexlevel">検索する構文レベル。</param>
        <summary>スコープの階層を検索して、指定したメンバーの値を取得します。 このメソッドは、構文レベルで指定されたスコープのみを検索します。</summary>
        <returns>メンバー <paramref name="name" /> の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コンパイル時に解決できないメンバーに適用されます。 これは、`eval` 式が外側のスコープ内のメンバーを参照している場合に発生します。 `eval` 式では、外側のスコープのメンバーと同じ名前を持つローカルメンバーを宣言できます。そのため、外側のスコープメンバーに事前にバインドすることはできません。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>
