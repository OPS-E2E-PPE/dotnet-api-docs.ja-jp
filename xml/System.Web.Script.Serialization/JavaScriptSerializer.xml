<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b94403bda5635d2b0f074e0e907212ea134c8456" /><Meta Name="ms.sourcegitcommit" Value="355778a8154b2dab885accd76cc040b19ea80e32" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/03/2020" /><Meta Name="ms.locfileid" Value="78243887" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">Json.NET</see> はシリアル化および逆シリアル化で使用する必要があります。 AJAX 対応アプリケーションにシリアル化および逆シリアル化の機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスは、ブラウザーと Web サーバー間で渡されるデータをシリアル化および逆シリアル化するために、非同期通信層によって内部的に使用されます。 シリアライザーのインスタンスにアクセスすることはできません。 ただし、このクラスはパブリック API を公開します。 そのため、マネージコードで JavaScript Object Notation (JSON) を操作する場合は、クラスを使用できます。  
  
 オブジェクトをシリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドを使用します。 JSON 文字列を逆シリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> または <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドを使用します。 <xref:System.Web.Script.Serialization.JavaScriptSerializer>でネイティブにサポートされていない型をシリアル化および逆シリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスを使用してカスタムコンバーターを実装します。 次に、<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> メソッドを使用してコンバーターを登録します。  
  
## <a name="mapping-between-managed-types-and-json"></a>マネージ型と JSON 間のマッピング  
 次の表に、シリアル化プロセスのマネージ型と JSON の間のマッピングを示します。 これらのマネージ型は、<xref:System.Web.Script.Serialization.JavaScriptSerializer>によってネイティブにサポートされています。 JSON 文字列からマネージ型に逆シリアル化する場合は、同じマッピングが適用されます。 ただし、逆シリアル化は非対称です。すべてのシリアル化可能なマネージ型を JSON から逆シリアル化できるわけではありません。  
  
> [!NOTE]
>  多次元配列は1次元配列としてシリアル化され、フラット配列として使用する必要があります。  
  
|マネージド型|同等の JSON|  
|------------------|---------------------|  
|<xref:System.String> (UTF-8 エンコードのみ)。|String|  
|<xref:System.Char>|String|  
|1つの null char (, \ 0 など)|Null|  
|<xref:System.Boolean>|ブール型。 JSON で `true` または `false` として表される|  
|`null` (`null` オブジェクト参照と <xref:System.Nullable> 値型)。|Null の文字列値|  
|<xref:System.DBNull>|Null の文字列値|  
|プリミティブ数値 (または数値と互換性のある) 型: <xref:System.Byte>、<xref:System.SByte>、<xref:System.Int16>、<xref:System.Int32>、<xref:System.Int64>、<xref:System.UInt16>、<xref:System.UInt32>、<xref:System.UInt64>、<xref:System.Double>、および <xref:System.Single>。 カルチャに依存しない文字列形式が使用されます。|数値|  
|<xref:System.DateTime>|Date オブジェクト。 JSON で "\\/日付 (タイマー刻みの数)\\/" として表されます。 タイマー刻みの数は、1970年1月01日午前0時から経過したタイマー刻みの数 (ミリ秒) を示す正または負の long 型の値です。<br /><br /> サポートされる日付の最大値は <xref:System.DateTime.MaxValue> (午後 12/31/9999 11:59:59 時) で、サポートされる日付の最小値は <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM) です。|  
|整数型の列挙型|列挙値に相当する整数|  
|<xref:System.Collections.IDictionary> または <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>の実装でもない <xref:System.Collections.IEnumerable> または <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> を実装する型。 これには、<xref:System.Array>、<xref:System.Collections.ArrayList>、<xref:System.Collections.Generic.List%601>などの型が含まれます。|JSON 配列構文を使用する配列|  
|<xref:System.Collections.IDictionary> または <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>を実装する型。 これには、<xref:System.Collections.Generic.Dictionary%602> や <xref:System.Collections.Hashtable>などの型が含まれます。|JSON 辞書構文を使用する JavaScript オブジェクト|  
|Get アクセサーまたはパブリックインスタンスフィールドを持つパブリックインスタンスプロパティを持つ、具象 (非抽象) カスタム型。<br /><br /> <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>でマークされたパブリックな書き込み専用プロパティ、パブリックプロパティまたはパブリックフィールド属性、およびこれらの型のパブリックインデックス付きプロパティは無視されることに注意してください。|JSON 辞書構文を使用する JavaScript オブジェクト。 適切な逆シリアル化を確実にするために、"__type" という特殊なメタデータプロパティが含まれています。 パブリックインスタンスのプロパティに get アクセサーと set アクセサーがあることを確認して、逆シリアル化を正しく行ってください。|  
|<xref:System.Guid>|GUID の文字列表現|  
|<xref:System.Uri>|<xref:System.Uri.GetComponents%2A> の戻り値の文字列形式|  
  
   
  
## Examples  
 最初の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。 次に示す Person という名前のクラスが必要です。  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 次の例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスを使用して JSON シリアル化を使用してオブジェクトの状態を保存および復元する、より複雑で完成したプロジェクトを示しています。 このコードでは、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスに用意されているカスタムコンバーターを使用します。  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)">ASP.NET AJAX での Web サービスの使用</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)">ASP.NET AJAX でクライアントスクリプトから Web サービスを呼び出す</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>型リゾルバーを持たない <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型リゾルバーのない <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスには、シリアル化された JSON 文字列に "__type" という名前の型メタデータプロパティは含まれません。 型メタデータプロパティは、JSON 文字列が変換される適切なマネージ型を決定するために、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> および <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドによって使用されます。 型リゾルバーの詳細については、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">カスタムの型リゾルバー オブジェクト。</param>
        <summary>カスタムの型リゾルバーを持つ <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトをシリアル化する場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスは、`resolver` パラメーターを使用して、"型メタデータ" プロパティ ("__type") のシリアル化された JSON 文字列に含める適切な値を決定します。 同様に、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスが JSON 文字列を逆シリアル化する場合、リゾルバーインスタンスを使用して、型メタデータプロパティの値を適切なマネージ型に解決します。  
  
 `resolver` パラメーターを `null`に設定できます。これは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> コンストラクターを呼び出すことと同じです。  
  
 クライアントスクリプトから Web サービスを呼び出すために非同期通信レイヤーによって使用される <xref:System.Web.Script.Serialization.JavaScriptSerializer> のインスタンスは、特別な型リゾルバーを使用します。 この型リゾルバーは、逆シリアル化できる型を、Web サービスのメソッドシグネチャまたは <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 適用されているものに制限します。 この組み込み型リゾルバーはプログラムによって変更することはできません。  
  
> [!IMPORTANT]
>  カスタム型リゾルバーで初期化されたこのオブジェクトのインスタンスを使用すると、セキュリティ上のリスクが生じる可能性があります。 このオブジェクトは信頼されたデータでのみ使用してください。 詳しくは、「[Data Validation](https://www.owasp.org/index.php/Data_Validation)」(データの入力規則) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)">ASP.NET AJAX での Web サービスの使用</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">変換対象のオブジェクト。</param>
        <param name="targetType">オブジェクトの変換後の型。</param>
        <summary>指定したオブジェクトを指定した型に変換します。</summary>
        <returns>シリアル化された JSON 文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 形式の文字列に変換される名前と値のペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 形式の文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
- または - 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><paramref name="obj" /> の変換後の型。</typeparam>
        <param name="obj">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトを指定した型に変換します。</summary>
        <returns>ターゲットの型に変換されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドは、`obj` によって表されるオブジェクトインスタンスを `T`型のインスタンスに変換しようとします。 この変換では、オブジェクト参照の等価性が維持される保証はありません。 したがって、`obj` と `T` が同じオブジェクトを参照していると見なすことはできません。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> は、<xref:System.Web.Script.Serialization.JavaScriptConverter>から派生したクラスを実装する場合に使用することを目的としています。 コンバーターコードは、シリアライザーによって渡されるディクショナリ内の値を取得し、その値を `T`型のインスタンスに変換できる必要があります。 このタスクを実行するためにカスタム変換コードを再実装するのではなく、コンバーターコードから <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドを呼び出すことができます。  
  
   
  
## Examples  
 次の例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドを使用して、コンバーターに渡されるディクショナリ内の値から <xref:System.Web.UI.WebControls.ListItem> オブジェクトを取得する方法を示しています。 このコード例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。  
  
- または - 
 <paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
- または - 
 <paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
- または - 
<paramref name="obj" /> を配列のようなマネージド型に変換しようとしました。このような型を変換先の型として逆シリアル化を実行することはできません。  
  
- または - 
<paramref name="obj" /> を <paramref name="T" /> に変換することはできません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
- または - 
 <paramref name="obj" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <param name="targetType">生成されるオブジェクトの型。</param>
        <summary>JSON 形式の文字列を指定した型のオブジェクトに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この逆シリアル化メソッドは、オブジェクトグラフのルートを特定の型にキャストしようとしません。これは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドが行う方法です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
- または - 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
- または - 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
- または - 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
- または - 
 <paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。  
  
- または - 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
- または - 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
- または - 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
- または - 
<paramref name="input" /> をターゲットの型に変換できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">生成されるオブジェクトの型。</typeparam>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <summary>指定した JSON 文字列を指定した型 <paramref name="T" /> のオブジェクトに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドは、最初に <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドを使用してオブジェクトグラフを取得し、その結果を型 `T`にキャストしようとすることと同じです。  
  
 逆シリアル化中に、シリアライザーの現在の型リゾルバーが参照されます。これは、配列およびディクショナリ型の内部で入れ子になった要素を変換するときに使用するマネージ型を決定します。 その結果、逆シリアル化プロセスでは、`input`の入れ子になった要素がすべて反復処理されます。 型リゾルバーの詳細については、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスを参照してください。  
  
   
  
## Examples  
次の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

次の例に示すように、`Person`という名前のクラスが必要です。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
- または - 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
- または - 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
- または - 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
- または - 
 <paramref name="input" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。  
  
- または - 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
- または - 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
- または - 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
- または - 
<paramref name="input" /> を <paramref name="T" /> に変換することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <summary>指定した JSON 文字列をオブジェクト グラフに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この逆シリアル化メソッドは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドと同様に、オブジェクトグラフのルートを特定の型にキャストしようとしません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
- または - 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
- または - 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
- または - 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
- または - 
 <paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。  
  
- または - 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
- または - 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
- または - 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
- または - 
<paramref name="input" /> をターゲットの型に変換できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスによって受け入れられる JSON 文字列の最大長を取得または設定します。</summary>
        <value>JSON 文字列の最大長。 既定値は2097152文字です。これは、Unicode 文字列データの 4 MB に相当します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> プロパティの値は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスを明示的に作成する場合にのみ適用されます。 構成ファイルの `jsonSerialization` 要素を使用して、非同期通信層によって使用される内部シリアライザーインスタンスの最大長を設定します。 シリアル化の構成要素の詳細については、「[方法: Microsoft Ajax で ASP.NET Services を構成](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100))する」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが 1 未満の値に設定されています。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>処理されるオブジェクト レベル数の制限値を取得または設定します。</summary>
        <value>オブジェクト レベル数。 既定値は 100 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> プロパティは、次の場合に <xref:System.Web.Script.Serialization.JavaScriptSerializer> によって処理されるオブジェクト階層内のレベル数を示します。  
  
-   <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスが JSON 文字列を逆シリアル化する場合。  
  
-   シリアル化中に <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスがオブジェクトグラフをウォークするとき。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> の値は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスを明示的に作成する場合にのみ適用されます。 構成ファイルの `jsonSerialization` 要素を使用して、非同期通信レイヤーによって使用される内部シリアライザーインスタンスに対して処理するオブジェクトレベルの数を設定します。 シリアル化の構成要素の詳細については、「[方法: Microsoft Ajax で ASP.NET Services を構成](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100))する」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが 1 未満の値に設定されています。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">登録するカスタムのコンバーターが格納されている配列。</param>
        <summary>カスタムのコンバーターを <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> インスタンスに登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> メソッドを使用して、<xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに1つ以上のカスタムコンバーターを登録できます。 カスタムコンバーターが登録されると、<xref:System.Web.Script.Serialization.JavaScriptSerializer> は、両方のコンバーターを使用してマネージ型をシリアル化し、JSON 文字列をマネージ型に逆シリアル化します。  
  
 同じ <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに複数のコンバーターを登録できます。また、これらのコンバーターは同じ型のサポートを示すことができます。 その結果、特定の型に対して登録されている最後のコンバーターは、型をシリアル化するために <xref:System.Web.Script.Serialization.JavaScriptSerializer> によって使用されるコンバーターです。  
  
 カスタムコンバーターの詳細については、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスを参照してください。  
  
   
  
## Examples  
 次の例は、カスタムコンバーターを <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに登録する方法を示しています。 このコード例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトを JSON 文字列に変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">シリアル化するオブジェクト。</param>
        <summary>オブジェクトを JSON 文字列に変換します。</summary>
        <returns>シリアル化された JSON 文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 文字列に変換される名前と値のペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。  
  
   
  
## Examples  
次の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

次の例に示すように、`Person`という名前のクラスが必要です。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
- または - 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">シリアル化するオブジェクト。</param>
        <param name="output">JSON 文字列の書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</param>
        <summary>オブジェクトをシリアル化し、生成された JSON 文字列を指定の <see cref="T:System.Text.StringBuilder" /> オブジェクトに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 文字列に変換される名前と値のペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
- または - 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
