<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1f24e659692acfb24a4aa0a75578cec9934372e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82432074" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="494d2-101">.NET Framework 4.7.2 以降のバージョンでは、シリアル化と逆シリアル化のために、<see cref="N:System.Text.Json" /> 名前空間の API を使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-101">For .NET Framework 4.7.2 and later versions, use the APIs in the <see cref="N:System.Text.Json" /> namespace for serialization and deserialization.</span></span> <span data-ttu-id="494d2-102">以前のバージョンの .NET Framework では、<see href="https://www.newtonsoft.com/json">Newtonsoft. Json</see> を使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-102">For earlier versions of .NET Framework, use <see href="https://www.newtonsoft.com/json">Newtonsoft.Json</see>.</span></span> <span data-ttu-id="494d2-103">この型は、AJAX 対応アプリケーションにシリアル化および逆シリアル化の機能を提供することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="494d2-103">This type was intended to provide serialization and deserialization functionality for AJAX-enabled applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
> <span data-ttu-id="494d2-104">.NET Framework 4.7.2 以降のバージョンの場合、シリアル化と逆シリアル化には、<xref:System.Text.Json> 名前空間の Api を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="494d2-104">For .NET Framework 4.7.2 and later versions, the APIs in the <xref:System.Text.Json> namespace should be used for serialization and deserialization.</span></span> <span data-ttu-id="494d2-105">以前のバージョンの .NET Framework では、 [Newtonsoft. Json](https://www.newtonsoft.com/json)を使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-105">For earlier versions of .NET Framework, use [Newtonsoft.Json](https://www.newtonsoft.com/json).</span></span>

<span data-ttu-id="494d2-106"><xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスは、ブラウザーと Web サーバー間で渡されるデータをシリアル化および逆シリアル化するために、非同期通信層によって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-106">The <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server.</span></span> <span data-ttu-id="494d2-107">シリアライザーのインスタンスにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-107">You cannot access that instance of the serializer.</span></span> <span data-ttu-id="494d2-108">ただし、このクラスはパブリック API を公開します。</span><span class="sxs-lookup"><span data-stu-id="494d2-108">However, this class exposes a public API.</span></span> <span data-ttu-id="494d2-109">そのため、マネージコードで JavaScript Object Notation (JSON) を操作する場合は、クラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="494d2-109">Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.</span></span>  
  
<span data-ttu-id="494d2-110">オブジェクトをシリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-110">To serialize an object, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method.</span></span> <span data-ttu-id="494d2-111">JSON 文字列を逆シリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> または <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-111">To deserialize a JSON string, use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> or <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods.</span></span> <span data-ttu-id="494d2-112"><xref:System.Web.Script.Serialization.JavaScriptSerializer>でネイティブにサポートされていない型をシリアル化および逆シリアル化するには、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスを使用してカスタムコンバーターを実装します。</span><span class="sxs-lookup"><span data-stu-id="494d2-112">To serialize and deserialize types that are not natively supported by <xref:System.Web.Script.Serialization.JavaScriptSerializer>, implement custom converters by using the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span> <span data-ttu-id="494d2-113">次に、<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> メソッドを使用してコンバーターを登録します。</span><span class="sxs-lookup"><span data-stu-id="494d2-113">Then register the converters by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.</span></span>  
  
## <a name="mapping-between-managed-types-and-json"></a><span data-ttu-id="494d2-114">マネージ型と JSON 間のマッピング</span><span class="sxs-lookup"><span data-stu-id="494d2-114">Mapping Between Managed Types and JSON</span></span>  
 <span data-ttu-id="494d2-115">次の表に、シリアル化プロセスのマネージ型と JSON の間のマッピングを示します。</span><span class="sxs-lookup"><span data-stu-id="494d2-115">The following table shows the mapping between managed types and JSON for the serialization process.</span></span> <span data-ttu-id="494d2-116">これらのマネージ型は、<xref:System.Web.Script.Serialization.JavaScriptSerializer>によってネイティブにサポートされています。</span><span class="sxs-lookup"><span data-stu-id="494d2-116">These managed types are natively supported by <xref:System.Web.Script.Serialization.JavaScriptSerializer>.</span></span> <span data-ttu-id="494d2-117">JSON 文字列からマネージ型に逆シリアル化する場合は、同じマッピングが適用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-117">When you are deserializing from a JSON string to a managed type, the same mapping applies.</span></span> <span data-ttu-id="494d2-118">ただし、逆シリアル化は非対称です。すべてのシリアル化可能なマネージ型を JSON から逆シリアル化できるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="494d2-118">However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="494d2-119">多次元配列は1次元配列としてシリアル化され、フラット配列として使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="494d2-119">A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.</span></span>  
  
|<span data-ttu-id="494d2-120">マネージド型</span><span class="sxs-lookup"><span data-stu-id="494d2-120">Managed type</span></span>|<span data-ttu-id="494d2-121">同等の JSON</span><span class="sxs-lookup"><span data-stu-id="494d2-121">JSON equivalent</span></span>|  
|------------------|---------------------|  
|<span data-ttu-id="494d2-122"><xref:System.String> (UTF-8 エンコードのみ)。</span><span class="sxs-lookup"><span data-stu-id="494d2-122"><xref:System.String> (UTF-8 encoding only).</span></span>|<span data-ttu-id="494d2-123">String</span><span class="sxs-lookup"><span data-stu-id="494d2-123">String</span></span>|  
|<xref:System.Char>|<span data-ttu-id="494d2-124">String</span><span class="sxs-lookup"><span data-stu-id="494d2-124">String</span></span>|  
|<span data-ttu-id="494d2-125">1つの null char (, \ 0 など)</span><span class="sxs-lookup"><span data-stu-id="494d2-125">Single null char (such as, \0 )</span></span>|<span data-ttu-id="494d2-126">Null</span><span class="sxs-lookup"><span data-stu-id="494d2-126">Null</span></span>|  
|<xref:System.Boolean>|<span data-ttu-id="494d2-127">ブール型。</span><span class="sxs-lookup"><span data-stu-id="494d2-127">Boolean.</span></span> <span data-ttu-id="494d2-128">JSON で `true` または `false` として表される</span><span class="sxs-lookup"><span data-stu-id="494d2-128">Represented in JSON as `true` or `false`</span></span>|  
|<span data-ttu-id="494d2-129">`null` (`null` オブジェクト参照と <xref:System.Nullable> 値型)。</span><span class="sxs-lookup"><span data-stu-id="494d2-129">`null` (`null` object references and <xref:System.Nullable> value types).</span></span>|<span data-ttu-id="494d2-130">Null の文字列値</span><span class="sxs-lookup"><span data-stu-id="494d2-130">A string value of null</span></span>|  
|<xref:System.DBNull>|<span data-ttu-id="494d2-131">Null の文字列値</span><span class="sxs-lookup"><span data-stu-id="494d2-131">A string value of null</span></span>|  
|<span data-ttu-id="494d2-132">プリミティブ数値 (または数値と互換性のある) 型: <xref:System.Byte>、<xref:System.SByte>、<xref:System.Int16>、<xref:System.Int32>、<xref:System.Int64>、<xref:System.UInt16>、<xref:System.UInt32>、<xref:System.UInt64>、<xref:System.Double>、および <xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="494d2-132">Primitive numeric (or numeric-compatible) types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, and <xref:System.Single>.</span></span> <span data-ttu-id="494d2-133">カルチャに依存しない文字列形式が使用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-133">The culture-invariant string representation is used.</span></span>|<span data-ttu-id="494d2-134">数値</span><span class="sxs-lookup"><span data-stu-id="494d2-134">Number</span></span>|  
|<xref:System.DateTime>|<span data-ttu-id="494d2-135">Date オブジェクト。 JSON で "\\/日付 (タイマー刻みの数)\\/" として表されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-135">Date object, represented in JSON as "\\/Date(number of ticks)\\/".</span></span> <span data-ttu-id="494d2-136">タイマー刻みの数は、1970年1月01日午前0時から経過したタイマー刻みの数 (ミリ秒) を示す正または負の long 型の値です。</span><span class="sxs-lookup"><span data-stu-id="494d2-136">The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.</span></span><br /><br /> <span data-ttu-id="494d2-137">サポートされる日付の最大値は <xref:System.DateTime.MaxValue> (午後 12/31/9999 11:59:59 時) で、サポートされる日付の最小値は <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM) です。</span><span class="sxs-lookup"><span data-stu-id="494d2-137">The maximum supported date value is <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM) and the minimum supported date value is <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).</span></span>|  
|<span data-ttu-id="494d2-138">整数型の列挙型</span><span class="sxs-lookup"><span data-stu-id="494d2-138">Enumerations of integer type</span></span>|<span data-ttu-id="494d2-139">列挙値に相当する整数</span><span class="sxs-lookup"><span data-stu-id="494d2-139">Integer equivalent of the enumeration value</span></span>|  
|<span data-ttu-id="494d2-140"><xref:System.Collections.IDictionary> または <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>の実装でもない <xref:System.Collections.IEnumerable> または <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> を実装する型。</span><span class="sxs-lookup"><span data-stu-id="494d2-140">Types that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> that are not also implementations of <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span> <span data-ttu-id="494d2-141">これには、<xref:System.Array>、<xref:System.Collections.ArrayList>、<xref:System.Collections.Generic.List%601>などの型が含まれます。</span><span class="sxs-lookup"><span data-stu-id="494d2-141">This includes types such as <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.Generic.List%601>.</span></span>|<span data-ttu-id="494d2-142">JSON 配列構文を使用する配列</span><span class="sxs-lookup"><span data-stu-id="494d2-142">Array that uses JSON array syntax</span></span>|  
|<span data-ttu-id="494d2-143"><xref:System.Collections.IDictionary> または <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>を実装する型。</span><span class="sxs-lookup"><span data-stu-id="494d2-143">Types that implement <xref:System.Collections.IDictionary> or <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span> <span data-ttu-id="494d2-144">これには、<xref:System.Collections.Generic.Dictionary%602> や <xref:System.Collections.Hashtable>などの型が含まれます。</span><span class="sxs-lookup"><span data-stu-id="494d2-144">This includes types such as <xref:System.Collections.Generic.Dictionary%602> and <xref:System.Collections.Hashtable>.</span></span>|<span data-ttu-id="494d2-145">JSON 辞書構文を使用する JavaScript オブジェクト</span><span class="sxs-lookup"><span data-stu-id="494d2-145">JavaScript object that uses JSON dictionary syntax</span></span>|  
|<span data-ttu-id="494d2-146">Get アクセサーまたはパブリックインスタンスフィールドを持つパブリックインスタンスプロパティを持つ、具象 (非抽象) カスタム型。</span><span class="sxs-lookup"><span data-stu-id="494d2-146">Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.</span></span><br /><br /> <span data-ttu-id="494d2-147"><xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>でマークされたパブリックな書き込み専用プロパティ、パブリックプロパティまたはパブリックフィールド属性、およびこれらの型のパブリックインデックス付きプロパティは無視されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-147">Note that public write-only properties, public property or public field attributes marked with <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, and public indexed properties in these types are ignored.</span></span>|<span data-ttu-id="494d2-148">JSON 辞書構文を使用する JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-148">JavaScript object that uses JSON dictionary syntax.</span></span> <span data-ttu-id="494d2-149">適切な逆シリアル化を確実にするために、"__type" という特殊なメタデータプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-149">A special metadata property named "__type" is included to ensure correct deserialization.</span></span> <span data-ttu-id="494d2-150">パブリックインスタンスのプロパティに get アクセサーと set アクセサーがあることを確認して、逆シリアル化を正しく行ってください。</span><span class="sxs-lookup"><span data-stu-id="494d2-150">Make sure that public instance properties have get and set accessors to ensure correct deserialization.</span></span>|  
|<xref:System.Guid>|<span data-ttu-id="494d2-151">GUID の文字列表現</span><span class="sxs-lookup"><span data-stu-id="494d2-151">String representation of a GUID</span></span>|  
|<xref:System.Uri>|<span data-ttu-id="494d2-152"><xref:System.Uri.GetComponents%2A> の戻り値の文字列形式</span><span class="sxs-lookup"><span data-stu-id="494d2-152">String representation of the return value of <xref:System.Uri.GetComponents%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="494d2-153">最初の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。</span><span class="sxs-lookup"><span data-stu-id="494d2-153">The first example provides a simple illustration of how to serialize and deserialize data objects.</span></span> <span data-ttu-id="494d2-154">次に示す Person という名前のクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="494d2-154">It requires a class named Person which is shown below.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 <span data-ttu-id="494d2-155">次の例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスを使用して JSON シリアル化を使用してオブジェクトの状態を保存および復元する、より複雑で完成したプロジェクトを示しています。</span><span class="sxs-lookup"><span data-stu-id="494d2-155">The next example shows a more complicated and complete project that uses the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class to save and restore the state of an object by using JSON serialization.</span></span> <span data-ttu-id="494d2-156">このコードでは、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスに用意されているカスタムコンバーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-156">This code uses a custom converter that is provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)"><span data-ttu-id="494d2-157">ASP.NET AJAX での Web サービスの使用</span><span class="sxs-lookup"><span data-stu-id="494d2-157">Using Web Services in ASP.NET AJAX</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)"><span data-ttu-id="494d2-158">ASP.NET AJAX でクライアントスクリプトから Web サービスを呼び出す</span><span class="sxs-lookup"><span data-stu-id="494d2-158">Calling Web Services from Client Script in ASP.NET AJAX</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="494d2-159"><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="494d2-159">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="494d2-160">型リゾルバーを持たない <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="494d2-160">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-161">型リゾルバーのない <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスには、シリアル化された JSON 文字列に "__type" という名前の型メタデータプロパティは含まれません。</span><span class="sxs-lookup"><span data-stu-id="494d2-161">An instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class without a type resolver does not include type metadata properties (named "__type") in the serialized JSON string.</span></span> <span data-ttu-id="494d2-162">型メタデータプロパティは、JSON 文字列が変換される適切なマネージ型を決定するために、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> および <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-162">A type metadata property is used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> and <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> methods to determine the appropriate managed type to which the JSON string will be converted.</span></span> <span data-ttu-id="494d2-163">型リゾルバーの詳細については、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-163">For information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver"><span data-ttu-id="494d2-164">カスタムの型リゾルバー オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-164">The custom type-resolver object.</span></span></param>
        <summary><span data-ttu-id="494d2-165">カスタムの型リゾルバーを持つ <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="494d2-165">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-166">オブジェクトをシリアル化する場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスは、`resolver` パラメーターを使用して、"型メタデータ" プロパティ ("__type") のシリアル化された JSON 文字列に含める適切な値を決定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-166">When it is serializing an object, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class uses the `resolver` parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property ("__type").</span></span> <span data-ttu-id="494d2-167">同様に、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスが JSON 文字列を逆シリアル化する場合、リゾルバーインスタンスを使用して、型メタデータプロパティの値を適切なマネージ型に解決します。</span><span class="sxs-lookup"><span data-stu-id="494d2-167">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.</span></span>  
  
 <span data-ttu-id="494d2-168">`resolver` パラメーターを `null`に設定できます。これは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> コンストラクターを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="494d2-168">You can set the `resolver` parameter to `null`, which is equivalent to calling the <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="494d2-169">クライアントスクリプトから Web サービスを呼び出すために非同期通信レイヤーによって使用される <xref:System.Web.Script.Serialization.JavaScriptSerializer> のインスタンスは、特別な型リゾルバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="494d2-169">The instance of <xref:System.Web.Script.Serialization.JavaScriptSerializer> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver.</span></span> <span data-ttu-id="494d2-170">この型リゾルバーは、逆シリアル化できる型を、Web サービスのメソッドシグネチャまたは <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 適用されているものに制限します。</span><span class="sxs-lookup"><span data-stu-id="494d2-170">This type resolver restricts the types that can be deserialized to those defined in the Web service's method signature, or the ones that have the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> applied.</span></span> <span data-ttu-id="494d2-171">この組み込み型リゾルバーはプログラムによって変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-171">You cannot modify this built-in type resolver programmatically.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="494d2-172">カスタム型リゾルバーで初期化されたこのオブジェクトのインスタンスを使用すると、セキュリティ上のリスクが生じる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="494d2-172">Using an instance of this object initialized with a custom type-resolver can present a security risk.</span></span> <span data-ttu-id="494d2-173">このオブジェクトは信頼されたデータでのみ使用してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-173">Use this object only with trusted data.</span></span> <span data-ttu-id="494d2-174">詳しくは、「[Data Validation](https://www.owasp.org/index.php/Data_Validation)」(データの入力規則) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-174">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)"><span data-ttu-id="494d2-175">ASP.NET AJAX での Web サービスの使用</span><span class="sxs-lookup"><span data-stu-id="494d2-175">Using Web Services in ASP.NET AJAX</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="494d2-176">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-176">The object to convert.</span></span></param>
        <param name="targetType"><span data-ttu-id="494d2-177">オブジェクトの変換後の型。</span><span class="sxs-lookup"><span data-stu-id="494d2-177">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="494d2-178">指定したオブジェクトを指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-178">Converts the specified object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="494d2-179">シリアル化された JSON 文字列。</span><span class="sxs-lookup"><span data-stu-id="494d2-179">The serialized JSON string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-180"><xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 形式の文字列に変換される名前と値のペアのディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="494d2-180">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.</span></span>  
  
 <span data-ttu-id="494d2-181"><xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。</span><span class="sxs-lookup"><span data-stu-id="494d2-181">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-182">生成される JSON 形式の文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-182">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-183">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-183">-or-</span></span> 
 <span data-ttu-id="494d2-184"><paramref name="obj" /> に循環参照が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-184"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="494d2-185">循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="494d2-185">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-186"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-186">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="494d2-187"><paramref name="obj" /> の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="494d2-187">The type to which <paramref name="obj" /> will be converted.</span></span></typeparam>
        <param name="obj"><span data-ttu-id="494d2-188">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-188">The object to convert.</span></span></param>
        <summary><span data-ttu-id="494d2-189">指定したオブジェクトを指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-189">Converts the given object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="494d2-190">ターゲットの型に変換されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-190">The object that has been converted to the target type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-191"><xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドは、`obj` によって表されるオブジェクトインスタンスを `T`型のインスタンスに変換しようとします。</span><span class="sxs-lookup"><span data-stu-id="494d2-191">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method tries to convert the object instance that is represented by `obj` to an instance of type `T`.</span></span> <span data-ttu-id="494d2-192">この変換では、オブジェクト参照の等価性が維持される保証はありません。</span><span class="sxs-lookup"><span data-stu-id="494d2-192">During this conversion there is no guarantee that object reference equality is maintained.</span></span> <span data-ttu-id="494d2-193">したがって、`obj` と `T` が同じオブジェクトを参照していると見なすことはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-193">Therefore, you cannot assume that `obj` and `T` refer to the same object.</span></span>  
  
 <span data-ttu-id="494d2-194"><xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> は、<xref:System.Web.Script.Serialization.JavaScriptConverter>から派生したクラスを実装する場合に使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="494d2-194"><xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> is intended to be used if you implement a class that derives from <xref:System.Web.Script.Serialization.JavaScriptConverter>.</span></span> <span data-ttu-id="494d2-195">コンバーターコードは、シリアライザーによって渡されるディクショナリ内の値を取得し、その値を `T`型のインスタンスに変換できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="494d2-195">Converter code must be able to take a value that is in the dictionary that the serializer passes to it, and then convert that value to an instance of type `T`.</span></span> <span data-ttu-id="494d2-196">このタスクを実行するためにカスタム変換コードを再実装するのではなく、コンバーターコードから <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="494d2-196">Instead of re-implementing the custom conversion code to perform this task, you can call the <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method from the converter code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="494d2-197">次の例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> メソッドを使用して、コンバーターに渡されるディクショナリ内の値から <xref:System.Web.UI.WebControls.ListItem> オブジェクトを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="494d2-197">The following example shows how to use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> method to obtain a <xref:System.Web.UI.WebControls.ListItem> object from a value in the dictionary that is passed to the converter.</span></span> <span data-ttu-id="494d2-198">このコード例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="494d2-198">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-199"><paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="494d2-199"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="494d2-200">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-200">-or-</span></span> 
 <span data-ttu-id="494d2-201"><paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-201"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="494d2-202">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-202">-or-</span></span> 
 <span data-ttu-id="494d2-203"><paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-203"><paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="494d2-204">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-204">-or-</span></span> 
<span data-ttu-id="494d2-205"><paramref name="obj" /> を配列のようなマネージド型に変換しようとしました。このような型を変換先の型として逆シリアル化を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-205">An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.</span></span>  
  
<span data-ttu-id="494d2-206">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-206">-or-</span></span> 
<span data-ttu-id="494d2-207"><paramref name="obj" /> を <paramref name="T" /> に変換することはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-207">It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-208"><paramref name="obj" /> はディクショナリ型であり、文字列ではないキー値が検出されました。</span><span class="sxs-lookup"><span data-stu-id="494d2-208"><paramref name="obj" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="494d2-209">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-209">-or-</span></span> 
 <span data-ttu-id="494d2-210"><paramref name="obj" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-210"><paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="494d2-211">逆シリアル化する JSON 文字列。</span><span class="sxs-lookup"><span data-stu-id="494d2-211">The JSON string to deserialize.</span></span></param>
        <param name="targetType"><span data-ttu-id="494d2-212">生成されるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="494d2-212">The type of the resulting object.</span></span></param>
        <summary><span data-ttu-id="494d2-213">JSON 形式の文字列を指定した型のオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-213">Converts a JSON-formatted string to an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="494d2-214">逆シリアル化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-214">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-215">この逆シリアル化メソッドは、オブジェクトグラフのルートを特定の型にキャストしようとしません。これは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドが行う方法です。</span><span class="sxs-lookup"><span data-stu-id="494d2-215">This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method does.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="494d2-216"><paramref name="input" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="494d2-216"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-217"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-217">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-218">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-218">-or-</span></span> 
<span data-ttu-id="494d2-219"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-219">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="494d2-220">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-220">-or-</span></span> 
 <span data-ttu-id="494d2-221"><paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-221"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="494d2-222">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-222">-or-</span></span> 
 <span data-ttu-id="494d2-223"><paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。</span><span class="sxs-lookup"><span data-stu-id="494d2-223"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="494d2-224">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-224">-or-</span></span> 
 <span data-ttu-id="494d2-225"><paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-225"><paramref name="input" /> includes member definitions that are not available on the target type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-226"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="494d2-226"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="494d2-227">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-227">-or-</span></span> 
 <span data-ttu-id="494d2-228"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-228"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="494d2-229">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-229">-or-</span></span> 
 <span data-ttu-id="494d2-230"><paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-230"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="494d2-231">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-231">-or-</span></span> 
<span data-ttu-id="494d2-232">JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。</span><span class="sxs-lookup"><span data-stu-id="494d2-232">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="494d2-233">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-233">-or-</span></span> 
<span data-ttu-id="494d2-234"><paramref name="input" /> をターゲットの型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-234">It is not possible to convert <paramref name="input" /> to the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="494d2-235">生成されるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="494d2-235">The type of the resulting object.</span></span></typeparam>
        <param name="input"><span data-ttu-id="494d2-236">逆シリアル化する JSON 文字列。</span><span class="sxs-lookup"><span data-stu-id="494d2-236">The JSON string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="494d2-237">指定した JSON 文字列を指定した型 <paramref name="T" /> のオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-237">Converts the specified JSON string to an object of type <paramref name="T" />.</span></span></summary>
        <returns><span data-ttu-id="494d2-238">逆シリアル化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-238">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-239"><xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドは、最初に <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> メソッドを使用してオブジェクトグラフを取得し、その結果を型 `T`にキャストしようとすることと同じです。</span><span class="sxs-lookup"><span data-stu-id="494d2-239">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method is equivalent to first using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> method to obtain an object graph and then trying to cast the result to type `T`.</span></span>  
  
 <span data-ttu-id="494d2-240">逆シリアル化中に、シリアライザーの現在の型リゾルバーが参照されます。これは、配列およびディクショナリ型の内部で入れ子になった要素を変換するときに使用するマネージ型を決定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-240">During deserialization, the serializer's current type resolver is referenced, which determines the managed type to use when converting elements that are nested inside arrays and dictionary types.</span></span> <span data-ttu-id="494d2-241">その結果、逆シリアル化プロセスでは、`input`の入れ子になった要素がすべて反復処理されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-241">As a result, the deserialization process iterates through all nested elements of `input`.</span></span> <span data-ttu-id="494d2-242">型リゾルバーの詳細については、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-242">For more information about type resolvers, see the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="494d2-243">次の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。</span><span class="sxs-lookup"><span data-stu-id="494d2-243">The following example provides a simple illustration of how to serialize and deserialize data objects.</span></span>  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

<span data-ttu-id="494d2-244">次の例に示すように、`Person`という名前のクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="494d2-244">It requires a class named `Person`, which is shown in the following example.</span></span> 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-245"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-245">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-246">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-246">-or-</span></span> 
<span data-ttu-id="494d2-247"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-247">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="494d2-248">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-248">-or-</span></span> 
 <span data-ttu-id="494d2-249"><paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-249"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="494d2-250">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-250">-or-</span></span> 
 <span data-ttu-id="494d2-251"><paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。</span><span class="sxs-lookup"><span data-stu-id="494d2-251"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="494d2-252">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-252">-or-</span></span> 
 <span data-ttu-id="494d2-253"><paramref name="input" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-253"><paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="494d2-254"><paramref name="input" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="494d2-254"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-255"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="494d2-255"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="494d2-256">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-256">-or-</span></span> 
 <span data-ttu-id="494d2-257"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-257"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="494d2-258">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-258">-or-</span></span> 
 <span data-ttu-id="494d2-259"><paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-259"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).</span></span>  
  
<span data-ttu-id="494d2-260">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-260">-or-</span></span> 
<span data-ttu-id="494d2-261">JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。</span><span class="sxs-lookup"><span data-stu-id="494d2-261">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="494d2-262">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-262">-or-</span></span> 
<span data-ttu-id="494d2-263"><paramref name="input" /> を <paramref name="T" /> に変換することはできません。</span><span class="sxs-lookup"><span data-stu-id="494d2-263">It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="494d2-264">逆シリアル化する JSON 文字列。</span><span class="sxs-lookup"><span data-stu-id="494d2-264">The JSON string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="494d2-265">指定した JSON 文字列をオブジェクト グラフに変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-265">Converts the specified JSON string to an object graph.</span></span></summary>
        <returns><span data-ttu-id="494d2-266">逆シリアル化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-266">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-267">この逆シリアル化メソッドは、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> メソッドと同様に、オブジェクトグラフのルートを特定の型にキャストしようとしません。</span><span class="sxs-lookup"><span data-stu-id="494d2-267">This deserialization method does not try to cast the root of the object graph to a specific type, as with the <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="494d2-268"><paramref name="input" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="494d2-268"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-269"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-269">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-270">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-270">-or-</span></span> 
<span data-ttu-id="494d2-271"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-271">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span>  
  
<span data-ttu-id="494d2-272">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-272">-or-</span></span> 
 <span data-ttu-id="494d2-273"><paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-273"><paramref name="input" /> contains an unexpected character sequence.</span></span>  
  
<span data-ttu-id="494d2-274">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-274">-or-</span></span> 
 <span data-ttu-id="494d2-275"><paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。</span><span class="sxs-lookup"><span data-stu-id="494d2-275"><paramref name="input" /> is a dictionary type and a non-string key value was encountered.</span></span>  
  
<span data-ttu-id="494d2-276">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-276">-or-</span></span> 
 <span data-ttu-id="494d2-277"><paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-277"><paramref name="input" /> includes member definitions that are not available on the target type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-278"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="494d2-278"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</span></span>  
  
<span data-ttu-id="494d2-279">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-279">-or-</span></span> 
 <span data-ttu-id="494d2-280"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-280"><paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</span></span>  
  
<span data-ttu-id="494d2-281">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-281">-or-</span></span> 
 <span data-ttu-id="494d2-282"><paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-282"><paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).</span></span>  
  
<span data-ttu-id="494d2-283">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-283">-or-</span></span> 
<span data-ttu-id="494d2-284">JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。</span><span class="sxs-lookup"><span data-stu-id="494d2-284">An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</span></span>  
  
<span data-ttu-id="494d2-285">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-285">-or-</span></span> 
<span data-ttu-id="494d2-286"><paramref name="input" /> をターゲットの型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="494d2-286">It is not possible to convert <paramref name="input" /> to the target type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494d2-287"><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスによって受け入れられる JSON 文字列の最大長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-287">Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</span></span></summary>
        <value><span data-ttu-id="494d2-288">JSON 文字列の最大長。</span><span class="sxs-lookup"><span data-stu-id="494d2-288">The maximum length of JSON strings.</span></span> <span data-ttu-id="494d2-289">既定値は2097152文字です。これは、Unicode 文字列データの 4 MB に相当します。</span><span class="sxs-lookup"><span data-stu-id="494d2-289">The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-290"><xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> プロパティの値は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスを明示的に作成する場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-290">The value of the <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> property applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="494d2-291">構成ファイルの `jsonSerialization` 要素を使用して、非同期通信層によって使用される内部シリアライザーインスタンスの最大長を設定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-291">Use the `jsonSerialization` element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer.</span></span> <span data-ttu-id="494d2-292">シリアル化の構成要素の詳細については、「[方法: Microsoft Ajax で ASP.NET Services を構成](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100))する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-292">For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="494d2-293">プロパティが 1 未満の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="494d2-293">The property is set to a value that is less than one.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494d2-294">処理されるオブジェクト レベル数の制限値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-294">Gets or sets the limit for constraining the number of object levels to process.</span></span></summary>
        <value><span data-ttu-id="494d2-295">オブジェクト レベル数。</span><span class="sxs-lookup"><span data-stu-id="494d2-295">The number of object levels.</span></span> <span data-ttu-id="494d2-296">既定値は 100 です。</span><span class="sxs-lookup"><span data-stu-id="494d2-296">The default is 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-297"><xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> プロパティは、次の場合に <xref:System.Web.Script.Serialization.JavaScriptSerializer> によって処理されるオブジェクト階層内のレベル数を示します。</span><span class="sxs-lookup"><span data-stu-id="494d2-297">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> property refers to the number of levels in the object hierarchy that <xref:System.Web.Script.Serialization.JavaScriptSerializer> will process in the following cases:</span></span>  
  
-   <span data-ttu-id="494d2-298"><xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスが JSON 文字列を逆シリアル化する場合。</span><span class="sxs-lookup"><span data-stu-id="494d2-298">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is deserializing a JSON string.</span></span>  
  
-   <span data-ttu-id="494d2-299">シリアル化中に <xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスがオブジェクトグラフをウォークするとき。</span><span class="sxs-lookup"><span data-stu-id="494d2-299">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class is walking an object graph during serialization.</span></span>  
  
 <span data-ttu-id="494d2-300"><xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> の値は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラスのインスタンスを明示的に作成する場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="494d2-300">The value of <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> applies only when you explicitly create an instance of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="494d2-301">構成ファイルの `jsonSerialization` 要素を使用して、非同期通信レイヤーによって使用される内部シリアライザーインスタンスに対して処理するオブジェクトレベルの数を設定します。</span><span class="sxs-lookup"><span data-stu-id="494d2-301">Use the `jsonSerialization` element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer.</span></span> <span data-ttu-id="494d2-302">シリアル化の構成要素の詳細については、「[方法: Microsoft Ajax で ASP.NET Services を構成](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100))する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-302">For more information about the configuration elements for serialization, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="494d2-303">プロパティが 1 未満の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="494d2-303">The property is set to a value that is less than one.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters"><span data-ttu-id="494d2-304">登録するカスタムのコンバーターが格納されている配列。</span><span class="sxs-lookup"><span data-stu-id="494d2-304">An array that contains the custom converters to be registered.</span></span></param>
        <summary><span data-ttu-id="494d2-305">カスタムのコンバーターを <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> インスタンスに登録します。</span><span class="sxs-lookup"><span data-stu-id="494d2-305">Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-306"><xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> メソッドを使用して、<xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに1つ以上のカスタムコンバーターを登録できます。</span><span class="sxs-lookup"><span data-stu-id="494d2-306">You can register one or more custom converters with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance by using the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method.</span></span> <span data-ttu-id="494d2-307">カスタムコンバーターが登録されると、<xref:System.Web.Script.Serialization.JavaScriptSerializer> は、両方のコンバーターを使用してマネージ型をシリアル化し、JSON 文字列をマネージ型に逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="494d2-307">When custom converters are registered, <xref:System.Web.Script.Serialization.JavaScriptSerializer> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.</span></span>  
  
 <span data-ttu-id="494d2-308">同じ <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに複数のコンバーターを登録できます。また、これらのコンバーターは同じ型のサポートを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="494d2-308">Multiple converters can be registered with the same <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, and these converters can indicate support for the same type.</span></span> <span data-ttu-id="494d2-309">その結果、特定の型に対して登録されている最後のコンバーターは、型をシリアル化するために <xref:System.Web.Script.Serialization.JavaScriptSerializer> によって使用されるコンバーターです。</span><span class="sxs-lookup"><span data-stu-id="494d2-309">As a result, the last converter that is registered for a specific type is the one that will be used by <xref:System.Web.Script.Serialization.JavaScriptSerializer> to serialize the type.</span></span>  
  
 <span data-ttu-id="494d2-310">カスタムコンバーターの詳細については、<xref:System.Web.Script.Serialization.JavaScriptConverter> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="494d2-310">For more information about custom converters, see the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="494d2-311">次の例は、カスタムコンバーターを <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスに登録する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="494d2-311">The following example shows how to register a custom converter with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance.</span></span> <span data-ttu-id="494d2-312">このコード例は、<xref:System.Web.Script.Serialization.JavaScriptSerializer> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="494d2-312">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="494d2-313"><paramref name="converters" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="494d2-313"><paramref name="converters" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="494d2-314">オブジェクトを JSON 文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-314">Converts an object to a JSON string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="494d2-315">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-315">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="494d2-316">オブジェクトを JSON 文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="494d2-316">Converts an object to a JSON string.</span></span></summary>
        <returns><span data-ttu-id="494d2-317">シリアル化された JSON 文字列。</span><span class="sxs-lookup"><span data-stu-id="494d2-317">The serialized JSON string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-318"><xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 文字列に変換される名前と値のペアのディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="494d2-318">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</span></span>  
  
 <span data-ttu-id="494d2-319"><xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。</span><span class="sxs-lookup"><span data-stu-id="494d2-319">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="494d2-320">次の例では、データオブジェクトをシリアル化および逆シリアル化する方法を簡単に説明します。</span><span class="sxs-lookup"><span data-stu-id="494d2-320">The following example provides a simple illustration of how to serialize and deserialize data objects.</span></span>  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

<span data-ttu-id="494d2-321">次の例に示すように、`Person`という名前のクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="494d2-321">It requires a class named `Person`, which is shown in the following example.</span></span> 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-322">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-322">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-323">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-323">-or-</span></span> 
 <span data-ttu-id="494d2-324"><paramref name="obj" /> に循環参照が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-324"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="494d2-325">循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="494d2-325">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-326"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-326">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="494d2-327">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-327">The object to serialize.</span></span></param>
        <param name="output"><span data-ttu-id="494d2-328">JSON 文字列の書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="494d2-328">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</span></span></param>
        <summary><span data-ttu-id="494d2-329">オブジェクトをシリアル化し、生成された JSON 文字列を指定の <see cref="T:System.Text.StringBuilder" /> オブジェクトに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="494d2-329">Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="494d2-330"><xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンスがカスタムコンバーターが登録されている型をシリアル化する場合、シリアライザーは、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> メソッドを呼び出して、JSON 文字列に変換される名前と値のペアのディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="494d2-330">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which a custom converter is registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</span></span>  
  
 <span data-ttu-id="494d2-331"><xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> メソッドは、オブジェクトグラフが複雑すぎる場合や、<xref:System.Web.Script.Serialization.JavaScriptConverter> の登録済みインスタンスによってコンバーターの再帰が発生した場合に、例外をスローすることもできます。</span><span class="sxs-lookup"><span data-stu-id="494d2-331">The <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> method can also throw exceptions if the object graph is too complex, or if registered instances of <xref:System.Web.Script.Serialization.JavaScriptConverter> have caused converter recursion.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="494d2-332">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-332">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.</span></span>  
  
<span data-ttu-id="494d2-333">- または -</span><span class="sxs-lookup"><span data-stu-id="494d2-333">-or-</span></span> 
 <span data-ttu-id="494d2-334"><paramref name="obj" /> に循環参照が含まれています。</span><span class="sxs-lookup"><span data-stu-id="494d2-334"><paramref name="obj" /> contains a circular reference.</span></span> <span data-ttu-id="494d2-335">循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="494d2-335">A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="494d2-336"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</span><span class="sxs-lookup"><span data-stu-id="494d2-336">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="494d2-337"><paramref name="output" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="494d2-337"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
