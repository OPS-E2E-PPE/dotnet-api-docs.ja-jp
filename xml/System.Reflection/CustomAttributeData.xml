<Type Name="CustomAttributeData" FullName="System.Reflection.CustomAttributeData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a082c00e883bada9917d1b4b603e7f9e46441c04" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83483329" /></Metadata><TypeSignature Language="C#" Value="public class CustomAttributeData" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomAttributeData extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeData" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomAttributeData" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type CustomAttributeData = class" />
  <TypeSignature Language="C#" Value="public sealed class CustomAttributeData" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CustomAttributeData extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CustomAttributeData" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeData sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CustomAttributeData extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Reflection" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="26c95-101">リフレクションのみのコンテキストに読み込まれているアセンブリ、モジュール、型、メンバー、およびパラメーターのカスタム属性データへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="26c95-101">Provides access to custom attribute data for assemblies, modules, types, members and parameters that are loaded into the reflection-only context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-102">リフレクションのみのコンテキストで検証されているコードは実行できないので、カスタム属性を確認してから、そのインスタンスを作成し、そのプロパティを調べることができるとは限りません。そのためには、<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>、<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>などのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="26c95-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="26c95-103">属性の型自体のコードがリフレクションのみのコンテキストに読み込まれる場合は、実行できません。</span><span class="sxs-lookup"><span data-stu-id="26c95-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="26c95-104"><xref:System.Reflection.CustomAttributeData> クラスを使用すると、属性の抽象化を提供することによって、リフレクションのみのコンテキストでカスタム属性を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="26c95-104">The <xref:System.Reflection.CustomAttributeData> class allows examination of custom attributes in the reflection-only context by providing an abstraction for attributes.</span></span> <span data-ttu-id="26c95-105">このクラスのメンバーは、属性の位置指定引数と名前付き引数を取得するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-105">The members of this class can be used to obtain the positional arguments and named arguments of the attribute.</span></span> <span data-ttu-id="26c95-106"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> プロパティを使用して、位置指定引数を表す <xref:System.Reflection.CustomAttributeTypedArgument> 構造体の一覧を取得し、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A> プロパティを使用して、名前付き引数を表す <xref:System.Reflection.CustomAttributeNamedArgument> 構造体の一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-106">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeTypedArgument> structures that represent the positional arguments, and use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property to get a list of <xref:System.Reflection.CustomAttributeNamedArgument> structures that represent the named arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26c95-107"><xref:System.Reflection.CustomAttributeNamedArgument> 構造体は、引数の値を取得および設定するために使用される属性プロパティに関する情報のみを提供します。</span><span class="sxs-lookup"><span data-stu-id="26c95-107">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only provides information about the attribute property used to get and set the argument value.</span></span> <span data-ttu-id="26c95-108">引数の型と値を取得するには、<xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> プロパティを使用して <xref:System.Reflection.CustomAttributeTypedArgument> 構造体を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-108">To obtain the type and value of the argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="26c95-109">引数の <xref:System.Reflection.CustomAttributeTypedArgument> 構造体 (名前付きまたは位置指定) がある場合は、<xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> プロパティを使用して型を取得し、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> プロパティを使用して値を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-109">When you have a <xref:System.Reflection.CustomAttributeTypedArgument> structure for an argument, whether named or positional, use the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A?displayProperty=nameWithType> property to get the type and the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property to get the value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26c95-110">配列引数の場合、<xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> プロパティは <xref:System.Reflection.CustomAttributeTypedArgument> オブジェクトのジェネリック <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> を返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-110">For an array argument, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A?displayProperty=nameWithType> property returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="26c95-111">コレクション内の各 <xref:System.Reflection.CustomAttributeTypedArgument> オブジェクトは、配列の対応する要素を表します。</span><span class="sxs-lookup"><span data-stu-id="26c95-111">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="26c95-112"><xref:System.Reflection.CustomAttributeData> は、実行コンテキストだけでなく、リフレクションのみのコンテキストでも使用できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-112"><xref:System.Reflection.CustomAttributeData> can be used in the execution context as well as in the reflection-only context.</span></span> <span data-ttu-id="26c95-113">たとえば、カスタム属性のコードを含むアセンブリが読み込まれないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="26c95-113">For example, you might want to avoid loading the assembly that contains the code for a custom attribute.</span></span> <span data-ttu-id="26c95-114"><xref:System.Reflection.CustomAttributeData> クラスの使用は、<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>のようなメソッドの使用とは異なります。</span><span class="sxs-lookup"><span data-stu-id="26c95-114">Using the <xref:System.Reflection.CustomAttributeData> class is different from using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>:</span></span>  
  
-   <span data-ttu-id="26c95-115"><xref:System.Reflection.CustomAttributeData> のプロパティとメソッドは、コンストラクターのセマンティクスではなく、属性インスタンスに対して指定された値のみを提供します。</span><span class="sxs-lookup"><span data-stu-id="26c95-115">The properties and methods of <xref:System.Reflection.CustomAttributeData> only provide you with the values that were specified for the attribute instance, not the semantics of the constructor.</span></span> <span data-ttu-id="26c95-116">たとえば、属性の文字列引数は、内部的に他の何らかの表現に変換され、正規の形式で返される場合があります。または、実際の属性コードが実行されると、プロパティに副作用が生じる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="26c95-116">For example, a string argument of an attribute might be converted internally to some other representation, and returned in a canonical form; or a property might have side effects when the actual attribute code is executed.</span></span>  
  
-   <span data-ttu-id="26c95-117"><xref:System.Reflection.CustomAttributeData> のプロパティとメソッドでは、基本クラスから継承されたカスタム属性を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="26c95-117">The properties and methods of <xref:System.Reflection.CustomAttributeData> do not allow you to retrieve the custom attributes inherited from base classes.</span></span>  
  
 <span data-ttu-id="26c95-118"><xref:System.Reflection.CustomAttributeData> クラスのインスタンスを作成するには、`static` (Visual Basic で`Shared`) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> ファクトリメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="26c95-118">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-119">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-119">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-120">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-120">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-121">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-121">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-122">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-122">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-123">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-123">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-124">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-124">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-125">実行すると、アセンブリはリフレクションのみのコンテキストにそれ自体を読み込み、それに適用されたカスタム属性およびそれに含まれる型とメンバーに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="26c95-125">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="26c95-126">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-126">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
    <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomAttributeData ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomAttributeData();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26c95-127"><see cref="T:System.Reflection.CustomAttributeData" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="26c95-127">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-128">このコンストラクターは、<xref:System.Reflection.CustomAttributeData> オブジェクトの構築時に、派生クラスによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-128">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.CustomAttributeData> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeType">
      <MemberSignature Language="C#" Value="public virtual Type AttributeType { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AttributeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AttributeType As Type" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AttributeType { Type ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.AttributeType : Type" Usage="System.Reflection.CustomAttributeData.AttributeType" />
      <MemberSignature Language="C#" Value="public Type AttributeType { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeType As Type" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AttributeType { Type ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26c95-129">属性の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-129">Gets the type of the attribute.</span></span></summary>
        <value><span data-ttu-id="26c95-130">属性の型。</span><span class="sxs-lookup"><span data-stu-id="26c95-130">The type of the attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constructor">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ConstructorInfo Constructor { get; }" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo Constructor" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constructor As ConstructorInfo" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Constructor : System.Reflection.ConstructorInfo" Usage="System.Reflection.CustomAttributeData.Constructor" />
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo Constructor { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constructor As ConstructorInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ConstructorInfo ^ Constructor { System::Reflection::ConstructorInfo ^ get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26c95-131">カスタム属性を初期化したはずのコンストラクターを表す <see cref="T:System.Reflection.ConstructorInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-131">Gets a <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor that would have initialized the custom attribute.</span></span></summary>
        <value><span data-ttu-id="26c95-132"><see cref="T:System.Reflection.CustomAttributeData" /> クラスの現在のインスタンスで表されるカスタム属性を初期化したであろうコンストラクターを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="26c95-132">An object that represents the constructor that would have initialized the custom attribute represented by the current instance of the <see cref="T:System.Reflection.CustomAttributeData" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-133">属性の型に複数のコンストラクターがある場合、このプロパティは、現在の <xref:System.Reflection.CustomAttributeData> オブジェクトによって表される属性インスタンスを初期化した特定のコンストラクターのみを返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-133">If an attribute type has multiple constructors, this property returns only the particular constructor that would have initialized the attribute instance represented by the current <xref:System.Reflection.CustomAttributeData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-134">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-134">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-135">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-135">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-136">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-136">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-137">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-137">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-138">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-138">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-139">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-139">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-140">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-140">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-141">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-141">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-142"><xref:System.Reflection.CustomAttributeData.Constructor%2A> プロパティは、カスタム属性データを表示する `ShowAttributeData` メソッドで使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-142">The <xref:System.Reflection.CustomAttributeData.Constructor%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="26c95-143">このコード例では、このプロパティによって返される <xref:System.Reflection.ConstructorInfo> を使用して、コンストラクターを記述するテキスト文字列を表示します。これは、プロパティが属性を初期化するコンストラクターを返すことを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-143">In this code example, the <xref:System.Reflection.ConstructorInfo> returned by this property is used to display a text string that describes the constructor, demonstrating that the property returns the constructor that would initialize the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ConstructorArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ConstructorArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;" Usage="System.Reflection.CustomAttributeData.ConstructorArguments" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt; ConstructorArguments { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructorArguments As IList(Of CustomAttributeTypedArgument)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ ConstructorArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeTypedArgument&gt; ^ get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeTypedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26c95-144"><see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された位置指定引数のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-144">Gets the list of positional arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="26c95-145">カスタム属性インスタンスに対して指定された位置指定引数を表す構造体のコレクション。</span><span class="sxs-lookup"><span data-stu-id="26c95-145">A collection of structures that represent the positional arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-146">このメソッドは、カスタム属性コードを実行せずに、カスタム属性インスタンスに対して指定された位置指定引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-146">This method gets the positional arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="26c95-147">したがって、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-147">Thus, it can be used in the reflection-only context.</span></span>  
  
 <span data-ttu-id="26c95-148">属性インスタンスに対して指定された名前付き引数を取得するには、<xref:System.Reflection.CustomAttributeData.NamedArguments%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="26c95-148">Use the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> method to get the named arguments specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-149">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-149">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-150">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-150">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-151">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-151">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-152">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-152">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-153">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-153">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-154">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-154">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-155">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-155">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-156">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-156">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-157"><xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> プロパティは、カスタム属性データを表示する `ShowAttributeData` メソッドで使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-157">The <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="26c95-158">このコード例では、このプロパティを使用して、属性を初期化したコンストラクターに渡される引数のリストを表示します。</span><span class="sxs-lookup"><span data-stu-id="26c95-158">In this code example, this property is used to display the list of arguments passed to the constructor that initialized the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.NamedArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="26c95-159">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="26c95-159">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="26c95-160">このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-160">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="26c95-161"><paramref name="obj" /> が現在のインスタンスと等しい場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="26c95-161"><see langword="true" /> if <paramref name="obj" /> is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26c95-162">対象に適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-162">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Assembly target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Assembly target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Assembly) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="26c95-163">取得するカスタム属性データが含まれるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="26c95-163">The assembly whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="26c95-164">ターゲット アセンブリに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-164">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target assembly.</span></span></summary>
        <returns><span data-ttu-id="26c95-165">対象のアセンブリに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="26c95-165">A list of objects that represent data about the attributes that have been applied to the target assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-166">このメソッドは、リフレクションのみのコンテキストで常に使用できる <xref:System.Reflection.Assembly.GetCustomAttributes%2A> メソッドの代替手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="26c95-166">This method provides an alternative to the <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-167">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-167">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-168">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-168">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-169">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-169">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-170">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-170">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-171">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-171">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-172">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-172">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-173">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-173">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-174">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-174">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-175"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> メソッドは、アセンブリに適用されるカスタム属性を取得するために `Main()` で使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-175">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes applied to the assembly.</span></span> <span data-ttu-id="26c95-176">メソッドの戻り値は、`ShowAttributeData` メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-176">The return value of the method is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26c95-177"><paramref name="target" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="26c95-177"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.MemberInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.MemberInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As MemberInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="26c95-178">取得する属性データが含まれるメンバー。</span><span class="sxs-lookup"><span data-stu-id="26c95-178">The member whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="26c95-179">ターゲット メンバーに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-179">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="26c95-180">対象のメンバーに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="26c95-180">A list of objects that represent data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-181">このメソッドオーバーロードは、型、入れ子にされた型、および型のメンバーのカスタム属性データを取得します。これは、<xref:System.Type> クラスと、型のメンバーを表す <xref:System.Reflection> 名前空間のクラスがすべて <xref:System.Reflection.MemberInfo>から派生しているためです。</span><span class="sxs-lookup"><span data-stu-id="26c95-181">This method overload gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-182">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-182">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-183">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-183">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-184">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-184">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-185">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-185">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-186">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-186">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-187">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-187">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-188">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-188">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-189">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-189">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-190"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> メソッドは、型とテストメソッド (<xref:System.Reflection.MemberInfo>から派生<xref:System.Type>) に適用されたカスタム属性を取得するために `Main()` で使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-190">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to get the custom attributes that were applied to a type and to a test method (<xref:System.Type> derives from <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="26c95-191"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> の戻り値は、`ShowAttributeData` メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-191">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26c95-192"><paramref name="target" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="26c95-192"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.Module target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.Module target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As Module) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="26c95-193">カスタム属性データを取得する対象のモジュール。</span><span class="sxs-lookup"><span data-stu-id="26c95-193">The module whose custom attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="26c95-194">ターゲット モジュールに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span><span class="sxs-lookup"><span data-stu-id="26c95-194">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target module.</span></span></summary>
        <returns><span data-ttu-id="26c95-195">対象のモジュールに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="26c95-195">A list of objects that represent data about the attributes that have been applied to the target module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26c95-196"><paramref name="target" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="26c95-196"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributes (System.Reflection.ParameterInfo target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributes(class System.Reflection.ParameterInfo target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (target As ParameterInfo) As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.CustomAttributeData.GetCustomAttributes target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Reflection.ParameterInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="26c95-197">取得する属性データが含まれるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="26c95-197">The parameter whose attribute data is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="26c95-198">ターゲット パラメーターに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのリストを戻します。</span><span class="sxs-lookup"><span data-stu-id="26c95-198">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target parameter.</span></span></summary>
        <returns><span data-ttu-id="26c95-199">対象のパラメーターに適用されている属性に関するデータを表すオブジェクトのリスト。</span><span class="sxs-lookup"><span data-stu-id="26c95-199">A list of objects that represent data about the attributes that have been applied to the target parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-200">このメソッドは、リフレクションのみのコンテキストで常に使用できる <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> メソッドの代替手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="26c95-200">This method provides an alternative to the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A> method that can always be used in the Reflection-only context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-201">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-201">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-202">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-202">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-203">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-203">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-204">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-204">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-205">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-205">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-206">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-206">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-207">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-207">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-208">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-208">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-209"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> メソッドは、テストメソッドのパラメーターに適用されるカスタム属性を取得するために `Main()` で使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-209">The <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> method is used in `Main()` to retrieve the custom attributes applied to a parameter of a test method.</span></span> <span data-ttu-id="26c95-210"><xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> の戻り値は、`ShowAttributeData` メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-210">The return value of <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> is passed to the `ShowAttributeData` method.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26c95-211"><paramref name="target" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="26c95-211"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26c95-212">特定の型についてハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="26c95-212">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="26c95-213">現在の <see cref="T:System.Object" /> のハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="26c95-213">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="NamedArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.NamedArguments : System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;" Usage="System.Reflection.CustomAttributeData.NamedArguments" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt; NamedArguments { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamedArguments As IList(Of CustomAttributeNamedArgument)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ NamedArguments { System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeNamedArgument&gt; ^ get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeNamedArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26c95-214"><see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトが表す属性インスタンスに対して指定された名前付き引数のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-214">Gets the list of named arguments specified for the attribute instance represented by the <see cref="T:System.Reflection.CustomAttributeData" /> object.</span></span></summary>
        <value><span data-ttu-id="26c95-215">カスタム属性インスタンスに対して指定された名前付き引数を表す構造体のコレクション。</span><span class="sxs-lookup"><span data-stu-id="26c95-215">A collection of structures that represent the named arguments specified for the custom attribute instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-216">このメソッドは、カスタム属性コードを実行せずに、カスタム属性インスタンスに指定された名前付き引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="26c95-216">This method gets the named arguments that were specified for the custom attribute instance without executing any of the custom attribute code.</span></span> <span data-ttu-id="26c95-217">したがって、リフレクションのみのコンテキストで使用できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-217">Thus, it can be used in the Reflection-only context.</span></span>  
  
 <span data-ttu-id="26c95-218">返される一覧には、属性インスタンスに指定された名前付き引数のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="26c95-218">The list that is returned contains only the named arguments that were specified for the attribute instance.</span></span>  
  
 <span data-ttu-id="26c95-219">属性インスタンスに指定された位置指定引数を取得するには、<xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="26c95-219">Use the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A> method to get the positional arguments that were specified for the attribute instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-220">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-220">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-221">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-221">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-222">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-222">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-223">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-223">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-224">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-224">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-225">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-225">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-226">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-226">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-227">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-227">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-228"><xref:System.Reflection.CustomAttributeData.NamedArguments%2A> プロパティは、カスタム属性データを表示する `ShowAttributeData` メソッドで使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-228">The <xref:System.Reflection.CustomAttributeData.NamedArguments%2A> property is used in the `ShowAttributeData` method that displays custom attribute data.</span></span> <span data-ttu-id="26c95-229">このコード例では、このプロパティを使用して、属性に指定されている名前付き引数の一覧を表示します。</span><span class="sxs-lookup"><span data-stu-id="26c95-229">In this code example, this property is used to display the list of named arguments specified for the attribute.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeData.ConstructorArguments" />
        <altmember cref="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26c95-230">カスタム属性の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="26c95-230">Returns a string representation of the custom attribute.</span></span></summary>
        <returns><span data-ttu-id="26c95-231">カスタム属性を表す文字列値。</span><span class="sxs-lookup"><span data-stu-id="26c95-231">A string value that represents the custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26c95-232">文字列値には、属性の型、属性パラメーター、および名前付きパラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="26c95-232">The string value includes the attribute type, the attribute parameters, and the named parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26c95-233">次の例では、4つのコンストラクターと4つのプロパティを持つカスタム属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="26c95-233">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="26c95-234">2つのプロパティは読み取り専用で、コンストラクターの位置指定パラメーターを使用して設定されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-234">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="26c95-235">他の2つのプロパティは読み取り/書き込み可能であり、名前付き引数を使用することによってのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="26c95-235">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="26c95-236">1つの位置指定プロパティは文字列の配列であり、1つの名前付きプロパティは整数の配列です。</span><span class="sxs-lookup"><span data-stu-id="26c95-236">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="26c95-237">この属性は、アセンブリ、アセンブリで宣言された型、型のメソッド、メソッドのパラメーターに適用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-237">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="26c95-238">このような場合は、異なるコンストラクターが使用されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-238">Different constructors are used for these cases.</span></span> <span data-ttu-id="26c95-239">実行すると、アセンブリがリフレクションのみのコンテキストに読み込まれ、カスタム属性が表示されます。</span><span class="sxs-lookup"><span data-stu-id="26c95-239">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="26c95-240">型に適用される属性は、位置指定引数と名前付き引数の両方を使用した配列プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="26c95-240">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="26c95-241">この例では、<xref:System.Reflection.CustomAttributeData.ToString%2A> メソッドを `ShowAttributeData` メソッドで使用して、データが表示されている属性を識別します。</span><span class="sxs-lookup"><span data-stu-id="26c95-241">In this example, the <xref:System.Reflection.CustomAttributeData.ToString%2A> method is used in the `ShowAttributeData` method, to identify the attribute whose data is being displayed.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
