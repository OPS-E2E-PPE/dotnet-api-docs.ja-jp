<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0142a661b1141e2e3bba7687cc7d0339c82b79e" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83540614" /></Metadata><TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Binder extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="edfd6-101">メンバーの候補リストからメンバーを選択し、実引数型から仮引数型への型変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-102"><xref:System.Reflection.Binder> クラスの実装は、パラメーターの型と引数の値のセットに基づいて実行する一連の可能なメンバーから選択する <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>などのメソッドによって使用されます。<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>、パラメーターの型に基づいてメソッドを選択します。などなど。</span><span class="sxs-lookup"><span data-stu-id="edfd6-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="edfd6-103"><xref:System.Reflection.Binder> クラスの既定の実装は、<xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> プロパティによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edfd6-104">次の例では、`Binder` クラスのすべてのメンバーを実装して示しています。</span><span class="sxs-lookup"><span data-stu-id="edfd6-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="edfd6-105">プライベートメソッド `CanConvertFrom` は、指定された型に対して互換性のある型を検索します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="edfd6-106"><see cref="T:System.Reflection.Binder" />から継承する場合は、<see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />、<see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />、<see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />、<see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />、<see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />、および <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-106">When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edfd6-107"><see cref="T:System.Reflection.Binder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-108">このコンストラクターは、この型の状態を初期化するために、派生クラスのコンストラクターによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="edfd6-109"><see cref="T:System.Reflection.BindingFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="edfd6-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="edfd6-110">条件に合う候補である一連のフィールド。</span><span class="sxs-lookup"><span data-stu-id="edfd6-110">The set of fields that are candidates for matching.</span></span> <span data-ttu-id="edfd6-111">たとえば、<see cref="Overload:System.Type.InvokeMember" /> で <see cref="T:System.Reflection.Binder" /> オブジェクトが使用される場合、このパラメーターには、メンバー名が正しいためにリフレクションで条件に合う可能性ありと判定された一連のフィールドが指定されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="edfd6-112"><see cref="P:System.Type.DefaultBinder" /> に用意されている既定の実装では、この配列の順序が変わります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="value"><span data-ttu-id="edfd6-113">条件に合うフィールドを検索するために使用されるフィールド値。</span><span class="sxs-lookup"><span data-stu-id="edfd6-113">The field value used to locate a matching field.</span></span></param>
        <param name="culture"><span data-ttu-id="edfd6-114">型を強制変換するバインダー実装で、データ型の強制変換を制御するのに使用される <see cref="T:System.Globalization.CultureInfo" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="edfd6-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="edfd6-115"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-115">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="edfd6-116">指定した条件に基づいて、指定されている一連のフィールドからフィールドを選択します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-116">Selects a field from the given set of fields, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="edfd6-117">一致するフィールド。</span><span class="sxs-lookup"><span data-stu-id="edfd6-117">The matching field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-118">`bindingAttr` に <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>が含まれていない場合、<xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> によって提供される既定のバインダー実装では、単に `match`の最初の要素が返されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-118">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="edfd6-119">選択は行われません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-119">No selection is done.</span></span>  
  
 <span data-ttu-id="edfd6-120">このメソッドは、<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>によって提供されるバインディングを制御します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-120">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="edfd6-121">バインダーの実装で文字列値を数値型に強制変換できる場合、`culture` パラメーターは1000を表す文字列を <xref:System.Double> 値に変換する必要があります。これは、カルチャによって1000の表記が異なるためです。</span><span class="sxs-lookup"><span data-stu-id="edfd6-121">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="edfd6-122">既定のバインダーは、このような文字列の強制変換を行いません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-122">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="edfd6-123">既定のバインダーでは、<paramref name="bindingAttr" /> には <see cref="F:System.Reflection.BindingFlags.SetField" /> が含まれ、<paramref name="match" /> には <paramref name="value" /> とも同等に一致するフィールドが複数含まれます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span></span> <span data-ttu-id="edfd6-124">たとえば、<paramref name="value" /> には <c>IMyClass</c> インターフェイスを実装した <c>MyClass</c> オブジェクトが含まれ、<paramref name="match" /> には <c>MyClass</c> 型のフィールドと <c>IMyClass</c> 型のフィールドが含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="edfd6-125">既定のバインダーでは、<paramref name="bindingAttr" /> には <see cref="F:System.Reflection.BindingFlags.SetField" /> が含まれ、<paramref name="match" /> には <paramref name="value" /> を受け入れ可能なフィールドは含まれません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="edfd6-126">既定のバインダーでは、<paramref name="bindingAttr" /> には <see cref="F:System.Reflection.BindingFlags.SetField" /> が含まれ、<paramref name="match" /> は <see langword="null" /> または空の配列となります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="edfd6-127">または</span><span class="sxs-lookup"><span data-stu-id="edfd6-127">-or-</span></span> 
 <span data-ttu-id="edfd6-128"><paramref name="bindingAttr" /> に <see cref="F:System.Reflection.BindingFlags.SetField" /> が含まれ、<paramref name="value" /> は <see langword="null" /> になります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-128"><paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Object[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] * obj -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="edfd6-129"><see cref="T:System.Reflection.BindingFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="edfd6-129">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="edfd6-130">条件に合う候補である一連のメソッド。</span><span class="sxs-lookup"><span data-stu-id="edfd6-130">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="edfd6-131">たとえば、<see cref="Overload:System.Type.InvokeMember" /> で <see cref="T:System.Reflection.Binder" /> オブジェクトが使用される場合、このパラメーターには、メンバー名が正しいために条件に合う可能性ありとリフレクションで判定された一連のメソッドが指定されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-131">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="edfd6-132"><see cref="P:System.Type.DefaultBinder" /> に用意されている既定の実装では、この配列の順序が変わります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-132">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="args"><span data-ttu-id="edfd6-133">渡される引数。</span><span class="sxs-lookup"><span data-stu-id="edfd6-133">The arguments that are passed in.</span></span> <span data-ttu-id="edfd6-134">バインダーでは、この配列内の引数の順序が変わる可能性があります。たとえば、<paramref name="names" /> パラメーターを使用して位置の順序ではない順序を指定した場合は、既定のバインダーによって引数の順序が変更されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-134">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <paramref name="names" /> parameter is used to specify an order other than positional order.</span></span> <span data-ttu-id="edfd6-135">バインダーの実装により引数の型が強制変換される場合、引数の型と値も同様に変更されることがあります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-135">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span></span></param>
        <param name="modifiers"><span data-ttu-id="edfd6-136">バインディングが型の変更されたパラメーター シグネチャと連動できるようにするパラメーター修飾子の配列。</span><span class="sxs-lookup"><span data-stu-id="edfd6-136">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span> <span data-ttu-id="edfd6-137">既定のバインダー実装は、このパラメーターを使用しません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-137">The default binder implementation does not use this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="edfd6-138">型を強制変換するバインダー実装で、データ型の強制変換を制御するのに使用される <see cref="T:System.Globalization.CultureInfo" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="edfd6-138">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="edfd6-139"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-139">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="names"><span data-ttu-id="edfd6-140">照合時にパラメーター名を使用する場合はパラメーター名。引数を単に位置順で扱う場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edfd6-140">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span></span> <span data-ttu-id="edfd6-141">たとえば、引数が位置の順序で指定されない場合は、パラメーター名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-141">For example, parameter names must be used if arguments are not supplied in positional order.</span></span></param>
        <param name="state"><span data-ttu-id="edfd6-142">メソッドが返された後、引数の並べ替えを追跡し続けるために <paramref name="state" /> に格納されるバインダーが提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edfd6-142">After the method returns, <paramref name="state" /> contains a binder-provided object that keeps track of argument reordering.</span></span> <span data-ttu-id="edfd6-143">バインダーがこのオブジェクトを作成し、このオブジェクトの唯一のコンシューマーとなります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-143">The binder creates this object, and the binder is the sole consumer of this object.</span></span> <span data-ttu-id="edfd6-144"><see langword="null" /> から制御が戻ったときに <paramref name="state" /> が <see langword="BindToMethod" /> でない場合に、<paramref name="state" /> を元の順序に戻さないためには、<paramref name="args" /> を <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> メソッドに渡す必要があります。これはたとえば、<see langword="ref" /> パラメーター (Visual Basic では <see langword="ByRef" /> パラメーター) の値を取得できるようにするためです。</span><span class="sxs-lookup"><span data-stu-id="edfd6-144">If <paramref name="state" /> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <paramref name="state" /> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <paramref name="args" /> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="edfd6-145">指定された引数に基づいて、指定されている一連のメソッドから呼び出すメソッドを選択します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-145">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span></span></summary>
        <returns><span data-ttu-id="edfd6-146">一致するメソッド。</span><span class="sxs-lookup"><span data-stu-id="edfd6-146">The matching method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-147">既定のバインダーでは、値と `params` 配列 (`ParamArray` Visual Basic 配列) を持つ両方のパラメーターが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-147">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="edfd6-148">したがって、`args` と `match` に同じ数の要素が含まれていない場合に一致を見つけることができます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-148">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="edfd6-149">バインダーを使用すると、引数配列が <xref:System.Reflection.Binder.BindToMethod%2A>によって操作されている場合に、クライアントは引数の配列を元の形式にマップできます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-149">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="edfd6-150">このリマップ機能を使用して、そのような引数が存在する場合に参照渡しの引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-150">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="edfd6-151">名前で引数を渡すと、バインダーは引数配列を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-151">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="edfd6-152">`state` パラメーターは引数の並べ替えを追跡し、バインダーの <xref:System.Reflection.Binder.ReorderArgumentArray%2A> メソッドが引数配列を元の形式に並べ替えることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="edfd6-152">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="edfd6-153"><xref:System.Reflection.Binder.BindToMethod%2A> メソッドは、<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> メソッドによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-153">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="edfd6-154">バインダーの実装で文字列値を数値型に強制変換できる場合、`culture` パラメーターは1000を表す文字列を <xref:System.Double> 値に変換する必要があります。これは、カルチャによって1000の表記が異なるためです。</span><span class="sxs-lookup"><span data-stu-id="edfd6-154">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="edfd6-155">既定のバインダーは、このような文字列の強制変換を行いません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-155">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="edfd6-156">既定のバインダーでは、<paramref name="match" /> には <paramref name="args" /> とも同等に一致するメソッドが複数含まれます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-156">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span></span> <span data-ttu-id="edfd6-157">たとえば、<paramref name="args" /> には <c>IMyClass</c> インターフェイスを実装した <c>MyClass</c> オブジェクトが含まれ、<paramref name="match" /> には <c>MyClass</c> を使用するメソッドと <c>IMyClass</c> を使用するメソッドが含まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-157">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="edfd6-158">既定のバインダーでは、<paramref name="match" /> には <paramref name="args" /> で指定された引数を受け取ることのできるメソッドは含まれません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-158">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="edfd6-159">既定のバインダーでは、<paramref name="match" /> は <see langword="null" /> または空の配列です。</span><span class="sxs-lookup"><span data-stu-id="edfd6-159">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanChangeType (value As Object, type As Type, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangeType (value As Object, type As Type, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="edfd6-160">新しい <see langword="Type" /> に変更するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edfd6-160">The object to change into a new <see langword="Type" />.</span></span></param>
        <param name="type"><span data-ttu-id="edfd6-161"><paramref name="value" /> の変換後の新しい型。<see langword="Type" /></span><span class="sxs-lookup"><span data-stu-id="edfd6-161">The new <see langword="Type" /> that <paramref name="value" /> will become.</span></span></param>
        <param name="culture"><span data-ttu-id="edfd6-162">データ型の強制変換を制御するために使用する <see cref="T:System.Globalization.CultureInfo" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="edfd6-162">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span></span> <span data-ttu-id="edfd6-163"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-163">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="edfd6-164">指定されている <see langword="Object" /> を特定の <see langword="Type" /> に変更します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-164">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span></span></summary>
        <returns><span data-ttu-id="edfd6-165">指定されている値を新しい型で保持しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edfd6-165">An object that contains the given value as the new type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-166">リフレクションは、共通型システムのアクセシビリティ規則をモデル化します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-166">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="edfd6-167">たとえば、呼び出し元が同じアセンブリ内にある場合、呼び出し元は内部メンバーに対して特別なアクセス許可を必要としません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-167">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="edfd6-168">それ以外の場合は、呼び出し元に <xref:System.Security.Permissions.ReflectionPermission>が必要です。</span><span class="sxs-lookup"><span data-stu-id="edfd6-168">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="edfd6-169">これは、protected、private などのメンバーの参照と一致します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-169">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="edfd6-170">一般的な原則として、`ChangeType` では、データを失うことのない拡大変換のみを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-170">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="edfd6-171">拡大型変換の例として、32ビット符号付き整数の値を64ビット符号付き整数値に強制型変換ます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-171">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="edfd6-172">これは、データを失う可能性がある縮小変換とは区別されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-172">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="edfd6-173">縮小変換の例としては、64ビット符号付き整数から32ビット符号付き整数への強制型変換があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-173">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="edfd6-174">既定の `ChangeType`によって実行される強制変換の一覧を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-174">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="edfd6-175">ソースの種類</span><span class="sxs-lookup"><span data-stu-id="edfd6-175">Source type</span></span>|<span data-ttu-id="edfd6-176">ターゲットの種類</span><span class="sxs-lookup"><span data-stu-id="edfd6-176">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="edfd6-177">任意の型</span><span class="sxs-lookup"><span data-stu-id="edfd6-177">Any type</span></span>|<span data-ttu-id="edfd6-178">その基本型。</span><span class="sxs-lookup"><span data-stu-id="edfd6-178">Its base type.</span></span>|  
|<span data-ttu-id="edfd6-179">任意の型</span><span class="sxs-lookup"><span data-stu-id="edfd6-179">Any type</span></span>|<span data-ttu-id="edfd6-180">実装するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="edfd6-180">The interface it implements.</span></span>|  
|<span data-ttu-id="edfd6-181">Char</span><span class="sxs-lookup"><span data-stu-id="edfd6-181">Char</span></span>|<span data-ttu-id="edfd6-182">UInt16、UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-183">Byte</span><span class="sxs-lookup"><span data-stu-id="edfd6-183">Byte</span></span>|<span data-ttu-id="edfd6-184">Char、UInt16、Int16、UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-185">SByte</span><span class="sxs-lookup"><span data-stu-id="edfd6-185">SByte</span></span>|<span data-ttu-id="edfd6-186">Int16、Int32、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-186">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-187">UInt16</span><span class="sxs-lookup"><span data-stu-id="edfd6-187">UInt16</span></span>|<span data-ttu-id="edfd6-188">UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-188">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-189">Int16</span><span class="sxs-lookup"><span data-stu-id="edfd6-189">Int16</span></span>|<span data-ttu-id="edfd6-190">Int32、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-190">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-191">UInt32</span><span class="sxs-lookup"><span data-stu-id="edfd6-191">UInt32</span></span>|<span data-ttu-id="edfd6-192">UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-192">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-193">Int32</span><span class="sxs-lookup"><span data-stu-id="edfd6-193">Int32</span></span>|<span data-ttu-id="edfd6-194">Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-194">Int64, Single, Double</span></span>|  
|<span data-ttu-id="edfd6-195">UInt64</span><span class="sxs-lookup"><span data-stu-id="edfd6-195">UInt64</span></span>|<span data-ttu-id="edfd6-196">Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-196">Single, Double</span></span>|  
|<span data-ttu-id="edfd6-197">Int64</span><span class="sxs-lookup"><span data-stu-id="edfd6-197">Int64</span></span>|<span data-ttu-id="edfd6-198">Single、Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-198">Single, Double</span></span>|  
|<span data-ttu-id="edfd6-199">Single</span><span class="sxs-lookup"><span data-stu-id="edfd6-199">Single</span></span>|<span data-ttu-id="edfd6-200">Double</span><span class="sxs-lookup"><span data-stu-id="edfd6-200">Double</span></span>|  
|<span data-ttu-id="edfd6-201">非参照</span><span class="sxs-lookup"><span data-stu-id="edfd6-201">Non-reference</span></span>|<span data-ttu-id="edfd6-202">参照渡し。</span><span class="sxs-lookup"><span data-stu-id="edfd6-202">By-reference.</span></span>|  
  
 <span data-ttu-id="edfd6-203">バインダーの実装で文字列値を数値型に強制変換できる場合、`culture` パラメーターは1000を表す文字列を <xref:System.Double> 値に変換する必要があります。これは、カルチャによって1000の表記が異なるためです。</span><span class="sxs-lookup"><span data-stu-id="edfd6-203">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="edfd6-204">既定のバインダーは、このような文字列の強制変換を行いません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-204">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray : Object[] * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="edfd6-205">渡される実引数。</span><span class="sxs-lookup"><span data-stu-id="edfd6-205">The actual arguments that are passed in.</span></span> <span data-ttu-id="edfd6-206">引数の型と値の両方が変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-206">Both the types and values of the arguments can be changed.</span></span></param>
        <param name="state"><span data-ttu-id="edfd6-207">引数の並べ替えを追跡するバインダー提供オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="edfd6-207">A binder-provided object that keeps track of argument reordering.</span></span></param>
        <summary><span data-ttu-id="edfd6-208"><see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /> から制御が戻ったときに、<paramref name="args" /> 引数を <see langword="BindToMethod" /> から返された時点の値に復元します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-208">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-209">`BindToMethod`から返された後に `state` が `null` されていない場合、共通言語ランタイムはこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-209">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="edfd6-210"><see cref="T:System.Reflection.BindingFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="edfd6-210">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="edfd6-211">条件に合う候補である一連のメソッド。</span><span class="sxs-lookup"><span data-stu-id="edfd6-211">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="edfd6-212">たとえば、<see cref="Overload:System.Type.InvokeMember" /> で <see cref="T:System.Reflection.Binder" /> オブジェクトが使用される場合、このパラメーターには、メンバー名が正しいために条件に合う可能性ありとリフレクションで判定された一連のメソッドが指定されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-212">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="edfd6-213"><see cref="P:System.Type.DefaultBinder" /> に用意されている既定の実装では、この配列の順序が変わります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-213">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="types"><span data-ttu-id="edfd6-214">一致するメソッドを検索するために使用されるパラメーター型。</span><span class="sxs-lookup"><span data-stu-id="edfd6-214">The parameter types used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="edfd6-215">バインディングが型の変更されたパラメーター シグネチャと連動できるようにするパラメーター修飾子の配列。</span><span class="sxs-lookup"><span data-stu-id="edfd6-215">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="edfd6-216">引数の型に基づいて、指定されているメソッド セットからメソッドを選択します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-216">Selects a method from the given set of methods, based on the argument type.</span></span></summary>
        <returns><span data-ttu-id="edfd6-217">一致するメソッドが見つかった場合は一致するメソッド。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edfd6-217">The matching method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-218">このメソッドは、条件に一致するメソッドがない場合に `null` を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-218">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="edfd6-219">このメソッドは `Type`の `GetConstructor` および `GetMethod` メソッドによって提供される選択を制御します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-219">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="edfd6-220">既定のバインダーでは、<paramref name="match" /> には、<paramref name="types" /> によって示されるパラメーター型とも同等に一致するメソッドが複数含まれます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-220">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span></span> <span data-ttu-id="edfd6-221">たとえば、<paramref name="types" /> 内の配列に <c>MyClass</c> の <see cref="T:System.Type" /> オブジェクトが含まれ、<paramref name="match" /> 内の配列に <c>MyClass</c> の基本クラスを使用するメソッドと、<c>MyClass</c> が実装するインターフェイスを使用するメソッドが含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-221">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="edfd6-222">既定のバインダーでは、<paramref name="match" /> は <see langword="null" /> または空の配列です。</span><span class="sxs-lookup"><span data-stu-id="edfd6-222">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="edfd6-223">または</span><span class="sxs-lookup"><span data-stu-id="edfd6-223">-or-</span></span> 
<span data-ttu-id="edfd6-224"><paramref name="types" /> の要素は <see cref="T:System.Type" /> から派生していますが、<see langword="RuntimeType" /> 型ではありません。</span><span class="sxs-lookup"><span data-stu-id="edfd6-224">An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="edfd6-225"><see cref="T:System.Reflection.BindingFlags" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="edfd6-225">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="edfd6-226">条件に合う候補であるプロパティ セット。</span><span class="sxs-lookup"><span data-stu-id="edfd6-226">The set of properties that are candidates for matching.</span></span> <span data-ttu-id="edfd6-227">たとえば、<see cref="Overload:System.Type.InvokeMember" /> で <see cref="T:System.Reflection.Binder" /> オブジェクトが使用される場合、このパラメーターには、メンバー名が正しいために条件に合う可能性ありとリフレクションで判定された一連のプロパティが指定されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-227">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="edfd6-228"><see cref="P:System.Type.DefaultBinder" /> に用意されている既定の実装では、この配列の順序が変わります。</span><span class="sxs-lookup"><span data-stu-id="edfd6-228">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="returnType"><span data-ttu-id="edfd6-229">条件に一致したプロパティに必要な戻り値。</span><span class="sxs-lookup"><span data-stu-id="edfd6-229">The return value the matching property must have.</span></span></param>
        <param name="indexes"><span data-ttu-id="edfd6-230">検索対象のプロパティのインデックス型。</span><span class="sxs-lookup"><span data-stu-id="edfd6-230">The index types of the property being searched for.</span></span> <span data-ttu-id="edfd6-231">クラスのインデクサーなど、インデックス プロパティに使用されます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-231">Used for index properties such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="edfd6-232">バインディングが型の変更されたパラメーター シグネチャと連動できるようにするパラメーター修飾子の配列。</span><span class="sxs-lookup"><span data-stu-id="edfd6-232">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="edfd6-233">指定した条件に基づいて、指定されている一連のプロパティからプロパティを選択します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-233">Selects a property from the given set of properties, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="edfd6-234">一致するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="edfd6-234">The matching property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfd6-235">このメソッドは、`Type`の `GetProperty` メソッドによって提供される選択を制御します。</span><span class="sxs-lookup"><span data-stu-id="edfd6-235">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="edfd6-236">既定のバインダーでは、<paramref name="match" /> には <paramref name="returnType" /> と <paramref name="indexes" /> とも同等に一致するプロパティが複数含まれます。</span><span class="sxs-lookup"><span data-stu-id="edfd6-236">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="edfd6-237">既定のバインダーでは、<paramref name="match" /> は <see langword="null" /> または空の配列です。</span><span class="sxs-lookup"><span data-stu-id="edfd6-237">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
