<Type Name="MetadataAssemblyResolver" FullName="System.Reflection.MetadataAssemblyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8641bb8b54bedcb3a2e42350fbf8f1ff915f9ce" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82301138" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataAssemblyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MetadataAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAssemblyResolver abstract" />
  <TypeSignature Language="F#" Value="type MetadataAssemblyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="50d3c-101"><see cref="T:System.Reflection.MetadataLoadContext" /> で使用されるアルゴリズムをバインドする基底クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="50d3c-101">Provides the base class for binding algorithms used by <see cref="T:System.Reflection.MetadataLoadContext" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataAssemblyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetadataAssemblyResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50d3c-102"><see cref="T:System.Reflection.MetadataAssemblyResolver" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="50d3c-102">Initializes an instance of <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Resolve (System.Reflection.MetadataLoadContext context, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Resolve(class System.Reflection.MetadataLoadContext context, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.Resolve(System.Reflection.MetadataLoadContext,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (context As MetadataLoadContext, assemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ Resolve(System::Reflection::MetadataLoadContext ^ context, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Reflection.MetadataLoadContext * System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="metadataAssemblyResolver.Resolve (context, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Reflection.MetadataLoadContext" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="50d3c-103">検査のみの目的で読み込まれる <see cref="T:System.Type" /> オブジェクトの閉ざされた領域を表すメタデータ読み込みコンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="50d3c-103">The metadata load context object that represents the closed universe of <see cref="T:System.Type" /> objects loaded for inspection-only purposes.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="50d3c-104">アセンブリの名前です。</span><span class="sxs-lookup"><span data-stu-id="50d3c-104">The name of the assembly.</span></span></param>
        <summary><span data-ttu-id="50d3c-105">指定したアセンブリ名からアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="50d3c-105">Returns an assembly from a given assembly name.</span></span></summary>
        <returns><span data-ttu-id="50d3c-106">提供されている <paramref name="assemblyName" /> 用のアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="50d3c-106">The assembly for the provided <paramref name="assemblyName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="50d3c-107">アセンブリ名のアセンブリへのバインドは、<xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> が呼び出された場合、またはあるアセンブリの型が別のアセンブリに依存している場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="50d3c-107">Binding an assembly name to an assembly occurs when <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> is called or when a type from one assembly has a dependency on another assembly.</span></span> <span data-ttu-id="50d3c-108">`Resolve` をオーバーライドするハンドラーは、<xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>、<xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> または <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> を使用して、要求されたアセンブリを読み込み、それを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="50d3c-108">The handler that overrides `Resolve` should use <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>, <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> or <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> to load the requested assembly and return it.</span></span>

<span data-ttu-id="50d3c-109">アセンブリの検出に失敗したことを示すために、ハンドラーは例外をスローするのではなく、`null` を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="50d3c-109">To indicate the failure to find an assembly, the handler should return `null` rather than throwing an exception.</span></span> <span data-ttu-id="50d3c-110">`null` を返すと、エラーが発生します。これにより、後でその名前を読み込もうとすると、ハンドラーが再起動されずに失敗します。</span><span class="sxs-lookup"><span data-stu-id="50d3c-110">Returning `null` commits the failure so that future attempts to load that name will fail without re-invoking the handler.</span></span>

<span data-ttu-id="50d3c-111">ハンドラーが例外をスローした場合は、バインディングをトリガーした操作を呼び出したアプリケーションに例外が渡されます。</span><span class="sxs-lookup"><span data-stu-id="50d3c-111">If the handler throws an exception, the exception will be passed through to the application that invoked the operation that triggered the binding.</span></span> <span data-ttu-id="50d3c-112"><xref:System.Reflection.MetadataLoadContext> はそれをキャッチせず、バインドも行われません。</span><span class="sxs-lookup"><span data-stu-id="50d3c-112">The <xref:System.Reflection.MetadataLoadContext> will not catch it, and no binding will occur.</span></span>

<span data-ttu-id="50d3c-113">2つのスレッドが同じアセンブリを読み込んだ場合を除き、通常、このハンドラーは同じ名前に対して複数回呼び出されることはありません。</span><span class="sxs-lookup"><span data-stu-id="50d3c-113">The handler will generally not be called more than once for the same name, unless two threads race to load the same assembly.</span></span> <span data-ttu-id="50d3c-114">その場合でも、1つの結果が優先され、その名前にアトミックにバインドされます。</span><span class="sxs-lookup"><span data-stu-id="50d3c-114">Even in that case, one result will win and be atomically bound to the name.</span></span>

<span data-ttu-id="50d3c-115">参照定義の一致がポリシーであるため、<xref:System.Reflection.MetadataLoadContext> は、返されるアセンブリに対して ref def 一致を意図的に実行しません。</span><span class="sxs-lookup"><span data-stu-id="50d3c-115">The <xref:System.Reflection.MetadataLoadContext> intentionally performs no ref-def matching on the returned assembly as what constitutes a ref-def match is a policy.</span></span> <span data-ttu-id="50d3c-116">また、これは <xref:System.Reflection.MetadataLoadContext> 回避するために必要な任意の制限の一種でもあります。</span><span class="sxs-lookup"><span data-stu-id="50d3c-116">It is also the kind of arbitrary restriction that <xref:System.Reflection.MetadataLoadContext> strives to avoid.</span></span>

<span data-ttu-id="50d3c-117"><xref:System.Reflection.MetadataLoadContext> は、他のメタデータ読み込みコンテキストまたはその他の型プロバイダー (基になるランタイムの独自のリフレクションシステムなど) からのアセンブリを使用できません。</span><span class="sxs-lookup"><span data-stu-id="50d3c-117">The <xref:System.Reflection.MetadataLoadContext> cannot consume assemblies from other metadata load contexts or other type providers (such as the underlying runtime's own reflection system).</span></span> <span data-ttu-id="50d3c-118">このようなアセンブリがハンドラーによって返された場合、<xref:System.Reflection.MetadataLoadContext> は <xref:System.IO.FileLoadException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="50d3c-118">If a handler returns such an assembly, the <xref:System.Reflection.MetadataLoadContext> throws a <xref:System.IO.FileLoadException>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
