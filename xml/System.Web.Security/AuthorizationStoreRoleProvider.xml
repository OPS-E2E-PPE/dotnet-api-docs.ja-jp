<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61272b5eecf9555d7aaba7ecd9d69f4f9ecc638a" /><Meta Name="ms.sourcegitcommit" Value="1403e40e1f487577d6846a42664d2e74b78a08b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/29/2020" /><Meta Name="ms.locfileid" Value="76825223" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>承認管理ポリシー ストア内での ASP.NET アプリケーションのロール メンバーシップ情報のストレージを管理します。これらの情報は XML ファイル、Active Directory、または Active Directory Application Mode サーバーに格納されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、<xref:System.Web.Security.Roles> クラスと <xref:System.Web.Security.RolePrincipal> クラスが、ASP.NET アプリケーションのロール管理サービスを承認マネージャーストアを使用して提供するために使用されます。 ロール管理を使用して、アプリケーションのさまざまな承認レベルを指定できます。 承認マネージャーには、Microsoft 管理コンソールを使用してアクセスできます。  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトは、Windows 認証モードとフォーム認証モードの両方で動作します。  
  
 ローカル XML ファイル、Active Directory または Active Directory Application Mode (ADAM) サーバーを使用するように <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトを構成できます。 ローカルファイルを使用する場合、接続文字列は次の例のようになります。  
  
```  
msxml://<path to xml file>  
```  
  
 ローカルファイルが ASP.NET Web アプリケーションのディレクトリツリーに格納されている場合、チルダ ("~") 文字を使用してルートディレクトリを示すことができます。 たとえば、ローカルファイルが Web アプリケーションのデータディレクトリに格納されていることを示すには、次の例のような接続文字列を使用します。  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  XML データファイルを Web アプリケーションディレクトリに格納することは、セキュリティ上の脅威となる可能性があります。 既定では、IIS は XML データファイルを Web に提供します。 ASP.NET アプリケーションでローカルデータファイルを使用するときのセキュリティを強化するには、データファイルを `App_Data` ディレクトリに格納する必要があります。 `App_Data` ディレクトリに格納されているファイルは、Web には提供されません。  
  
 ポリシーストアに Active Directory または ADAM サーバーを使用している場合、接続文字列は次の例のようになります。  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトメソッドのドキュメントに記載されている例外は、<xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトによって発生する例外です。 プロバイダーは基になる認証マネージャーのランタイムに依存しているため、<xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトが認証マネージャーのランタイムにメソッド呼び出しを転送するたびに、<xref:System.Runtime.InteropServices.COMException> 例外がスローされる可能性があります。  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトには、部分信頼環境でを実行するための次の要件があります。  
>   
>  ASP.NET アプリケーションでファイルベースのポリシーストアを使用する場合、現在の信頼レベルによって付与されるファイル i/o のアクセス許可によって、プロバイダーが読み取りと書き込みの操作を許可するかどうかが決定されます。 ASP.NET アプリケーションは、ポリシーストアからデータを読み取るために、ファイルに対する読み取りアクセス許可を持っている必要があります。また、新しい情報を保存したり、既存の情報をポリシーストアに更新したりするための書き込みアクセス許可を持っている必要があります。 既定の中程度の信頼ポリシーファイルを使用すると、アプリケーションディレクトリに ASP.NET アプリケーションの読み取り/書き込みアクセス許可が付与されます。 既定の低信頼ポリシーファイルは、アプリケーションディレクトリで ASP.NET アプリケーションの読み取りアクセス許可のみを付与します。 また、ASP.NET アプリケーションを実行するプロセス id には、ポリシーファイルの読み取りまたは書き込みを行うためのファイルシステムのアクセス許可が必要です。  
>   
>  Active Directory または ADAM サーバーを使用する場合、内部 <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトコードは COM 相互運用機能を使用するため、ASP.NET アプリケーションにはアンマネージコードのアクセス許可が必要です。  
>   
>  ASP.NET の外部で <xref:System.Web.Security.AuthorizationStoreRoleProvider> オブジェクトを使用する場合、呼び出し元のコードにはアンマネージコードのアクセス許可が必要です。  
  
   
  
## Examples  
 次のコード例は、ロール管理に <xref:System.Web.Security.AuthorizationStoreRoleProvider> を使用するように設定された web.config ファイルを示しています。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> コンストラクターは、アプリケーションの構成で指定されているように、<xref:System.Web.Security.AuthorizationStoreRoleProvider> クラスのインスタンスを作成するために ASP.NET によって呼び出されます。 このコンストラクターは、コードから使用するためのものではありません。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">指定したロールに追加するユーザー名の文字列配列。</param>
        <param name="roleNames">指定されたユーザー名の割り当て先となるロール名の文字列配列。</param>
        <summary>指定された各ロールに、指定されたユーザー名を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> メソッドは、1人以上のユーザーを ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーデータストア内の1つ以上のロールに関連付けるために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。 このメソッドは、<xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>、<xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>、<xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>、および <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> の各メソッドによって呼び出されます。  
  
   
  
## Examples  
 次のコード例では、1人以上のユーザーをロールに追加するか、ロールからユーザーを削除します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定されたユーザーの 1 つが <see langword="null" /> です。  
  
または 
指定されたロール名の 1 つが <see langword="null" /> です。  
  
または 
 <paramref name="usernames" /> が <see langword="null" /> です。  
  
または 
 <paramref name="roleNames" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">指定されたユーザー名の 1 つが空の文字列か、またはコンマ (,) を含んでいます。  
  
または 
指定されたロール名の 1 つが空の文字列か、またはコンマ (,) を含んでいます。  
  
または 
 <paramref name="usernames" /> に重複した要素が含まれています。  
  
または 
 <paramref name="roleNames" /> に重複した要素が含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール情報を格納および取得する承認ストア アプリケーションの名前を取得または設定します。</summary>
        <value>ロール情報を格納および取得する承認ストア アプリケーションの名前。 既定値は、現在の <see cref="P:System.Web.HttpRequest.ApplicationPath" /> の <see cref="P:System.Web.HttpContext.Request" /> プロパティ値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> は、ユーザーとロールを異なる承認マネージャーアプリケーションに関連付けるために <xref:System.Web.Security.AuthorizationStoreRoleProvider> によって使用されます。これにより、複数の ASP.NET アプリケーションで同じ authorization manager ポリシーストアを使用して、重複するロール名間での競合を回避することなく、ロール情報を格納できます。 また、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティで同じ値を指定することで、複数の ASP.NET アプリケーションで同じポリシーストアを使用することもできます。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティはプログラムによって設定できます。また、`applicationName` 属性を使用して、アプリケーションの Web.config ファイルで宣言によって設定することもできます。  
  
 Web.config ファイルの `applicationName` 属性に値が指定されていない場合は、現在の <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> オブジェクトの <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> プロパティ値が使用されます。  
  
> [!NOTE]
>  承認マネージャーアプリケーション名には、<xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> プロパティに含まれる "/" 文字を含めることはできません。 その結果、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティの既定値を認証マネージャーアプリケーション名として使用することはできません。また、アプリケーションの Web.config ファイルでは、<xref:System.Web.Security.AuthorizationStoreRoleProvider> インスタンスを構成するために、常に `provider` 要素で `applicationName` 属性を指定する必要があります。  
  
> [!CAUTION]
>  <xref:System.Web.HttpApplication> オブジェクトによって処理されるすべての要求に対して1つの既定のロールプロバイダーインスタンスが使用されるため、複数の要求を同時に実行し、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティ値を設定することができます。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティは、複数の書き込みに対してスレッドセーフではありません。また、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティ値を変更すると、アプリケーションの複数のユーザーが存在する場合に予期しない動作が発生する可能性があります。 必要な場合を除き、ユーザーが <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティを設定できるコードを記述しないことをお勧めします。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティを設定する必要があるアプリケーションの例として、複数のアプリケーションのロールデータを管理する管理アプリケーションがあります。 このようなアプリケーションは、Web アプリケーションではなく、シングルユーザーアプリケーションである必要があります。  
  
   
  
## Examples  
 次の例は、ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの要素を示しています。 これにより、アプリケーションの <xref:System.Web.Security.AuthorizationStoreRoleProvider> インスタンスが指定され、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> プロパティが `MyApplication`に設定されます。  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> に 256 文字を超える文字列を設定しようとしました。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポリシー ストア データのキャッシュのリフレッシュ間隔 (分単位) を取得します。</summary>
        <value>ポリシー ストア データのキャッシュのリフレッシュ間隔 (分単位)。 既定値は 60 です。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">作成するロールの名前。</param>
        <summary>新しいロールをロール承認マネージャー ポリシー ストアに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーデータストアにロールを作成するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。  
  
 ロール名は大文字と小文字が区別されません。  
  
   
  
## Examples  
 次のコード例では、承認マネージャーポリシーストアに新しいロールを作成します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> が空の文字列です。  
  
または 
 <paramref name="roleName" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">削除するロールの名前。</param>
        <param name="throwOnPopulatedRole"><see langword="true" /> の場合は、<paramref name="roleName" /> に 1 つ以上のメンバーがあれば例外をスローします。</param>
        <summary>ロールを承認マネージャー ポリシー ストアから削除します。</summary>
        <returns>ロールが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された authorization manager ポリシーストアからロールを削除するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。 ロールが削除されると、そのロールに関連付けられているユーザーの一覧もポリシーストアから削除されます。 データベース内のユーザー情報は影響を受けません。  
  
 `throwOnPopulatedRole` が `true`場合は、例外がスローされ、`roleName` パラメーターで識別されるロールに1つ以上のメンバーが含まれている場合、ロールは削除されません。 `throwOnPopulatedRole` が `false`場合、ロールは空であるかどうかにかかわらず削除されます。  
  
   
  
## Examples  
 次の例では、承認マネージャーポリシーストアからロールを削除します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> が空の文字列です。  
  
または 
 <paramref name="roleName" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> に 1 つ以上のメンバーがあり、<paramref name="throwOnPopulatedRole" /> は <see langword="true" /> です。  
  
または 
構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">検索範囲とするロール。</param>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <summary>このメソッドは、承認ストア ロール プロバイダーではサポートされていません。</summary>
        <returns>ユーザー名が <paramref name="usernameToMatch" /> に一致し、指定されたロールのメンバーであるすべてのユーザーの名前を格納している文字列配列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">サポートされていないメソッドが呼び出されました。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションのすべてのロールのリストを取得します。</summary>
        <returns>特定のアプリケーションの承認マネージャー ポリシー ストアに保存されているすべてのロール名を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された authorization manager ポリシーストア内のすべてのロールの一覧を取得するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Roles.GetAllRoles%2A> メソッドを使用して、アプリケーションのロールの一覧を取得し、その結果を <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> コントロールにバインドします。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">ロールの一覧を取得するユーザー。</param>
        <summary>ユーザーに割り当てられたロールのリストを取得します。</summary>
        <returns>指定ユーザーに割り当てられたすべてのロールの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーポリシーストアから、指定されたユーザーのロールの一覧を取得するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Roles.GetRolesForUser%2A> メソッドを使用して、指定されたユーザーのロールの一覧を取得し、それらを <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> コントロールにバインドします。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">ユーザーの一覧を取得するロールの名前。</param>
        <summary>指定されたロールに属するユーザーのリストを取得します。</summary>
        <returns>指定されたロールのメンバーであるすべてのユーザーの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された authorization manager ポリシーストアで、指定されたロールに関連付けられているユーザーの一覧を取得するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> メソッドは、`roleName` パラメーターで指定された authorization manager ロールに直接含まれているユーザー名のみを返します。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> メソッドによって呼び出された、基になる authorization manager API はグループの展開をサポートしていないため、入れ子になった NT グループ、入れ子になった承認マネージャーグループ、および LDAP クエリグループに含まれるユーザーは返されません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Roles.GetUsersInRole%2A> メソッドを使用して、特定のロールのユーザーの一覧を取得し、その結果を <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> コントロールにバインドします。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> が空の文字列です。  
  
または 
 <paramref name="roleName" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">初期化する <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスの名前。</param>
        <param name="config">ロール プロバイダーの構成オプションの名前と値を含む <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>ASP.NET アプリケーションの構成ファイルに指定されているプロパティ値を使用して、承認マネージャー ロール プロバイダーを初期化します。 このメソッドはコードから直接使用するためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> メソッドは、ASP.NET アプリケーション構成ファイル (Web.config) で指定されたプロパティ値を使用して <xref:System.Web.Security.AuthorizationStoreRoleProvider> を初期化します。コードから直接使用するためのものではありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="connectionStringName" /> 属性が空であるか、[connectionStrings 要素 (ASP.NET 設定スキーマ)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bf7sd233(v=vs.100)) 構成セクションに存在しません。  
  
または 
構成済み <see langword="applicationName" /> が 256 文字を超えています。  
  
または 
この <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスの構成ファイルに、認識できない属性が含まれています。</exception>
        <exception cref="T:System.Web.HttpException">ASP.NET アプリケーションは <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> またはそれ以上の信頼レベルで実行されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検索するユーザー名。</param>
        <param name="roleName">検索範囲とするロール。</param>
        <summary>指定したユーザーが指定したロールに存在するかどうかを示す値を取得します。</summary>
        <returns>指定されたユーザー名が指定されたロールに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> メソッドは、<xref:System.Web.Security.Roles> クラスと <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> プロパティの <xref:System.Security.Principal.IPrincipal.IsInRole%2A> メソッドによって呼び出され、ユーザーが ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーデータストアのロールに関連付けられているかどうかを判断します。  
  
   
  
## Examples  
 次のコード例では、ユーザーにユーザーロールの表示を許可する前に、ログオンしているユーザーが管理者ロールにあるかどうかをプログラムによって確認します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> が <see langword="null" /> です。  
  
-or 
 <paramref name="roleName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> が空の文字列です。  
  
または 
 <paramref name="roleName" /> にコンマが含まれています。  
  
または 
 <paramref name="username" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">指定したロールから削除するユーザー名の文字列配列。</param>
        <param name="roleNames">指定したユーザー名を削除するロール名の文字列配列。</param>
        <summary>指定されたユーザー名を指定されたロールから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定されている authorization manager ポリシーストアの1つ以上のロールから1人以上のユーザーを削除するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。 このメソッドは、<xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>、<xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>、および <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> の各メソッドによって呼び出されます。  
  
   
  
## Examples  
 次のコード例では、1人以上のユーザーをロールに追加するか、ロールからユーザーを削除します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定されたユーザーの 1 つが <see langword="null" /> です。  
  
または 
指定されたロール名の 1 つが <see langword="null" /> です。  
  
または 
 <paramref name="userNames" /> が <see langword="null" /> です。  
  
または 
 <paramref name="roleNames" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">指定されたユーザー名の 1 つが空の文字列か、またはコンマを含んでいます。  
  
または 
指定されたロール名の 1 つが空の文字列か、またはコンマを含んでいます。  
  
または 
 <paramref name="userNames" /> に重複した要素が含まれています。  
  
または 
 <paramref name="roleNames" /> に重複した要素が含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">承認マネージャー ポリシー ストアで検索するロール名。</param>
        <summary>指定されたロール名が承認マネージャー ポリシー ストアに既に存在するかどうかを示す値を取得します。</summary>
        <returns>ロール名が承認マネージャー ポリシー ストアに存在している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> メソッドは、ASP.NET アプリケーションの構成ファイル (Web.config) で指定された承認マネージャーデータストアにロール名が存在するかどうかを判断するために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Roles.RoleExists%2A> メソッドを使用して、ロールを作成する前にロール名が既に存在するかどうかを確認します。 ロール管理を有効にする web.config ファイルの例については、「<xref:System.Web.Security.AuthorizationStoreRoleProvider>」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> が空の文字列です。  
  
または 
 <paramref name="roleName" /> にコンマが含まれています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">構成済みの <see langword="applicationName" /> が見つかりませんでした。  
  
または 
構成済みの <see langword="scopeName" /> が見つかりませんでした。  
  
または 
承認マネージャー ランタイムがサーバーにインストールされていません。</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> 属性が、存在しないファイルへの接続文字列を参照しています。</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> インスタンスが、ファイル ベースのポリシー ストアを使用するように構成されていますが、そのポリシー ファイルへの読み込みアクセスが現在の信頼レベルで許可されていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>承認ストアのスコープ名を取得または設定します。</summary>
        <value>承認ストアのスコープ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティは、構成セクションの `providers` セクションのプロバイダーインスタンスの `scopeName` 構成属性を使用して設定できます。  
  
> [!CAUTION]
>  <xref:System.Web.HttpApplication> オブジェクトによって処理されるすべての要求に対して1つの既定のロールプロバイダーインスタンスが使用されるため、複数の要求を同時に実行し、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティ値を設定することができます。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティは、複数の書き込みに対してスレッドセーフではありません。また、<xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティ値を変更すると、アプリケーションの複数のユーザーが存在する場合に予期しない動作が発生する可能性があります。 必要な場合を除き、ユーザーが <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティを設定できるコードを記述しないことをお勧めします。 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> プロパティを設定する必要があるアプリケーションの例として、複数のアプリケーションのロールデータを管理する管理アプリケーションがあります。 このようなアプリケーションは、Web アプリケーションではなく、シングルユーザーアプリケーションである必要があります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">ASP.NET ロール管理について</related>
      </Docs>
    </Member>
  </Members>
</Type>
