<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cbd2de5011f92b705732c2997689d8e7bd6ab78" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76959812" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム ロール プロバイダーを使用して管理サービスを提供するために、ASP.NET が実装するコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ロール管理は、ASP.NET アプリケーションに対して多数の異なるロールプロバイダーを簡単に使用できるように設計されています。 .NET Framework に含まれている指定されたロールプロバイダーを使用することも、独自のプロバイダーを実装することもできます。  
  
 カスタムロールプロバイダーを実装する場合は、<xref:System.Web.Security.RoleProvider> 抽象クラスを継承する必要があります。  
  
 カスタムロールプロバイダーを作成する主な理由は2つあります。  
  
-   ロール情報は、.NET Framework に含まれているロールプロバイダー (FoxPro データベース、Oracle データベース、その他のデータソースなど) でサポートされていないデータソースに格納する必要があります。  
  
-   .NET Framework と共に出荷されるプロバイダーによって使用されるデータベーススキーマとは異なるデータベーススキーマを使用して、ロール情報を管理する必要があります。 一般的な例として、会社または Web サイトの SQL Server データベースに既に存在する役割データが挙げられます。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RoleProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider> 抽象クラスを継承するクラスのコンストラクターを実装する必要はありません。 <xref:System.Web.Security.RoleProvider> 実装の初期化値は、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A> メソッドの実装に渡されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">指定したロールに追加するユーザー名の文字列配列。</param>
        <param name="roleNames">指定したユーザー名の追加先となるロール名の文字列配列。</param>
        <summary>指定したユーザー名を、構成された <see langword="applicationName" /> の指定したロールに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> は、指定されたユーザーをデータソースで指定されたロールに関連付けるために、<xref:System.Web.Security.Roles> クラスによって呼び出されます。 ロールは、構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A>に追加されます。  
  
 構成された `applicationName`に対して指定されたロール名が見つからない場合は、プロバイダーが <xref:System.Configuration.Provider.ProviderException>をスローすることをお勧めします。  
  
 指定したユーザー名のいずれかが、構成された `applicationName`の指定したロール名に関連付けられていない場合は、プロバイダーが <xref:System.Configuration.Provider.ProviderException>をスローすることをお勧めします。  
  
 指定されたユーザー名のいずれかが `null` か、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 指定されたロール名のいずれかが `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 データソースでトランザクションがサポートされている場合は、トランザクションに各追加操作を含めることをお勧めします。また、追加操作が失敗した場合は、トランザクションをロールバックして例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール情報を保管および取得するアプリケーションの名前を取得または設定します。</summary>
        <value>ロール情報を格納および取得するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> は、ユーザーとロールを異なるアプリケーションに関連付けるために、<xref:System.Web.Security.Roles> クラスによって使用されます。 これにより、複数のアプリケーションが同じデータベースを使用して、重複したユーザー名またはロール名の間で競合することなく、ユーザーとロールの情報を格納できます。 複数の ASP.NET アプリケーションで同じデータベースを使用するには、<xref:System.Web.Security.Roles.ApplicationName%2A> プロパティで同じ値を指定します。 <xref:System.Web.Security.Roles.ApplicationName%2A> プロパティはプログラムによって設定できます。また、`applicationName` 属性を使用して、Web アプリケーションの構成ファイルで宣言によって設定することもできます。  
  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> プロパティが指定されていない場合は、<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> プロパティ値を使用することをお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Security.RoleProvider.ApplicationName%2A> プロパティの実装例を示しています。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">作成するロールの名前。</param>
        <summary>構成された <see langword="applicationName" /> のデータ ソースに新しいロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> は <xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.CreateRole%2A> メソッドによって呼び出され、構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A>のデータソースに指定されたロールを追加します。  
  
 構成された `applicationName`に対して指定されたロール名が既に存在する場合、が `null`である場合、または空の文字列の場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 指定したロール名にコンマが含まれている場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 データソースがロール名の長さを制限している場合 (たとえば、データベース内のテーブルの固定長列を使用)、ロール名がデータソースで許容される最大長を超えている場合は、例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">削除するロールの名前。</param>
        <param name="throwOnPopulatedRole"><see langword="true" /> の場合は、<paramref name="roleName" /> に 1 つ以上のメンバーがあり、かつ、<paramref name="roleName" /> を削除しないと、例外がスローされます。</param>
        <summary>構成された <see langword="applicationName" /> のデータ ソースからロールを削除します。</summary>
        <returns>ロールが正常に削除された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> は、構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A>のデータソースから指定されたロールを削除するために、<xref:System.Web.Security.Roles.DeleteRole%2A> および <xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.DeleteRole%2A> メソッドによって呼び出されます。  
  
 データソースからロールを削除する場合は、構成された `applicationName`のユーザー名と削除されたロールの関連付けも必ず削除してください。  
  
 `throwOnPopulatedRole` が `true`で、`roleName` パラメーターで識別されるロールに1つ以上のメンバーが含まれている場合は、<xref:System.Configuration.Provider.ProviderException> をスローし、ロールを削除しません。 `throwOnPopulatedRole` が `false`場合は、ロールが空であるかどうかにかかわらず、ロールを削除します。  
  
 指定されたロール名が存在しない場合、が `null`である場合、または空の文字列の場合は、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">検索範囲とするロール。</param>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <summary>指定したユーザー名と一致するユーザー名が含まれる、特定のロールのユーザー名の配列を取得します。</summary>
        <returns>ユーザー名が <paramref name="usernameToMatch" /> に一致し、ユーザーが指定されたロールのメンバーであるすべてのユーザーの名前を格納する文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> メソッドは、<xref:System.Web.Security.Roles> クラスによって呼び出され、構成された `applicationName`のユーザー名に指定された `usernameToMatch` の一致が含まれているロールのユーザーの一覧を返します。 データソースに基づいたワイルドカードのサポートが含まれています。 ユーザーは、ユーザー名のアルファベット順に返されます。  
  
 データソースに `roleName` が存在しない場合は、<xref:System.Configuration.Provider.ProviderException> をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> の実装例を示しています。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>構成されている <see langword="applicationName" /> のすべてのロールのリストを取得します。</summary>
        <returns>構成されている <see langword="applicationName" /> のデータ ソースに格納されているすべてのロール名を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> は、データソースからロール名の一覧を取得するために、<xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.GetAllRoles%2A> メソッドによって呼び出されます。 指定された <xref:System.Web.Security.RoleProvider.ApplicationName%2A> のロールのみが取得されます。  
  
 構成された `applicationName`にロールが存在しない場合は、プロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">ロールの一覧を取得するユーザー。</param>
        <summary>構成済みの <see langword="applicationName" /> で指定されたユーザーに割り当てられたロールの一覧を取得します。</summary>
        <returns>構成済みの <see langword="applicationName" /> で指定されたユーザーに割り当てられているすべてのロールの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> は、指定したユーザーが関連付けられているロール名をデータソースから取得するために、<xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.GetRolesForUser%2A> メソッドによって呼び出されます。 構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A> のロールのみが取得されます。  
  
 構成された `applicationName`に対して指定されたユーザーのロールが存在しない場合は、プロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
 指定されたユーザー名が `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">ユーザーの一覧を取得するロールの名前。</param>
        <summary>構成済み <see langword="applicationName" /> の指定されたロールに属するユーザーのリストを取得します。</summary>
        <returns>構成済み <see langword="applicationName" /> の指定されたロールのメンバーであるすべてのユーザーの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> は、データソースからロールに関連付けられているユーザー名を取得するために、<xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.GetUsersInRole%2A> メソッドによって呼び出されます。 構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A> のロールのみが取得されます。  
  
 構成された `applicationName` に対して指定されたロール名が存在しない場合、または `null` または空の文字列の場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 構成された `applicationName`に対して指定したロールに関連付けられているユーザーがいない場合は、プロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検索するユーザー名。</param>
        <param name="roleName">検索範囲とするロール。</param>
        <summary>指定したユーザーが、構成された <see langword="applicationName" /> の指定したロールに存在するかどうかを示す値を取得します。</summary>
        <returns>指定したユーザーが、構成された <see langword="true" /> の指定したロールに存在する場合は <see langword="applicationName" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> メソッドは <xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.IsUserInRole%2A> メソッドによって呼び出され、現在ログオンしているユーザーが、構成された <xref:System.Web.Security.Roles.ApplicationName%2A>のデータソースからのロールに関連付けられているかどうかを判断します。  
  
 指定されたユーザー名が `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 指定されたロール名が `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">指定したロールから削除するユーザー名の文字列配列。</param>
        <param name="roleNames">指定したユーザー名を削除するロール名の文字列配列。</param>
        <summary>指定したユーザー名を、構成された <see langword="applicationName" /> の指定したロールから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> は、<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> クラスの <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>、および <xref:System.Web.Security.Roles> メソッドによって呼び出され、指定されたユーザーをデータソースの指定されたロールから削除します。 構成された <xref:System.Web.Security.RoleProvider.ApplicationName%2A> のロールのみが変更されます。  
  
 構成された `applicationName`に対して指定されたロール名が見つからない場合は、プロバイダーが <xref:System.Configuration.Provider.ProviderException>をスローすることをお勧めします。  
  
 指定したユーザー名のいずれかが、構成された `applicationName`の指定したロール名に関連付けられていない場合は、プロバイダーが <xref:System.Configuration.Provider.ProviderException>をスローすることをお勧めします。  
  
 指定されたユーザー名のいずれかが `null` か、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 指定されたロール名のいずれかが `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
 データソースでトランザクションがサポートされている場合は、各削除操作をトランザクションに含め、トランザクションをロールバックして、削除操作が失敗した場合に例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">データ ソースで検索するロールの名前。</param>
        <summary>構成された <see langword="applicationName" /> の指定されたロール名がロール データ ソースに既に存在するかどうかを示す値を取得します。</summary>
        <returns>構成された <see langword="true" /> のロール名がデータ ソースに既に存在する場合は <see langword="applicationName" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> は <xref:System.Web.Security.Roles> クラスの <xref:System.Web.Security.Roles.RoleExists%2A> メソッドによって呼び出され、構成された <xref:System.Web.Security.Roles.ApplicationName%2A>のロール名がデータソースに存在するかどうかを判断します。  
  
 指定されたロール名が `null` であるか、空の文字列である場合は、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> メソッドの実装例を次のコード例に示します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロールプロバイダーの実装</related>
      </Docs>
    </Member>
  </Members>
</Type>
