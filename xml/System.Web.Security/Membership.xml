<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cc941ac8be21569dedf143fd873d3d331f58782" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83945491" /></Metadata><TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー資格情報を検証し、ユーザー設定を管理します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> クラスは、ユーザーの資格情報を検証したり、パスワードや電子メールアドレスなどのユーザー設定を管理したりするために、ASP.NET アプリケーションで使用されます。 <xref:System.Web.Security.Membership> クラスは独自に使用することも、<xref:System.Web.Security.FormsAuthentication> と組み合わせて使用して、Web アプリケーションまたはサイトのユーザーを認証するための完全なシステムを作成することもできます。 <xref:System.Web.UI.WebControls.Login> コントロールは、ユーザーを検証するための便利なメカニズムを提供するために、<xref:System.Web.Security.Membership> クラスをカプセル化します。  
  
> [!NOTE]
>  ASP.NET のメンバーシップ機能に慣れていない場合は、「[メンバーシップの概要」を](https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100))参照してください。 メンバーシップに関連する他のトピックの一覧については、「[メンバーシップを使用](https://docs.microsoft.com/previous-versions/aspnet/tw292whz(v=vs.100))したユーザーの管理」を参照してください。  
  
 <xref:System.Web.Security.Membership> クラスは、次の機能を提供します。  
  
-   新しいユーザーを作成しています。  
  
-   Microsoft SQL Server または代替データストアへのメンバーシップ情報 (ユーザー名、パスワード、電子メールアドレス、およびサポートデータ) の格納。  
  
-   サイトにアクセスするユーザーを認証します。 プログラムを使用してユーザーを認証することも、<xref:System.Web.UI.WebControls.Login> コントロールを使用して、コードをほとんどまたはまったく必要としない完全な認証システムを作成することもできます。  
  
-   パスワードの管理。これには、パスワードの作成、変更、取得、リセットなどが含まれます。 必要に応じて、パスワードの質問と回答を要求するように ASP.NET メンバーシップを構成して、パスワードを忘れたユーザーに対するパスワードのリセットまたは取得要求を認証することができます。  
  
 ASP.NET のメンバーシップは ASP.NET の認証用の自己完結型機能ですが、ASP.NET の役割管理と統合して、サイトに承認サービスを提供することができます。 また、メンバーシップを ASP.NET ユーザー <xref:System.Web.Profile> と統合して、個々のユーザーに合わせてカスタマイズできるアプリケーション固有のカスタマイズを行うこともできます。 詳細については、「[役割管理](https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100))と[ASP.NET プロファイルプロパティ](https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100))について」を参照してください。  
  
 <xref:System.Web.Security.Membership> クラスは、メンバーシッププロバイダーに依存してデータソースと通信します。 .NET Framework には、ユーザー情報を Microsoft SQL Server データベースに格納する <xref:System.Web.Security.SqlMembershipProvider>と、Active Directory または Active Directory Application Mode (ADAM) サーバーにユーザー情報を格納できる <xref:System.Web.Security.ActiveDirectoryMembershipProvider>が含まれています。 また、カスタムメンバーシッププロバイダーを実装して、<xref:System.Web.Security.Membership> クラスで使用できる代替データソースと通信することもできます。 カスタムメンバーシッププロバイダーは、<xref:System.Web.Security.MembershipProvider> 抽象クラスを継承します。 詳細については、「[メンバーシッププロバイダーの実装](https://docs.microsoft.com/previous-versions/aspnet/f1kyba5e(v=vs.100))」を参照してください。  
  
 既定では、すべての ASP.NET アプリケーションに対して ASP.NET メンバーシップが有効になっています。 既定のメンバーシッププロバイダーは <xref:System.Web.Security.SqlMembershipProvider> であり、`AspNetSqlProvider`という名前のマシン構成で指定されます。 <xref:System.Web.Security.SqlMembershipProvider> の既定のインスタンスは Microsoft SQL Server のローカルインスタンスに接続するように構成されています。  
  
 既定の設定を変更して、`AspNetSqlProvider` インスタンス以外の <xref:System.Web.Security.SqlMembershipProvider> を既定のプロバイダーとして指定することも、web.config ファイルを使用して ASP.NET アプリケーションの既定のプロバイダーとしてカスタムプロバイダーのインスタンスを指定することもできます。 Web アプリケーションの ASP.NET メンバーシップ構成を指定するには、web.config ファイルの [[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))の構成] セクションを使用します。 [メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))セクションの[providers](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100))サブセクションを使用すると、既定のプロバイダーの1つ以外のメンバーシッププロバイダーを指定できます。 たとえば、次の[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))セクションでは、現在のアプリケーション構成から既定のメンバーシッププロバイダーを削除し、`AspSqlServer`という名前の SQL Server インスタンスに接続する `SqlProvider` の名前を持つ新しいプロバイダーを追加します。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 次のコード例は、フォーム認証と ASP.NET メンバーシップを使用するように構成された ASP.NET アプリケーションのログインページを示しています。 指定されたユーザーの資格情報が無効な場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーは <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> メソッドを使用して最初に要求された URL にリダイレクトされます。  
  
> [!NOTE]
>  ASP.NET ログインコントロール (<xref:System.Web.UI.WebControls.Login>、<xref:System.Web.UI.WebControls.LoginView>、<xref:System.Web.UI.WebControls.LoginStatus>、<xref:System.Web.UI.WebControls.LoginName>、および <xref:System.Web.UI.WebControls.PasswordRecovery>) は、ユーザーに資格情報の入力を要求し、メンバーシップシステムで資格情報を検証するために必要なすべてのロジックをカプセル化し、<xref:System.Web.Security.Membership> クラスを使用してプログラムによるチェックの代わりに使用することができます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">メンバーシップの概要</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの名前を取得または設定します。</summary>
        <value>アプリケーションの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A> は、アプリケーションに固有のユーザーを識別するために使用されます。 つまり、異なる <xref:System.Web.Security.Membership.ApplicationName%2A>を指定する複数の ASP.NET アプリケーションに対して、同じユーザー名がデータベースに存在する可能性があります。 これにより、複数のアプリケーションで同じデータベースを使用して、ユーザー名の競合が重複することなく、ユーザー情報を格納できます。 また、同じ <xref:System.Web.Security.Membership.ApplicationName%2A>を指定することで、複数の ASP.NET アプリケーションで同じユーザーデータベースを使用することもできます。 <xref:System.Web.Security.Membership.ApplicationName%2A> は、プログラムによって、または Web アプリケーションの構成で宣言によって設定できます。  
  
> [!CAUTION]
>  <xref:System.Web.HttpApplication> オブジェクトによって処理されるすべての要求に対して1つの既定のメンバーシッププロバイダーインスタンスが使用されるため、複数の要求を同時に実行し、<xref:System.Web.Security.Membership.ApplicationName%2A> プロパティ値を設定することができます。 <xref:System.Web.Security.Membership.ApplicationName%2A> プロパティは、複数の書き込みに対してスレッドセーフではありません。また、<xref:System.Web.Security.Membership.ApplicationName%2A> プロパティ値を変更すると、アプリケーションの複数のユーザーに対して予期しない動作が発生する可能性があります。 必要な場合を除き、ユーザーが <xref:System.Web.Security.Membership.ApplicationName%2A> プロパティを設定できるコードを記述しないことをお勧めします。 <xref:System.Web.Security.Membership.ApplicationName%2A> プロパティを設定する必要があるアプリケーションの例として、複数のアプリケーションのメンバーシップデータを管理する管理アプリケーションがあります。 このようなアプリケーションは、Web アプリケーションではなく、シングルユーザーアプリケーションである必要があります。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> インスタンスを使用し、<xref:System.Web.Security.Membership.ApplicationName%2A> を `MyApplication`に設定することを指定します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいユーザーをデータ ストアに追加します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <summary>新しいユーザーをデータ ストアに追加します。</summary>
        <returns>新しく作成されたユーザーの <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 新しいユーザーをデータストアに追加し、新しく作成されたユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを返します。 ユーザーの作成に失敗すると、<xref:System.Web.Security.MembershipCreateUserException> がスローされます。 <xref:System.Web.Security.MembershipCreateStatus> 値は、ユーザーの作成に失敗した理由を示す <xref:System.Web.Security.MembershipCreateUserException> の <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> プロパティから取得できます。  
  
 メンバーシップユーザーが作成され、そのユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトへの参照があると、<xref:System.Web.Security.MembershipUser> パブリックメソッドを使用してそのユーザーの設定を変更できます。たとえば、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> が `true`されているアプリケーションの <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>、<xref:System.Web.Security.MembershipUser> オブジェクトのプロパティ値を設定して <xref:System.Web.Security.Membership.UpdateUser%2A> メソッドに渡すことができます。  
  
 アプリケーションのデータソースにユーザーが既に存在する場合は、<xref:System.Web.Security.Membership.GetUser%2A> メソッドを使用して、既存のユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを取得できます。  
  
 <xref:System.Web.Security.SqlMembershipProvider> には、各ユーザーに一意の電子メールアドレスを要求するオプションが用意されています。 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> プロパティが `true`場合は、作成するユーザーの電子メールアドレスを指定できる <xref:System.Web.Security.Membership.CreateUser%2A> オーバーロードのいずれかを使用する必要があります。 それ以外の場合は、<xref:System.Web.Security.MembershipCreateUserException> がスローされます。  
  
 先頭と末尾のスペースは、すべてのパラメーター値から削除されます。  
  
   
  
## Examples  
 次のコード例では、フォーム認証と ASP.NET メンバーシップを使用するように構成された ASP.NET アプリケーションの新しいユーザーを作成します。 ユーザーが正常に作成されていない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーはアプリケーションのログインページにリダイレクトされます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">ユーザーが作成されませんでした。 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> プロパティの <see cref="T:System.Web.Security.MembershipCreateStatus" /> 値を確認してください。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <summary>電子メール アドレスを指定して新しいユーザーをデータ ストアに追加します。</summary>
        <returns>新しく作成されたユーザーの <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 新しいユーザーをデータストアに追加し、新しく作成されたユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを返します。 ユーザーの作成に失敗すると、<xref:System.Web.Security.MembershipCreateUserException> がスローされます。 <xref:System.Web.Security.MembershipCreateStatus> 値は、ユーザーの作成に失敗した理由を示す <xref:System.Web.Security.MembershipCreateUserException> の <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> プロパティから取得できます。  
  
 メンバーシップユーザーが作成され、そのユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトへの参照があると、<xref:System.Web.Security.MembershipUser> パブリックメソッドを使用してそのユーザーの設定を変更できます。たとえば、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> が `true`されているアプリケーションの <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>、<xref:System.Web.Security.MembershipUser> オブジェクトのプロパティ値を設定して <xref:System.Web.Security.Membership.UpdateUser%2A> メソッドに渡すことができます。  
  
 アプリケーションのデータソースにユーザーが既に存在する場合は、<xref:System.Web.Security.Membership.GetUser%2A> メソッドを使用して、既存のユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを取得できます。  
  
 先頭と末尾のスペースは、すべてのパラメーター値から削除されます。  
  
   
  
## Examples  
 次のコード例では、フォーム認証と ASP.NET メンバーシップを使用するように構成された ASP.NET アプリケーションの新しいユーザーを作成します。 ユーザーが正常に作成されていない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーはアプリケーションのログインページにリダイレクトされます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">ユーザーが作成されませんでした。 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> プロパティの <see cref="T:System.Web.Security.MembershipCreateStatus" /> 値を確認してください。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <param name="passwordQuestion">メンバーシップ ユーザーのパスワードの質問の値。</param>
        <param name="passwordAnswer">メンバーシップ ユーザーのパスワードの質問に対する答えの値。</param>
        <param name="isApproved">新しいユーザーのログオンを承認するかどうかを示すブール値。</param>
        <param name="status">ユーザーの作成に成功したかどうか、または失敗の理由を示す <see cref="T:System.Web.Security.MembershipCreateStatus" />。</param>
        <summary>プロパティ値を指定して新しいユーザーをデータ ストアに追加し、ユーザーの作成に成功したかどうか、または失敗の理由を示すステータス パラメーターを返します。</summary>
        <returns>新しく作成されたユーザーの <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。 ユーザーが作成されなかった場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 新しいユーザーをデータストアに追加し、新しく作成されたユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを返します。 ユーザーの作成に失敗した場合は、`status` 出力パラメーターから <xref:System.Web.Security.MembershipCreateStatus> 値を取得して、ユーザーの作成が失敗した理由を示すことができます。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> メソッドは、`password` が空の文字列または `null`であるか、`username` が空の文字列または `null` であるか、またはコンマ (,) を含んでいるか、`passwordQuestion` ではなく空の文字列であるか、`null` に空の文字列が含まれている場合に `null` を返します。`passwordAnswer``null`  
  
 メンバーシップユーザーが作成され、そのユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトへの参照がある場合、<xref:System.Web.Security.MembershipUser> パブリックメソッドを使用してそのユーザーの設定を変更し、<xref:System.Web.Security.MembershipUser> オブジェクトのプロパティ値を設定して、<xref:System.Web.Security.MembershipUser> オブジェクトを <xref:System.Web.Security.Membership.UpdateUser%2A> メソッドに渡すことができます。  
  
 アプリケーションのデータソースにユーザーが既に存在する場合は、<xref:System.Web.Security.Membership.GetUser%2A> メソッドを使用して、既存のユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを取得できます。  
  
 先頭と末尾のスペースは、すべての文字列パラメーター値から削除されます。  
  
   
  
## Examples  
 次のコード例では、フォーム認証と ASP.NET メンバーシップを使用するように構成された ASP.NET アプリケーションの新しいユーザーを作成します。 ユーザーが正常に作成されていない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーはアプリケーションのログインページにリダイレクトされます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <param name="passwordQuestion">メンバーシップ ユーザーのパスワードの質問の値。</param>
        <param name="passwordAnswer">メンバーシップ ユーザーのパスワードの質問に対する答えの値。</param>
        <param name="isApproved">新しいユーザーのログオンを承認するかどうかを示すブール値。</param>
        <param name="providerUserKey">メンバーシップ データ ストアに格納する必要があるユーザーのユーザー ID。</param>
        <param name="status">ユーザーの作成に成功したかどうか、または失敗の理由を示す <see cref="T:System.Web.Security.MembershipCreateStatus" />。</param>
        <summary>指定したプロパティ値と一意の ID で新しいユーザーをデータ ストアに追加し、ユーザーの作成に成功したかどうか、または失敗の理由を示すステータス パラメーターを返します。</summary>
        <returns>新しく作成されたユーザーの <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。 ユーザーが作成されなかった場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 新しいユーザーをデータストアに追加し、新しく作成されたユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを返します。 ユーザーの作成に失敗した場合は、`status` 出力パラメーターから <xref:System.Web.Security.MembershipCreateStatus> 値を取得して、ユーザーの作成が失敗した理由を示すことができます。 `providerUserKey` パラメーターを使用して、データベースの主キーの値など、ユーザーの一意の識別子を指定できます。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> メソッドは、`password` が空の文字列または `null`であるか、`username` が空の文字列または `null` であるか、またはコンマ (,) を含んでいるか、`passwordQuestion` ではなく空の文字列が含まれているか、`null` に空の文字列が含まれている場合に `null` を返します。`passwordAnswer``null`  
  
 メンバーシップユーザーが作成され、そのユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトへの参照がある場合、<xref:System.Web.Security.MembershipUser> パブリックメソッドを使用してそのユーザーの設定を変更し、<xref:System.Web.Security.MembershipUser> オブジェクトのプロパティ値を設定して、<xref:System.Web.Security.MembershipUser> オブジェクトを <xref:System.Web.Security.Membership.UpdateUser%2A> メソッドに渡すことができます。  
  
 アプリケーションのデータソースにユーザーが既に存在する場合は、<xref:System.Web.Security.Membership.GetUser%2A> メソッドを使用して、既存のユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを取得できます。  
  
 先頭と末尾のスペースは、すべての文字列パラメーター値から削除されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データベースからユーザーを削除します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">削除するユーザーの名前。</param>
        <summary>データベースからユーザーと関連するユーザー データを削除します。</summary>
        <returns>ユーザーが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles>、<xref:System.Web.HttpContext.Profile%2A>、または <xref:System.Web.UI.WebControls.WebParts.WebPart> の個人用設定のためにデータベースに格納されているユーザーデータも、データストレージの <xref:System.Web.Security.SqlRoleProvider>、<xref:System.Web.Profile.SqlProfileProvider>、および <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> オブジェクトを使用しているときに削除されます。  
  
   
  
## Examples  
 次のコード例では、現在ログオンしているユーザーとすべての関連データを削除します。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> が空の文字列であるか、またはコンマ (,) を含んでいます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> は <see langword="null." /> です</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">削除するユーザーの名前。</param>
        <param name="deleteAllRelatedData">データベースからユーザーに関連するデータを削除するには <see langword="true" />。データベース内のユーザーに関連するデータをそのままにするには <see langword="false" />。</param>
        <summary>データベースからユーザーを削除します。</summary>
        <returns>ユーザーが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベースから削除されたユーザーは、構成された `applicationName`からのみ削除されます。  
  
 `deleteAllRelatedData` が `true`場合、データストレージの <xref:System.Web.UI.WebControls.WebParts.WebPart>、<xref:System.Web.Security.SqlRoleProvider>、<xref:System.Web.Profile.SqlProfileProvider>の各オブジェクトを使用しているときに、<xref:System.Web.Security.Roles>、<xref:System.Web.HttpContext.Profile%2A>、または <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> のパーソナル化のためにデータベースに格納されているユーザーデータも削除されます。  
  
   
  
## Examples  
 次のコード例では、現在ログオンしているユーザーとすべての関連データを削除します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> が空の文字列であるか、またはコンマ (,) を含んでいます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のメンバーシップ プロバイダーによってユーザーにパスワードのリセットが許可されているかどうかを示す値を取得します。</summary>
        <value>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合は <see langword="true" />、そうでない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスワードリセットは、ユーザーがパスワードを忘れた場合や現在のパスワードが有効ではなくなった場合に、ユーザー名の現在のパスワードをランダムに生成された新しいパスワードに置き換えることができる ASP.NET のメンバーシップです。 これは、ユーザーがハッシュされたパスワード値を取得できないため、パスワード形式が <xref:System.Web.Security.MembershipPasswordFormat.Hashed>に設定されている場合に特に便利です。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> のインスタンスを使用し、パスワードのリセットを有効にすることを指定します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 次のコード例では、最初に <xref:System.Web.Security.Membership.EnablePasswordReset%2A> が `true`であることを確認し、次にユーザーのパスワードをリセットして、自動的に生成された新しいパスワードを返します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のメンバーシップ プロバイダーによってユーザーにパスワードの取得が許可されているかどうかを示す値を取得します。</summary>
        <value>メンバーシップ プロバイダーがパスワードの取得をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> が `false`場合、基になるメンバーシッププロバイダーによって <xref:System.Web.HttpException>がスローされる可能性があります。  
  
 .NET Framework に含まれているプロバイダーは、パスワードのセキュリティを強化するために、複数のパスワード形式をサポートしています。 パスワードの形式が <xref:System.Web.Security.MembershipPasswordFormat.Hashed>に設定されている場合、ユーザーはデータベースから既存のパスワードを取得できません。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> パスワード形式では、パスワード値の一方向のエンコードが提供されます。 パスワードは "ハッシュ化" され、認証のためにデータベースに格納されている値と比較されます。 "ハッシュされた" 値は、元のパスワード値を取得するためにエンコード解除できません。 詳細については、「<xref:System.Web.Security.MembershipPasswordFormat>」を参照してください。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> のインスタンスを使用し、パスワードの取得を有効にすることを指定します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 次のコード例では、最初に <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> が `true`であることを確認し、次に指定されたユーザー名のパスワードを取得して、指定されたユーザーの電子メールアドレスに送信します。  
  
> [!IMPORTANT]
>  高レベルのセキュリティを必要とするサイトでは、電子メールを使用してクリアテキストでパスワードを返すことはお勧めしません。 高セキュリティサイトの場合は、SSL などの暗号化を使用してパスワードを返すことをお勧めします。  
>   
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したメール アドレスと一致するメール アドレスを持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索対象の電子メール アドレス。</param>
        <summary>指定したメール アドレスと一致するメール アドレスを持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns><paramref name="emailToMatch" /> パラメーターと一致するすべてのユーザーが含まれる <see cref="T:System.Web.Security.MembershipUserCollection" />。  
  
<paramref name="emailToMatch" /> パラメーター値の先頭と末尾の空白はトリムされます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> は、構成された `applicationName`について、指定した `emailToMatch` に電子メールアドレスが一致するメンバーシップユーザーの一覧を返します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> は、`emailToMatch` パラメーターに対して LIKE 句を使用して検索を実行します。 LIKE 句の SQL Server でサポートされているワイルドカードは、`emailToMatch` パラメーター値で使用できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Membership.FindUsersByEmail%2A> メソッドを使用して、ユーザー入力に基づいてメンバーシップデータベースからメンバーシップユーザー情報を取得し、データのページに結果を表示します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索対象の電子メール アドレス。</param>
        <param name="pageIndex">返される結果ページのインデックス。 <paramref name="pageIndex" /> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>電子メール アドレスが指定内容と一致するメンバーシップ ユーザーのコレクションをページで取得します。</summary>
        <returns><paramref name="pageSize" /> で指定されたページから始まる <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトのページを格納している <see cref="T:System.Web.Security.MembershipUser" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> は、構成された `applicationName`について、指定した `emailToMatch` に電子メールアドレスが一致するメンバーシップユーザーの一覧を返します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> は、`emailToMatch` パラメーターに対して LIKE 句を使用して検索を実行します。 LIKE 句の SQL Server でサポートされているワイルドカードは、`emailToMatch` パラメーター値で使用できます。  
  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> によって返される結果は、`pageIndex` パラメーターと `pageSize` パラメーターによって制限されます。 `pageSize` パラメーターは、<xref:System.Web.Security.MembershipUserCollection>で返す <xref:System.Web.Security.MembershipUser> オブジェクトの最大数を指定します。 `pageIndex` パラメーターは、返される結果のページを識別します。0は最初のページを示します。 `totalRecords` パラメーターは、`emailToMatch` 値と一致したメンバーシップユーザーの合計数に設定された `out` パラメーターです。 たとえば、13人のユーザーが `emailToMatch` の一部または電子メールアドレス全体に一致し、`pageIndex` 値が1で `pageSize` が5の場合、返された <xref:System.Web.Security.MembershipUserCollection> には 6 ~ 10 番目のユーザーが返されます。 `totalRecords` は13に設定されます。  
  
 `emailToMatch` パラメーター値の先頭と末尾の空白はトリムされます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Membership.FindUsersByEmail%2A> メソッドを使用して、ユーザー入力に基づいてメンバーシップデータベースからメンバーシップユーザー情報を取得し、データのページに結果を表示します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> が 0 未満です。  
  
または 
 <paramref name="pageSize" /> が 1 未満です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したユーザー名と一致するユーザー名を持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <summary>指定したユーザー名と一致するユーザー名を持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns><paramref name="usernameToMatch" /> パラメーターと一致するすべてのユーザーが含まれる <see cref="T:System.Web.Security.MembershipUserCollection" />。  
  
<paramref name="usernameToMatch" /> パラメーター値の先頭と末尾の空白はトリムされます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> は、構成された `applicationName`について、指定した `usernameToMatch` にユーザー名が一致するメンバーシップユーザーの一覧を返します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> は、`usernameToMatch` パラメーターに対して LIKE 句を使用して検索を実行します。 LIKE 句の SQL Server でサポートされているワイルドカードは、`usernameToMatch` パラメーター値で使用できます。  
  
 先頭と末尾のスペースは、すべてのパラメーター値から削除されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Membership.FindUsersByName%2A> メソッドを使用して、ユーザー入力に基づいてメンバーシップデータベースからメンバーシップユーザー情報を取得し、データのページに結果を表示します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> が空の文字列です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <param name="pageIndex">返される結果ページのインデックス。 <paramref name="pageIndex" /> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>ユーザー名が指定内容と一致するメンバーシップ ユーザーのコレクションをページで取得します。</summary>
        <returns><paramref name="pageSize" /> で指定されたページから始まる <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトのページを格納している <see cref="T:System.Web.Security.MembershipUser" />。  
  
<paramref name="usernameToMatch" /> パラメーター値の先頭と末尾の空白はトリムされます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> は、構成された `applicationName`について、指定した `usernameToMatch` にユーザー名が一致するメンバーシップユーザーの一覧を返します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> は、`usernameToMatch` パラメーターに対して LIKE 句を使用して検索を実行します。 LIKE 句の SQL Server でサポートされているワイルドカードは、`usernameToMatch` パラメーター値で使用できます。  
  
 <xref:System.Web.Security.Membership.FindUsersByName%2A> によって返される結果は、`pageIndex` パラメーターと `pageSize` パラメーターによって制限されます。 `pageSize` パラメーターは、<xref:System.Web.Security.MembershipUserCollection>で返す <xref:System.Web.Security.MembershipUser> オブジェクトの最大数を指定します。 `pageIndex` パラメーターは、返される結果のページを識別します。0は最初のページを示します。 `totalRecords` パラメーターは、`usernameToMatch` 値と一致したメンバーシップユーザーの合計数に設定された `out` パラメーターです。 たとえば、13人のユーザーが、ユーザー名の一部または全体の `usernameToMatch` と一致し、`pageIndex` 値が1で `pageSize` が5の場合、返される <xref:System.Web.Security.MembershipUserCollection> には 6 ~ 10 のユーザーが返されます。 `totalRecords` は13に設定されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Membership.FindUsersByName%2A> メソッドを使用して、ユーザー入力に基づいてメンバーシップデータベースからメンバーシップユーザー情報を取得し、データのページに結果を表示します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> が空の文字列です。  
  
または 
 <paramref name="pageIndex" /> が 0 未満です。  
  
または 
 <paramref name="pageSize" /> が 1 未満です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">生成されたパスワードの文字数。 長さは 1 ～ 128 文字の範囲内である必要があります。</param>
        <param name="numberOfNonAlphanumericCharacters">生成されたパスワードに含まれている英数字以外の文字 (@、#、!、%、&amp; など) の最小数。</param>
        <summary>指定された長さのランダムなパスワードを生成します。</summary>
        <returns>指定された長さのランダムなパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A> メソッドはランダムなパスワードを生成するために使用され、ユーザーのパスワードを新しい一時的なパスワードにリセットするために、メンバーシッププロバイダーによって実装される <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドによって最も一般的に使用されます。  
  
 生成されるパスワードには、英数字と次の句読点が含まれています: `!@#$%^&*()_-+=[{]};:<>|./?`。 生成されたパスワードには、表示されない、または印刷できない制御文字は含まれません。  
  
> [!NOTE]
>  <xref:System.Web.Security.Membership.GeneratePassword%2A> メソッドによって作成されたランダムパスワードは、<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティに正規表現を渡すことは保証されていません。 ただし、ランダムなパスワードは、<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> プロパティと `numberOfNonAlphanumericCharacters` パラメーターによって設定された条件を満たします。  
  
   
  
## Examples  
 次のコード例では、新しいメンバーシップユーザーを作成し、<xref:System.Web.Security.Membership.GeneratePassword%2A> メソッドを使用して、新しいユーザーのパスワードをランダムな値に初期化します。これはユーザーに表示されます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="length" /> が 1 未満か、128 よりも大きい値です。 
 <paramref name="numberOfNonAlphanumericCharacters" /> が 0 未満であるか、または <paramref name="length" /> を超えています。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データベース内のユーザーのコレクションを取得します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データベース内のすべてのユーザーのコレクションを取得します。</summary>
        <returns>データベース内のすべてのユーザーを表す <see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトの <see cref="T:System.Web.Security.MembershipUser" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> は、アプリケーションのすべてのメンバーシップユーザーの情報を <xref:System.Web.Security.MembershipUser> オブジェクトのコレクションとして返します。 非常に大きなユーザーデータベースで <xref:System.Web.Security.Membership.GetAllUsers%2A> 方法を使用する場合は、ASP.NET ページでの <xref:System.Web.Security.MembershipUserCollection> によってアプリケーションのパフォーマンスが低下する可能性があるため、注意してください。  
  
   
  
## Examples  
 次のコード例では、現在オンラインになっているユーザーの数を持つユーザーの一覧を返します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">返される結果ページのインデックス。 最初のページは 0 になります。</param>
        <param name="pageSize">返される結果ページのサイズ。 <paramref name="pageIndex" /> は 0 から始まります。</param>
        <param name="totalRecords">一致したユーザーの総数。</param>
        <summary>データベース内のすべてのユーザーのコレクションをページで取得します。</summary>
        <returns>構成されている <see cref="T:System.Web.Security.MembershipUserCollection" /> に対応した、データベース内のすべてのユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクトの <see langword="applicationName" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> によって返される結果は、`pageIndex` パラメーターと `pageSize` パラメーターによって制限されます。 `pageSize` パラメーターは、<xref:System.Web.Security.MembershipUserCollection>で返す <xref:System.Web.Security.MembershipUser> オブジェクトの最大数を指定します。 `pageIndex` パラメーターは、返される結果のページを識別します。0は最初のページを示します。 `totalRecords` パラメーターは、構成された `applicationName`のメンバーシップユーザーの合計数に設定された `out` パラメーターです。 たとえば、構成された `applicationName`に13人のユーザーがいて、`pageIndex` の値が1で `pageSize` が5の場合、返される <xref:System.Web.Security.MembershipUserCollection> には 6 ~ 10 番目のユーザーが返されます。 `totalRecords` は13に設定されます。  
  
   
  
## Examples  
 次のコード例では、データのページにあるユーザーの一覧を、現在オンラインになっているユーザーの数と共に返します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> が 0 未満です。  
  
または 
 <paramref name="pageSize" /> が 1 未満です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションに現在アクセスしているユーザーの数を取得します。</summary>
        <returns>アプリケーションに現在アクセスしているユーザーの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> は、現在の <xref:System.Web.Security.Membership.ApplicationName%2A> の、最後のアクティビティの日付が <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>の現在の時刻よりも大きいユーザー数を返します。 最後のアクティビティの日付/時刻スタンプは、<xref:System.Web.Security.Membership.ValidateUser%2A> または <xref:System.Web.Security.Membership.UpdateUser%2A> 方法によってユーザーの資格情報が検証されたとき、またはパラメーターを取らない <xref:System.Web.Security.Membership.GetUser%2A> オーバーロードを呼び出したとき、または `userIsOnline` パラメーターを使用して日付/時刻スタンプを更新するように指定した場合に、現在の日付と時刻に更新されます。  
  
   
  
## Examples  
 次のコード例では、現在オンラインになっているユーザーの数を持つユーザーの一覧を返します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ ソースからメンバーシップ ユーザーの情報を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースから情報を取得し、現在ログオンしているメンバーシップ ユーザーの最終利用日時スタンプを更新します。</summary>
        <returns>現在ログオンしているユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。 `username` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> オーバーロードのいずれかを使用すると、<xref:System.Web.Security.Membership.GetUser%2A> は、現在ログオンしているメンバーシップユーザーの情報を返します。 現在ログオンしているメンバーシップユーザーは、現在の <xref:System.Web.HttpContext>のユーザーの <xref:System.Security.Principal.IIdentity.Name%2A> によって識別されます。  
  
 また、`userIsOnline` パラメーターを使用して、取得するユーザーの最終アクティビティの日付/時刻スタンプを更新する <xref:System.Web.Security.Membership.GetUser%2A> かどうかを指定することもできます。 `userIsOnline` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードでは、`GetUser()` ユーザーの最終アクティビティの日付/時刻スタンプを暗黙的に更新します。 `GetUser(System.String)` と `GetUser(System.Object)` ではありません。  
  
   
  
## Examples  
 次のコード例では、現在ログオンしているメンバーシップユーザーの最終アクティビティの日付/時刻スタンプを更新し、ASP.NET ページにユーザー名を表示します。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">メンバーシップ ユーザーは現在ログオンしていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline"><see langword="true" /> の場合、指定したユーザーの最終利用日時スタンプを更新します。</param>
        <summary>現在ログオンしているメンバーシップ ユーザーの情報をデータ ソースから取得します。 現在ログオンしているメンバーシップ ユーザーの最終利用日時スタンプを更新するように指定することもできます。</summary>
        <returns>現在ログオンしているユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> メソッドは、データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。 `username` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> オーバーロードのいずれかを使用すると、<xref:System.Web.Security.Membership.GetUser%2A> は、現在ログオンしているメンバーシップユーザーの情報を返します。 現在ログオンしているメンバーシップユーザーは、現在の <xref:System.Web.HttpContext>のユーザーの <xref:System.Security.Principal.IIdentity.Name%2A> によって識別されます。  
  
 また、`userIsOnline` パラメーターを使用して、取得するユーザーの最終アクティビティの日付/時刻スタンプを更新する <xref:System.Web.Security.Membership.GetUser%2A> かどうかを指定することもできます。 `userIsOnline` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードでは、`GetUser()` ユーザーの最終アクティビティの日付/時刻スタンプを暗黙的に更新します。 `GetUser(System.String)` と `GetUser(System.Object)` ではありません。  
  
   
  
## Examples  
 次のコード例では、ユーザーの最終利用日時スタンプを更新せずに、ASP.NET ページに現在ログオンしているメンバーシップユーザーのユーザー名を表示します。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">メンバーシップ ユーザーは現在ログオンしていません。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">メンバーシップ データ ソース内の一意のユーザー ID。</param>
        <summary>指定した一意の ID と関連付けられているメンバーシップ ユーザーの情報をデータ ソースから取得します。</summary>
        <returns>指定した一意の ID に関連付けられているユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> メソッドは、データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。 ユーザーは、`providerUserKey` パラメーターを使用して指定されたデータソースの一意の識別子を使用して識別されます。  
  
 また、`userIsOnline` パラメーターを使用して、取得するユーザーの最終アクティビティの日付/時刻スタンプを更新するかどう <xref:System.Web.Security.Membership.GetUser%2A> かを指定することもできます。 `userIsOnline` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードでは、`GetUser()` ユーザーの最終アクティビティの日付/時刻スタンプを暗黙的に更新します。 `GetUser(System.String)` と `GetUser(System.Object)` ではありません  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">取得するユーザーの名前。</param>
        <summary>指定されたメンバーシップ ユーザーについてデータ ソースから情報を取得します。</summary>
        <returns>指定されたユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。 <paramref name="username" /> パラメーターが既存のユーザーに対応しない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> メソッドは、データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。 `username` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> オーバーロードのいずれかを使用すると、<xref:System.Web.Security.Membership.GetUser%2A> は、現在ログオンしているメンバーシップユーザーの情報を返します。 現在ログオンしているメンバーシップユーザーは、現在の <xref:System.Web.HttpContext>のユーザーの <xref:System.Security.Principal.IIdentity.Name%2A> によって識別されます。  
  
 また、`userIsOnline` パラメーターを使用して、取得するユーザーの最終アクティビティの日付/時刻スタンプを更新するかどう <xref:System.Web.Security.Membership.GetUser%2A> かを指定することもできます。 `userIsOnline` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードでは、<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> ユーザーの最終アクティビティの日付/時刻スタンプを暗黙的に更新します。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> と <xref:System.Web.Security.Membership.GetUser%2A> ではありません。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.Membership.GetUser%2A> メソッドを使用して、現在ログオンしているユーザーの <xref:System.Web.Security.MembershipUser> オブジェクトを返し、ユーザーの電子メールアドレスを更新します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> にコンマ (,) が含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">メンバーシップ データ ソース内の一意のユーザー ID。</param>
        <param name="userIsOnline"><see langword="true" /> の場合、指定したユーザーの最終利用日時スタンプを更新します。</param>
        <summary>指定した一意の ID と関連付けられているメンバーシップ ユーザーの情報をデータ ソースから取得します。 そのユーザーの最終利用日時スタンプを更新するように指定することもできます。</summary>
        <returns>指定した一意の ID に関連付けられているユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> メソッドは、データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。 ユーザーは、`providerUserKey` パラメーターで指定されたデータソースの一意の識別子を使用して識別されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">取得するユーザーの名前。</param>
        <param name="userIsOnline"><see langword="true" /> の場合、指定したユーザーの最終利用日時スタンプを更新します。</param>
        <summary>指定されたメンバーシップ ユーザーについてデータ ソースから情報を取得します。 そのユーザーの最終利用日時スタンプを更新するように指定することもできます。</summary>
        <returns>指定されたユーザーを表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。 <paramref name="username" /> パラメーターが既存のユーザーに対応しない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> メソッドは、データソースからユーザー情報を取得し、返されたデータを格納する <xref:System.Web.Security.MembershipUser> オブジェクトを作成します。  
  
 `username` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> オーバーロードのいずれかを使用すると、<xref:System.Web.Security.Membership.GetUser%2A> は、現在ログオンしているメンバーシップユーザーの情報を返します。 現在ログオンしているメンバーシップユーザーは、現在の <xref:System.Web.HttpContext>のユーザーの <xref:System.Security.Principal.IIdentity.Name%2A> によって識別されます。  
  
 また、`userIsOnline` パラメーターを使用して、取得するユーザーの最終アクティビティの日付/時刻スタンプを更新するかどう <xref:System.Web.Security.Membership.GetUser%2A> かを指定することもできます。 `userIsOnline` パラメーターを受け取らない <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードでは、<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> ユーザーの最終アクティビティの日付/時刻スタンプを暗黙的に更新します。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> と <xref:System.Web.Security.Membership.GetUser%2A> ではありません。  
  
   
  
## Examples  
 次のコード例では、指定されたユーザー名のパスワードを取得し、指定されたユーザーの電子メールアドレスに送信します。 <xref:System.Web.Security.Membership.GetUser%2A> の呼び出しでは、ユーザーの最終アクティビティの日付/時刻スタンプを更新しないことを指定します。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> にコンマ (,) が含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索対象の電子メール アドレス。</param>
        <summary>電子メール アドレスが指定内容と一致するユーザー名を取得します。</summary>
        <returns>電子メール アドレスが指定内容と一致するユーザー名。 一致が見つからなかった場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> を使用すると、メンバーシップユーザーのユーザー名を取得できますが、ユーザーが自分のユーザー名を知らない場合でも、電子メールアドレスを知ることができます。 データストア内の複数のユーザーが同じ電子メールアドレスを持っている場合は、最初に検出されたユーザー名が返されます。  
  
 先頭と末尾のスペースは、すべてのパラメーター値から削除されます。  
  
   
  
## Examples  
 次のコード例では、指定された電子メールアドレスのユーザー名を取得します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードをハッシュするために使用するアルゴリズムの識別子。</summary>
        <value>パスワードをハッシュするために使用するアルゴリズムの識別子。既定のハッシュ アルゴリズムを使用する場合は空白。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> プロパティは、<xref:System.Web.Security.Membership> クラスによって使用されるカスタムハッシュアルゴリズムを識別します。 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> プロパティは、 [membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素の `hashAlgorithmType` 属性を使用して設定します。  
  
 .NET Framework を使用すると、 [`<cryptographySettings>`](/dotnet/framework/configure-apps/file-schema/cryptography/cryptographysettings-element)要素の構成セクションを使用して、カスタム暗号化クラスを構成できます。 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> プロパティは、 [`<cryptoNameMapping>`](/dotnet/framework/configure-apps/file-schema/cryptography/cryptonamemapping-element)要素の[`<nameEntry>`](/dotnet/framework/configure-apps/file-schema/cryptography/nameentry-element)要素の `name` 属性と一致する必要があります。 詳細については、「[暗号化クラスへのアルゴリズム名のマッピング](/dotnet/framework/configure-apps/map-algorithm-names-to-cryptography-classes)」を参照してください。  
  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> プロパティが設定されていない場合、<xref:System.Web.Security.Membership> クラスは `<machineKey>` 要素の `validation` 属性に設定されたハッシュアルゴリズムを使用します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数を取得します。</summary>
        <value>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティは、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティと組み合わせて使用して、メンバーシップユーザーのパスワードまたはパスワードの解答を推測して、不要なソースから保護します。  
  
 メンバーシップユーザーに対して入力された無効なパスワードまたはパスワードの回答の数が、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティによって指定された分数内の <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティの値以上の場合、ユーザーは <xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドの呼び出しによってロック解除されるまで、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true` に設定することにより、Web サイトからロックアウトされます。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティの値に達する前に有効なパスワードまたはパスワードの解答が指定された場合、無効な試行回数を追跡するカウンターは0に設定されます。  
  
 無効なパスワードとパスワードの解答の試行が個別に追跡されます。 たとえば、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティが5に設定されている場合、ユーザーは、正しいパスワードを最大5回入力し、ロックアウトされることなく正しいパスワードの入力を最大で5回試行できます。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティ値は、[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))構成要素の `maxInvalidPasswordAttempts` 属性を使用して、アプリケーション構成で設定されます。  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> プロパティが `false`の場合、無効なパスワード回答の試行は追跡されません。  
  
   
  
## Examples  
 次のコード例は、アプリケーションの Web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素を示しています。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> クラスのインスタンスを使用してメンバーシップサービスを提供することを指定し、`maxInvalidPasswordAttempts` 属性を5つの無効な試行に設定し、`passwordAttemptWindow` を30分に設定します。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードに存在する必要がある特殊文字の最小数を取得します。</summary>
        <value>有効なパスワードに存在する必要がある特殊文字の最小数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> プロパティは、<xref:System.Web.Security.Membership.Provider%2A> プロパティで指定されたメンバーシッププロバイダーの有効なパスワードを作成するために入力する必要がある、英数字以外の特殊文字の最小数を返します。  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> プロパティ値は、[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))構成要素の `minRequiredNonAlphanumericCharacters` 属性を使用して、アプリケーション構成で設定されます。  
  
 英数字以外の文字は、<xref:System.Char.IsLetterOrDigit%2A> メソッドが `false`返す文字です。  
  
   
  
## Examples  
 次のコード例は、アプリケーションの Web.config ファイルの `system.web` セクションにある[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) configuration 要素を示しています。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> クラスのインスタンスを使用してメンバーシップサービスを提供することを指定し、`minRequiredNonAlphanumericCharacters` 属性を1文字に設定します。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードに最低限必要な長さを取得します。</summary>
        <value>パスワードに最低限必要な長さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> プロパティは、<xref:System.Web.Security.Membership.Provider%2A> プロパティで指定されたメンバーシッププロバイダーの有効なパスワードを作成するために入力する必要がある文字の最小数を取得します。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> プロパティ値は、[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))構成要素の `minRequiredPasswordLength` 属性を使用して、アプリケーション構成で設定されます。  
  
   
  
## Examples  
 次のコード例は、アプリケーションの Web.config ファイルの `system.web` セクションにある[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) configuration 要素を示しています。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> クラスのインスタンスを使用してメンバーシップサービスを提供することを指定し、`minRequiredPasswordLength` 属性を7文字に設定します。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードまたはパスワードの解答の指定までに、連続して失敗した試行を追跡する時間枠を取得します。</summary>
        <value>有効なパスワードまたはパスワードの解答の指定までに、連続して失敗した試行を追跡する時間枠 (分単位)。 既定では 10 分です。 現在失敗した試行と前回失敗した試行の間隔が <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> プロパティの設定値より大きい場合、それぞれの試行の失敗が最初の失敗として扱われます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティは、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> のプロパティと組み合わせて使用されます。これにより、メンバーシップユーザーのパスワードまたはパスワードの解答が、繰り返しの試行によって推測されないように推測されます。 ユーザーが自分のパスワードを使用してログイン、変更、またはリセットしようとすると、指定された時間枠内に特定の回数の連続した試行のみが許可されます。 この時間枠の長さは、[<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>] プロパティで指定します。このプロパティは、無効な試行の間隔を分単位で指定します。  
  
 ユーザーがパスワードをリセットするのに連続して失敗した回数が、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティに格納されている値と等しく、最後の無効な試行から経過した時間が、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティに指定された分数を下回っている場合、メンバーシップユーザーはロックアウトされます。ユーザーは、<xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドの呼び出しによってロックが解除されるまで、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true` に設定することによってロックアウトされます。  
  
 現在失敗している試行と前回失敗した試行の間隔が <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティ設定よりも大きい場合、現在の無効な試行は最初の試行としてカウントされます。 許容される無効な試行の最大数に達する前に有効なパスワードの解答が指定された場合、無効なパスワード回答の試行回数は 0 (ゼロ) に設定されます。 許可された無効な試行の最大数に達する前に有効なパスワードを指定した場合、無効なパスワードの試行回数と無効なパスワード解答の試行回数は 0 (ゼロ) に設定されます。  
  
 無効なパスワードとパスワードの回答の試行は、互いに独立して累積されます。 たとえば、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> が5に設定されていて、3つの無効なパスワードの試行の後に2つの無効なパスワードの解答の試行が続く場合、メンバーシップユーザーをロックアウトするために、2つ以上の無効なパスワードの試行 (または3つの無効なパスワード回答の試行) を <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 内で行う必要があります。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティ値は、 [membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) configuration-element セクションの `passwordAttemptWindow` 属性を使用して、アプリケーション構成で設定されます。  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> プロパティが `false`に設定されている場合、無効なパスワード解答の試行は追跡されません。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> のインスタンスを使用し、`maxInvalidPasswordAttempts` 属性を5つの無効な試行に設定し、`passwordAttemptWindow` を30分に設定することを指定します。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの評価に使用される正規表現を取得します。</summary>
        <value>パスワードの評価に使用される正規表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティは、<xref:System.Web.Security.Membership.Provider%2A> プロパティで指定されたプロバイダーからパスワードの複雑さを評価するために使用される正規表現を取得します。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティは、[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))構成要素の `passwordStrengthRegularExpression` 属性を使用して、アプリケーション構成で設定されます。  
  
 正規表現の詳細については、「 [.NET Framework 正規表現](/dotnet/standard/base-types/regular-expressions)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、アプリケーションの Web.config ファイルの `system.web` セクションにある[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) configuration 要素を示しています。 これは、アプリケーションが <xref:System.Web.Security.SqlMembershipProvider> クラスのインスタンスを使用してメンバーシップサービスを提供することを指定し、`passwordStrengthRegularExpression` 属性を、パスワードが次の条件を満たしていることを検証する正規表現に設定します。  
  
-   が7文字を超えています。  
  
-   少なくとも1つの数字が含まれています。  
  
-   には、少なくとも1つの特殊な (英数字以外の) 文字が含まれています。  
  
 パスワードがこれらの条件を満たしていない場合は、メンバーシッププロバイダーによってパスワードが受け付けられません。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの既定のメンバーシップ プロバイダーへの参照を取得します。</summary>
        <value><see cref="T:System.Web.Security.MembershipProvider" /> 抽象基本クラスを使用して公開されるアプリケーションの既定のメンバーシップ プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A> プロパティを使用すると、アプリケーションの既定のメンバーシッププロバイダーを直接参照できます。 これは一般的に、<xref:System.Web.Security.MembershipProvider> 抽象基本クラスの一部ではないメンバーシッププロバイダーのカスタムメンバーにアクセスするために使用されます。  
  
   
  
## Examples  
 次のコード例では、カスタム <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> プロパティの値を決定するために <xref:System.Web.Security.Membership.Provider%2A> プロパティを使用して、アプリケーションで有効になっている既定の <xref:System.Web.Security.SqlMembershipProvider> にアクセスします。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET アプリケーションのメンバーシップ プロバイダーのコレクションを取得します。</summary>
        <value>ASP.NET アプリケーション用に構成されたメンバーシップ プロバイダーの <see cref="T:System.Web.Security.MembershipProviderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A> プロパティは、アプリケーションに対して有効なすべてのメンバーシッププロバイダーを参照します。これには、アプリケーションの web.config ファイルと、すべてのアプリケーションの machine.config ファイルに追加されたプロバイダーが含まれます。 アプリケーションの構成の [[メンバーシップ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))] セクションの [[プロバイダー](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) ] 要素を使用して、アプリケーションで使用できるメンバーシッププロバイダーを制御できます。 たとえば、次のサンプルは、マシン構成ファイルで指定された <xref:System.Web.Security.SqlMembershipProvider> インスタンス (`AspNetSqlProvider`) を削除し、`SqlProvider` という名前の <xref:System.Web.Security.SqlMembershipProvider> インスタンスをアプリケーションの既定のメンバーシッププロバイダーとして追加するアプリケーションの web.config ファイルにある[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))セクションを示しています。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 [Membership 要素 (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100))セクションを指定する場合は、`defaultProvider` 属性を指定する必要があります。 Web.config で[Membership 要素 (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100))セクションを指定しない場合は、マシン構成の値が使用され、`AspNetSqlProvider` という名前の <xref:System.Web.Security.SqlMembershipProvider> インスタンスが `defaultProvider`として確立されます。  
  
 <xref:System.Web.Security.Membership.Providers%2A> コレクションからプロバイダーへの厳密に型指定された参照を取得するには、メンバーシッププロバイダーの名前でインデックスを作成し、目的の型としてキャストします。  
  
   
  
## Examples  
 次のコード例では、アプリケーションに対して有効になっているプロバイダーとそれぞれの種類を一覧表示します。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがパスワードをリセットおよび取得する際にパスワードの質問に答えなければならないように、既定のメンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。</summary>
        <value>パスワードのリセットと取得においてパスワードの質問に対する回答が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスワードの質問と回答を要求すると、ユーザーのパスワードを取得またはリセットするときに、追加のセキュリティ層が提供されます。 ユーザーは、ユーザー名が作成されたときに質問と回答を入力して、忘れたパスワードを取得またはリセットするために後で使用できるようになります。  
  
 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> または <xref:System.Web.Security.MembershipUser.GetPassword%2A> が呼び出されると <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> がチェックされます。 .NET Framework に用意されているプロバイダーは、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> が `true`、指定されたパスワードの解答が `null`の場合、<xref:System.NotSupportedException> をスローします。  
  
 <xref:System.Web.Security.Membership.EnablePasswordReset%2A> と <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> が両方とも `false`場合でも、新しいユーザーが作成されたときに、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> を使用して、質問と回答を強制的に作成することができます。ただし、質問と回答は使用されません。 <xref:System.Web.Security.MembershipUser> クラスを使用して、質問を取得することができます。  
  
 詳細については、「<xref:System.Web.Security.MembershipUser.ResetPassword%2A>」および「<xref:System.Web.Security.MembershipUser.GetPassword%2A>」を参照してください。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 アプリケーションで <xref:System.Web.Security.SqlMembershipProvider>のインスタンスを使用し、パスワードのリセットを有効にし、リセットを実行するときにパスワードの解答が必要であることを指定します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 次のコードサンプルでは、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> の値を確認し、ユーザーの作成時に指定されるパスワードの質問と回答に必要なコントロールを追加します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">更新するユーザーとそのユーザーの更新情報を表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</param>
        <summary>指定されたユーザーに関する情報でデータベースを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> は、入力として、メンバーシップユーザーの現在の情報を含む <xref:System.Web.Security.MembershipUser> オブジェクトを取得し、<xref:System.Web.Security.MembershipUser> オブジェクトのプロパティ値を使用してデータソースを更新します。 新しい <xref:System.Web.Security.MembershipUser>を作成することも、<xref:System.Web.Security.Membership.GetUser%2A>、<xref:System.Web.Security.Membership.GetAllUsers%2A>、<xref:System.Web.Security.Membership.FindUsersByName%2A>、または <xref:System.Web.Security.Membership.FindUsersByEmail%2A> メソッドを使用して、データソースの現在の値が設定されている <xref:System.Web.Security.MembershipUser> オブジェクトを取得することもできます。  
  
   
  
## Examples  
 次のコード例では、現在ログオンしているユーザーの電子メールアドレスを更新します。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>それ以降ユーザーがもはやオンラインでないと見なされる、ユーザーの最終利用日時スタンプからの時間を分単位で指定します。</summary>
        <value>それ以降ユーザーがもはやオンラインでないと見なされる、ユーザーの最終利用日時スタンプからの時間 (分単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>の呼び出し中に、<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> プロパティの値がチェックされます。 ユーザーの <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> が、現在の日付と時刻から、<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> の値 (分) を引いた値を超えた場合、ユーザーはオンラインと見なされます。 <xref:System.Web.Security.MembershipUser> クラスの <xref:System.Web.Security.MembershipUser.IsOnline%2A> プロパティを使用して、メンバーシップユーザーがオンラインであると見なされるかどうかを確認できます。  
  
 ユーザーの <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> は、ユーザーの資格情報が <xref:System.Web.Security.Membership.ValidateUser%2A> 方法によって正常に検証されたときに更新されます。 また、<xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードのいずれかを呼び出すと、メンバーシップユーザーの <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> を更新することもできます。 `userIsOnline` パラメーターを受け取る <xref:System.Web.Security.Membership.GetUser%2A> のオーバーロードを呼び出す場合は、`true` の値を指定して、ユーザーの <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> を更新します。  
  
   
  
## Examples  
 ASP.NET アプリケーションの web.config ファイルの `system.web` セクションの[membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100))要素のコード例を次に示します。 アプリケーションで <xref:System.Web.Security.SqlMembershipProvider> のインスタンスを使用し、`userIsOnlineTimeWindow` 属性を20分に設定するように指定します。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検証対象のユーザー名。</param>
        <param name="password">指定されたユーザーのパスワード。</param>
        <summary>指定されたユーザー名とパスワードが有効かどうかを検証します。</summary>
        <returns>指定されたユーザー名とパスワードが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> を使用すると、データソースからユーザー名とパスワードを簡単に確認できます。 `username` パラメーターが空または `null`の場合、<xref:System.Web.HttpException> がスローされることに注意してください。  
  
   
  
## Examples  
 次のコード例は、フォーム認証と <xref:System.Web.Security.Membership> クラスを使用するように構成された ASP.NET アプリケーションのログインページを示しています。 指定されたユーザーの資格情報が無効な場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーは <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> メソッドによって最初に要求された URL にリダイレクトされます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが作成されるとき、パスワードが変更されるとき、またはリセットされるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントは、メンバーシッププロバイダーの <xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッド、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A> メソッド、または <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドが呼び出されたときに発生します。  
  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントを使用して、メンバーシップユーザーのパスワードの形式と値を検証できます。  
  
 現在の <xref:System.Web.Security.MembershipProvider.CreateUser%2A>、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>、または <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> アクションを取り消すには、<xref:System.Web.Security.ValidatePasswordEventArgs> イベント中に、指定された `true` の <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> プロパティを <xref:System.Web.Security.MembershipProvider.ValidatingPassword> に設定します。  
  
 <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> プロパティを `true`に設定して現在のアクションをキャンセルした場合は、指定された <xref:System.Web.Security.ValidatePasswordEventArgs> の <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> プロパティを、パスワード検証エラーの理由を示す例外に設定できます。 呼び出し元のメソッドは、<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> プロパティがに設定されている例外をスローします。 <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> プロパティが `null`場合、呼び出し元は一般的なパスワード検証エラーの例外をスローします。  
  
   
  
## Examples  
 次のコード例は、ユーザーのパスワードの形式を検証し、パスワードが必要な形式と一致しない場合に操作をキャンセルする <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントを示しています。  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET メンバーシップの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
