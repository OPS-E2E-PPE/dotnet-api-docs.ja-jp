<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7278449dd6000e4ca468d77b9a60cfa97e55441b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78779023" /></Metadata><TypeSignature Language="C#" Value="public sealed class CacheDependency : IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheDependency extends System.Object implements class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheDependency&#xA;Implements IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency sealed : IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ASP.NET アプリケーションの <see cref="T:System.Web.Caching.Cache" /> オブジェクトに格納されている項目と、ファイル、キャッシュ キー、ファイルまたキャッシュ キーの配列、または別の <see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトとの間に依存関係を確立します。 <see cref="T:System.Web.Caching.CacheDependency" /> クラスが依存関係を監視するため、いずれかが変更された場合はキャッシュされた項目が自動的に削除されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ファイルやファイルの配列など、別のオブジェクトに依存する項目をキャッシュに追加すると、そのオブジェクトが変更されたときに、依存項目がキャッシュから自動的に削除されます。 たとえば、XML ファイル内のデータに基づいて <xref:System.Data.DataSet> オブジェクトを作成するとします。 <xref:System.Data.DataSet> を XML ファイルに依存する <xref:System.Web.Caching.CacheDependency> オブジェクトを使用して、キャッシュに <xref:System.Data.DataSet> を追加できます。 XML ファイルが変更された場合、<xref:System.Data.DataSet> はキャッシュから削除されます。

 <xref:System.Web.Caching.Cache.Add%2A> および <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドを使用して、アプリケーションのキャッシュに依存関係を持つ項目を追加できます。 <xref:System.Web.Caching.Cache.Item%2A> プロパティを使用して、依存関係があるキャッシュに項目を追加することはできません。

 依存関係を設定するには、<xref:System.Web.Caching.CacheDependency> クラスのインスタンスを作成し、その項目が依存しているファイル、キー、またはディレクトリを指定して、<xref:System.Web.Caching.Cache.Add%2A> または <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドに依存関係を渡します。 <xref:System.Web.Caching.CacheDependency> インスタンスは、単一のファイルまたはディレクトリ、ファイルまたはディレクトリの配列、キャッシュキーの配列と共に、ファイルまたはディレクトリの配列を表すことができます (これらは、<xref:System.Web.Caching.Cache> オブジェクトに格納されている他の項目を表します)。



## Examples
 次のコード例では、<xref:System.Web.Caching.CacheDependency.HasChanged%2A> プロパティを使用して、<xref:System.Web.Caching.Cache>内の項目に対する前回の要求以降に <xref:System.Web.Caching.CacheDependency> が変更されたかどうかを確認します。 `start` パラメーターで渡された `dt` 値は <xref:System.DateTime.Now%2A?displayProperty=nameWithType>に設定されます。

 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.CacheDependency>から独自のクラスを派生させる場合は、このバージョンの <xref:System.Web.Caching.CacheDependency.%23ctor%2A> コンストラクターを実装します。



## Examples
 次のコード例は、<xref:System.Web.Caching.CacheDependency> から派生するすべてのクラスがに必要であるため、このバージョンの <xref:System.Web.Caching.CacheDependency> コンストラクターを実装するクラスです。

 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパス。 このリソースが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <summary>ファイルまたはディレクトリが変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `filename` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、ディレクトリまたはファイルの作成時に、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。



## Examples
 次のコード例では、XML ファイルに対する依存関係を持つ <xref:System.Web.Caching.CacheDependency> クラスのインスタンスを作成します。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドは、そのファイルに依存する <xref:System.Web.Caching.Cache> に項目を追加します。

 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]

 また、次の方法を使用して、ファイルに対する依存関係がある項目を <xref:System.Web.Caching.Cache> に追加することもできます。

 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <summary>ファイルまたはディレクトリへのパスの配列が変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 配列内のいずれかのファイルまたはディレクトリが配列から変更または削除された場合、キャッシュされた項目は互換性のために残され、アプリケーションの <xref:System.Web.Caching.Cache> オブジェクトから削除されます。

 また、`filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

> [!NOTE]
>  ファイルの依存関係を含む配列を作成する場合は、<xref:System.Web.Caching.Cache> に追加する項目が依存するファイルの数を定義する必要があります。



## Examples
 次のコード例は、<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドを使用して、ファイルの配列に対する依存関係を持つ <xref:System.Web.Caching.Cache> に項目を追加する方法を示しています。 また、項目をディレクトリの配列に依存させることもできます。

 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパス。 このリソースが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="start">ディレクトリまたはファイルの最終更新日時を突き合わせて確認する日時。</param>
        <summary>ファイルまたはディレクトリが変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `filename` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、ディレクトリまたはファイルの作成時に、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

> [!NOTE]
>  変更の追跡はすぐに開始され、`start` パラメーターに直接基づいていません。 `start` パラメーターを使用して、`filename` パラメーターで渡されたディレクトリまたはファイルの最終更新日を確認する過去の日付と時刻を渡します。 最後に変更された日付が `start` パラメーターで渡された日付と時刻の値よりも後の場合、キャッシュされた項目は <xref:System.Web.Caching.Cache>から削除されます。



## Examples
 次のコード例では、このコンストラクターを使用して <xref:System.Web.Caching.CacheDependency> オブジェクトをインスタンス化し、その依存関係を持つ <xref:System.Web.Caching.Cache> に項目を挿入します。 `start` パラメーターで渡された `dt` 値は <xref:System.DateTime.Now%2A?displayProperty=nameWithType>に設定されます。

 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="start">配列内のオブジェクトの最終更新日時を突き合わせて確認する日時。</param>
        <summary>ファイルまたはディレクトリへのパスの配列が変更されたかどうかを監視し、その変更の監視を開始する時刻を指定する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

> [!NOTE]
>  変更の追跡はすぐに開始され、`start` パラメーターに直接基づいていません。 `start` パラメーターを使用して、`filenames` パラメーターで渡された配列の最終更新日をチェックする過去の日付と時刻を渡します。 配列内のいずれかのオブジェクトの最終更新日が、`start` パラメーターで渡された日付と時刻の値よりも後である場合、キャッシュされた項目は <xref:System.Web.Caching.Cache>から削除されます。



## Examples
 次のコード例では、オブジェクトが <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドの呼び出しでパラメーター引数として含まれている場合に、2つの XML ファイルと <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 値を渡す <xref:System.Web.Caching.CacheDependency> オブジェクトを作成します。

 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="cachekeys">新しいオブジェクトが変更されているかどうかを監視する対象のキャッシュ キーの配列。 これらのキャッシュ キーのいずれかが変更されると、この依存関係オブジェクトに関連付けられているキャッシュされたオブジェクトは無効になり、キャッシュから削除されます。</param>
        <summary>ファイルまたはディレクトリへのパスの配列、キャッシュ キーの配列、またはその両方が変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 また、`filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

 ただし、`cachekeys` 依存関係は同じように機能しません。 `cachekeys` パラメーターの少なくとも1つの値が挿入時に存在しない場合、挿入は失敗します。 このシナリオでは例外がスローされないことに注意してください。

## Examples
 次のコードフラグメントは、キャッシュに配置されている別の項目に対するキーに対する依存関係がある項目をアプリケーションの <xref:System.Web.Caching.Cache> に挿入する方法を示しています。 このメソッドは配列構文を使用するため、<xref:System.Web.Caching.Cache> に追加する項目が依存するキーの数を定義する必要があります。

 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="cachekeys">新しいオブジェクトが変更されているかどうかを監視する対象のキャッシュ キーの配列。 これらのキャッシュ キーのいずれかが変更されると、この依存関係オブジェクトに関連付けられているキャッシュされたオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="start"><paramref name="filenames" /> 配列および <paramref name="cachekeys" /> 配列に渡されたオブジェクトの最終更新日時を突き合わせて確認する日時。</param>
        <summary>ファイルまたはディレクトリへのパスの配列、キャッシュ キーの配列、またはその両方が変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 また、`filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

 ただし、`cachekeys` 依存関係は同じように機能しません。 `cachekeys` パラメーターの少なくとも1つの値が挿入時に存在しない場合、挿入は失敗します。 このシナリオでは例外がスローされないことに注意してください。

> [!NOTE]
>  変更の追跡はすぐに開始され、`start` パラメーターに直接基づいていません。 `start` パラメーターを使用して、`filenames` または `cachekeys` パラメーターで渡されたオブジェクトの最終更新日をチェックする過去の日付と時刻を渡します。 これらのオブジェクトのいずれかの最後に変更された日付が、`start` パラメーターで渡された日付と時刻の値よりも後である場合、キャッシュされた項目は <xref:System.Web.Caching.Cache>から削除されます。



## Examples
 次のコード例では、`CreateDependency` メソッドを作成します。 このメソッドが呼び出されると、<xref:System.DateTime> オブジェクトが作成され、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> プロパティを使用して、`key1` の `key` パラメーターと `Value 1`の値を持つ項目がキャッシュに追加されます。 次に、文字列の配列 `dependencyKey`を `key1` の値と共に作成します。 この <xref:System.Web.Caching.CacheDependency> コンストラクターは、`dependencyKey` と <xref:System.DateTime> オブジェクトをパラメーター引数として渡す <xref:System.Web.Caching.CacheDependency> オブジェクトをインスタンス化します。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドは、パラメーターとして <xref:System.Web.Caching.CacheDependency> オブジェクトを使用して次に呼び出されます。 これにより、`key1` キーに依存する <xref:System.Web.Caching.Cache.Insert%2A> メソッドを使用して、オブジェクトがキャッシュに追加されます。

 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="cachekeys">新しいオブジェクトが変更されているかどうかを監視する対象のキャッシュ キーの配列。 これらのキャッシュ キーのいずれかが変更されると、この依存関係オブジェクトに関連付けられているキャッシュされたオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="dependency">このインスタンスが依存する <see cref="T:System.Web.Caching.CacheDependency" /> クラスの別のインスタンス。</param>
        <summary>ファイルまたはディレクトリへのパスの配列、キャッシュ キーの配列、またはその両方が変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。 また、そのインスタンス自体を <see cref="T:System.Web.Caching.CacheDependency" /> クラスの個別のインスタンスに依存させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 また、`filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

 ただし、`cachekeys` 依存関係は同じように機能しません。 `cachekeys` パラメーターの少なくとも1つの値が挿入時に存在しない場合、挿入は失敗します。 このシナリオでは例外がスローされないことに注意してください。

## Examples
 次のコード例では、`CreateDependency` メソッドを作成します。 このメソッドが呼び出されると、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> プロパティを使用して、`key1` の `key` パラメーターと `Value 1`の値を持つ項目をキャッシュに追加します。 次に、文字列の配列 `dependencyKey`を `key1` の値と共に作成します。 <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> コンストラクターを使用して、<xref:System.Web.Caching.CacheDependency> オブジェクトを作成します。 `dep1`は、パラメーターの引数として `dependencyKey` を渡します。 2番目の <xref:System.Web.Caching.CacheDependency> オブジェクト `dep2`がこのコンストラクターを使用して作成され、`dep1` 3 番目のパラメーター引数として渡されます。 この2番目の依存関係は、最初の依存関係に依存します。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドは、2番目の <xref:System.Web.Caching.CacheDependency> オブジェクトをパラメーターとして使用して次に呼び出されます。 最初の依存関係が何らかの方法で変更されると、キャッシュされた項目は無効になります。

 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">キャッシュされているオブジェクトが依存しているファイルまたはディレクトリへのパスの配列。 これらのリソースのいずれかが変更されると、キャッシュされているオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="cachekeys">新しいオブジェクトが変更されているかどうかを監視する対象のキャッシュ キーの配列。 これらのキャッシュ キーのいずれかが変更されると、この依存関係オブジェクトに関連付けられているキャッシュされたオブジェクトは無効になり、キャッシュから削除されます。</param>
        <param name="dependency">このインスタンスが依存する <see cref="T:System.Web.Caching.CacheDependency" /> クラスの別のインスタンス。</param>
        <param name="start">配列内のオブジェクトおよび <see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトの最終更新日時を突き合わせて確認する日時。</param>
        <summary>ファイルまたはディレクトリへのパスの配列、キャッシュ キーの配列、またはその両方が変更されたかどうかを監視する、<see cref="T:System.Web.Caching.CacheDependency" /> クラスの新しいインスタンスを初期化します。 また、そのインスタンス自体を <see cref="T:System.Web.Caching.CacheDependency" /> クラスの別のインスタンスと変更の監視が開始される時刻に依存させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 また、`filenames` パラメーターで指定されたディレクトリまたはファイルがファイルシステムに見つからない場合は、そのディレクトリまたはファイルは存在しないものとして扱われます。 依存関係のあるオブジェクトが <xref:System.Web.Caching.Cache>に追加されたときにディレクトリまたはファイルが見つからない場合、そのディレクトリまたはファイルが作成されるときに、キャッシュされたオブジェクトは <xref:System.Web.Caching.Cache> から削除されます。

 たとえば、次のファイルパスに対する依存関係がある <xref:System.Web.Caching.Cache> にオブジェクトを追加するとします。 <xref:System.Web.Caching.CacheDependency> オブジェクトの作成時にそのファイルが見つからない場合は、後で作成されますが、キャッシュされたオブジェクトは、.xyz ファイルの作成時に削除されます。

 ただし、`cachekeys` 依存関係は同じように機能しません。 `cachekeys` パラメーターの少なくとも1つの値が挿入時に存在しない場合、挿入は失敗します。 このシナリオでは例外がスローされないことに注意してください。

> [!NOTE]
>  変更の追跡はすぐに開始され、`start` パラメーターに直接基づいていません。 `start` パラメーターを使用して、`filenames`、`cachekeys`、または `dependency` パラメーターで渡されたいずれかのオブジェクトの最終更新日をチェックする過去の日付と時刻を渡します。 これらのいずれかのオブジェクトの最終更新日が `start` パラメーターで渡された日時より後の場合、キャッシュされた項目は <xref:System.Web.Caching.Cache>から削除されます。



## Examples
 次のコード例は、`CreateDependency` メソッドを示しています。 このメソッドが呼び出されると、<xref:System.DateTime> オブジェクトが作成され、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> プロパティを使用して `key1` のキーパラメーターと `Value 1`の値を持つ項目がキャッシュに追加されます。 次に、文字列の配列 `dependencyKey`を作成し、その最初の (唯一の) インデックスの値を `key1` の値に設定します。 次に、<xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> コンストラクターを使用して、<xref:System.Web.Caching.CacheDependency> オブジェクトを作成します。 `dep1`は、パラメーターの引数として `dependencyKey` を渡します。 次に、このコンストラクターを使用して、2つ目の <xref:System.Web.Caching.CacheDependency> オブジェクト `dep2`を作成し、`dep1` と <xref:System.DateTime> オブジェクトをパラメーター引数として渡します。 この2番目の依存関係は最初の依存関係に依存し、`CreateDependency` メソッドが呼び出されてから10秒後に依存関係の監視が開始されます。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> メソッドは、2番目の <xref:System.Web.Caching.CacheDependency> オブジェクトをパラメーターとして使用して次に呼び出されます。 最初の依存関係が何らかの方法で変更されると、キャッシュされた項目は無効になります。

 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> クラス、および <see cref="T:System.Web.Caching.CacheDependency" /> から派生したクラスが使用したリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.CacheDependency> クラスから派生したクラスは、このメソッドを実装して、派生クラスが使用したリソースをクリーンアップする必要があります。



## Examples
 次のコード例は、<xref:System.Web.Caching.CacheDependency> クラスから継承し、<xref:System.Web.Caching.CacheDependency.DependencyDispose%2A> メソッドをオーバーライドするクラスを示しています。 このメソッドが呼び出されると、`Disposed` という名前のカスタムブール型プロパティが `true`に設定されます。

 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトによって使用されているリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトの初期化を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.CacheDependency.FinishInit%2A> メソッドは、<xref:System.Web.Caching.CacheDependency> オブジェクトの初期化を完了します。 このメソッドは、すべての <xref:System.Web.Caching.CacheDependency> コンストラクターによって呼び出されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスが <see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトの初期化を完了するには、コンストラクターの最後に <see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> メソッドを呼び出す必要があります。</para></block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ファイルの依存関係を取得します。</summary>
        <returns>ファイルの依存関係。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトの一意の識別子を取得します。</summary>
        <returns><see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトの一意の識別子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、項目またはアプリケーションに関連付けられている <xref:System.Web.Caching.CacheDependency> クラスの複数のインスタンスを追跡する場合に特に便利です。

 識別子は、ファイル名 (ファイルの依存関係の場合) またはキー名 (キャッシュキーの依存関係の場合) と、このメソッドが依存関係に割り当てる文字列の組み合わせです。 <xref:System.Web.Caching.CacheDependency> クラスから派生したクラスでは、このメソッドをオーバーライドして、一意の識別子を生成する方法をカスタマイズできます。



## Examples
 次のコード例では、`aggDep`という名前の <xref:System.Web.Caching.AggregateCacheDependency> オブジェクトを作成し、その配列に2つの <xref:System.Web.Caching.CacheDependency> オブジェクトを指定します。 `aggDep` がインスタンス化されると、コードは、<xref:System.Web.Caching.CacheDependency.GetUniqueID%2A> メソッドを呼び出して、`aggDep` 含まれている両方の依存関係の一意の識別子を生成し、その識別子を含んでいるページに表示します。 次に、<xref:System.Web.Caching.Cache.Insert%2A> メソッドを使用して <xref:System.Web.Caching.Cache>に項目を追加し、依存関係として `aggDep` します。

 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> オブジェクトが変更されたかどうかを示す値を取得します。</summary>
        <value><see langword="true" /> オブジェクトが変更された場合は <see cref="T:System.Web.Caching.CacheDependency" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.CacheDependency>を使用して、ASP.NET アプリケーションの <xref:System.Web.Caching.Cache> に項目を追加できます。 <xref:System.Web.Caching.CacheDependency> が変更されると、<xref:System.Web.Caching.Cache> に追加された項目は無効になり、キャッシュから削除されます。 このプロパティを使用して <xref:System.Web.Caching.CacheDependency> が変更されたかどうかを判断し、発生した場合は <xref:System.Web.Caching.Cache> 内の項目を再作成することができます。



## Examples
 次のコード例では、<xref:System.Web.Caching.CacheDependency.HasChanged%2A> プロパティを使用して、<xref:System.Web.Caching.Cache>内の項目に対する前回の要求以降に <xref:System.Web.Caching.CacheDependency> が変更されたかどうかを確認します。 `start` パラメーターで渡された `dt` 値は <xref:System.DateTime.Now%2A?displayProperty=nameWithType>に設定されます。

 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>監視対象のキャッシュ エントリが削除されるときに呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この項目に依存するすべてのキャッシュ項目の最終アクセス時刻を更新します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソースです。</param>
        <param name="e">イベント データを含む <see cref="T:System.EventArgs" /> オブジェクトです。</param>
        <summary>派生クラス <see cref="T:System.Web.Caching.CacheDependency" /> によって表される依存関係が変更されたことを、基本オブジェクトの <see cref="T:System.Web.Caching.CacheDependency" /> に通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Caching.CacheDependency> クラスから派生したクラスは、このメソッドを実装する必要があります。

 <xref:System.Web.Caching.CacheDependency> クラスから派生する場合は、オーバーライドされていないメソッドまたはプロパティの基本機能を使用します。 派生クラスのインスタンスを作成すると、キャッシュされた項目を依存させるファイル、キャッシュキー、データベーステーブル、またはその他の任意のオブジェクトを表します。 依存関係項目が変更されると、このメソッドは、項目が変更された <xref:System.Web.Caching.CacheDependency> クラスの基本機能を通知し、<xref:System.Web.Caching.CacheDependency.HasChanged%2A> および <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> プロパティの値を更新できるようにします。



## Examples
 次のコード例は、<xref:System.Web.Caching.CacheDependency> クラスから継承するクラスを示しています。 このメソッドは、<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> メソッドを使用して依存関係が変更された時刻を変更し、<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> メソッドを呼び出す、パブリックメソッド `ResetDependency`を作成します。

 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" Index="0" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">依存関係によってアクションが変更されました。</param>
        <summary>変更において関係者への通知を処理するアクション メソッドをこの依存関係に追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">依存関係が最後に変更された時刻。</param>
        <summary>依存関係が最後に変更された時刻にマークを付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 次のコード例は、<xref:System.Web.Caching.CacheDependency> クラスから継承するクラスを示しています。 このメソッドは、<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> メソッドを使用して依存関係が変更された時刻を変更し、<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> メソッドを呼び出す、パブリックメソッド `ResetDependency`を作成します。

 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この依存関係の排他的所有権を宣言する最初のユーザーを許可します。</summary>
        <returns>項目が最初に所有権を取得した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、依存関係が使用されることを宣言します。 以前に別の項目がこのメソッドを呼び出し、所有権を取得した場合、`false` が返されます。 <xref:System.Web.Caching.CacheDependency> は、1つのキャッシュエントリでのみ使用できます。 キャッシュ依存関係が指定されているキャッシュに項目が追加されると、キャッシュはこれらの依存関係の所有権を取得して、他の場所で再利用されないようにする必要があります。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>依存関係が最後に変更された時刻を取得します。</summary>
        <value>依存関係が最後に変更された時刻。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティは、協定世界時 (UTC) (グリニッジ標準時とも呼ばれます) で測定されます。



## Examples
 次のコード例では、<xref:System.Web.Caching.AggregateCacheDependency> クラスを使用して、2つの <xref:System.Web.Caching.CacheDependency> オブジェクトの依存関係を持つ項目を <xref:System.Web.Caching.Cache>に追加します。 <xref:System.Web.Caching.Cache> 項目の要求が行われると、コードは項目が <xref:System.Web.Caching.Cache>内にあるかどうかを確認します。 指定されている場合、<xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> プロパティは文字列に変換され、ページに表示されます。 そうでない場合は、項目とその2つの依存関係が作成され、<xref:System.Web.Caching.Cache>に追加されます。

 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">アプリケーションデータのキャッシュ</related>
      </Docs>
    </Member>
  </Members>
</Type>
