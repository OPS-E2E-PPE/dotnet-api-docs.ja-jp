<Type Name="IOrderedDictionary" FullName="System.Collections.Specialized.IOrderedDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae91c3eec3c05bf0e1cb5ca9c2ab8ca72308eba5" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75150822" /></Metadata><TypeSignature Language="C#" Value="public interface IOrderedDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedDictionary implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.IOrderedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOrderedDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8aa11-101">キーと値のペアのインデックス付きコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-101">Represents an indexed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aa11-102"><xref:System.Collections.Specialized.IOrderedDictionary> 要素には、キーまたはインデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-102"><xref:System.Collections.Specialized.IOrderedDictionary> elements can be accessed either with the key or with the index.</span></span>  
  
 <span data-ttu-id="8aa11-103">各要素は、<xref:System.Collections.DictionaryEntry> 構造体に格納されているキーと値のペアです。</span><span class="sxs-lookup"><span data-stu-id="8aa11-103">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="8aa11-104">各ペアには `null`ではない一意のキーが必要ですが、値は `null` できますが、一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-104">Each pair must have a unique key that is not `null`, but the value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="8aa11-105"><xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスは、含まれているキーと値を列挙できますが、特定の並べ替え順序を意味しません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-105">The <xref:System.Collections.Specialized.IOrderedDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="8aa11-106">C#言語の `foreach` ステートメント (Visual Basic で`For Each`) は、コレクション内の要素の型のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-106">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="8aa11-107"><xref:System.Collections.IDictionary> の各要素はキーと値のペアであるため、要素型はキーの型でも、値の型でもありません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-107">Because each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="8aa11-108">代わりに、次の例に示すように、要素型は <xref:System.Collections.DictionaryEntry>になります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-108">Instead, the element type is <xref:System.Collections.DictionaryEntry>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#03)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#03)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#03)]  
  
 <span data-ttu-id="8aa11-109">`foreach` ステートメントは列挙子のラッパーであり、コレクションへの書き込みではなく読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-109">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aa11-110">次のコード例は、<xref:System.Collections.ArrayList> クラスに基づく単純な <xref:System.Collections.Specialized.IOrderedDictionary> の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-110">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="8aa11-111">実装された <xref:System.Collections.Specialized.IOrderedDictionary> では、最初の名前がキーと姓として値として格納され、各名は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-111">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#00)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#00)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#00)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8aa11-112">実装するクラスには、キーを比較するための手段が必要です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-112">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iOrderedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aa11-113"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-113">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></summary>
        <returns><span data-ttu-id="8aa11-114"><see cref="T:System.Collections.IDictionaryEnumerator" /> コレクション全体の <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="8aa11-114">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the entire <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aa11-115">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="8aa11-115">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8aa11-116">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-116">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="8aa11-117">そのため、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8aa11-117">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8aa11-118">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-118">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8aa11-119">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-119">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8aa11-120"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-120"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="8aa11-121">この位置では、<xref:System.Collections.IEnumerator.Current%2A> プロパティは定義されていません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-121">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="8aa11-122">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-122">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="8aa11-123"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-123"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="8aa11-124"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-124"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="8aa11-125"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-125">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="8aa11-126">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-126">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="8aa11-127"><xref:System.Collections.IEnumerator.MoveNext%2A> の最後の呼び出しが `false`を返した場合、<xref:System.Collections.IEnumerator.Current%2A> は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-127">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="8aa11-128"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-128">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="8aa11-129">列挙子は、コレクションが変更されない限り有効です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8aa11-130">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8aa11-131">列挙子はコレクションに排他アクセスできないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-131">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="8aa11-132">列挙処理でスレッド セーフを確保するために、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-132">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="8aa11-133">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-133">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aa11-134">次のコード例は、<xref:System.Collections.ArrayList> クラスに基づく単純な <xref:System.Collections.Specialized.IOrderedDictionary> の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-134">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="8aa11-135">実装された <xref:System.Collections.Specialized.IOrderedDictionary> では、最初の名前がキーと姓として値として格納され、各名は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-135">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="8aa11-136">このコードは、<xref:System.Collections.Specialized.IOrderedDictionary> クラス用に用意されている大規模なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-136">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj * obj -&gt; unit" Usage="iOrderedDictionary.Insert (index, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8aa11-137">キーと値のペアを挿入する位置の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="8aa11-137">The zero-based index at which the key/value pair should be inserted.</span></span></param>
        <param name="key"><span data-ttu-id="8aa11-138">追加する要素のキーとして使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8aa11-138">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="8aa11-139">追加する要素の値として使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8aa11-139">The object to use as the value of the element to add.</span></span>  <span data-ttu-id="8aa11-140">値として <see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-140">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8aa11-141">コレクション内の指定したインデックス位置に、キーと値のペアを挿入します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-141">Inserts a key/value pair into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aa11-142"><xref:System.Collections.Specialized.IOrderedDictionary> は、有効な値として `null` を受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-142"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="8aa11-143">`index` パラメーターが <xref:System.Collections.ICollection.Count%2A>に等しい場合、`value` パラメーターが <xref:System.Collections.Specialized.IOrderedDictionary> コレクションの末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-143">If the `index` parameter is equal to <xref:System.Collections.ICollection.Count%2A>, the `value` parameter is added to the end of the <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span></span>  
  
 <span data-ttu-id="8aa11-144">リストなどの連続する要素のコレクションでは、新しい要素を挿入するために、挿入位置より後にある要素の位置が繰り下げられます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-144">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="8aa11-145">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-145">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="8aa11-146">この動作は、ハッシュテーブルなど、要素が概念的にグループ化されているコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-146">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aa11-147">次のコード例は、<xref:System.Collections.ArrayList> クラスに基づく単純な <xref:System.Collections.Specialized.IOrderedDictionary> の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-147">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="8aa11-148">実装された <xref:System.Collections.Specialized.IOrderedDictionary> では、最初の名前がキーと姓として値として格納され、各名は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-148">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="8aa11-149">このコードは、<xref:System.Collections.Specialized.IOrderedDictionary> クラス用に用意されている大規模なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-149">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8aa11-150"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-150"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="8aa11-151">または</span><span class="sxs-lookup"><span data-stu-id="8aa11-151">-or-</span></span> 
 <span data-ttu-id="8aa11-152"><paramref name="index" /> が <see cref="P:System.Collections.ICollection.Count" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-152"><paramref name="index" /> is greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8aa11-153"><paramref name="key" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8aa11-154">同じキーを持つ要素が、<see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションに既に存在します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-154">An element with the same key already exists in the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8aa11-155"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-155">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="8aa11-156">または</span><span class="sxs-lookup"><span data-stu-id="8aa11-156">-or-</span></span> 
<span data-ttu-id="8aa11-157"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションが固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="8aa11-157">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.Specialized.IOrderedDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8aa11-158">取得または設定する要素の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="8aa11-158">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="8aa11-159">指定したインデックスにある要素を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-159">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="8aa11-160">指定したインデックス位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="8aa11-160">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="8aa11-161"><xref:System.Collections.Specialized.IOrderedDictionary> は、有効な値として `null` を受け入れ、重複する要素を許可します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-161"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>

<span data-ttu-id="8aa11-162">このC#言語では、<xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> プロパティを実装する代わりに、 [this](~/docs/csharp/language-reference/keywords/this.md)キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-162">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> property.</span></span> <span data-ttu-id="8aa11-163">Visual Basic は、<xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> を[既定のプロパティ](~/docs/visual-basic/language-reference/modifiers/default.md)として実装します。これにより、同じインデックス作成機能が提供されます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-163">Visual Basic implements <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> as a [default property](~/docs/visual-basic/language-reference/modifiers/default.md), which provides the same indexing functionality.</span></span>

<span data-ttu-id="8aa11-164">このプロパティを使用すると、次の構文を使用して、コレクション内の特定の要素にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-164">This property allows you to access a specific element in the collection by using the following syntax:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#04)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#04)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#04)]  
  
   
  
## Examples  
 <span data-ttu-id="8aa11-165">次のコード例は、<xref:System.Collections.ArrayList> クラスに基づく単純な <xref:System.Collections.Specialized.IOrderedDictionary> の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-165">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="8aa11-166">実装された <xref:System.Collections.Specialized.IOrderedDictionary> では、最初の名前がキーと姓として値として格納され、各名は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-166">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="8aa11-167">このコードは、<xref:System.Collections.Specialized.IOrderedDictionary> クラス用に用意されている大規模なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-167">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8aa11-168"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-168"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="8aa11-169">または</span><span class="sxs-lookup"><span data-stu-id="8aa11-169">-or-</span></span> 
 <span data-ttu-id="8aa11-170"><paramref name="index" /> が <see cref="P:System.Collections.ICollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-170"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iOrderedDictionary.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8aa11-171">削除する要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="8aa11-171">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="8aa11-172">指定したインデックス位置にある要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="8aa11-172">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aa11-173">リストなどの連続する要素のコレクションでは、空白になった位置を埋めるために、削除された要素の後にある要素の位置が繰り上げられます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-173">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="8aa11-174">コレクションにインデックスがある場合、移動した要素のインデックスも更新されます。</span><span class="sxs-lookup"><span data-stu-id="8aa11-174">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="8aa11-175">この動作は、ハッシュテーブルなど、要素が概念的にグループ化されているコレクションには適用されません。</span><span class="sxs-lookup"><span data-stu-id="8aa11-175">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aa11-176">次のコード例は、<xref:System.Collections.ArrayList> クラスに基づく単純な <xref:System.Collections.Specialized.IOrderedDictionary> の実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-176">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="8aa11-177">実装された <xref:System.Collections.Specialized.IOrderedDictionary> では、最初の名前がキーと姓として値として格納され、各名は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8aa11-177">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="8aa11-178">このコードは、<xref:System.Collections.Specialized.IOrderedDictionary> クラス用に用意されている大規模なコード例の一部です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-178">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8aa11-179"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-179"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="8aa11-180">または</span><span class="sxs-lookup"><span data-stu-id="8aa11-180">-or-</span></span> 
 <span data-ttu-id="8aa11-181"><paramref name="index" /> が <see cref="P:System.Collections.ICollection.Count" /> 以上になっています。</span><span class="sxs-lookup"><span data-stu-id="8aa11-181"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8aa11-182"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8aa11-182">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="8aa11-183">または</span><span class="sxs-lookup"><span data-stu-id="8aa11-183">-or-</span></span> 
<span data-ttu-id="8aa11-184"><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションが固定サイズです。</span><span class="sxs-lookup"><span data-stu-id="8aa11-184">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
