<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7f5fef2fb29fadcb7e268d8b12700c1a8314352" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77102183" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定のブラウザーに対応するように Web ページを調整し、すべてのページ アダプターの直接または間接的な継承元となる基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> クラスは、ブラウザーが使用するマークアップ言語 (HTML や XHTML など) によって定義される特定のクラスのブラウザーに対して Web ページを適合させる抽象クラスです。 レンダリング動作の適応性の多くは、<xref:System.Web.UI.HtmlTextWriter> クラスから派生した特殊なテキストライタークラスにカプセル化できます。したがって、必ずしもページアダプターを提供する必要はありません。  
  
 派生ページアダプターのほとんどのメンバーは、<xref:System.Web.UI.Page> クラスまたはコントロールアダプターから呼び出されます。 まず、<xref:System.Web.UI.Page> クラスまたはコントロールアダプターは、派生ページアダプターの存在を検出し、メンバーを呼び出すか、またはページアダプターが存在しない場合は機能を提供します。  
  
 <xref:System.Web.UI.Adapters.PageAdapter> クラスのメンバーは、次の機能を提供します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> と <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> のプロパティでは、追加の HTTP ヘッダーと HTTP `GET` と、キャッシュを変更するために使用できる `POST` パラメーターを定義します。 これらは、<xref:System.Web.UI.Page> クラスからのキャッシュの初期化中に呼び出されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> メソッドは、ページのビューとコントロールの状態の組み合わせを永続化するために使用できるオブジェクトを返します。 派生ページアダプターが存在する場合は、<xref:System.Web.UI.Page.PageStatePersister%2A> プロパティから参照されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> メソッドには、スクリプト内のフォームを参照するために使用できる DHTML コードフラグメントが用意されています。  
  
-   ページがポストバックされている場合、<xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> メソッドはポストバック変数のコレクションを返します。 これは、派生ページアダプターが存在する場合、<xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> メソッドではなく、.NET Framework によって呼び出されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドと <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> メソッドは、派生ページアダプターが存在する場合にハイパーリンクを表示するために、コントロールアダプターによって使用されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、フォームを送信できるハイパーリンクまたはポストバッククライアントタグをレンダリングします。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> メソッドと <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> メソッドは、ラジオボタングループの他の <xref:System.Web.UI.WebControls.RadioButton> コントロールを参照するために、ラジオボタンコントロールアダプターによって使用されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> プロパティを使用すると、<xref:System.Web.UI.Page> クラスの内部 `ClientState` プロパティを使用して、<xref:System.Web.UI.Page> オブジェクトのコントロールとビューステートの組み合わせにアクセスできます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> メソッドは、デバイス固有のテキスト変換を実行するために、コントロールアダプターによって使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.Adapters.PageAdapter> クラスから `CustomPageAdapter` という名前のクラスを派生させ、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、現在のページへの参照を含むハイパーリンクに `src` という名前の属性を追加します。 `CustomPageAdapter` がアタッチされているページに表示されるすべてのハイパーリンクには、`src` 属性があります。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework は、対応する <xref:System.Web.UI.Page> クラスまたは派生クラスを作成するときに、このアダプターを内部的に構築します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのキャッシュを変更する、追加の HTTP ヘッダーのリストを取得します。</summary>
        <value>HTTP ヘッダーのリストが格納されている <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web ページをキャッシュする web 上のエンティティは、HTTP ヘッダーやその他の要因に基づいて複数のバージョンをキャッシュします。 たとえば、ページが生成される各言語のバージョンは、通常、`Accept-Language` HTTP ヘッダーに基づいてキャッシュされます。  
  
 特定のブラウザーでは、ターゲットに依存しないキャッシュを制御するヘッダーに加えて、HTTP ヘッダーによるキャッシュを変更する必要がある場合があります。 たとえば、さまざまな画面サイズに応じて異なるバージョンのページをキャッシュする必要がある場合があります。  
  
 <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> プロパティによって返されるヘッダー名は、クライアントブラウザーに送信された `Vary` HTTP ヘッダーのヘッダーの一覧に追加されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> プロパティをオーバーライドして、ターゲット固有のキャッシュを制御する追加ヘッダーの一覧を返すことができます。 <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> の基本プロパティは <see langword="null" />を返します。</para></block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a6s4ks5w(v=vs.100)">方法: HTTP ヘッダーに基づいてページのバージョンをキャッシュする</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのキャッシュを変更する、HTTP の GET 要求および POST 要求からの追加パラメーターのリストを取得します。</summary>
        <value>GET および POST のパラメーターのリストが格納されている <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web ページをキャッシュする web 上のエンティティでは、要求パラメーターとは別の要因に基づいて複数のバージョンがキャッシュされます。 たとえば、ページが生成される小売チェーン内の各店舗の場所のバージョンは、通常、パラメーター名 (`StoreID`など) に基づいてキャッシュされます。  
  
 特定のブラウザーでは、ターゲットに依存しないキャッシュを制御するパラメーターに加えて、GET または POST パラメーターによるキャッシュを変更する必要がある場合があります。 たとえば、携帯電話サービスプロバイダーごとに異なるバージョンのページをキャッシュすることが必要になる場合があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> プロパティをオーバーライドして、追加の GET または POST パラメーターのリストを返して、ターゲット固有のキャッシュを制御することができます。 <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> の基本メソッドは <see langword="null" />を返します。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/y96218s9(v=vs.100)">方法: パラメーターに基づいてページのバージョンをキャッシュする</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのビューとコントロールの状態データを含んだ、エンコード済みの文字列を取得します。</summary>
        <value>関連付けられた <see cref="T:System.String" /> 上のコントロールのビューとコントロールの状態の組み合わせを含んだ、エンコード済みの <see cref="T:System.Web.UI.Page" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> プロパティは、<xref:System.Web.UI.Page> クラスの内部 `ClientState` プロパティへのアクセスを提供します。  
  
 <xref:System.Web.UI.Page> の internal `ClientState` プロパティに <xref:System.Web.UI.PageStatePersister> オブジェクトによって格納されたビューステートデータは、常に Web ページの非表示フィールドに保存されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合、<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> プロパティは <see langword="virtual" />ないため、オーバーライドすることはできません。 派生クラスで <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> の動作を変更するには、基本クラスの <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> プロパティを参照する新しい <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> プロパティを実装します。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">ページアダプターとビューステート</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページがポストバック中で、ポストバック変数の名前/値コレクションを返すかどうかを判断します。</summary>
        <returns>ポストバック変数の <see cref="T:System.Collections.Specialized.NameValueCollection" /> (存在する場合)。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> メソッドは、次のいずれかのコレクションを返します。  
  
-   HTTP データ転送メソッドが `POST`場合はフォーム変数。  
  
-   HTTP メソッドが `GET`場合は、文字列変数をクエリします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> メソッドをオーバーライドして、ポストバック変数コレクションのターゲット固有の処理を提供できます。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求に対して ASP.NET 要求の検証を実行せずに、POST また GET コマンドを使用して、ページにポストされたデータの名前と値のコレクションを返します。</summary>
        <returns>未検証フォーム データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、<xref:System.Web.UnvalidatedRequestValues> クラスを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">送信されたフォームのクライアント ID を含んだ <see cref="T:System.String" />。</param>
        <summary>送信されたページ上のフォームを参照するためにクライアント ブラウザーが使用できる DHTML のコード片を返します。</summary>
        <returns>送信されたページ上のフォームの参照を持つ <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> メソッドは、ポストバックフォームへの DHTML 参照を提供します。 コードフラグメントの形式は次のとおりです。  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、アダプターでサポートされているブラウザーのマークアップがポストバックフォーム参照に対して異なる形式を必要とする場合に、<see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> メソッドをオーバーライドできます。 たとえば、PocketPC ブラウザーで使用される HTML 3.2 標準では、次の形式が必要です。 
 <c>ドキュメント。</c><paramref name="formID" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">取得する <see cref="T:System.String" /> グループの名前を示す <see cref="T:System.Web.UI.WebControls.RadioButton" />。</param>
        <summary><paramref name="groupName" /> で指定したオプション ボタン コントロールのコレクションを取得します。</summary>
        <returns><see cref="T:System.Collections.ICollection" /> を構成する <see cref="T:System.Web.UI.WebControls.RadioButton" /> コントロールの <paramref name="groupName" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オプションボタンコントロールアダプターは、<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> および <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> メソッドを使用して、グループ内の他の <xref:System.Web.UI.WebControls.RadioButton> コントロールを参照します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールおよびビューステートを維持するために Web ページで使用されるオブジェクトを返します。</summary>
        <returns><see cref="T:System.Web.UI.PageStatePersister" /> のコントロールとビューステートの組み合わせの作成と抽出をサポートする <see cref="T:System.Web.UI.Page" /> から派生したオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Page.PageStatePersister%2A> プロパティは、<xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> メソッドを使用して、<xref:System.Web.UI.PageStatePersister> クラスから派生したオブジェクトを返します。このオブジェクトは、ページのコントロールとビューステートの組み合わせを形成し、抽出します。 ページに関連付けられている派生ページアダプターが存在しない場合は、<xref:System.Web.UI.HiddenFieldPageStatePersister> オブジェクトを使用して、ページ上の隠しフィールドの状態を維持します。  
  
|リンクの種類|結果のリンク|  
|---------------|--------------------|  
|コードエンティティ参照、cer|<xref:System.Char.ToString%2A>|  
|コードエンティティ参照修飾、cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|コードエンティティ参照固有、cer|<xref:System.Char.ToString%28System.Char%29>|  
|コードエンティティ参照修飾特定の cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Page" /> の内部 <see langword="ClientState" /> プロパティの <see cref="T:System.Web.UI.PageStatePersister" /> オブジェクトによって格納されたビューステートデータは、常に Web ページの非表示フィールドに保存されます。</para></block>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、非表示フィールドで結合状態を維持することが可能でない場合 (たとえば、リソースが限られているため)、<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> メソッドをオーバーライドして、別の派生ページ状態 persister を返すことができます。  
  
<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> 基底クラスは <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> オブジェクトを返します。 <see cref="T:System.Web.UI.SessionPageStatePersister" /> クラスを使用すると、セッション状態のページの状態を維持できます。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">コレクションに追加する <see cref="T:System.Web.UI.WebControls.RadioButton" /> です。</param>
        <summary>オプション ボタン コントロールを、指定したオプション ボタン グループのコレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> クラスは <xref:System.Collections.Specialized.ListDictionary> オブジェクトを使用して、ラジオボタングループの一覧を保持します。 <xref:System.Collections.Specialized.ListDictionary> 内の各要素は、ラジオボタングループの <xref:System.Web.UI.WebControls.RadioButton> コントロールのコレクションです。 <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> メソッドは、適切なコレクションに <xref:System.Web.UI.WebControls.RadioButton> コントロールを追加し、コレクションが存在しない場合は作成し、以前に登録された <xref:System.Web.UI.WebControls.RadioButton> コントロールがない場合は <xref:System.Collections.Specialized.ListDictionary> を作成します。  
  
 オプションボタンコントロールアダプターは、<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> および <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> メソッドを使用して、オプションボタングループの他の <xref:System.Web.UI.WebControls.RadioButton> コントロールを参照します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>応答ストリームに対してハイパーリンクの開始タグをレンダリングします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl">リンクのターゲット URL を保持する <see cref="T:System.String" /> 値。</param>
        <param name="encodeUrl"><see langword="true" /> を使用してストリーム出力をエンコードする場合は <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />。それ以外の場合は <see langword="false" />。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <summary>応答ストリームに対して、ターゲット URL を含んだハイパーリンクの開始タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、ハイパーリンクの開始タグを書き込みます。 `writer` が <xref:System.Web.UI.HtmlTextWriter>場合、このタグの形式は次のようになります。  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.Adapters.PageAdapter> クラスから `CustomPageAdapter` という名前のクラスを派生させ、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、現在のページへの参照を含むハイパーリンクに `src` という名前の属性を追加します。 `CustomPageAdapter` がアタッチされているページに表示されるすべてのハイパーリンクには、`src` 属性があります。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> メソッドをオーバーライドして、開始ハイパーリンクタグに対して異なる形式を記述したり、追加のタグ属性を記述したりできます。 たとえば、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> の基本メソッドは、<paramref name="softkeyLabel" />の属性を書き込みません。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl">リンクのターゲット URL を保持する <see cref="T:System.String" /> 値。</param>
        <param name="encodeUrl"><see langword="true" /> を使用してストリーム出力をエンコードする場合は <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />。それ以外の場合は <see langword="false" />。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成するリンクの <see cref="T:System.String" /> 属性に割り当てる <see langword="accessKey" /> 値。</param>
        <summary>応答ストリームに対して、ターゲット URL とアクセス キーを含んだハイパーリンクの開始タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、ハイパーリンクの開始タグを書き込みます。 `writer` が <xref:System.Web.UI.HtmlTextWriter> オブジェクトの場合、このタグの形式は次のようになります。  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.Adapters.PageAdapter> クラスから `CustomPageAdapter` という名前のクラスを派生させ、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>、`src` という名前の属性をハイパーリンクに追加します。ハイパーリンクには、現在のページへの参照が含まれています。 `CustomPageAdapter` がアタッチされているページに表示されるすべてのハイパーリンクには、`src` 属性があります。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessKey" /> が 1 文字を超えています。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> メソッドをオーバーライドして、開始ハイパーリンクタグに対して異なる形式を記述したり、追加のタグ属性を記述したりできます。 たとえば、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> の基本メソッドは、<paramref name="softkeyLabel" />の属性を書き込みません。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力をレンダリングするメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>応答ストリームに対してハイパーリンクの終了タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> メソッドは、ハイパーリンクの終了タグを書き込みます。 テキストライターが <xref:System.Web.UI.HtmlTextWriter> オブジェクトの場合、このタグの形式は次のようになります。  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合は、別の形式のハイパーリンクを表示する必要があるときに、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> メソッドと <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> メソッドをオーバーライドできます。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ポストバック イベントを、必要なすべての引数を含めてリンクとして応答ストリームにレンダリングします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、必要に応じて暗号化されたエンコード済みのビューステート、およびイベントのターゲットと引数も含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、ポストバックイベントを scriptless ハイパーリンクとして書き込みます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合、ポストバックイベントのハイパーリンクに別の形式が必要な場合、またはブラウザーに他の固有の要件がある場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> メソッドをオーバーライドできます。 たとえば、一部のブラウザーでは、リンクが表示される場合、ハイパーリンクテキストを空にする必要があります。 リソースが限られている場合に、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> をオーバーライドして、ビューステートを URL パラメーターとして含めることもできます。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> の基本メソッドは、<paramref name="softkeyLabel" />の属性を書き込みません。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <param name="postUrl">ポストバックの URL ターゲット ページを保持する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成されるリンクの <see cref="T:System.String" /> 属性に割り当てるために使用する <see langword="accessKey" /> 値。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、必要に応じて暗号化されたエンコード済みのビューステート、イベントのターゲットと引数、前回のページのパラメーター、およびアクセス キーも含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、発生する可能性のある <xref:System.Web.HttpUtility.UrlEncode%2A> ビューステート、`__EVENTTARGET=target`、`__EVENTARGUMENT=argument`、`__PREVIOUSPAGE=currentFilePath` パラメーター、および `accessKey="accessKey"` 属性を含む、ポストバックイベントを scriptless ハイパーリンクとして書き込みます。  
  
 [Pages 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)構成要素の `enableViewStateMac` 属性が `true`に設定されている場合、ビューステートは暗号化されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合、ポストバックイベントのハイパーリンクに別の形式が必要な場合、またはブラウザーに他の固有の要件がある場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> メソッドをオーバーライドできます。 たとえば、一部のブラウザーでは、リンクが表示される場合、ハイパーリンクテキストを空にする必要があります。 リソースが限られている場合に、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> をオーバーライドして、ビューステートを URL パラメーターとして含めることもできます。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> の基本メソッドは、<paramref name="softkeyLabel" />の属性を書き込みません。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <param name="postUrl">ポストバックの URL ターゲット ページを保持する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成されるリンクの <see cref="T:System.String" /> 属性に割り当てる <see langword="accessKey" /> 値。</param>
        <param name="encode">URL パラメーターの区切り記号として <see langword="true" /><c>amp;&amp; を使用する場合は </c>。<see langword="false" /><c>&amp; を使用する場合は </c>。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、エンコード済みのビューステート、イベントのターゲットと引数、前回のページのパラメーター、およびアクセス キーも含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、発生する可能性のある <xref:System.Web.HttpUtility.UrlEncode%2A> ビューステート、`__EVENTTARGET=target`、`__EVENTARGUMENT=argument`、`__PREVIOUSPAGE=currentFilePath` パラメーター、および `accessKey="accessKey"` 属性を含む、ポストバックイベントを scriptless ハイパーリンクとして書き込みます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合、ポストバックイベントのハイパーリンクに別の形式が必要な場合、またはブラウザーに他の固有の要件がある場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> メソッドをオーバーライドできます。 たとえば、一部のブラウザーでは、リンクが表示される場合、ハイパーリンクテキストを空にする必要があります。 また、URL パラメーターとしてビューステートを含めることができないようにリソースが制限されている場合に <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> をオーバーライドすることもできます。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> の基本メソッドは、<paramref name="softkeyLabel" />の属性を書き込みません。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">変換するテキストを表す <see cref="T:System.String" />。</param>
        <summary>対象ブラウザー用にテキストを変換します。</summary>
        <returns>変換するテキストを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> メソッドを使用すると、たとえばタブ文字 (`\t`) を改行 (`\n`) に変換することができます。  
  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> の基本メソッドは、変更されていない `text` を返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスから継承する場合、特定のマークアップに標準 HTML とは異なる形式のコンストラクトがある場合は、<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> をオーバーライドできます。 たとえば、ブラウザーが HTML で使用されるタグとは異なる識別子を必要とする場合、<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> メソッドをオーバーライドしてそのタグを検索し、変更することができます。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>
