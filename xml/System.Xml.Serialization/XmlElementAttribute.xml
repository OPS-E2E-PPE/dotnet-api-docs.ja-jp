<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b95de8329e8c549b510655b838101987a9dfc6d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78677590" /></Metadata><TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9319-101">パブリック フィールドまたはパブリック プロパティを持つオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化または逆シリアル化するときに、それらのフィールドまたはプロパティが XML 要素を表すかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d9319-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-102"><xref:System.Xml.Serialization.XmlElementAttribute> は、<xref:System.Xml.Serialization.XmlSerializer> がオブジェクトをシリアル化または逆シリアル化する方法を制御する属性のファミリに属しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="d9319-103">類似する属性の完全な一覧については、「 [XML シリアル化を制御する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d9319-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="d9319-104">XML ドキュメントには、通常、XML 要素が含まれています。各要素は、可能な属性を持つ開始タグ、終了タグ、およびタグ間のデータの3つの部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="d9319-105">XML タグは入れ子にすることができます。つまり、タグ間のデータも XML 要素にすることができます。</span><span class="sxs-lookup"><span data-stu-id="d9319-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="d9319-106">1つの要素のこの容量で別の要素を囲むことにより、ドキュメントにデータの階層を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d9319-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="d9319-107">XML 要素には、属性を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="d9319-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="d9319-108"><xref:System.Xml.Serialization.XmlElementAttribute> をパブリックフィールドまたはパブリックの読み取り/書き込みプロパティに適用して、要素名や名前空間などの XML 要素の特性を制御します。</span><span class="sxs-lookup"><span data-stu-id="d9319-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="d9319-109"><xref:System.Xml.Serialization.XmlElementAttribute> は、オブジェクトの配列を返すフィールドに複数回適用できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="d9319-110">この目的は、(<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを使用して) 配列に挿入できるさまざまな型を指定することです。</span><span class="sxs-lookup"><span data-stu-id="d9319-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="d9319-111">たとえば、次C#のコードの配列では、文字列と整数の両方を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="d9319-112">この結果、次のような XML が生成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="d9319-113"><xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> プロパティ値を指定せずに <xref:System.Xml.Serialization.XmlElementAttribute> を複数回適用する場合、要素には、許容されるオブジェクトの型の後に名前が付けられます。</span><span class="sxs-lookup"><span data-stu-id="d9319-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="d9319-114">配列を返すフィールドまたはプロパティに <xref:System.Xml.Serialization.XmlElementAttribute> を適用すると、配列内の項目は XML 要素のシーケンスとしてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="d9319-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="d9319-115">これに対し、<xref:System.Xml.Serialization.XmlElementAttribute> がそのようなフィールドやプロパティに適用されていない場合、配列内の項目は要素のシーケンスとしてエンコードされ、フィールドまたはプロパティの後にあるという名前の要素の下に入れ子になります。</span><span class="sxs-lookup"><span data-stu-id="d9319-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="d9319-116">(<xref:System.Xml.Serialization.XmlArrayAttribute> 属性と <xref:System.Xml.Serialization.XmlArrayItemAttribute> 属性を使用して、配列をシリアル化する方法を制御します)。</span><span class="sxs-lookup"><span data-stu-id="d9319-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="d9319-117"><xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを設定して、元のフィールドまたはプロパティ (<xref:System.Xml.Serialization.XmlElementAttribute>を適用したフィールドまたはプロパティ) の型から派生した型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="d9319-118">フィールドまたはプロパティが <xref:System.Collections.ArrayList>を返す場合は、<xref:System.Xml.Serialization.XmlElementAttribute> の複数のインスタンスをメンバーに適用できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="d9319-119">各インスタンスについて、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを、配列に挿入できるオブジェクトの型に設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="d9319-120">属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d9319-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9319-121">長い <xref:System.Xml.Serialization.XmlElementAttribute>ではなく、コード内の `XmlElement` という単語を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-122">次の例では、`Group` という名前のクラスをシリアル化し、その <xref:System.Xml.Serialization.XmlElementAttribute> をいくつかのメンバーに適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="d9319-123">`Employees` という名前のフィールドは、`Employee` オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="d9319-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="d9319-124">この場合、<xref:System.Xml.Serialization.XmlElementAttribute> は、結果の XML を入れ子にしないことを指定します (配列内の項目の既定の動作)。</span><span class="sxs-lookup"><span data-stu-id="d9319-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="d9319-125">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="d9319-125">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="d9319-126">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="d9319-126">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="d9319-127">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="d9319-127">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="d9319-128">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="d9319-128">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="d9319-129">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="d9319-129">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9319-130"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9319-131"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9319-132">次の例では、<xref:System.Xml.Serialization.XmlElementAttribute> をクラスに適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="d9319-133">シリアル化されたメンバーの XML 要素名。</span><span class="sxs-lookup"><span data-stu-id="d9319-133">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="d9319-134">XML 要素の名前を指定して、<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-135">既定では、クラスのインスタンスをシリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> によって XML 要素名としてメンバー名が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="d9319-136">たとえば、`Vehicle` という名前のフィールドでは、`Vehicle`という名前の XML 要素が生成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="d9319-137">ただし、`Cars`などの別の要素が必要な場合は、`elementName` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="d9319-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-138">次の例は、`Vehicles`という名前の1つのフィールドを含む単純なクラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="d9319-139">この例では、フィールドに <xref:System.Xml.Serialization.XmlElementAttribute> を適用し、`elementName` パラメーターを含めて、"車両" ではなく "車" という名前の XML 要素を生成するように <xref:System.Xml.Serialization.XmlSerializer> に指示します。</span><span class="sxs-lookup"><span data-stu-id="d9319-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d9319-140">メンバーの型から派生したオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d9319-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="d9319-141"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> クラスの新しいインスタンスを初期化し、<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> の適用先のメンバーの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="d9319-142">この型が使用されるのは、その型を含むオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化または逆シリアル化する場合です。</span><span class="sxs-lookup"><span data-stu-id="d9319-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-143">`type` パラメーターを使用して、基底クラスから派生した型を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="d9319-144">たとえば、`MyAnimal` という名前のプロパティが `Animal` オブジェクトを返すとします。</span><span class="sxs-lookup"><span data-stu-id="d9319-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="d9319-145">オブジェクトを拡張するには、`Animal` クラスを継承する `Mammal` という名前の新しいクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d9319-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="d9319-146">`MyAnimal` プロパティをシリアル化するときに、`Mammal` クラスを受け入れるように <xref:System.Xml.Serialization.XmlSerializer> に指示するには、`Mammal` クラスの <xref:System.Type> をコンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="d9319-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-147">次の例では、`Instrument` オブジェクトの配列を返す `Instruments`という名前の単一のフィールドを含む `Orchestra` という名前のクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="d9319-148">`Brass` という名前の2番目のクラスは、`Instrument` クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="d9319-149">この例では、`Instruments` フィールドに <xref:System.Xml.Serialization.XmlElementAttribute> を適用し、`Brass` の種類を指定します。これにより、`Instruments` フィールドは `Brass` オブジェクトを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="d9319-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="d9319-150">また、この例では、<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> プロパティを設定して XML 要素の名前を指定しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="d9319-151">シリアル化されたメンバーの XML 要素名。</span><span class="sxs-lookup"><span data-stu-id="d9319-151">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="d9319-152">メンバーの型から派生したオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d9319-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="d9319-153"><see cref="T:System.Xml.Serialization.XmlElementAttribute" /> の新しいインスタンスを初期化し、<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> の適用先であるメンバーの XML 要素の名前と派生型を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="d9319-154">このメンバー型が使用されるのは、その型を含むオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化する場合です。</span><span class="sxs-lookup"><span data-stu-id="d9319-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-155">既定では、クラスのインスタンスをシリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> によって XML 要素名としてメンバー名が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="d9319-156">たとえば、`Vehicle` という名前のフィールドでは、`Vehicle`という名前の XML 要素が生成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="d9319-157">ただし、`Cars`などの別の要素が必要な場合は、`elementName` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="d9319-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="d9319-158">`type` パラメーターを使用して、基底クラスから派生した型を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="d9319-159">たとえば、`MyAnimal` という名前のプロパティが `Animal` オブジェクトを返すとします。</span><span class="sxs-lookup"><span data-stu-id="d9319-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="d9319-160">オブジェクトを拡張するには、`Animal` クラスを継承する `Mammal` という名前の新しいクラスを作成します。</span><span class="sxs-lookup"><span data-stu-id="d9319-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="d9319-161">`MyAnimal` プロパティをシリアル化するときに、`Mammal` クラスを受け入れるように <xref:System.Xml.Serialization.XmlSerializer> に指示するには、`Mammal` クラスの <xref:System.Type> をコンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="d9319-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-162">次の例では、`Instrument` オブジェクトの配列を返す `Instruments`という名前の単一のフィールドを含む `Orchestra` という名前のクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="d9319-163">`Brass` という名前の2番目のクラスは、`Instrument` クラスから継承されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="d9319-164">この例では、`Instruments` フィールドに <xref:System.Xml.Serialization.XmlElementAttribute> を適用し、`Brass` の種類を指定します。これにより、`Instruments` フィールドは `Brass` オブジェクトを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="d9319-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="d9319-165">また、この例では、<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> プロパティを設定して XML 要素の名前を指定しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-166"><see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 要素の XML スキーマ定義 (XSD: XML Schema Definition) データ型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="d9319-167">XML スキーマデータ型。</span><span class="sxs-lookup"><span data-stu-id="d9319-167">An XML Schema data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-168">次の表に、their.NET に相当する XML スキーマの単純なデータ型を示します。</span><span class="sxs-lookup"><span data-stu-id="d9319-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="d9319-169">XML スキーマ `base64Binary` および `hexBinary` データ型については、<xref:System.Byte> 構造体の配列を使用し、必要に応じて <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> が "base64Binary" または "hexBinary" に設定された <xref:System.Xml.Serialization.XmlElementAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="d9319-170">XML スキーマ `time` および `date` データ型については、<xref:System.DateTime> 型を使用し、<xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> が "date" または "time" に設定されている <xref:System.Xml.Serialization.XmlElementAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="d9319-171">文字列にマップされているすべての XML スキーマ型について、その <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> プロパティを XML スキーマ型に設定した <xref:System.Xml.Serialization.XmlElementAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="d9319-172">これにより、メンバーのスキーマだけでなく、シリアル化形式が変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d9319-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9319-173">プロパティでは大文字と小文字が区別されるため、XML スキーマデータ型の1つに厳密に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d9319-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9319-174">バイナリデータを XML 要素として渡すことは、XML スキーマ属性として渡すよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="d9319-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="d9319-175">XML データ型の詳細については、「 [Xml スキーマパート 2: データ](https://www.w3.org/TR/xmlschema-2/)型」の World Wide Web コンソーシアムドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d9319-175">For more information about XML data types, see the World Wide Web Consortium document named [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="d9319-176">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="d9319-176">XSD data type</span></span>|<span data-ttu-id="d9319-177">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="d9319-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="d9319-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="d9319-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="d9319-179">base64Binary</span></span>|<span data-ttu-id="d9319-180"><xref:System.Byte> オブジェクトの配列</span><span class="sxs-lookup"><span data-stu-id="d9319-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="d9319-181">boolean</span><span class="sxs-lookup"><span data-stu-id="d9319-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="d9319-182">byte</span><span class="sxs-lookup"><span data-stu-id="d9319-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="d9319-183">date</span><span class="sxs-lookup"><span data-stu-id="d9319-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d9319-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="d9319-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d9319-185">decimal</span><span class="sxs-lookup"><span data-stu-id="d9319-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="d9319-186">double</span><span class="sxs-lookup"><span data-stu-id="d9319-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="d9319-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="d9319-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-188">事業</span><span class="sxs-lookup"><span data-stu-id="d9319-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-189">float</span><span class="sxs-lookup"><span data-stu-id="d9319-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="d9319-190">gDay</span><span class="sxs-lookup"><span data-stu-id="d9319-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="d9319-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="d9319-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-193">gYear</span><span class="sxs-lookup"><span data-stu-id="d9319-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="d9319-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="d9319-195">hexBinary</span></span>|<span data-ttu-id="d9319-196"><xref:System.Byte> オブジェクトの配列</span><span class="sxs-lookup"><span data-stu-id="d9319-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="d9319-197">ID</span><span class="sxs-lookup"><span data-stu-id="d9319-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="d9319-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="d9319-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-200">int</span><span class="sxs-lookup"><span data-stu-id="d9319-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="d9319-201">整数</span><span class="sxs-lookup"><span data-stu-id="d9319-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-202">language</span><span class="sxs-lookup"><span data-stu-id="d9319-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-203">long</span><span class="sxs-lookup"><span data-stu-id="d9319-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="d9319-204">名前</span><span class="sxs-lookup"><span data-stu-id="d9319-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-205">NCName</span><span class="sxs-lookup"><span data-stu-id="d9319-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="d9319-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="d9319-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="d9319-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="d9319-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="d9319-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-211">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="d9319-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="d9319-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="d9319-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-214">QName</span><span class="sxs-lookup"><span data-stu-id="d9319-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="d9319-215">duration</span><span class="sxs-lookup"><span data-stu-id="d9319-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-216">string</span><span class="sxs-lookup"><span data-stu-id="d9319-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-217">short</span><span class="sxs-lookup"><span data-stu-id="d9319-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="d9319-218">時間</span><span class="sxs-lookup"><span data-stu-id="d9319-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d9319-219">token</span><span class="sxs-lookup"><span data-stu-id="d9319-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="d9319-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="d9319-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="d9319-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="d9319-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="d9319-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="d9319-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="d9319-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="d9319-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="d9319-224">次の例では、<xref:System.Collections.ArrayList>を返す `ExtraInfo`という名前のフィールドを含む `Group` という名前のクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="d9319-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="d9319-225">この例では、<xref:System.Xml.Serialization.XmlElementAttribute> の2つのインスタンスをフィールドに適用し、各インスタンスに異なる <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 値を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="d9319-226">各インスタンスは、<xref:System.Xml.Serialization.XmlSerializer> が配列に挿入された指定された型をシリアル化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="d9319-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="d9319-227">指定した XML スキーマ データ型を .NET データ型に割り当てることはできません。</span><span class="sxs-lookup"><span data-stu-id="d9319-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-228">生成された XML 要素の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-228">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="d9319-229">生成された XML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="d9319-229">The name of the generated XML element.</span></span> <span data-ttu-id="d9319-230">既定値はメンバー識別子です。</span><span class="sxs-lookup"><span data-stu-id="d9319-230">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-231">生成された XML 要素の名前がメンバーの識別子と異なる場合は、<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="d9319-232">生成された XML ドキュメントで同じ名前のメンバーを区別するために XML 名前空間を使用する場合は、同じ <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 値を複数のクラスメンバーに設定できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="d9319-233">XML ドキュメントで名前空間とプレフィックス付きの名前を使用する方法の詳細については、<xref:System.Xml.Serialization.XmlSerializerNamespaces> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d9319-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-234">次の例では、<xref:System.Xml.Serialization.XmlElementAttribute> の <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> プロパティを新しい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-235">要素が修飾されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-235">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="d9319-236"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d9319-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="d9319-237">既定値は、<see cref="F:System.Xml.Schema.XmlSchemaForm.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="d9319-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-238"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> プロパティは、XML 要素が修飾されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d9319-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="d9319-239"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> プロパティは、XML の World Wide Web コンソーシアム1999仕様である[名前空間](https://www.w3.org/TR/1999/REC-xml-names-19990114/)に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium 1999 specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="d9319-240"><xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> プロパティが任意の値に設定されている場合、<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> プロパティを `XmlSchemaForm.Unqualified` に設定しようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d9319-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="d9319-241">既定の設定である `XmlSchemaForm.None`は、XML ドキュメントのスキーマを確認して名前空間が修飾されているかどうかを確認するように <xref:System.Xml.Serialization.XmlSerializer> に指示します。</span><span class="sxs-lookup"><span data-stu-id="d9319-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="d9319-242">スキーマで個々の要素または属性の値が指定されていない場合、<xref:System.Xml.Serialization.XmlSerializer> は `elementFormDefault` と `attributeFormDefault` の値を使用して、要素または属性が修飾されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d9319-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="d9319-243">次の XML コードは、スキーマを示しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="d9319-244"><xref:System.Xml.Serialization.XmlSerializer> がスキーマを読み取るとき、`Name` と `Number` の両方の <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 値は `XmlSchemaForm.None`ますが、`Name` 要素は修飾されませんが、`Number` 要素は修飾されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-245">次の例では、<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> プロパティを `XmlSchemaForm.Unqualified`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-246"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が、<see langword="null" /> に設定されているメンバーを、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定されている空タグとしてシリアル化する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="d9319-247"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9319-247"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-248">構造体の XML スキーマ仕様では、XML ドキュメントが要素のコンテンツが欠落していることを明示的に通知できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="d9319-249">このような要素には、`true`に設定 `xsi:nil` 属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d9319-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="d9319-250">詳細については、「 [XML Schema Part 1: 構造体](https://www.w3.org/TR/xmlschema-1/)」の World Wide Web コンソーシアムの仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d9319-250">For more information, see the World Wide Web Consortium specification, [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).</span></span>
  
 <span data-ttu-id="d9319-251"><xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> プロパティが `true`に設定されている場合、`null`に設定されているクラスメンバーに対して `xsi:nil` 属性が生成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="d9319-252">たとえば、`MyStringArray` という名前のフィールドを `null`に設定すると、<xref:System.Xml.Serialization.XmlSerializer> によって次の XML コードが生成されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="d9319-253"><xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> プロパティが `false`場合、`null`に設定されているクラスメンバーに対して XML 要素は生成されません。</span><span class="sxs-lookup"><span data-stu-id="d9319-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9319-254">値型に `null`を含めることはできないため、値型として型指定されたメンバーに <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> プロパティを適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="d9319-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="d9319-255">また、このプロパティを null 許容値型の `false` に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="d9319-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="d9319-256">このような型が `null`場合、`xsi:nil` を `true`に設定することによってシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-257">次の例は、<xref:System.Xml.Serialization.XmlElementAttribute> が適用されたフィールドと、<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> プロパティが `false`に設定されたフィールドを示しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-258">クラスがシリアル化されたときに、結果として XML 要素に割り当てられた名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="d9319-259">XML 要素の名前空間。</span><span class="sxs-lookup"><span data-stu-id="d9319-259">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-260"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> プロパティは、 [XML の名前空間](https://www.w3.org/TR/1999/REC-xml-names-19990114/)World Wide Web コンソーシアム仕様に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="d9319-261">プレフィックスに関連付けられている名前空間を作成するには、XML ドキュメントで使用される名前空間とプレフィックスを含む <xref:System.Xml.Serialization.XmlSerializerNamespaces> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d9319-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="d9319-262">各 <xref:System.Xml.Serialization.XmlArrayAttribute>に名前空間を設定するときは、<xref:System.Xml.Serialization.XmlSerializerNamespaces>内のいずれかの名前空間と一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d9319-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="d9319-263">XML が生成されると、各配列には、指定された名前空間に関連付けられたプレフィックスが正しく付加されます。</span><span class="sxs-lookup"><span data-stu-id="d9319-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-264">要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="d9319-265">コード生成の順序。</span><span class="sxs-lookup"><span data-stu-id="d9319-265">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-266"><xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 列挙体を使用して、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> プロパティを設定するコードを生成するように <xref:System.Web.Services.Description.ServiceDescriptionImporter> に指示します。</span><span class="sxs-lookup"><span data-stu-id="d9319-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9319-267"><xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> プロパティが1つのパブリックプロパティまたは型のフィールドで使用された後は、その型およびすべての継承された型のすべてのパブリックプロパティとパブリックフィールドに適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d9319-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9319-268">XML 要素を表すために使用されるオブジェクト型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-268">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="d9319-269">メンバーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d9319-269">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9319-270">フィールドまたはプロパティの派生型を指定するには、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="d9319-271">フィールドまたはプロパティが <xref:System.Collections.ArrayList>を返す場合は、<xref:System.Xml.Serialization.XmlElementAttribute> の複数のインスタンスをメンバーに適用できます。</span><span class="sxs-lookup"><span data-stu-id="d9319-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="d9319-272">各インスタンスについて、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを、配列に挿入できるオブジェクトの型に設定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9319-273">次の例では、<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> プロパティを使用して、<xref:System.Xml.Serialization.XmlElementAttribute>の派生オブジェクトを指定しています。</span><span class="sxs-lookup"><span data-stu-id="d9319-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="d9319-274">また、この例では、<xref:System.Collections.ArrayList>を返すフィールドに <xref:System.Xml.Serialization.XmlElementAttribute> の3つのインスタンスを適用します。</span><span class="sxs-lookup"><span data-stu-id="d9319-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="d9319-275">各インスタンスでは、フィールドで許可されている型を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9319-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
