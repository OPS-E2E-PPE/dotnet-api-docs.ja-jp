<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f04e7fc56c92a71dafa0726e55fde587e41abe7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82495943" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6785e-101">メンバー (<see cref="T:System.Xml.XmlElement" /> オブジェクトまたは <see cref="T:System.Xml.XmlNode" /> オブジェクトの配列を返すフィールド) に、シリアル化または逆シリアル化対象のオブジェクト内に対応するメンバーがない任意の XML 要素を表すオブジェクトを含めるように指定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-101">Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Xml.XmlNode" /> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="6785e-102">Silverlight、Windows Phone または Windows ストアアプリプロジェクトなどのポータブルクラスライブラリで作業していて、.NET Framework 4.0.3 以降を使用している場合は、<xref:System.Xml.XmlElement> と <xref:System.Xml.XmlNode>の代わりに <xref:System.Xml.Linq.XElement> または <xref:System.Xml.Linq.XNode> を使用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-102">When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XNode> in place of <xref:System.Xml.XmlElement> and <xref:System.Xml.XmlNode>.</span></span>  
  
 <span data-ttu-id="6785e-103">ドキュメントの一部として送信されるメタデータなど、XML ドキュメントの一部として送信できる任意のデータ (XML 要素) を含めるには、<xref:System.Xml.Serialization.XmlAnyElementAttribute> を使用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-103">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</span></span>  
  
 <span data-ttu-id="6785e-104"><xref:System.Xml.XmlElement> または <xref:System.Xml.XmlNode> オブジェクトの配列を返すフィールドに <xref:System.Xml.Serialization.XmlAnyElementAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-104">Apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="6785e-105">このようなフィールドは、オブジェクトがシリアル化または逆シリアル化されているかどうかによって、2つの方法で使用できます。</span><span class="sxs-lookup"><span data-stu-id="6785e-105">Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</span></span> <span data-ttu-id="6785e-106">シリアル化する場合、オブジェクトは、シリアル化されているオブジェクトに対応するメンバー (またはメンバー) を持たない場合でも、XML 要素または XML ノードとして生成されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-106">When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</span></span> <span data-ttu-id="6785e-107">属性を適用するときに <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> のプロパティ値を指定した場合、配列に挿入されたすべての <xref:System.Xml.XmlElement> オブジェクトまたは <xref:System.Xml.XmlNode> オブジェクトは、同じ要素名と既定の名前空間を持つ必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6785e-107">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="6785e-108"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティの値を設定する場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティも設定する必要があります。また、<xref:System.Xml.XmlElement> または <xref:System.Xml.XmlNode> オブジェクトの名前と名前空間の値も同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-108">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="6785e-109"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値が指定されていない場合、<xref:System.Xml.XmlElement> オブジェクトまたは <xref:System.Xml.XmlNode> オブジェクトは任意の要素名を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="6785e-109">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="6785e-110"><xref:System.Xml.Serialization.XmlSerializer> クラスの <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出すと、逆シリアル化されるオブジェクト内の対応するメンバーを持たないすべての要素が配列に収集されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-110">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="6785e-111">逆シリアル化後に、<xref:System.Xml.XmlElement> 項目のコレクションを反復処理してデータを処理します。</span><span class="sxs-lookup"><span data-stu-id="6785e-111">After deserialization, iterate through the collection of <xref:System.Xml.XmlElement> items to process the data.</span></span> <span data-ttu-id="6785e-112"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値を指定した場合、配列にはその名前を持つ XML 要素だけが格納されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-112">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="6785e-113"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値を指定しない場合、配列には、クラスに対応するメンバーを持たないすべての要素が格納されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-113">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="6785e-114">クラスに属性が適用される複数のフィールドが含まれている場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>を使用するか、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティと <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティを使用して、配列の内容を区別します。</span><span class="sxs-lookup"><span data-stu-id="6785e-114">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="6785e-115">このようなクラス (複数のフィールドを含む) にも、逆シリアル化中に区別プロパティ値が設定されていない (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> および <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 1 つのフィールドが含まれている場合、この配列には、他の配列にまだ含まれていない不明な XML 要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6785e-115">If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="6785e-116">クラスに複数のフィールドが含まれていて、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>の区別、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> および <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 値が設定されていない場合、逆シリアル化時の動作は指定されません。</span><span class="sxs-lookup"><span data-stu-id="6785e-116">If a class contains more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the behavior during deserialization is unspecified.</span></span>  
  
 <span data-ttu-id="6785e-117">また、1つの <xref:System.Xml.XmlElement> オブジェクトを返すフィールドに <xref:System.Xml.Serialization.XmlAnyElementAttribute> を適用することもできます。</span><span class="sxs-lookup"><span data-stu-id="6785e-117">You can also apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns a single <xref:System.Xml.XmlElement> object.</span></span> <span data-ttu-id="6785e-118">その場合は、<xref:System.Xml.XmlElement> クラスのプロパティとメソッドを使用して、不明な要素を再帰的に反復処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-118">If you do so, you must use the properties and methods of the <xref:System.Xml.XmlElement> class to recursively iterate through the unknown elements.</span></span>  
  
 <span data-ttu-id="6785e-119"><xref:System.Xml.Serialization.XmlAnyElementAttribute> の複数のインスタンスをクラスメンバーに適用できますが、各インスタンスには個別の <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティ値が必要です。</span><span class="sxs-lookup"><span data-stu-id="6785e-119">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="6785e-120">また、インスタンスごとに同じ <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティが設定されている場合は、インスタンスごとに個別の <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティ値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-120">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
 <span data-ttu-id="6785e-121"><xref:System.Xml.Serialization.XmlAnyElementAttribute> をクラスのメンバーに適用した場合、<xref:System.Xml.Serialization.XmlSerializer> の <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> イベントと <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="6785e-121">The <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> and <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> events of the <xref:System.Xml.Serialization.XmlSerializer> do not occur if you apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a member of a class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6785e-122">長い <xref:System.Xml.Serialization.XmlAnyElementAttribute>ではなく、コード内の `XmlAnyElement` という単語を使用できます。</span><span class="sxs-lookup"><span data-stu-id="6785e-122">You can use the word `XmlAnyElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span></span>  
  
 <span data-ttu-id="6785e-123">属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6785e-123">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6785e-124">次の例では、<xref:System.Xml.XmlElement> オブジェクトの配列を返す `AllElements` という名前のフィールドに <xref:System.Xml.Serialization.XmlAnyElementAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-124">The following example applies the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field named `AllElements` that returns an array of <xref:System.Xml.XmlElement> objects.</span></span>  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="6785e-125">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="6785e-125">Introducing XML Serialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6785e-126"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6785e-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6785e-127"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6785e-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-128">フィールドのシリアル化をオーバーライドする場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-128">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="6785e-129">シリアル化のオーバーライドの詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6785e-129">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6785e-130"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="6785e-130">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="6785e-131"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名を指定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-132">フィールドのシリアル化をオーバーライドする場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-132">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="6785e-133">シリアル化のオーバーライドの詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6785e-133">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6785e-134"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="6785e-134">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <param name="ns"><span data-ttu-id="6785e-135">XML 要素の XML 名前空間。</span><span class="sxs-lookup"><span data-stu-id="6785e-135">The XML namespace of the XML element.</span></span></param>
        <summary><span data-ttu-id="6785e-136"><see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントに生成される XML 要素名とその XML 名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document and its XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-137">フィールドのシリアル化をオーバーライドする場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="6785e-137">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="6785e-138">シリアル化のオーバーライドの詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6785e-138">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6785e-139">XML 要素名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-139">Gets or sets the XML element name.</span></span></summary>
        <value><span data-ttu-id="6785e-140">XML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="6785e-140">The name of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-141">属性を適用するときに <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> のプロパティ値を指定した場合、配列に挿入されたすべての <xref:System.Xml.XmlElement> オブジェクトまたは <xref:System.Xml.XmlNode> オブジェクトは、同じ要素名と既定の名前空間を持つ必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6785e-141">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="6785e-142"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティの値を設定する場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティも設定する必要があります。また、<xref:System.Xml.XmlElement> または <xref:System.Xml.XmlNode> オブジェクトの名前と名前空間の値も同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-142">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="6785e-143"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値が指定されていない場合、<xref:System.Xml.XmlElement> オブジェクトまたは <xref:System.Xml.XmlNode> オブジェクトは任意の要素名を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="6785e-143">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="6785e-144"><xref:System.Xml.Serialization.XmlSerializer> クラスの <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出すと、逆シリアル化されるオブジェクト内の対応するメンバーを持たないすべての属性が配列に収集されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-144">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="6785e-145"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値を指定した場合、配列にはその名前を持つ XML 要素だけが格納されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-145">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="6785e-146"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 値を指定しない場合、配列には、クラスに対応するメンバーを持たないすべての要素が格納されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-146">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="6785e-147">クラスに属性が適用される複数のフィールドが含まれている場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティと <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティを使用して、配列の内容を区別します。</span><span class="sxs-lookup"><span data-stu-id="6785e-147">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="6785e-148">このようなクラス (複数のフィールドを含む) にも、逆シリアル化中に区別プロパティ値が設定されていない (つまり、<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> および <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 1 つのフィールドが含まれている場合、配列には、他の配列にまだ含まれていない XML 要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6785e-148">If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="6785e-149">複数のフィールドを追加するときに、区別 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> または <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 値が設定されていない場合、クラスの最後のフィールドには、他の配列にまだ含まれていないすべての不明な要素が含まれ、その他のフィールドは `null`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-149">If you add more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to `null`.</span></span>  
  
 <span data-ttu-id="6785e-150"><xref:System.Xml.Serialization.XmlAnyElementAttribute> の複数のインスタンスをクラスメンバーに適用できますが、各インスタンスには個別の <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティ値が必要です。</span><span class="sxs-lookup"><span data-stu-id="6785e-150">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="6785e-151">また、インスタンスごとに同じ <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> プロパティが設定されている場合は、インスタンスごとに個別の <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティ値を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-151">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6785e-152">配列メンバーの要素名が、<see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> プロパティに指定されている要素名と一致しません。</span><span class="sxs-lookup"><span data-stu-id="6785e-152">The element name of an array member does not match the element name specified by the <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6785e-153">XML ドキュメントに生成される XML 名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-153">Gets or sets the XML namespace generated in the XML document.</span></span></summary>
        <value><span data-ttu-id="6785e-154">XML 名前空間。</span><span class="sxs-lookup"><span data-stu-id="6785e-154">An XML namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-155"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティを使用すると、XML 属性の一意の名前を設定できます。</span><span class="sxs-lookup"><span data-stu-id="6785e-155">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property allows you to set a unique name for the XML attribute.</span></span> <span data-ttu-id="6785e-156"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティは、World Wide Web コンソーシアムの[xml ドキュメント内の名前](https://www.w3.org/TR/xml-names/)空間にある xml 名前空間を作成するための規則に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="6785e-156">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the [Namespaces in XML](https://www.w3.org/TR/xml-names/) document from the World Wide Web Consortium.</span></span>
  
 <span data-ttu-id="6785e-157"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティをプレフィックス付きの名前に設定するには、XML ドキュメントで使用される名前空間とプレフィックスを含む <xref:System.Xml.Serialization.XmlSerializerNamespaces> を作成します。</span><span class="sxs-lookup"><span data-stu-id="6785e-157">To set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to a prefixed name, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="6785e-158"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> プロパティを、<xref:System.Xml.Serialization.XmlSerializerNamespaces>内のいずれかの名前空間に設定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-158">Set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="6785e-159">XML が生成されると、属性名には、指定した名前空間に関連付けられているプレフィックスが正しく付加されます。</span><span class="sxs-lookup"><span data-stu-id="6785e-159">When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6785e-160">要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6785e-160">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="6785e-161">コード生成の順序。</span><span class="sxs-lookup"><span data-stu-id="6785e-161">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6785e-162"><xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 列挙体を使用して、<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> プロパティを設定するコードを生成するように <xref:System.Web.Services.Description.ServiceDescriptionImporter> に指示します。</span><span class="sxs-lookup"><span data-stu-id="6785e-162">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6785e-163"><xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> プロパティが1つのパブリックプロパティまたは型のフィールドで使用された後は、その型およびすべての継承された型のすべてのパブリックプロパティとパブリックフィールドに適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6785e-163">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
