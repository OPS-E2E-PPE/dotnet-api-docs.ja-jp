<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="839de729738187868ec9acfb9e2df692baf423e5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83957067" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP エンコード済みの XML としてクラス インスタンスがシリアル化されるときに、<see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されるスキーマを制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> クラスは、<xref:System.Xml.Serialization.XmlSerializer> がオブジェクトをエンコード済みの SOAP XML としてシリアル化または逆シリアル化する方法を制御する属性のファミリに属しています。 生成される XML は、World Wide Web コンソーシアムドキュメント「 [Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)」のセクション5に準拠しています。 類似する属性の完全な一覧については、「[エンコード済み SOAP シリアル化を制御する属性](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization)」を参照してください。  
  
 オブジェクトをエンコード済みの SOAP メッセージとしてシリアル化するには、<xref:System.Xml.Serialization.SoapReflectionImporter> クラスの <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> メソッドを使用して作成された <xref:System.Xml.Serialization.XmlTypeMapping> を使用して、<xref:System.Xml.Serialization.XmlSerializer> を構築します。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute> は、クラス宣言にのみ適用できます。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> プロパティは、生成された xml 要素型が、生成される xml ストリームの XML スキーマドキュメント (.xsd) に含まれるかどうかを判断します。 スキーマを表示するには、クラスを DLL ファイルにコンパイルします。 生成されたファイルを引数として[XML スキーマ定義ツール (xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)に渡します。 このツールでは、クラスが <xref:System.Xml.Serialization.XmlSerializer> クラスのインスタンスによってシリアル化されるときに生成される XML ストリームの XML スキーマが生成されます。  
  
 別の名前空間を設定すると、Xsd.exe によって、クラスがシリアル化されるときに生成される XML ストリーム用に別のスキーマ (.xsd) ファイルが書き込まれます。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> はクラスに適用され、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> は "SoapGroupType" に設定されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型のシリアル化をオーバーライドするときに、<xref:System.Xml.Serialization.SoapTypeAttribute> を作成します。 オブジェクトを <xref:System.Xml.Serialization.SoapAttributes> の <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> プロパティに割り当て、<xref:System.Xml.Serialization.SoapAttributes> を <xref:System.Xml.Serialization.SoapAttributeOverrides>に追加します。 SOAP シリアル化のオーバーライドの詳細については、<xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要を参照してください。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型のシリアル化をオーバーライドするときに、<xref:System.Xml.Serialization.SoapTypeAttribute> を作成します。 オブジェクトを <xref:System.Xml.Serialization.SoapAttributes> の <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> プロパティに割り当て、<xref:System.Xml.Serialization.SoapAttributes> を <xref:System.Xml.Serialization.SoapAttributeOverrides>に追加します。 SOAP シリアル化のオーバーライドの詳細については、<xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要を参照してください。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
        <param name="ns">型の XML 名前空間。</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、型の名前および型の XML 名前空間を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型のシリアル化をオーバーライドするときに、<xref:System.Xml.Serialization.SoapTypeAttribute> を作成します。 オブジェクトを <xref:System.Xml.Serialization.SoapAttributes> の <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> プロパティに割り当て、<xref:System.Xml.Serialization.SoapAttributes> を <xref:System.Xml.Serialization.SoapAttributeOverrides>に追加します。 SOAP シリアル化のオーバーライドの詳細については、「<xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要」を参照してください。  
  
 複数の型に対して <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 値を設定した場合 (つまり、それぞれに異なる <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 値を持つ複数のクラスに属性を適用した場合)、 [XML スキーマ定義ツール (xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)によって、それぞれの型に対して個別のスキーマファイル (.xsd) が生成されます。 これは、型ごとに異なる名前空間を設定すると、それぞれの型が他の型とは別に表示されるため、それぞれの型が独立したエンティティとして書き込まれる必要があるためです。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP エンコード済みの XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
        <value>SOAP エンコード済みの XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML スキーマドキュメントに型を含めるかどうかを指定するには、<xref:System.Xml.Serialization.SoapTypeAttribute> をクラス宣言に適用します。 <xref:System.Xml.Serialization.SoapTypeAttribute> クラスのプロパティを設定した結果を表示するには、アプリケーションを実行可能ファイルまたは DLL としてコンパイルし、生成されたファイルを[XML スキーマ定義ツール (xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)に渡します。 ツールは、クラスがシリアル化されるときに生成される XML ストリームの型定義を含むスキーマを書き込みます。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 型の名前空間を取得または設定します。</summary>
        <value>XML 型の名前空間。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数の型に対して <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 値を設定した場合 (つまり、それぞれに異なる <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 値を持つ複数のクラスに属性を適用した場合)、 [XML スキーマ定義ツール (xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)によって、それぞれの型に対して個別のスキーマファイル (.xsd) が生成されます。 これは、型ごとに異なる名前空間を設定すると、それぞれの型が他の型とは別に表示されるため、それぞれの型が独立したエンティティとして書き込まれる必要があるためです。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 型の名前を取得または設定します。</summary>
        <value>XML 型の名前。 既定値は、クラス名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> をクラスに適用して、xml 型の名前空間、XML 型の名前、および XML スキーマドキュメントに型を含めるかどうかを指定します。 <xref:System.Xml.Serialization.SoapTypeAttribute> オブジェクトのプロパティを設定した結果を表示するには、アプリケーションを実行可能ファイルまたは DLL としてコンパイルし、生成されたファイルを[XML スキーマ定義ツール (xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)に渡します。 このツールは、型定義を含むスキーマを書き込みます。  
  
   
  
## Examples  
 次の例では、`Group`という名前のクラスをシリアル化します。 <xref:System.Xml.Serialization.SoapTypeAttribute> は、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "SoapGroupType" に設定されたクラスに適用されます。 <xref:System.Xml.Serialization.SoapTypeAttribute> もオーバーライドされ、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> が "Team" に変更されます。 どちらのバージョンもシリアル化され、SoapType .xml と SoapType2 という2つのファイルが生成されます。  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
