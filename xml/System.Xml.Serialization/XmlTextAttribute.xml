<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70293392585b1dab1c716856faa335231fb2bf75" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75047043" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c70b-101"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が、クラスをシリアル化または逆シリアル化するときに、そのクラスに含まれる特定のメンバーを XML テキストとして処理する必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-101">Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer" /> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c70b-102"><xref:System.Xml.Serialization.XmlTextAttribute> は、<xref:System.Xml.Serialization.XmlSerializer> がオブジェクトをシリアル化および逆シリアル化する方法を制御する属性ファミリ (<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> および <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを使用) に属しています。</span><span class="sxs-lookup"><span data-stu-id="5c70b-102">The <xref:System.Xml.Serialization.XmlTextAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes and deserializes an object (through its <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> and <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> methods).</span></span> <span data-ttu-id="5c70b-103">類似する属性の完全な一覧については、「 [XML シリアル化を制御する属性](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="5c70b-104">クラスで適用できる <xref:System.Xml.Serialization.XmlTextAttribute> クラスのインスタンスは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="5c70b-104">Only one instance of the <xref:System.Xml.Serialization.XmlTextAttribute> class can be applied in a class.</span></span>  
  
 <span data-ttu-id="5c70b-105">パブリックフィールドと、プリミティブ型と列挙型を返すパブリックな読み取り/書き込みプロパティに <xref:System.Xml.Serialization.XmlTextAttribute> を適用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-105">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to public fields and public read/write properties that return primitive and enumeration types.</span></span>  
  
 <span data-ttu-id="5c70b-106">文字列の配列を返すフィールドまたはプロパティに <xref:System.Xml.Serialization.XmlTextAttribute> を適用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-106">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="5c70b-107"><xref:System.Object> 型の配列に属性を適用することもできますが、<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> プロパティを string に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c70b-107">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="5c70b-108">その場合、配列に挿入された文字列はすべて XML テキストとしてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-108">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
 <span data-ttu-id="5c70b-109"><xref:System.Xml.Serialization.XmlTextAttribute> は、<xref:System.Xml.XmlNode> または <xref:System.Xml.XmlNode> オブジェクトの配列を返すフィールドにも適用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-109">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="5c70b-110">既定では、<xref:System.Xml.Serialization.XmlSerializer> は、クラスメンバーを XML 要素としてシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-110">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes a class member as an XML element.</span></span> <span data-ttu-id="5c70b-111">ただし、<xref:System.Xml.Serialization.XmlTextAttribute> をメンバーに適用すると、<xref:System.Xml.Serialization.XmlSerializer> はその値を XML テキストに変換します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-111">However, if you apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a member, the <xref:System.Xml.Serialization.XmlSerializer> translates its value into XML text.</span></span> <span data-ttu-id="5c70b-112">これは、値が XML 要素のコンテンツにエンコードされることを意味します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-112">This means that the value is encoded into the content of an XML element.</span></span>  
  
 <span data-ttu-id="5c70b-113">Xml スキーマ[定義ツール (xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)では、xml スキーマ定義 (xsd) ファイルからクラスを作成するときに、<xref:System.Xml.Serialization.XmlTextAttribute> が生成されることがあります。</span><span class="sxs-lookup"><span data-stu-id="5c70b-113">The [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) occasionally generates the <xref:System.Xml.Serialization.XmlTextAttribute> when creating classes from an XML Schema definition (XSD) file.</span></span> <span data-ttu-id="5c70b-114">このエラーは、スキーマに混合コンテンツの `complexType` が含まれている場合に発生します。この場合、対応するクラスには、<xref:System.Xml.Serialization.XmlTextAttribute> が適用される文字列配列を返すメンバーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-114">This occurs when the schema contains a `complexType` with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <xref:System.Xml.Serialization.XmlTextAttribute> is applied.</span></span> <span data-ttu-id="5c70b-115">たとえば、`Xml Schema Definition` ツールがこのスキーマを処理する場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="5c70b-115">For example, when the `Xml Schema Definition` tool processes this schema:</span></span>  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 <span data-ttu-id="5c70b-116">次のクラスが生成されます (余分なスペースと解説は削除されています)。</span><span class="sxs-lookup"><span data-stu-id="5c70b-116">the following class is generated (extra spaces and remarks have been removed):</span></span>  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 <span data-ttu-id="5c70b-117">属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-117">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c70b-118">長い <xref:System.Xml.Serialization.XmlTextAttribute>ではなく、コード内の `XmlText` という単語を使用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-118">You can use the word `XmlText` in your code instead of the longer <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="5c70b-119">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="5c70b-119">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="5c70b-120">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="5c70b-120">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="5c70b-121">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="5c70b-121">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="5c70b-122">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="5c70b-122">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="5c70b-123">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="5c70b-123">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c70b-124"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-124">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c70b-125"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c70b-126"><xref:System.Xml.Serialization.XmlAttributes>を作成し、その <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> プロパティを <xref:System.Xml.Serialization.XmlTextAttribute>に設定することによって、<xref:System.Xml.Serialization.XmlSerializer> がパブリックフィールドまたはパブリックの読み取り/書き込みプロパティをシリアル化する方法をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-126">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="5c70b-127">詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-127">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c70b-128">次の例では、`Comment`という名前のパブリックフィールドを含むクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-128">The following example serializes a class that contains a public field, named `Comment`.</span></span> <span data-ttu-id="5c70b-129">この例では、フィールドに <xref:System.Xml.Serialization.XmlTextAttribute> を適用し、そのシリアル化を XML 要素としてオーバーライドし、代わりに XML テキストとしてシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-129">The example applies an <xref:System.Xml.Serialization.XmlTextAttribute> to the field, thereby overriding its serialization as an XML element, and instead serializing it as XML text.</span></span>  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5c70b-130">シリアル化するメンバーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5c70b-130">The <see cref="T:System.Type" /> of the member to be serialized.</span></span></param>
        <summary><span data-ttu-id="5c70b-131"><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c70b-132"><xref:System.Xml.Serialization.XmlAttributes>を作成し、その <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> プロパティを <xref:System.Xml.Serialization.XmlTextAttribute>に設定することによって、<xref:System.Xml.Serialization.XmlSerializer> がパブリックフィールドまたはパブリックの読み取り/書き込みプロパティをシリアル化する方法をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-132">You can override the way that the <xref:System.Xml.Serialization.XmlSerializer> serializes a public field or public read/write property by creating an <xref:System.Xml.Serialization.XmlAttributes>, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property to an <xref:System.Xml.Serialization.XmlTextAttribute>.</span></span> <span data-ttu-id="5c70b-133">詳細については、<xref:System.Xml.Serialization.XmlAttributeOverrides> クラスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-133">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c70b-134"><see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されたテキストの XML スキーマ定義言語 (XSD: XML Schema Definition Language) データ型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-134">Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="5c70b-135">XML スキーマ (XSD) データ型。</span><span class="sxs-lookup"><span data-stu-id="5c70b-135">An XML Schema (XSD) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c70b-136"><xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> プロパティを XML スキーマの単純データ型に設定すると、生成される XML の形式に影響します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-136">Setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property to an XML Schema simple data type affects the format of the generated XML.</span></span> <span data-ttu-id="5c70b-137">たとえば、プロパティを "date" に設定すると、生成されるテキストは一般の日付のスタイル (たとえば、2001-08-31) で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-137">For example, setting the property to "date" causes the generated text to be formatted in the general date style, for example: 2001-08-31.</span></span> <span data-ttu-id="5c70b-138">これに対して、プロパティを "dateTime" に設定すると、国際標準化機構ドキュメント8601「日付と時刻の表現」で定義されているように、特定の瞬間が得られます。例: 2001-08-15T06:59: 11.0508456-07:00。</span><span class="sxs-lookup"><span data-stu-id="5c70b-138">By contrast, setting the property to "dateTime" results in a specific instant as defined by the International Organization for Standardization document 8601, "Representations of Dates and Times", for example: 2001-08-15T06:59:11.0508456-07:00.</span></span>  
  
 <span data-ttu-id="5c70b-139">[Xml スキーマ定義ツール (xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)を使用してコンパイルされたファイルの xml スキーマを生成する場合にも、<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> プロパティを設定した場合の効果が得られます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-139">The effect of setting the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property can also be seen when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate the XML Schema for a compiled file.</span></span> <span data-ttu-id="5c70b-140">ツールの使用方法の詳細については、「 [Xml スキーマ定義ツールと Xml シリアル化](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-140">For more information on using the tool, see [The XML Schema Definition Tool and XML Serialization](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="5c70b-141">次の表は、XML スキーマの単純なデータ型と .NET に相当するものを示しています。</span><span class="sxs-lookup"><span data-stu-id="5c70b-141">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="5c70b-142">XML スキーマ `base64Binary` および `hexBinary` データ型については、<xref:System.Byte> 構造体の配列を使用し、必要に応じて <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> が "base64Binary" または "hexBinary" に設定された <xref:System.Xml.Serialization.XmlTextAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-142">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="5c70b-143">XML スキーマ `time` および `date` データ型については、<xref:System.DateTime> 型を使用し、<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> が "date" または "time" に設定されている <xref:System.Xml.Serialization.XmlTextAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-143">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlTextAttribute> with the <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="5c70b-144">文字列にマップされているすべての XML スキーマデータ型について、その <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> プロパティが XML スキーマデータ型に設定されている <xref:System.Xml.Serialization.XmlTextAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-144">For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlTextAttribute> with its <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> property set to the XML Schema data type.</span></span> <span data-ttu-id="5c70b-145">これによって、シリアル化形式は変更されず、メンバーのスキーマのみが変更されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-145">Note that this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c70b-146">プロパティでは大文字と小文字が区別されるため、XML スキーマデータ型の1つに厳密に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c70b-146">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c70b-147">バイナリデータを XML 要素として渡すことは、XML 属性として渡すよりも効率的です。</span><span class="sxs-lookup"><span data-stu-id="5c70b-147">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="5c70b-148">XML スキーマデータ型の詳細については、「 [Xml スキーマパート 2:](https://www.w3.org/TR/xmlschema-2/)データ型」の World Wide Web コンソーシアムドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5c70b-148">For more information about XML Schema data types, see the World Wide Web Consortium document named [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="5c70b-149">XSD データ型</span><span class="sxs-lookup"><span data-stu-id="5c70b-149">XSD data type</span></span>|<span data-ttu-id="5c70b-150">.NET データ型</span><span class="sxs-lookup"><span data-stu-id="5c70b-150">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="5c70b-151">anyURI</span><span class="sxs-lookup"><span data-stu-id="5c70b-151">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-152">base64Binary</span><span class="sxs-lookup"><span data-stu-id="5c70b-152">base64Binary</span></span>|<span data-ttu-id="5c70b-153"><xref:System.Byte> オブジェクトの配列</span><span class="sxs-lookup"><span data-stu-id="5c70b-153">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="5c70b-154">boolean</span><span class="sxs-lookup"><span data-stu-id="5c70b-154">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="5c70b-155">byte</span><span class="sxs-lookup"><span data-stu-id="5c70b-155">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="5c70b-156">date</span><span class="sxs-lookup"><span data-stu-id="5c70b-156">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5c70b-157">dateTime</span><span class="sxs-lookup"><span data-stu-id="5c70b-157">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5c70b-158">decimal</span><span class="sxs-lookup"><span data-stu-id="5c70b-158">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="5c70b-159">double</span><span class="sxs-lookup"><span data-stu-id="5c70b-159">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="5c70b-160">ENTITY</span><span class="sxs-lookup"><span data-stu-id="5c70b-160">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-161">事業</span><span class="sxs-lookup"><span data-stu-id="5c70b-161">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-162">float</span><span class="sxs-lookup"><span data-stu-id="5c70b-162">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="5c70b-163">gDay</span><span class="sxs-lookup"><span data-stu-id="5c70b-163">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-164">gMonth</span><span class="sxs-lookup"><span data-stu-id="5c70b-164">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-165">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="5c70b-165">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-166">gYear</span><span class="sxs-lookup"><span data-stu-id="5c70b-166">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-167">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="5c70b-167">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-168">hexBinary</span><span class="sxs-lookup"><span data-stu-id="5c70b-168">hexBinary</span></span>|<span data-ttu-id="5c70b-169"><xref:System.Byte> オブジェクトの配列</span><span class="sxs-lookup"><span data-stu-id="5c70b-169">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="5c70b-170">ID</span><span class="sxs-lookup"><span data-stu-id="5c70b-170">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-171">IDREF</span><span class="sxs-lookup"><span data-stu-id="5c70b-171">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-172">IDREFS</span><span class="sxs-lookup"><span data-stu-id="5c70b-172">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-173">int</span><span class="sxs-lookup"><span data-stu-id="5c70b-173">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="5c70b-174">整数</span><span class="sxs-lookup"><span data-stu-id="5c70b-174">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-175">language</span><span class="sxs-lookup"><span data-stu-id="5c70b-175">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-176">long</span><span class="sxs-lookup"><span data-stu-id="5c70b-176">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="5c70b-177">name</span><span class="sxs-lookup"><span data-stu-id="5c70b-177">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-178">NCName</span><span class="sxs-lookup"><span data-stu-id="5c70b-178">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-179">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="5c70b-179">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-180">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="5c70b-180">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-181">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="5c70b-181">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-182">normalizedString</span><span class="sxs-lookup"><span data-stu-id="5c70b-182">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-183">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="5c70b-183">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-184">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="5c70b-184">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-185">NOTATION</span><span class="sxs-lookup"><span data-stu-id="5c70b-185">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-186">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="5c70b-186">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-187">QName</span><span class="sxs-lookup"><span data-stu-id="5c70b-187">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="5c70b-188">duration</span><span class="sxs-lookup"><span data-stu-id="5c70b-188">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-189">string</span><span class="sxs-lookup"><span data-stu-id="5c70b-189">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-190">short</span><span class="sxs-lookup"><span data-stu-id="5c70b-190">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="5c70b-191">時間</span><span class="sxs-lookup"><span data-stu-id="5c70b-191">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="5c70b-192">token</span><span class="sxs-lookup"><span data-stu-id="5c70b-192">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="5c70b-193">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="5c70b-193">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="5c70b-194">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="5c70b-194">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="5c70b-195">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="5c70b-195">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="5c70b-196">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="5c70b-196">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5c70b-197">指定した XML スキーマ データ型を .NET データ型に割り当てることはできません。</span><span class="sxs-lookup"><span data-stu-id="5c70b-197">The XML Schema data type you have specified cannot be mapped to the .NET data type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5c70b-198">指定した XML スキーマ データ型はプロパティとしては無効なので、そのメンバー型に変換できません。</span><span class="sxs-lookup"><span data-stu-id="5c70b-198">The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c70b-199">メンバーの型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5c70b-199">Gets or sets the type of the member.</span></span></summary>
        <value><span data-ttu-id="5c70b-200">メンバーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5c70b-200">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c70b-201"><xref:System.Type> プロパティは、プリミティブ型と列挙型にのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-201">The <xref:System.Type> property can only be set to primitive types and enumerations.</span></span>  
  
 <span data-ttu-id="5c70b-202"><xref:System.Xml.Serialization.XmlTextAttribute> は、<xref:System.Xml.XmlNode> または <xref:System.Xml.XmlNode> オブジェクトの配列を返すフィールドにも適用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-202">The <xref:System.Xml.Serialization.XmlTextAttribute> can also be applied to a field that returns an <xref:System.Xml.XmlNode> or an array of <xref:System.Xml.XmlNode> objects.</span></span>  
  
 <span data-ttu-id="5c70b-203">文字列の配列を返すフィールドまたはプロパティに <xref:System.Xml.Serialization.XmlTextAttribute> を適用できます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-203">You can apply the <xref:System.Xml.Serialization.XmlTextAttribute> to a field or property that returns an array of strings.</span></span> <span data-ttu-id="5c70b-204"><xref:System.Object> 型の配列に属性を適用することもできますが、<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> プロパティを string に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c70b-204">You can also apply the attribute to an array of type <xref:System.Object> but you must set the <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> property to string.</span></span> <span data-ttu-id="5c70b-205">その場合、配列に挿入された文字列はすべて XML テキストとしてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="5c70b-205">In that case, any strings inserted into the array are serialized as XML text.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
