<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1f905cb061865d44549bb0529453ca08e60d41e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174560" /></Metadata><TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <TypeSignature Language="F#" Value="type XmlSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b32e9-101">オブジェクトから XML ドキュメントへのシリアル化および XML ドキュメントからオブジェクトへの逆シリアル化を実行します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-101">Serializes and deserializes objects into and from XML documents.</span></span> <span data-ttu-id="b32e9-102"><see cref="T:System.Xml.Serialization.XmlSerializer" /> により、オブジェクトを XML にエンコードする方法を制御できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-102">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> enables you to control how objects are encoded into XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-103">XML シリアル化とは、オブジェクトのパブリック プロパティとパブリック フィールドを格納したり伝送できるようにシリアル形式 (この場合は XML) に変換する処理のことです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-103">XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.</span></span> <span data-ttu-id="b32e9-104">逆シリアル化は、XML 出力からオブジェクトを元の状態で再作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-104">Deserialization re-creates the object in its original state from the XML output.</span></span> <span data-ttu-id="b32e9-105">シリアル化は、オブジェクトの状態をストリームまたはバッファーに保存する方法と考えることができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-105">You can think of serialization as a way of saving the state of an object into a stream or buffer.</span></span> <span data-ttu-id="b32e9-106">たとえば、ASP.NET は、<xref:System.Xml.Serialization.XmlSerializer> クラスを使用して XML Web サービスメッセージをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-106">For example, ASP.NET uses the <xref:System.Xml.Serialization.XmlSerializer> class to encode XML Web service messages.</span></span>  
  
 <span data-ttu-id="b32e9-107">オブジェクトのデータは、クラス、フィールド、プロパティ、プリミティブ型、配列などのプログラミング構成要素、および <xref:System.Xml.XmlElement> オブジェクトまたは <xref:System.Xml.XmlAttribute> オブジェクトの形で埋め込まれている XML を使用して記述されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-107">The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlAttribute> objects.</span></span> <span data-ttu-id="b32e9-108">独自のクラスを作成するか、属性を使用して注釈を付けるか、または[Xml スキーマ定義ツール (xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)を使用して既存の xml スキーマ定義 (xsd) ドキュメントに基づいてクラスを生成するかを選択できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-108">You have the option of creating your own classes, annotated with attributes, or using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate the classes based on an existing XML Schema definition (XSD) document.</span></span> <span data-ttu-id="b32e9-109">XML スキーマがある場合は、Xsd.exe を実行して、スキーマに厳密に型指定された一連のクラスを生成し、シリアル化時にスキーマに準拠する属性で注釈を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-109">If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.</span></span>  
  
 <span data-ttu-id="b32e9-110">オブジェクトと XML の間でデータを転送するには、プログラミング言語の構造から XML スキーマへのマッピング、および XML スキーマからプログラミング言語の構造へのマッピングが必要です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-110">To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs.</span></span> <span data-ttu-id="b32e9-111">Xsd.exe などの <xref:System.Xml.Serialization.XmlSerializer> および関連ツールは、デザイン時と実行時の両方で、これら2つのテクノロジ間の橋渡しを行います。</span><span class="sxs-lookup"><span data-stu-id="b32e9-111">The <xref:System.Xml.Serialization.XmlSerializer> and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime.</span></span> <span data-ttu-id="b32e9-112">デザイン時に、Xsd.exe を使用して、カスタムクラスから XML スキーマドキュメント (.xsd) を生成するか、特定のスキーマからクラスを生成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-112">At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema.</span></span> <span data-ttu-id="b32e9-113">どちらの場合も、クラスにはカスタム属性で注釈が付けられ、XML スキーマシステムと共通言語ランタイムの間のマップ方法を <xref:System.Xml.Serialization.XmlSerializer> に指示します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-113">In either case, the classes are annotated with custom attributes to instruct the <xref:System.Xml.Serialization.XmlSerializer> how to map between the XML schema system and the common language runtime.</span></span> <span data-ttu-id="b32e9-114">実行時に、クラスのインスタンスを、指定されたスキーマに従った XML ドキュメントにシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-114">At runtime, instances of the classes can be serialized into XML documents that follow the given schema.</span></span> <span data-ttu-id="b32e9-115">同様に、これらの XML ドキュメントをランタイムオブジェクトに逆シリアル化することもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-115">Likewise, these XML documents can be deserialized into runtime objects.</span></span> <span data-ttu-id="b32e9-116">XML スキーマは省略可能であり、デザイン時または実行時には必須ではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-116">Note that the XML schema is optional, and not required at design time or runtime.</span></span>  
  
## <a name="controlling-generated-xml"></a><span data-ttu-id="b32e9-117">生成された XML の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-117">Controlling Generated XML</span></span>  
 <span data-ttu-id="b32e9-118">生成された XML を制御するには、クラスおよびメンバーに特殊な属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-118">To control the generated XML, you can apply special attributes to classes and members.</span></span> <span data-ttu-id="b32e9-119">たとえば、別の XML 要素名を指定するには、パブリックフィールドまたはパブリックプロパティに <xref:System.Xml.Serialization.XmlElementAttribute> を適用し、<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-119">For example, to specify a different XML element name, apply an <xref:System.Xml.Serialization.XmlElementAttribute> to a public field or property, and set the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span> <span data-ttu-id="b32e9-120">類似する属性の完全な一覧については、「 [XML シリアル化を制御する属性](https://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-120">For a complete list of similar attributes, see [Attributes That Control XML Serialization](https://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7).</span></span> <span data-ttu-id="b32e9-121">また、<xref:System.Xml.Serialization.IXmlSerializable> インターフェイスを実装して XML 出力を制御することもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-121">You can also implement the <xref:System.Xml.Serialization.IXmlSerializable> interface to control the XML output.</span></span>  
  
 <span data-ttu-id="b32e9-122">生成された XML が World Wide コンソーシアムドキュメントのセクション5に準拠している必要がある場合[(Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/))、<xref:System.Xml.Serialization.XmlTypeMapping>を使用して <xref:System.Xml.Serialization.XmlSerializer> を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-122">If the XML generated must conform to section 5 of the World Wide Consortium document, [Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/), you must construct the <xref:System.Xml.Serialization.XmlSerializer> with an <xref:System.Xml.Serialization.XmlTypeMapping>.</span></span> <span data-ttu-id="b32e9-123">エンコードされた SOAP XML をさらに制御するには、「属性」に示されている属性を使用して、[エンコード済み Soap シリアル化を制御](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-123">To further control the encoded SOAP XML, use the attributes listed in [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="b32e9-124"><xref:System.Xml.Serialization.XmlSerializer> を使用すると、厳密に型指定されたクラスを使用できるだけでなく、XML の柔軟性も得られます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-124">With the <xref:System.Xml.Serialization.XmlSerializer> you can take advantage of working with strongly typed classes and still have the flexibility of XML.</span></span> <span data-ttu-id="b32e9-125">厳密に型指定されたクラスで <xref:System.Xml.XmlElement>、<xref:System.Xml.XmlAttribute> または <xref:System.Xml.XmlNode> 型のフィールドまたはプロパティを使用すると、xml ドキュメントの一部を XML オブジェクトに直接読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-125">Using fields or properties of type <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> or <xref:System.Xml.XmlNode> in your strongly typed classes, you can read parts of the XML document directly into XML objects.</span></span>  
  
 <span data-ttu-id="b32e9-126">拡張可能な XML スキーマを使用する場合は、<xref:System.Xml.Serialization.XmlAnyElementAttribute> 属性と <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 属性を使用して、元のスキーマに含まれていない要素または属性をシリアル化および逆シリアル化することもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-126">If you work with extensible XML schemas, you can also use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> and <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> attributes to serialize and deserialize elements or attributes that are not found in the original schema.</span></span> <span data-ttu-id="b32e9-127">オブジェクトを使用するには、<xref:System.Xml.XmlElement> オブジェクトの配列を返すフィールドに <xref:System.Xml.Serialization.XmlAnyElementAttribute> を適用するか、<xref:System.Xml.XmlAttribute> オブジェクトの配列を返すフィールドに <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-127">To use the objects, apply an <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> objects, or apply an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> to a field that returns an array of <xref:System.Xml.XmlAttribute> objects.</span></span>  
  
 <span data-ttu-id="b32e9-128">プロパティやフィールドが複雑なオブジェクト (配列やクラス インスタンスなど) を返す場合、<xref:System.Xml.Serialization.XmlSerializer> は、そのオブジェクトを、メイン XML ドキュメント内で入れ子になっている要素に変換します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-128">If a property or field returns a complex object (such as an array or a class instance), the <xref:System.Xml.Serialization.XmlSerializer> converts it to an element nested within the main XML document.</span></span> <span data-ttu-id="b32e9-129">たとえば、次のコードの最初のクラスは、2番目のクラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-129">For example, the first class in the following code returns an instance of the second class.</span></span>  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 <span data-ttu-id="b32e9-130">シリアル化された XML 出力は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-130">The serialized, XML output looks like this:</span></span>  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 <span data-ttu-id="b32e9-131">スキーマに省略可能な要素 (minOccurs = ' 0 ') が含まれている場合、またはスキーマに既定値が含まれている場合は、2つのオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-131">If a schema includes an element that is optional (minOccurs = '0'), or if the schema includes a default value, you have two options.</span></span> <span data-ttu-id="b32e9-132">1つの方法として、次のコードに示すように、<xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> を使用して既定値を指定する方法があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-132">One option is to use <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> to specify the default value, as shown in the following code.</span></span>  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 <span data-ttu-id="b32e9-133">別の方法として、特殊なパターンを使用して、<xref:System.Xml.Serialization.XmlSerializer>によって認識されるブール値フィールドを作成し、そのフィールドに <xref:System.Xml.Serialization.XmlIgnoreAttribute> を適用することもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-133">Another option is to use a special pattern to create a Boolean field recognized by the <xref:System.Xml.Serialization.XmlSerializer>, and to apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> to the field.</span></span> <span data-ttu-id="b32e9-134">パターンは、`propertyNameSpecified`の形式で作成されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-134">The pattern is created in the form of `propertyNameSpecified`.</span></span> <span data-ttu-id="b32e9-135">たとえば、"MyFirstName" という名前のフィールドがある場合は、"MyFirstName" という名前の XML 要素を生成するかどうかを <xref:System.Xml.Serialization.XmlSerializer> に指示する "MyFirstNameSpecified" という名前のフィールドも作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-135">For example, if there is a field named "MyFirstName" you would also create a field named "MyFirstNameSpecified" that instructs the <xref:System.Xml.Serialization.XmlSerializer> whether to generate the XML element named "MyFirstName".</span></span> <span data-ttu-id="b32e9-136">これを次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-136">This is shown in the following example.</span></span>  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a><span data-ttu-id="b32e9-137">既定のシリアル化のオーバーライド</span><span class="sxs-lookup"><span data-stu-id="b32e9-137">Overriding Default Serialization</span></span>  
 <span data-ttu-id="b32e9-138">また、適切な属性の1つを作成し、それを <xref:System.Xml.Serialization.XmlAttributes> クラスのインスタンスに追加することによって、オブジェクトとそのフィールドおよびプロパティのセットのシリアル化をオーバーライドすることもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-138">You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <xref:System.Xml.Serialization.XmlAttributes> class.</span></span> <span data-ttu-id="b32e9-139">この方法でシリアル化をオーバーライドすると、2つの用途があります。最初に、ソースにアクセスできない場合でも、DLL 内で見つかったオブジェクトのシリアル化を制御および拡張できます。次に、シリアル化可能なクラスの1つのセットを作成できますが、複数の方法でオブジェクトをシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-139">Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</span></span> <span data-ttu-id="b32e9-140">詳細については、「<xref:System.Xml.Serialization.XmlAttributeOverrides> クラス」と「[方法: 派生クラスのシリアル化を制御する](https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-140">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class and [How to: Control Serialization of Derived Classes](https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84).</span></span>  
  
 <span data-ttu-id="b32e9-141">オブジェクトをシリアル化するには、<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-141">To serialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span> <span data-ttu-id="b32e9-142">オブジェクトを逆シリアル化するには、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-142">To deserialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
 <span data-ttu-id="b32e9-143">Xml ドキュメントに XML 名前空間を追加する方法については、「<xref:System.Xml.Serialization.XmlSerializerNamespaces>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-143">To add XML namespaces to an XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-144"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.IEnumerable> または <xref:System.Collections.ICollection>を実装するクラスに特別な処理を行います。</span><span class="sxs-lookup"><span data-stu-id="b32e9-144">The <xref:System.Xml.Serialization.XmlSerializer> gives special treatment to classes that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="b32e9-145"><xref:System.Collections.IEnumerable> を実装するクラスは、単一のパラメーターを受け取るパブリックな `Add` メソッドを実装している必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-145">A class that implements <xref:System.Collections.IEnumerable> must implement a public `Add` method that takes a single parameter.</span></span> <span data-ttu-id="b32e9-146">`Add` メソッドのパラメーターは、`GetEnumerator`から返された値の `Current` プロパティから返されたものと同じ型であるか、またはその型の基本の1つである必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-146">The `Add` method's parameter must be of the same type as is returned from the `Current` property on the value returned from `GetEnumerator`, or one of that type's bases.</span></span> <span data-ttu-id="b32e9-147"><xref:System.Collections.IEnumerable> に加えて <xref:System.Collections.ICollection> (<xref:System.Collections.CollectionBase>など) を実装するクラスには、整数を受け取るパブリック `Item` インデックス付きプロパティC#(ではインデクサー) が必要であり、整数型のパブリック `Count` プロパティが必要です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-147">A class that implements <xref:System.Collections.ICollection> (such as <xref:System.Collections.CollectionBase>) in addition to <xref:System.Collections.IEnumerable> must have a public `Item` indexed property (indexer in C#) that takes an integer, and it must have a public `Count` property of type integer.</span></span> <span data-ttu-id="b32e9-148">`Add` メソッドのパラメーターは、`Item` プロパティから返される型と同じ型であるか、またはその型の基本の1つである必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-148">The parameter to the `Add` method must be the same type as is returned from the `Item` property, or one of that type's bases.</span></span> <span data-ttu-id="b32e9-149"><xref:System.Collections.ICollection>を実装するクラスの場合、シリアル化される値は `GetEnumerator`を呼び出すことなく、インデックス付き `Item` プロパティから取得されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-149">For classes that implement <xref:System.Collections.ICollection>, values to be serialized are retrieved from the indexed `Item` property, not by calling `GetEnumerator`.</span></span>  
  
 <span data-ttu-id="b32e9-150">オブジェクトを逆シリアル化するには、一時ディレクトリ (TEMP 環境変数によって定義されている) に書き込むアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-150">You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.</span></span>  
  
## <a name="dynamically-generated-assemblies"></a><span data-ttu-id="b32e9-151">動的に生成されたアセンブリ</span><span class="sxs-lookup"><span data-stu-id="b32e9-151">Dynamically Generated Assemblies</span></span>  
 <span data-ttu-id="b32e9-152">パフォーマンスを向上させるために、XML シリアル化インフラストラクチャは、指定した型をシリアル化および逆シリアル化するためのアセンブリを動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-152">To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types.</span></span> <span data-ttu-id="b32e9-153">インフラストラクチャは、これらのアセンブリを検索して再利用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-153">The infrastructure finds and reuses those assemblies.</span></span> <span data-ttu-id="b32e9-154">この動作は、次のコンストラクターを使用する場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-154">This behavior occurs only when using the following constructors:</span></span>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="b32e9-155">他のコンストラクターのいずれかを使用すると、同じアセンブリの複数のバージョンが生成され、アンロードされることはありません。その結果、メモリリークが発生し、パフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-155">If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance.</span></span> <span data-ttu-id="b32e9-156">最も簡単な解決策は、前述の2つのコンストラクターのいずれかを使用することです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-156">The easiest solution is to use one of the previously mentioned two constructors.</span></span> <span data-ttu-id="b32e9-157">それ以外の場合は、次の例に示すように、アセンブリを <xref:System.Collections.Hashtable>にキャッシュする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-157">Otherwise, you must cache the assemblies in a <xref:System.Collections.Hashtable>, as shown in the following example.</span></span>  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}

// Use the serializer to serialize or deserialize.
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
End If  

' Use the serializer to serialize or deserialize.
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a><span data-ttu-id="b32e9-158">ArrayList とジェネリックリストのシリアル化</span><span class="sxs-lookup"><span data-stu-id="b32e9-158">Serialization of ArrayList and Generic List</span></span>  
 <span data-ttu-id="b32e9-159"><xref:System.Xml.Serialization.XmlSerializer> は、次のものをシリアル化または逆シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-159">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize or deserialize the following:</span></span>  
  
-   <span data-ttu-id="b32e9-160"><xref:System.Collections.ArrayList> の配列</span><span class="sxs-lookup"><span data-stu-id="b32e9-160">Arrays of <xref:System.Collections.ArrayList></span></span>  
  
-   <span data-ttu-id="b32e9-161"><xref:System.Collections.Generic.List%601> の配列</span><span class="sxs-lookup"><span data-stu-id="b32e9-161">Arrays of <xref:System.Collections.Generic.List%601></span></span>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a><span data-ttu-id="b32e9-162">Unsigned Long の列挙型のシリアル化</span><span class="sxs-lookup"><span data-stu-id="b32e9-162">Serialization of Enumerations of Unsigned Long</span></span>  
 <span data-ttu-id="b32e9-163">次の条件に該当する場合、<xref:System.Xml.Serialization.XmlSerializer> をインスタンス化して列挙型をシリアル化することはできません。 C#列挙体の型は unsigned long (`ulong`) で、列挙体には9223372036854775807より大きい値を持つすべてのメンバーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-163">The <xref:System.Xml.Serialization.XmlSerializer> cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (`ulong` in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807.</span></span> <span data-ttu-id="b32e9-164">たとえば、次のはシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-164">For example, the following cannot be serialized.</span></span>  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a><span data-ttu-id="b32e9-165">不使用の属性でマークされたオブジェクトはシリアル化されなくなりました</span><span class="sxs-lookup"><span data-stu-id="b32e9-165">Objects marked with the Obsolete Attribute no longer serialized</span></span>  
 <span data-ttu-id="b32e9-166">[!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] では、<xref:System.Xml.Serialization.XmlSerializer> クラスは `[Obsolete]`としてマークされているオブジェクトをシリアル化しなくなりました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-166">In the [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] the <xref:System.Xml.Serialization.XmlSerializer> class no longer serializes objects that are marked as `[Obsolete]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-167">次の例には、`PurchaseOrder` と `Test`という2つの主要なクラスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-167">The following example contains two main classes: `PurchaseOrder` and `Test`.</span></span> <span data-ttu-id="b32e9-168">`PurchaseOrder` クラスには、1回の購入に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-168">The `PurchaseOrder` class contains information about a single purchase.</span></span> <span data-ttu-id="b32e9-169">`Test` クラスには、注文書を作成し、作成された注文書を読み取るメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-169">The `Test` class contains the methods that create the purchase order, and that read the created purchase order.</span></span>  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b32e9-170">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-170">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-171">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-171">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-172">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-172">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-173">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-173">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-174">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-174">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-175">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-175">XML Schema Definition Tool (Xsd.exe)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84"><span data-ttu-id="b32e9-176">方法 : 派生クラスのシリアル化を制御する</span><span class="sxs-lookup"><span data-stu-id="b32e9-176">How to: Control Serialization of Derived Classes</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/90fda55c-7730-41e9-bc4b-6423a4b920af"><span data-ttu-id="b32e9-177">&lt;dateTimeSerialization&gt;要素</span><span class="sxs-lookup"><span data-stu-id="b32e9-177">&lt;dateTimeSerialization&gt;Element</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d129d10c-3eb7-45d9-8098-5fa853825e47"><span data-ttu-id="b32e9-178">&lt;xmlSerializer&gt; 要素</span><span class="sxs-lookup"><span data-stu-id="b32e9-178">&lt;xmlSerializer&gt; Element</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-179">
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-179">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b32e9-180">
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-180">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-181"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-181">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-182">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-182">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-183">通常、アプリケーションは、<xref:System.Xml.Serialization.XmlSerializer> が1つの XML インスタンスドキュメントに変換する複数のクラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-183">Commonly, an application defines several classes that the <xref:System.Xml.Serialization.XmlSerializer> converts into a single XML-instance document.</span></span> <span data-ttu-id="b32e9-184">ただし、<xref:System.Xml.Serialization.XmlSerializer> は、XML ルート要素を表すクラスの型である、1つの型のみを認識している必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-184">However, the <xref:System.Xml.Serialization.XmlSerializer> must know only one type--the type of the class that represents the XML root element.</span></span> <span data-ttu-id="b32e9-185"><xref:System.Xml.Serialization.XmlSerializer> は、下位クラスのすべてのインスタンスを自動的にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-185">The <xref:System.Xml.Serialization.XmlSerializer> automatically serializes all subordinate class instances.</span></span> <span data-ttu-id="b32e9-186">同様に、逆シリアル化には XML ルート要素の型のみが必要です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-186">Similarly, only the type of the XML root element is required for deserialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-187">次の例では、`Widget`という名前のオブジェクトをシリアル化する <xref:System.Xml.Serialization.XmlSerializer> を構築します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-187">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="b32e9-188">この例では、<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドを呼び出す前に、オブジェクトのさまざまなプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-188">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-189">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-189">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-190">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-190">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-191">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-191">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-192">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-192">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-193">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-193">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : System.Xml.Serialization.XmlTypeMapping -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer xmlTypeMapping" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping"><span data-ttu-id="b32e9-194">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-194">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="b32e9-195">ある型を別の型にマップするオブジェクトを指定して、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-195">Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class using an object that maps one type to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-196">このコンストラクターは、オブジェクトを SOAP メッセージにシリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> を作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-196">This constructor is used to create an <xref:System.Xml.Serialization.XmlSerializer> when you serialize an object into a SOAP message.</span></span> <span data-ttu-id="b32e9-197">生成される SOAP メッセージを制御するには、<xref:System.Xml.Serialization> 名前空間にある特殊な属性 ("Soap" で始まる) を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-197">To control the SOAP messages generated, use the special attributes (beginning with the word "Soap") found in the <xref:System.Xml.Serialization> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-198">次の例では、`Group`という名前のクラスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-198">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="b32e9-199">`GroupName`、`IgnoreThis` フィールド、および `GroupType` 列挙体のメンバーのシリアル化がオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-199">The serialization of the `GroupName`, `IgnoreThis` fields, and the members of the `GroupType` enumeration are overridden.</span></span> <span data-ttu-id="b32e9-200">`CreateOverrideSerializer` メソッドでは、<xref:System.Xml.Serialization.SoapAttributeOverrides> オブジェクトが作成され、オーバーライドされるメンバーまたは列挙ごとに、適切なプロパティセットを使用して <xref:System.Xml.Serialization.SoapAttributes> オブジェクトが作成され、<xref:System.Xml.Serialization.SoapAttributeOverrides> オブジェクトに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-200">In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> object is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> object is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides> object.</span></span> <span data-ttu-id="b32e9-201"><xref:System.Xml.Serialization.SoapAttributeOverrides> オブジェクトを使用して <xref:System.Xml.Serialization.XmlMapping> オブジェクトが作成され、<xref:System.Xml.Serialization.XmlMapping> オブジェクトを使用して、既定のシリアル化をオーバーライドする <xref:System.Xml.Serialization.XmlSerializer> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-201">An <xref:System.Xml.Serialization.XmlMapping> object is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides> object, and that <xref:System.Xml.Serialization.XmlMapping> object is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.</span></span>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-202">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-202">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-203">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-203">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-204">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-204">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-205">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-205">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-206">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-206">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-207"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-207">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="b32e9-208">すべての XML 要素で使用する既定の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b32e9-208">The default namespace to use for all the XML elements.</span></span></param>
        <summary><span data-ttu-id="b32e9-209">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-209">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="b32e9-210">すべての XML 要素の既定の名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-210">Specifies the default namespace for all the XML elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b32e9-211">次の例では、`Widget`という名前のオブジェクトをシリアル化する <xref:System.Xml.Serialization.XmlSerializer> を構築します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-211">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="b32e9-212">この例では、<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドを呼び出す前に、オブジェクトのさまざまなプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-212">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-213">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-213">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-214">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-214">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-215">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-215">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-216">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-216">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-217">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-217">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * Type[] -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, extraTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-218"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-218">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="b32e9-219">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-219">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-220">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-220">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type.</span></span> <span data-ttu-id="b32e9-221">プロパティまたはフィールドが配列を返す場合、<paramref name="extraTypes" /> パラメーターには、その配列に挿入できるオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-221">If a property or field returns an array, the <paramref name="extraTypes" /> parameter specifies objects that can be inserted into the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-222">既定では、パブリックプロパティまたはパブリックフィールドがオブジェクトまたはオブジェクトの配列を返す場合、オブジェクト型は自動的にシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-222">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="b32e9-223">ただし、クラスに <xref:System.Object>型の配列を返すフィールドまたはプロパティが含まれている場合は、その配列に任意のオブジェクトを挿入できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-223">However, if a class contains a field or property that returns an array of type <xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="b32e9-224">その場合、<xref:System.Object> 配列に挿入される可能性のあるすべてのオブジェクトの種類を想定するように <xref:System.Xml.Serialization.XmlSerializer> に指示する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-224">In that case, the <xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the <xref:System.Object> array.</span></span> <span data-ttu-id="b32e9-225">これを行うには、`extraTypes` パラメーターを使用して、シリアル化または逆シリアル化する追加のオブジェクト型を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-225">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="b32e9-226">`extraTypes` パラメーターを使用して、基底クラスから派生した型を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-226">You can also use the `extraTypes` parameter to specify types derived from a base class.</span></span> <span data-ttu-id="b32e9-227">たとえば、`Phone` という名前の基底クラスが存在し、`InternationalPhone` という名前のクラスがそこから派生しているとします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-227">For example, suppose a base class named `Phone` exists, and a class named `InternationalPhone` derives from it.</span></span> <span data-ttu-id="b32e9-228">`extraTypes` パラメーターを使用して、派生型も指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-228">Use the `extraTypes` parameter to specify the derived type as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-229">次の例では、オブジェクトの配列を返すパブリックフィールドを含むクラスのインスタンスをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-229">The following example serializes an instance of a class that contains a public field that returns an array of objects.</span></span> <span data-ttu-id="b32e9-230"><xref:System.Xml.Serialization.XmlSerializer> コンストラクターの `extraTypes` パラメーターは、配列内でシリアル化できるオブジェクトの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-230">The `extraTypes` parameter of the <xref:System.Xml.Serialization.XmlSerializer> constructor specifies the types of the objects that can be serialized in the array.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-231">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-231">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-232">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-232">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-233">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-233">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-234">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-234">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-235">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-235">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-236">シリアル化するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-236">The type of the object to serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="b32e9-237"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-237">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</span></span></param>
        <summary><span data-ttu-id="b32e9-238">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-238">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="b32e9-239">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-239">Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-240">`overrides` パラメーターを使用すると、フィールドとプロパティを XML でエンコードする方法を制御できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-240">The `overrides` parameter can be used to control how fields and properties are encoded in XML.</span></span> <span data-ttu-id="b32e9-241">これらの設定は、オブジェクトに既に存在する属性よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-241">These settings override any attributes that already exist on the objects.</span></span> <span data-ttu-id="b32e9-242">これは、ソースコードを変更できない場合や、同じクラスに複数のエンコーディングが必要な場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-242">This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-243">次の例では、DLL で定義されているクラスのインスタンスをシリアル化し、それを行うために、DLL で見つかったパブリックメンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-243">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-244">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-244">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-245">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-245">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-246">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-246">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-247">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-247">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-248">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-248">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, root)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-249"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-249">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="root"><span data-ttu-id="b32e9-250">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-250">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that represents the XML root element.</span></span></param>
        <summary><span data-ttu-id="b32e9-251">指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-251">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type.</span></span> <span data-ttu-id="b32e9-252">また、XML ルート要素として使用するクラスを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-252">It also specifies the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-253">XML ドキュメントのルート要素は、他のすべての要素を囲みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-253">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="b32e9-254">既定では、`type` パラメーターによって指定されたオブジェクトは、ルート要素としてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-254">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="b32e9-255">ルート要素の XML 要素名などのプロパティは、`type` オブジェクトから取得されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-255">Properties, such as the XML element name of the root element, are taken from the `type` object.</span></span> <span data-ttu-id="b32e9-256">ただし、`root` パラメーターを使用すると、<xref:System.Xml.Serialization.XmlRootAttribute>を指定することによって、既定のオブジェクトの情報を置き換えることができます。オブジェクトを使用すると、別の名前空間や要素名などを設定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-256">However, the `root` parameter allows you to replace the default object's information by specifying an <xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-257">次の例では、名前空間や要素名など、XML ルート要素のさまざまなプロパティを含む <xref:System.Xml.Serialization.XmlRootAttribute> を使用する <xref:System.Xml.Serialization.XmlSerializer> を構築します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-257">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that uses an <xref:System.Xml.Serialization.XmlRootAttribute> that contains various properties of the XML root element, such as its namespace and element name.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-258">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-258">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-259">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-259">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-260">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-260">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-261">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-261">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-262">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-262">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-263"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-263">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="b32e9-264"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-264">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="b32e9-265">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-265">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="b32e9-266">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-266">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="b32e9-267">XML ドキュメント内のすべての XML 要素の既定の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b32e9-267">The default namespace of all XML elements in the XML document.</span></span></param>
        <summary><span data-ttu-id="b32e9-268"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Object" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-268">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="b32e9-269">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-269">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="b32e9-270">このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-270">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-271">`overrides` パラメーターを使用すると、基底クラスの動作を拡張またはオーバーライドするクラスをシリアル化する [XmlSerializer コンストラクター (Type、XmlAttributeOverrides、Type\<xref: System.xml > を作成できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-271">The `overrides` parameter allows for the creation of an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer> that serializes a class that extends or overrides the behavior of a base class.</span></span> <span data-ttu-id="b32e9-272">たとえば、DLL を指定した場合、DLL に含まれているクラスを継承または拡張するクラスを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-272">For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL.</span></span> <span data-ttu-id="b32e9-273">このようなクラスをシリアル化するには、[XmlSerializer コンストラクター (type, XmlAttributeOverrides, Type\<xref: System.xml のオーバーライド) を使用して、[XmlSerializer コンストラクター (型、XmlAttributeOverrides、Type\<xref: > System.xml の > を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-273">To serialize such a class, you must use an instance of the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlAttributeOverrides> class when constructing the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b32e9-274">詳細については、「XmlSerializer コンストラクター (型、XmlAttributeOverrides、Type\<xref: System.xml オーバーライド >」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-274">For more details, see [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlAttributeOverrides>.</span></span>  
  
 <span data-ttu-id="b32e9-275">既定では、パブリックプロパティまたはパブリックフィールドがオブジェクトまたはオブジェクトの配列を返す場合、オブジェクト型は自動的にシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-275">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="b32e9-276">ただし、クラスに "XmlSerializer コンストラクター (Type, XmlAttributeOverrides, Type\<xref: System.object > 型の配列を返すフィールドまたはプロパティが含まれている場合、任意のオブジェクトをその配列に挿入できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-276">However, if a class contains a field or property that returns an array of type [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="b32e9-277">この場合、[xmlserializer コンストラクター (type、XmlAttributeOverrides、Type\<xref: System.xml > に挿入されるすべてのオブジェクトの種類が、[XmlSerializer コンストラクター (Type, XmlAttributeOverrides, Type\<xref: System.object > 配列に挿入されることを想定するように指示する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-277">In that case, the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Object> array.</span></span> <span data-ttu-id="b32e9-278">これを行うには、`extraTypes` パラメーターを使用して、シリアル化または逆シリアル化する追加のオブジェクト型を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-278">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="b32e9-279">XML ドキュメントのルート要素は、他のすべての要素を囲みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-279">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="b32e9-280">既定では、`type` パラメーターによって指定されたオブジェクトは、ルート要素としてシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-280">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="b32e9-281">ルート要素の XML 要素名などのプロパティは、`type` オブジェクトから取得されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-281">Properties, such as the XML element name of the root element are taken from the `type` object.</span></span> <span data-ttu-id="b32e9-282">ただし、`root` パラメーターを使用すると、既定のオブジェクトの情報を置き換えることができます。これを行うには、[XmlSerializer コンストラクター (Type, XmlAttributeOverrides, Type\<xref: XmlRootAttribute > を指定します。このオブジェクトを使用すると、別の名前空間や要素名などを設定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-282">However, the `root` parameter allows you to replace the default object's information by specifying an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
 <span data-ttu-id="b32e9-283">`defaultName` パラメーターを使用して、[XmlSerializer コンストラクター (Type、XmlAttributeOverrides、Type\<xref: System.xml > によって生成されるすべての XML 要素の既定の名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-283">Use the `defaultName` parameter to specify the default namespace of all XML elements generated by the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-284">次の例では、DLL で定義されているクラスのインスタンスをシリアル化し、それを行うために、クラスで見つかったパブリックメンバーをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-284">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class.</span></span> <span data-ttu-id="b32e9-285">この例では、追加の型の配列、すべての XML 要素の既定の名前空間、および XML ルート要素の情報を提供するために使用するクラスも指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-285">The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information.</span></span> <span data-ttu-id="b32e9-286">この例では、最初のコードが `HighSchool`という名前の DLL にコンパイルされていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-286">The example assumes that the code at the beginning has been compiled into a DLL named `HighSchool`.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-287">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-287">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-288">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-288">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-289">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-289">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-290">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-290">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-291">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-291">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-292"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-292">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="b32e9-293"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-293">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="b32e9-294">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-294">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="b32e9-295">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-295">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="b32e9-296">XML ドキュメント内のすべての XML 要素の既定の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b32e9-296">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="b32e9-297">型の位置。</span><span class="sxs-lookup"><span data-stu-id="b32e9-297">The location of the types.</span></span></param>
        <summary><span data-ttu-id="b32e9-298"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Object" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-298">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="b32e9-299">シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-299">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="b32e9-300">このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-300">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-301"><see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="b32e9-301">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="b32e9-302"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-302">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="b32e9-303">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-303">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="b32e9-304">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-304">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="b32e9-305">XML ドキュメント内のすべての XML 要素の既定の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b32e9-305">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="b32e9-306">型の位置。</span><span class="sxs-lookup"><span data-stu-id="b32e9-306">The location of the types.</span></span></param>
        <param name="evidence"><span data-ttu-id="b32e9-307">型にアクセスするために必要な資格情報を含む <see cref="T:System.Security.Policy.Evidence" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-307">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains credentials required to access types.</span></span></param>
        <summary><span data-ttu-id="b32e9-308">指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-308">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type.</span></span> <span data-ttu-id="b32e9-309">このオーバーロードでは、シリアル化操作または逆シリアル化操作で見つかる可能性がある他の型、すべての XML 要素の既定の名前空間、XML ルート要素として使用されるクラスとその場所、およびアクセスで要求される資格情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-309">This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-310">一時ディレクトリへのアクセスをより細かく制御し、コードの挿入と悪用を防止します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-310">Allows more precise control over access to a temporary directory and prevents code injection and exploitation.</span></span> <span data-ttu-id="b32e9-311">この方法を使用するには、場所を指定し、特定のユーザーのみにアクセス権を付与します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-311">To use this method, specify a location and give access only to specific users.</span></span> <span data-ttu-id="b32e9-312">管理者は、証拠をアクセス許可に一致させる証拠リストを使用してポリシーを設定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-312">Administrators can set up policies with evidence lists that match evidence to permissions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="abstract member CanDeserialize : System.Xml.XmlReader -&gt; bool&#xA;override this.CanDeserialize : System.Xml.XmlReader -&gt; bool" Usage="xmlSerializer.CanDeserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="b32e9-313">逆シリアル化するドキュメントを指す <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-313">An <see cref="T:System.Xml.XmlReader" /> that points to the document to deserialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-314"><see cref="T:System.Xml.Serialization.XmlSerializer" /> が、指定された XML ドキュメントを逆シリアル化できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-314">Gets a value that indicates whether this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize a specified XML document.</span></span></summary>
        <returns><span data-ttu-id="b32e9-315"><see langword="true" /> が指すオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> が逆シリアル化できる場合は <see cref="T:System.Xml.XmlReader" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-315"><see langword="true" /> if this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize the object that the <see cref="T:System.Xml.XmlReader" /> points to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b32e9-316">次の例では、<xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> メソッドを呼び出して、XML ドキュメントを逆シリアル化できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-316">The following example calls the <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> method to check whether an XML document can be deserialized.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberSignature Language="F#" Value="abstract member CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader&#xA;override this.CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader" Usage="xmlSerializer.CreateReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b32e9-317">シリアル化される XML ドキュメントを読み取るために使用されるオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-317">Returns an object used to read the XML document to be serialized.</span></span></summary>
        <returns><span data-ttu-id="b32e9-318">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-318">An <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> used to read the XML document.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="b32e9-319">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-319">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberSignature Language="F#" Value="abstract member CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter&#xA;override this.CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter" Usage="xmlSerializer.CreateWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b32e9-320">派生クラスでオーバーライドされた場合、オブジェクトのシリアル化に使用されるライターを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-320">When overridden in a derived class, returns a writer used to serialize the object.</span></span></summary>
        <returns><span data-ttu-id="b32e9-321"><see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> クラスを実装するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-321">An instance that implements the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="b32e9-322">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-322">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-323">XML ドキュメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-323">Deserializes an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="xmlSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b32e9-324">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-324">The <see cref="T:System.IO.Stream" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-325">指定した <see cref="T:System.IO.Stream" /> に格納されている XML ドキュメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-325">Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="b32e9-326">逆シリアル化される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-326">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-327">逆シリアル化とは、XML ドキュメントを読み取り、ドキュメントの XML スキーマ (XSD) に厳密に型指定されたオブジェクトを構築するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-327">Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="b32e9-328">逆シリアル化する前に、逆シリアル化されるオブジェクトの型を使用して <xref:System.Xml.Serialization.XmlSerializer> を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-328">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="b32e9-329">`stream` パラメーターを使用して、ストリームに書き込むように設計された <xref:System.IO.Stream> クラスから派生するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-329">Use the `stream` parameter to specify an object that derives from the <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="b32e9-330"><xref:System.IO.Stream> クラスから派生するクラスには次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-330">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-331"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列を逆シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-331">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-332">次の例では、<xref:System.IO.Stream> オブジェクトを使用してオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-332">The following example deserializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-333">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-333">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-334">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-334">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-335">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-335">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-336">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-336">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-337">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-337">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; obj" Usage="xmlSerializer.Deserialize textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textReader"><span data-ttu-id="b32e9-338">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-338">The <see cref="T:System.IO.TextReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-339">指定した <see cref="T:System.IO.TextReader" /> に格納されている XML ドキュメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-339">Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="b32e9-340">逆シリアル化される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-340">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-341">逆シリアル化とは、XML ドキュメントのインスタンスを読み取り、ドキュメントの XML スキーマ (XSD) に厳密に型指定されたオブジェクトを構築するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-341">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="b32e9-342">逆シリアル化する前に、逆シリアル化されるオブジェクトの型を使用して <xref:System.Xml.Serialization.XmlSerializer> を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-342">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="b32e9-343"><xref:System.IO.TextReader> から継承するクラスには、<xref:System.IO.StringReader> と <xref:System.IO.StreamReader>があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-343">Classes that inherit from <xref:System.IO.TextReader> include <xref:System.IO.StringReader> and <xref:System.IO.StreamReader>.</span></span> <span data-ttu-id="b32e9-344">オブジェクトを逆シリアル化するために <xref:System.IO.StreamReader> を使用する場合は、適切な <xref:System.Text.Encoding>で <xref:System.IO.StreamReader> を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-344">If you are using a <xref:System.IO.StreamReader> to deserialize an object, you must construct the <xref:System.IO.StreamReader> with an appropriate <xref:System.Text.Encoding>.</span></span> <span data-ttu-id="b32e9-345">XML ドキュメントによって指定されたエンコーディングは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-345">The encoding specified by the XML document is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-346">XML ドキュメントによって指定されたエンコーディングを使用するには、代わりに <xref:System.Xml.XmlReader> を受け取る <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-346">To use the encoding specified by the XML document, use the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> overload that takes an <xref:System.Xml.XmlReader> instead.</span></span> <span data-ttu-id="b32e9-347"><xref:System.Xml.XmlReader> は、XML ドキュメントによって指定されたエンコーディングを自動的に検出して使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-347">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-348"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列を逆シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-348">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-349">次の例では、<xref:System.IO.TextReader> オブジェクトを使用してオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-349">The following example deserializes an object using a <xref:System.IO.TextReader> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-350">逆シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-350">An error occurred during deserialization.</span></span> <span data-ttu-id="b32e9-351">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-351">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-352">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-352">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-353">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-353">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-354">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-354">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-355">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-355">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-356">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-356">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj&#xA;override this.Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj" Usage="xmlSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b32e9-357">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-357">The <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-358">指定した <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> に格納されている XML ドキュメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-358">Deserializes the XML document contained by the specified <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</span></span></summary>
        <returns><span data-ttu-id="b32e9-359">逆シリアル化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-359">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="b32e9-360">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-360">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="xmlSerializer.Deserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="b32e9-361">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-361">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-362">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-362">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="b32e9-363">逆シリアル化される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-363">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-364">逆シリアル化とは、XML ドキュメントのインスタンスを読み取り、ドキュメントの XML スキーマ (XSD) に厳密に型指定されたオブジェクトを構築するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-364">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="b32e9-365">逆シリアル化する前に、逆シリアル化されるオブジェクトの型を使用して <xref:System.Xml.Serialization.XmlSerializer> を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-365">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="b32e9-366"><xref:System.Xml.XmlReader> は、XML ドキュメントによって指定されたエンコーディングを自動的に検出して使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-366">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-367"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列を逆シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-367">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-368">次の例では、<xref:System.Xml.XmlReader>を使用してオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-368">The following example deserializes an object using an <xref:System.Xml.XmlReader>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-369">逆シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-369">An error occurred during deserialization.</span></span> <span data-ttu-id="b32e9-370">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-370">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-371">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-371">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-372">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-372">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-373">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-373">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-374">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-374">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-375">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-375">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="b32e9-376">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-376">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="b32e9-377">シリアル化された XML のエンコード スタイル。</span><span class="sxs-lookup"><span data-stu-id="b32e9-377">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="b32e9-378">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを、指定したエンコード スタイルを使用して逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-378">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and encoding style.</span></span></summary>
        <returns><span data-ttu-id="b32e9-379">逆シリアル化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-379">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-380">逆シリアル化とは、XML ドキュメントのインスタンスを読み取り、ドキュメントの XML スキーマ (XSD) に厳密に型指定されたオブジェクトを構築するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-380">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="b32e9-381">逆シリアル化する前に、逆シリアル化されるオブジェクトの型を使用して <xref:System.Xml.Serialization.XmlSerializer> を構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-381">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="b32e9-382">SOAP version 1.1 encoding の場合は、`encodingStyle` パラメーターを "<http://schemas.xmlsoap.org/soap/encoding/>" に設定します。それ以外の場合は、SOAP バージョン1.2 エンコーディングに対して "<http://www.w3.org/2001/12/soap-encoding>" に設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-382">Set the `encodingStyle` parameter to "<http://schemas.xmlsoap.org/soap/encoding/>" for SOAP version 1.1 encoding; otherwise, set it to "<http://www.w3.org/2001/12/soap-encoding>" for SOAP version 1.2 encoding.</span></span>  
  
 <span data-ttu-id="b32e9-383">**メモ**<xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列を逆シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-383">**Note** The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-384">逆シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-384">An error occurred during deserialization.</span></span> <span data-ttu-id="b32e9-385">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-385">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-386">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-386">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-387">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-387">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-388">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-388">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-389">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-389">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-390">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-390">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="b32e9-391">逆シリアル化するドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-391">The <see cref="T:System.Xml.XmlReader" /> that contains the document to deserialize.</span></span></param>
        <param name="events"><span data-ttu-id="b32e9-392"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-392">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="b32e9-393">指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。また、逆シリアル化で発生するイベントのオーバーライドを可能にします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-393">Deserializes an XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and allows the overriding of events that occur during deserialization.</span></span></summary>
        <returns><span data-ttu-id="b32e9-394">逆シリアル化される <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-394">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-395">逆シリアル化されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-395">The object being deserialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle, events)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="b32e9-396">ドキュメントの読み取りに使用される <see cref="T:System.Xml.XmlReader" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-396">An instance of the <see cref="T:System.Xml.XmlReader" /> class used to read the document.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="b32e9-397">使用されるエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="b32e9-397">The encoding used.</span></span></param>
        <param name="events"><span data-ttu-id="b32e9-398"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-398">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="b32e9-399">指定した <see cref="T:System.Xml.XmlReader" /> に格納されているデータを使用してオブジェクトを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-399">Deserializes the object using the data contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="b32e9-400">逆シリアル化されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-400">The object being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-401">このメソッドは、Web サービスシナリオでのみ不明なヘッダーを逆シリアル化するために必要です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-401">This method is required for deserialization of unknown headers for Web Service scenarios only.</span></span> <span data-ttu-id="b32e9-402">このメソッドを使用すると、Web サービスメソッドでのイベントの同期を回避できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-402">This method allows you to avoid event synchronization in Web Service methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-403">指定したマッピングから <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-403">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings mappings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="b32e9-404">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-404">An array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="b32e9-405"><see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列から作成された、<see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-405">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> objects.</span></span></summary>
        <returns><span data-ttu-id="b32e9-406"><see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-406">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks><span data-ttu-id="b32e9-407">呼び出し元は、このメソッドを繰り返し呼び出すときに、返されたシリアライザーをキャッシュすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-407">It is recommended for callers to cache the returned serializer when there are repeated calls to this method.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="b32e9-408">1 つの型から別の型への割り当てに使用される <see cref="T:System.Xml.Serialization.XmlMapping" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-408">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to map one type to another.</span></span></param>
        <param name="evidence"><span data-ttu-id="b32e9-409">共通言語ランタイム ポリシー システムに提示されるホスト データおよびアセンブリ データを含む <see cref="T:System.Security.Policy.Evidence" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-409">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains host and assembly data presented to the common language runtime policy system.</span></span></param>
        <summary><span data-ttu-id="b32e9-410">XML 型から別の型への割り当てから作成された <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-410">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class created from mappings of one XML type to another.</span></span></summary>
        <returns><span data-ttu-id="b32e9-411"><see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-411">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * Type -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="b32e9-412"><see cref="T:System.Xml.Serialization.XmlMapping" /> オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-412">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</span></span></param>
        <param name="type"><span data-ttu-id="b32e9-413">逆シリアル化されるオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-413">The <see cref="T:System.Type" /> of the deserialized object.</span></span></param>
        <summary><span data-ttu-id="b32e9-414">指定したマッピングから <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-414">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="b32e9-415"><see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-415">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="static member FromTypes : Type[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="b32e9-416"><see cref="T:System.Type" /> オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-416">An array of <see cref="T:System.Type" /> objects.</span></span></param>
        <summary><span data-ttu-id="b32e9-417">型の配列から作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-417">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of types.</span></span></summary>
        <returns><span data-ttu-id="b32e9-418"><see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b32e9-418">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-419"><xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> メソッドを使用すると、<xref:System.Type> オブジェクトの配列を処理する <xref:System.Xml.Serialization.XmlSerializer> オブジェクトの配列を効率的に作成できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-419">The <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method allows you to efficiently create an array of <xref:System.Xml.Serialization.XmlSerializer> objects for processing an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="b32e9-420">ただし、このメソッドを繰り返し呼び出す場合は、返されたシリアライザーを呼び出し元でキャッシュすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b32e9-420">However, it is recommended for callers to cache the returned serializers when there are repeated calls to this method.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="b32e9-421">次の例では、<xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> メソッドを使用して、<xref:System.Xml.Serialization.XmlSerializer> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-421">The following example uses the <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method to return an array of <xref:System.Xml.Serialization.XmlSerializer> objects.</span></span> <span data-ttu-id="b32e9-422">このコードには、<xref:System.Type> オブジェクトの配列を作成するためにそれぞれ使用される3つのクラス定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-422">The code includes three class definitions that are each used to create an array of <xref:System.Type> objects.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-423">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-423">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-424">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-424">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-425">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-425">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-426">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-426">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-427">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-427">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-428">型指定されたシリアライザーを格納しているアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-428">Returns an assembly that contains typed serializers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-429">[XML Serializer Generator Tool (Sgen)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)は、指定された型のオブジェクトをシリアル化または逆シリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> の実行時のパフォーマンスを向上させるために、指定したアセンブリ内の型の XML シリアル化アセンブリを作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-429">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="b32e9-430">このようなアセンブリの名前を返すには、<xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-430">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="b32e9-431">このようなアセンブリを、Web サービスを呼び出すクライアントアプリケーションの一部として配布する場合は、<xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> をクライアントの種類に適用して、アセンブリの場所と名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-431">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="b32e9-432">型のコレクション。</span><span class="sxs-lookup"><span data-stu-id="b32e9-432">A collection of types.</span></span></param>
        <param name="mappings"><span data-ttu-id="b32e9-433">1 つの型から別の型への変換に使用される <see cref="T:System.Xml.Serialization.XmlMapping" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="b32e9-433">A collection of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to convert one type to another.</span></span></param>
        <summary><span data-ttu-id="b32e9-434">指定した割り当てを使用して、指定した型をシリアル化または逆シリアル化するために使用される、カスタム シリアライザーを格納しているアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-434">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="b32e9-435">指定した型および割り当てのシリアライザーを格納している <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-435">An <see cref="T:System.Reflection.Assembly" /> object that contains serializers for the supplied types and mappings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] * System.CodeDom.Compiler.CompilerParameters -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="b32e9-436">データのシリアル化および逆シリアル化に使用されるオブジェクトを格納している <see cref="T:System.Type" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-436">An array of type <see cref="T:System.Type" /> that contains objects used to serialize and deserialize data.</span></span></param>
        <param name="mappings"><span data-ttu-id="b32e9-437">XML データを型データに割り当てる <see cref="T:System.Xml.Serialization.XmlMapping" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-437">An array of type <see cref="T:System.Xml.Serialization.XmlMapping" /> that maps the XML data to the type data.</span></span></param>
        <param name="parameters"><span data-ttu-id="b32e9-438">コンパイラを呼び出すために使用されるパラメーターを表す <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-438">An instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class that represents the parameters used to invoke a compiler.</span></span></param>
        <summary><span data-ttu-id="b32e9-439">指定した割り当てとコンパイラの設定およびオプションを使用して、指定した型をシリアル化または逆シリアル化するために使用される、カスタム シリアライザーを格納しているアセンブリを返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-439">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</span></span></summary>
        <returns><span data-ttu-id="b32e9-440">特別なバージョンの <see cref="T:System.Reflection.Assembly" /> を含む <see cref="T:System.Xml.Serialization.XmlSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-440">An <see cref="T:System.Reflection.Assembly" /> that contains special versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-441">特定の型のシリアル化または逆シリアル化のために特に作成された 1 つ以上のバージョンの <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-441">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize specific types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-442">[XML Serializer Generator Tool (Sgen)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)は、指定された型のオブジェクトをシリアル化または逆シリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> の実行時のパフォーマンスを向上させるために、指定したアセンブリ内の型の XML シリアル化アセンブリを作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-442">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="b32e9-443">このようなアセンブリの名前を返すには、<xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-443">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="b32e9-444">このようなアセンブリを、Web サービスを呼び出すクライアントアプリケーションの一部として配布する場合は、<xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> をクライアントの種類に適用して、アセンブリの場所と名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-444">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-445">逆シリアル化している <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-445">The <see cref="T:System.Type" /> you are deserializing.</span></span></param>
        <summary><span data-ttu-id="b32e9-446">指定した型のシリアル化または逆シリアル化のために特に作成された、1 つ以上のバージョンの <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-446">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize the specified type.</span></span></summary>
        <returns><span data-ttu-id="b32e9-447">型の <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="b32e9-447">The name of the assembly that contains an <see cref="T:System.Xml.Serialization.XmlSerializer" /> for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-448">[XML Serializer Generator Tool (Sgen)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)は、指定された型のオブジェクトをシリアル化または逆シリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> の実行時のパフォーマンスを向上させるために、指定したアセンブリ内の型の XML シリアル化アセンブリを作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-448">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="b32e9-449">このようなアセンブリの名前を返すには、<xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-449">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="b32e9-450">このようなアセンブリを、Web サービスを呼び出すクライアントアプリケーションの一部として配布する場合は、<xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> をクライアントの種類に適用して、アセンブリの場所と名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-450">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type * string -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b32e9-451">コレクション内に存在するかどうかを確認する対象の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-451">The <see cref="T:System.Type" /> you are interested in.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="b32e9-452">型の名前空間。</span><span class="sxs-lookup"><span data-stu-id="b32e9-452">The namespace of the type.</span></span></param>
        <summary><span data-ttu-id="b32e9-453">指定した名前空間にある指定した型のシリアライザーを格納しているアセンブリの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-453">Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</span></span></summary>
        <returns><span data-ttu-id="b32e9-454">特別に作成されたシリアライザーを格納しているアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="b32e9-454">The name of the assembly that contains specially built serializers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-455">[XML Serializer Generator Tool (Sgen)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md)は、指定された型のオブジェクトをシリアル化または逆シリアル化するときに、<xref:System.Xml.Serialization.XmlSerializer> の実行時のパフォーマンスを向上させるために、指定したアセンブリ内の型の XML シリアル化アセンブリを作成します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-455">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="b32e9-456">このようなアセンブリの名前を返すには、<xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-456">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="b32e9-457">このようなアセンブリを、Web サービスを呼び出すクライアントアプリケーションの一部として配布する場合は、<xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> をクライアントの種類に適用して、アセンブリの場所と名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-457">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b32e9-458">オブジェクトを XML ドキュメントにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-458">Serializes an object into an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="xmlSerializer.Serialize (stream, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b32e9-459">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-459">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-460">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-460">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-461">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.Stream" /> を使用してファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-461">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-462"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドは、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティを XML に変換します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-462">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="b32e9-463">メソッド、インデクサー、プライベートフィールド、または読み取り専用プロパティは変換されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-463">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="b32e9-464">パブリックとプライベートの両方のオブジェクトのフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-464">To serialize all of an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-465">`stream` パラメーターで、抽象 <xref:System.IO.Stream> クラスから派生したオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-465">In the `stream` parameter, specify an object that derives from the abstract <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="b32e9-466"><xref:System.IO.Stream> から派生するクラスには次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-466">Classes that derive from <xref:System.IO.Stream> include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-467"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-467">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-468">次の例では、<xref:System.IO.Stream> オブジェクトを使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-468">The following example serializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-469">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-469">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-470">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-470">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-471">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-471">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-472">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-472">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-473">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-473">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-474">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-474">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-475">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-475">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="b32e9-476">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-476">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-477">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-477">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-478">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.TextWriter" /> を使用してファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-478">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-479"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドは、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティを XML に変換します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-479">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="b32e9-480">メソッド、インデクサー、プライベートフィールド、または読み取り専用プロパティは変換されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-480">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="b32e9-481">パブリックとプライベートの両方で、オブジェクトのすべてのフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-481">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-482">`textWriter` パラメーターで、抽象 <xref:System.IO.TextWriter> クラスから派生したオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-482">In the `textWriter` parameter, specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="b32e9-483"><xref:System.IO.TextWriter> から派生するクラスには次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-483">Classes that derive from <xref:System.IO.TextWriter> include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-484"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-484">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-485">次の例では、<xref:System.IO.TextWriter>を使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-485">The following example serializes an object using a <xref:System.IO.TextWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-486">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-486">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-487">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-487">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-488">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-488">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-489">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-489">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-490">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-490">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit&#xA;override this.Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit" Usage="xmlSerializer.Serialize (o, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="b32e9-491">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-491">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="writer"><span data-ttu-id="b32e9-492">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-492">The <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> used to write the XML document.</span></span></param>
        <summary><span data-ttu-id="b32e9-493">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> を使用してファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-493">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="b32e9-494">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-494">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="b32e9-495">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-495">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-496">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-496">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="b32e9-497">指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.XmlWriter" /> を使用してファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-497">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-498"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドは、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティを XML に変換します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-498">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="b32e9-499">メソッド、インデクサー、プライベートフィールド、または読み取り専用プロパティは変換されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-499">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="b32e9-500">パブリックとプライベートの両方で、オブジェクトのすべてのフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-500">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-501">`xmlWriter` パラメーターで、抽象 <xref:System.Xml.XmlWriter> クラスから派生したオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-501">In the `xmlWriter` parameter, specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class.</span></span> <span data-ttu-id="b32e9-502"><xref:System.Xml.XmlTextWriter> は <xref:System.Xml.XmlWriter>から派生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-502">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-503"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-503">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-504">次の例では、<xref:System.Xml.XmlWriter>を使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-504">The following example serializes an object using an <xref:System.Xml.XmlWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-505">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-505">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-506">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-506">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-507">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-507">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-508">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-508">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-509">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-509">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-510">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-510">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-511">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-511">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (stream, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b32e9-512">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-512">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-513">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-513">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="b32e9-514">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-514">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="b32e9-515">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.Stream" /> を使用して、指定した名前空間を参照し、生成された XML ドキュメントをファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-515">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" /> that references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-516"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドが呼び出されると、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティが XML に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-516">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="b32e9-517">メソッド、インデクサー、プライベートフィールド、および読み取り専用プロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-517">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="b32e9-518">パブリックとプライベートの両方のフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-518">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-519">`stream` パラメーターを使用して、抽象 <xref:System.IO.Stream> クラスから派生したオブジェクトを指定します。このクラスは、ストリームに書き込むように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-519">Use the `stream` parameter to specify an object that derives from the abstract <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="b32e9-520"><xref:System.IO.Stream> クラスから派生するクラスには次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-520">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-521"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-521">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-522">次の例では、<xref:System.IO.Stream> オブジェクトを使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-522">The following example serializes an object with a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="b32e9-523">また、この例では、<xref:System.Xml.Serialization.XmlSerializerNamespaces> を作成し、オブジェクトに2つの名前空間を追加します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-523">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="b32e9-524">シリアル化されたオブジェクトを定義するクラスは、各要素の名前空間を指定するために <xref:System.Xml.Serialization.XmlElementAttribute> 属性でも属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-524">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-525">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-525">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-526">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-526">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-527">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-527">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-528">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-528">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-529">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-529">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-530">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-530">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-531">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-531">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="b32e9-532">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-532">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-533">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-533">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="b32e9-534">生成された XML ドキュメントで使用する名前空間を格納している <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-534">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> that contains namespaces for the generated XML document.</span></span></param>
        <summary><span data-ttu-id="b32e9-535">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.TextWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-535">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-536"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドが呼び出されると、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティが XML に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-536">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="b32e9-537">メソッド、インデクサー、プライベートフィールド、および読み取り専用プロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-537">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="b32e9-538">パブリックとプライベートの両方のフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-538">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-539">`textWriter` パラメーターを使用して、抽象 <xref:System.IO.TextWriter> クラスから派生するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-539">Use the `textWriter` parameter to specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="b32e9-540"><xref:System.IO.TextWriter> クラスから派生するクラスには次のものがあります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-540">Classes that derive from <xref:System.IO.TextWriter> class include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-541"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-541">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-542">次の例では、<xref:System.IO.TextWriter>を使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-542">The following example serializes an object with a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="b32e9-543">また、この例では <xref:System.Xml.Serialization.XmlSerializerNamespaces> オブジェクトを作成し、オブジェクトに2つの名前空間を追加します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-543">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and adds two namespaces to the object.</span></span> <span data-ttu-id="b32e9-544">シリアル化されたオブジェクトを定義するクラスは、各要素の名前空間を指定するために <xref:System.Xml.Serialization.XmlElementAttribute> 属性でも属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-544">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-545">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-545">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-546">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-546">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-547">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-547">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-548">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-548">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-549">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-549">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-550">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-550">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-551">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-551">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="b32e9-552">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-552">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-553">シリアル化する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-553">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="b32e9-554">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-554">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="b32e9-555">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-555">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-556"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドが呼び出されると、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティが XML に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-556">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="b32e9-557">メソッド、インデクサー、プライベートフィールド、および読み取り専用プロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-557">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="b32e9-558">パブリックとプライベートの両方のフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-558">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-559">`xmlWriter` パラメーターを使用して、XML ドキュメントを記述するように設計された abstract <xref:System.Xml.XmlWriter> クラスから派生したオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-559">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="b32e9-560"><xref:System.Xml.XmlTextWriter> は <xref:System.Xml.XmlWriter>から派生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-560">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-561"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-561">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-562">次の例では、<xref:System.Xml.XmlWriter>を使用してオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-562">The following example serializes an object with an <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="b32e9-563">また、この例では、<xref:System.Xml.Serialization.XmlSerializerNamespaces> を作成し、オブジェクトに2つの名前空間を追加します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-563">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="b32e9-564"><xref:System.Xml.Serialization.XmlElementAttribute> クラスのいくつかのインスタンスは、各要素の名前空間を指定するためにクラスメンバーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-564">Several instances of the <xref:System.Xml.Serialization.XmlElementAttribute> class are applied to the class members to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-565">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-565">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-566">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-566">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-567">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-567">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-568">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-568">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-569">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-569">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-570">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-570">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-571">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-571">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="b32e9-572">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-572">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-573">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-573">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="b32e9-574">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-574">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="b32e9-575">シリアル化された XML のエンコード スタイル。</span><span class="sxs-lookup"><span data-stu-id="b32e9-575">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="b32e9-576">指定したオブジェクトをシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、指定した名前空間とエンコード スタイルを参照し、生成された XML ドキュメントをファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-576">Serializes the specified object and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces and encoding style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-577"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> メソッドが呼び出されると、オブジェクトのパブリックフィールドと読み取り/書き込みプロパティが XML に変換されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-577">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="b32e9-578">メソッド、インデクサー、プライベートフィールド、および読み取り専用プロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-578">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="b32e9-579">パブリックとプライベートの両方のフィールドとプロパティをシリアル化するには、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>を使用します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-579">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="b32e9-580">`xmlWriter` パラメーターを使用して、XML ドキュメントを記述するように設計された abstract <xref:System.Xml.XmlWriter> クラスから派生したオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-580">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="b32e9-581"><xref:System.Xml.XmlTextWriter> は <xref:System.Xml.XmlWriter>から派生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-581">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
 <span data-ttu-id="b32e9-582">SOAP version 1.1 encoding の場合は、`encodingStyle` パラメーターを "http://schemas.xmlsoap.org/soap/encoding/" に設定します。それ以外の場合は、SOAP バージョン1.2 エンコーディングに対して "http://www.w3.org/2001/12/soap-encoding" に設定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-582">Set the `encodingStyle` parameter to "http://schemas.xmlsoap.org/soap/encoding/" for SOAP version 1.1 encoding; otherwise, set it to "http://www.w3.org/2001/12/soap-encoding" for SOAP version 1.2 encoding.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-583"><xref:System.Xml.Serialization.XmlSerializer> は、<xref:System.Collections.ArrayList> の配列と <xref:System.Collections.Generic.List%601>の配列をシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-583">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b32e9-584">シリアル化中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b32e9-584">An error occurred during serialization.</span></span> <span data-ttu-id="b32e9-585">元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-585">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-586">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-586">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-587">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-587">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-588">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-588">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-589">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-589">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-590">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-590">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="id" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="b32e9-591">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="b32e9-591">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="b32e9-592">シリアル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b32e9-592">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="b32e9-593">使用する名前空間とプレフィックスを格納している <see langword="XmlSerializerNamespaces" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b32e9-593">An instance of the <see langword="XmlSerializerNamespaces" /> that contains namespaces and prefixes to use.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="b32e9-594">ドキュメントで使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="b32e9-594">The encoding used in the document.</span></span></param>
        <param name="id"><span data-ttu-id="b32e9-595">SOAP エンコード済みメッセージの場合に、id 属性の生成に使用される基本文字列。</span><span class="sxs-lookup"><span data-stu-id="b32e9-595">For SOAP encoded messages, the base used to generate id attributes.</span></span></param>
        <summary><span data-ttu-id="b32e9-596">指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" />、XML 名前空間、およびエンコーディングを使用して、XML ドキュメントをファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-596">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />, XML namespaces, and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-597">*Id*パラメーターは、SOAP id の作成に使用されるベース文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-597">The *id* parameter supplies the base string used to create SOAP ids.</span></span> <span data-ttu-id="b32e9-598">既定では、これらは "id1"、"id2" などです。</span><span class="sxs-lookup"><span data-stu-id="b32e9-598">By default, these are "id1", "id2" and so on.</span></span> <span data-ttu-id="b32e9-599">ただし、パラメーターが "myBase" に設定されている場合、生成された値は "myBaseid1"、"myBaseid2" などになります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-599">But if the parameter is set to "myBase" the generated values are "myBaseid1", "myBaseid2" and so on.</span></span> <span data-ttu-id="b32e9-600">この機能は、SOAP メッセージ全体で一意の id 値を作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-600">This functionality is used to create unique id values across the whole SOAP message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberSignature Language="F#" Value="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " Usage="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b32e9-601">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 属性を認識した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-601">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML attribute of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-602">既定では、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出した後、<xref:System.Xml.Serialization.XmlSerializer> は不明な型の XML 属性を無視します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-602">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="b32e9-603">ただし、このイベントを使用して、このようなノードの種類を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-603">However, you can use this event to handle such node types.</span></span>  
  
 <span data-ttu-id="b32e9-604">逆シリアル化されるクラスのインスタンスに <xref:System.Xml.XmlAttribute> オブジェクトの配列を返すフィールドが含まれており、そのフィールドに <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> が適用されている場合、<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-604">If the instance of the class being deserialized contains a field that returns an array of <xref:System.Xml.XmlAttribute> objects and an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied to the field, the <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> event does not occur.</span></span> <span data-ttu-id="b32e9-605">代わりに、すべての不明な XML 属性が配列に収集されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-605">Instead, all unknown XML attributes are collected into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-606">次の例では、XML ドキュメントの逆シリアル化中に検出された不明な属性に関する情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-606">The following example prints information about any unknown attributes encountered while deserializing an XML document.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-607">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-607">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-608">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-608">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-609">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-609">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-610">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-610">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-611">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-611">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberSignature Language="F#" Value="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " Usage="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b32e9-612">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 要素を認識した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-612">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML element of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-613">既定では、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出した後、<xref:System.Xml.Serialization.XmlSerializer> は不明な型の XML 属性を無視します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-613">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="b32e9-614">ただし、このイベントを使用して、このようなノードの種類を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-614">However, you can use this event to handle such node types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b32e9-615"><xref:System.Xml.Serialization.XmlAnyElementAttribute> が <xref:System.Xml.XmlElement> オブジェクトの配列を返すフィールドに適用されると、すべての不明な要素が配列に収集されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-615">If the <xref:System.Xml.Serialization.XmlAnyElementAttribute> is applied to a field that returns an array of <xref:System.Xml.XmlElement> objects, all unknown elements are collected in the array.</span></span> <span data-ttu-id="b32e9-616">この場合、<xref:System.Xml.Serialization.XmlSerializer.UnknownElement> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-616">In that case, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event does not occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-617">次の例では、`Group` という名前のクラスを、UnknownElements という名前のファイルから逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-617">The following example deserializes a class named `Group` from a file named UnknownElements.xml.</span></span> <span data-ttu-id="b32e9-618">クラスに対応するメンバーが含まれていないファイルで要素が見つかった場合、<xref:System.Xml.Serialization.XmlSerializer.UnknownElement> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-618">Whenever an element is found in the file that has no corresponding member in the class, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event occurs.</span></span> <span data-ttu-id="b32e9-619">この例を試すには、UnknownElements という名前のファイルに次の XML コードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-619">To try the example, paste the following XML code into a file named UnknownElements.xml.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-620">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-620">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-621">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-621">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-622">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-622">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-623">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-623">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-624">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-624">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberSignature Language="F#" Value="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " Usage="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b32e9-625">逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML ノードを認識した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-625">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML node of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-626">既定では、<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドを呼び出した後、<xref:System.Xml.Serialization.XmlSerializer> は不明な型の XML ノードを無視します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-626">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML nodes of unknown types.</span></span> <span data-ttu-id="b32e9-627">ただし、このイベントを使用して、このようなノードの種類を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-627">However, you can use this event to handle such node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-628">次の例では、検出された不明なノードの種類を出力します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-628">The following example prints the type of any encountered unknown node.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-629">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-629">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-630">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-630">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-631">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-631">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-632">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-632">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-633">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-633">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberSignature Language="F#" Value="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " Usage="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b32e9-634">SOAP エンコード済み XML ストリームの逆シリアル化時に、<see cref="T:System.Xml.Serialization.XmlSerializer" /> が、未使用の型または参照されていない型を認識した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-634">Occurs during deserialization of a SOAP-encoded XML stream, when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters a recognized type that is not used or is unreferenced.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32e9-635"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> イベントは、<xref:System.Xml.Serialization.XmlSerializer> を使用して、World Wide Web コンソーシアムドキュメントのセクション5に準拠している SOAP メッセージを含む XML ドキュメントを逆シリアル化する場合にのみ発生します[(Simple Object Access Protocol (soap) 1.1)](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)。</span><span class="sxs-lookup"><span data-stu-id="b32e9-635">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event only occurs when the <xref:System.Xml.Serialization.XmlSerializer> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium document, [Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/).</span></span>  
  
 <span data-ttu-id="b32e9-636">セクション5に準拠するドキュメントは、特別な形式になっています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-636">Documents that conform to section 5 are in a special format.</span></span> <span data-ttu-id="b32e9-637">少なくとも、このようなドキュメントには、SOAP メッセージの本文が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b32e9-637">At the very least, such a document includes the main body of the SOAP message.</span></span> <span data-ttu-id="b32e9-638">ただし、すべての型をドキュメント内でインラインで定義するのではなく、一部の型定義をドキュメント内の最上位要素への参照としてエンコードできます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-638">However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document.</span></span> <span data-ttu-id="b32e9-639">したがって、参照である本体にあるすべての要素について、型定義を含む対応する要素が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-639">Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition.</span></span> <span data-ttu-id="b32e9-640">参照元の要素と型の定義を相互に関連付けるために、型定義には `id` の属性が一意の文字列 ID に設定されています。また、参照元の要素には、同じ ID を参照する `href` 属性があります。</span><span class="sxs-lookup"><span data-stu-id="b32e9-640">To correlate the referencing element and the type definition, the type definition has an `id` attribute set to a unique string ID and the referencing element has an `href` attribute that references the same ID.</span></span>  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 <span data-ttu-id="b32e9-641"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> イベントは、ドキュメントに定義されている型定義がある場合に発生しますが、メインの本文にはパラメーターが参照していません。</span><span class="sxs-lookup"><span data-stu-id="b32e9-641">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event occur when there is a type definition found in the document, but no parameter in the main body references it.</span></span> <span data-ttu-id="b32e9-642">イベントが発生したときに、<xref:System.Xml.Serialization.UnreferencedObjectEventArgs> クラスの <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> プロパティを調べることによって、参照されていないオブジェクトの XML 型を取得できます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-642">When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> property of the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> class.</span></span> <span data-ttu-id="b32e9-643">オブジェクトの XML ID は、<xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-643">The XML ID of the object is returned by the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> property.</span></span>  
  
 <span data-ttu-id="b32e9-644"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> イベントは、XML ノードまたは要素の型に対応するクラスメンバーが存在しない場合に発生する、<xref:System.Xml.Serialization.XmlSerializer.UnknownElement> および <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> イベントと混同しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="b32e9-644">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event should not be confused with the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> and <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> events, which occur when there is no class member that corresponds to the XML node or element type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b32e9-645">次の例では、<xref:System.Xml.Serialization.XmlSerializer>に <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> を追加します。</span><span class="sxs-lookup"><span data-stu-id="b32e9-645">The following example adds an <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> to an <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b32e9-646">イベントは、`Serializer``_``UnreferencedObject` メソッドによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-646">The event is handled by the `Serializer``_``UnreferencedObject` method.</span></span> <span data-ttu-id="b32e9-647">この例を実行するには、次の XML を切り取って "UnrefObj .xml" という名前のファイルに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b32e9-647">To run the example, cut and paste the following XML into a file named "UnrefObj.xml".</span></span>  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="b32e9-648">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="b32e9-648">Introducing XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="b32e9-649">方法 : XML ストリームの代替要素名を指定する</span><span class="sxs-lookup"><span data-stu-id="b32e9-649">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="b32e9-650">属性を使用した XML シリアル化の制御</span><span class="sxs-lookup"><span data-stu-id="b32e9-650">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="b32e9-651">XML シリアル化の例</span><span class="sxs-lookup"><span data-stu-id="b32e9-651">Examples of XML Serialization</span></span></related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="b32e9-652">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b32e9-652">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
