<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e1aa2f460d9ab2310f40e7e248f1d5c8328a701" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952289" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.0.10.0" To="System.Xml.ReaderWriter" ToVersion="4.0.10.0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85f0e-101">XML シリアル化および逆シリアル化のカスタム書式を提供します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-101">Provides custom formatting for XML serialization and deserialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f0e-102">このインターフェイスを実装する理由は2つあります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-102">There are two reasons to implement this interface.</span></span> <span data-ttu-id="85f0e-103">1つ目は、<xref:System.Xml.Serialization.XmlSerializer>によってオブジェクトをシリアル化または逆シリアル化する方法を制御することです。</span><span class="sxs-lookup"><span data-stu-id="85f0e-103">The first is to control how your object is serialized or deserialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="85f0e-104">たとえば、大きなデータセットをバッファリングするのではなく、データをバイトに分割することができます。また、Base64 エンコードを使用してデータをエンコードするときに発生するインフレも回避できます。</span><span class="sxs-lookup"><span data-stu-id="85f0e-104">For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</span></span> <span data-ttu-id="85f0e-105">シリアル化を制御するには、XML の読み書きに使用する <xref:System.Xml.XmlReader> および <xref:System.Xml.XmlWriter> クラスを制御するために、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> および <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-105">To control the serialization, implement the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> and <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> methods to control the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes used to read and write the XML.</span></span> <span data-ttu-id="85f0e-106">この例については、「[方法: シリアル化](/dotnet/standard/serialization/how-to-chunk-serialized-data)されたデータをチャンクする」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="85f0e-106">For an example of this, see [How to: Chunk Serialized Data](/dotnet/standard/serialization/how-to-chunk-serialized-data).</span></span>  
  
 <span data-ttu-id="85f0e-107">2つ目の理由は、スキーマを制御できるようにするためです。</span><span class="sxs-lookup"><span data-stu-id="85f0e-107">The second reason is to be able to control the schema.</span></span> <span data-ttu-id="85f0e-108">これを有効にするには、シリアル化可能な型に <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> を適用し、スキーマを返す静的メンバーの名前を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-108">To enable this, you must apply the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to the serializable type, and specify the name of the static member that returns the schema.</span></span> <span data-ttu-id="85f0e-109">例については、「<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="85f0e-109">See the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> for an example.</span></span>  
  
 <span data-ttu-id="85f0e-110">インターフェイスを実装するクラスには、パラメーターなしのコンストラクターが必要です。</span><span class="sxs-lookup"><span data-stu-id="85f0e-110">A class that implements the interface must have a parameterless constructor.</span></span> <span data-ttu-id="85f0e-111">これは、<xref:System.Xml.Serialization.XmlSerializer> クラスの要件です。</span><span class="sxs-lookup"><span data-stu-id="85f0e-111">This is a requirement of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85f0e-112">次のコード例は、プライベートフィールドをシリアル化する <xref:System.Xml.Serialization.IXmlSerializable> インターフェイスの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="85f0e-112">The following example code shows an implementation of the <xref:System.Xml.Serialization.IXmlSerializable> interface that serializes a private field.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="85f0e-113">XML シリアル化の概要</span><span class="sxs-lookup"><span data-stu-id="85f0e-113">Introducing XML Serialization</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85f0e-114">このメソッドは予約済みであり、使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="85f0e-114">This method is reserved and should not be used.</span></span> <span data-ttu-id="85f0e-115"><see langword="IXmlSerializable" /> インターフェイスを実装する場合、このメソッドから <see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返す必要があります。また、カスタム スキーマの指定が要求されている場合は、このクラスに <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> を適用します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-115">When implementing the <see langword="IXmlSerializable" /> interface, you should return <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.</span></span></summary>
        <returns><span data-ttu-id="85f0e-116"><see cref="T:System.Xml.Schema.XmlSchema" /> メソッドで生成され、<see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> メソッドで利用されるオブジェクトの XML 表現を表す <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> です。</span><span class="sxs-lookup"><span data-stu-id="85f0e-116">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f0e-117">オブジェクトをシリアル化または逆シリアル化する場合、<xref:System.Xml.Serialization.XmlSerializer> クラスは XML 検証を実行しません。</span><span class="sxs-lookup"><span data-stu-id="85f0e-117">When serializing or deserializing an object, the <xref:System.Xml.Serialization.XmlSerializer> class does not perform XML validation.</span></span> <span data-ttu-id="85f0e-118">このため、多くの場合、このメソッドの単純な実装を提供することで、スキーマ情報を省略することが安全です。たとえば、`null` (Visual Basic で`Nothing`) を返します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-118">For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning `null` (`Nothing` in Visual Basic).</span></span>  
  
 <span data-ttu-id="85f0e-119">スキーマ情報を提供する必要がある場合は、<xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 属性を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-119">If providing schema information is necessary, you should use the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute.</span></span> <span data-ttu-id="85f0e-120">`GetSchema` メソッドは、引き続き `null` (または `Nothing`) を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-120">The `GetSchema` method should still return `null` (or `Nothing`).</span></span>  
  
 <span data-ttu-id="85f0e-121">一部の [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 型と、`IXmlSerializable` インターフェイスを実装するレガシカスタム型では、`XmlSchemaProvider`ではなく `GetSchema` を使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-121">Some [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types as well as legacy custom types implementing the `IXmlSerializable` interface may be using `GetSchema` instead of `XmlSchemaProvider`.</span></span> <span data-ttu-id="85f0e-122">この場合、メソッドは、<xref:System.Data.DataSet.WriteXml%2A> メソッドによって生成されるオブジェクトの XML 表現を記述する正確な XML スキーマを返します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-122">In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="85f0e-123">オブジェクトを逆シリアル化する <see cref="T:System.Xml.XmlReader" /> ストリーム。</span><span class="sxs-lookup"><span data-stu-id="85f0e-123">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</span></span></param>
        <summary><span data-ttu-id="85f0e-124">XML 表現からオブジェクトを生成します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-124">Generates an object from its XML representation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f0e-125"><xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> メソッドは、<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> メソッドによって書き込まれた情報を使用して、オブジェクトを再構築する必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-125">The <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method must reconstitute your object using the information that was written by the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="85f0e-126">このメソッドが呼び出されると、リーダーは、型の情報をラップする開始タグに配置されます。</span><span class="sxs-lookup"><span data-stu-id="85f0e-126">When this method is called, the reader is positioned on the start tag that wraps the information for your type.</span></span> <span data-ttu-id="85f0e-127">つまり、シリアル化されたオブジェクトの先頭を示す開始タグに直接あります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-127">That is, directly on the start tag that indicates the beginning of a serialized object.</span></span> <span data-ttu-id="85f0e-128">このメソッドから制御が戻るときに、すべての内容を含む要素全体を先頭から末尾まで読み取る必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-128">When this method returns, it must have read the entire element from beginning to end, including all of its contents.</span></span> <span data-ttu-id="85f0e-129"><xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> メソッドとは異なり、フレームワークはラッパー要素を自動的に処理しません。</span><span class="sxs-lookup"><span data-stu-id="85f0e-129">Unlike the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method, the framework does not handle the wrapper element automatically.</span></span> <span data-ttu-id="85f0e-130">実装では、これを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-130">Your implementation must do so.</span></span> <span data-ttu-id="85f0e-131">これらの配置ルールを確認しないと、コードが予期しないランタイム例外を生成したり、データが破損したりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-131">Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</span></span>  
  
 <span data-ttu-id="85f0e-132">このメソッドを実装する場合は、悪意のあるユーザーが、アプリケーションの動作を無効にしたり、変更したりするために、適切な形式ではなく、正しくない XML 表現を提供する可能性を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-132">When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85f0e-133">次の例は、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> メソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="85f0e-133">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 <span data-ttu-id="85f0e-134">次の例は、このオブジェクトを逆シリアル化するために <xref:System.Xml.Serialization.XmlSerializer> クラスを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85f0e-134">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="85f0e-135">オブジェクトをシリアル化する <see cref="T:System.Xml.XmlWriter" /> ストリーム。</span><span class="sxs-lookup"><span data-stu-id="85f0e-135">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</span></span></param>
        <summary><span data-ttu-id="85f0e-136">オブジェクトを XML 表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-136">Converts an object into its XML representation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85f0e-137">提供する <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> の実装では、オブジェクトの XML 表現を書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-137">The <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementation you provide should write out the XML representation of the object.</span></span> <span data-ttu-id="85f0e-138">フレームワークはラッパー要素を書き込み、開始後に XML ライターを配置します。</span><span class="sxs-lookup"><span data-stu-id="85f0e-138">The framework writes a wrapper element and positions the XML writer after its start.</span></span> <span data-ttu-id="85f0e-139">実装によって、子要素を含む内容が書き込まれる場合があります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-139">Your implementation may write its contents, including child elements.</span></span> <span data-ttu-id="85f0e-140">次に、フレームワークはラッパー要素を閉じます。</span><span class="sxs-lookup"><span data-stu-id="85f0e-140">The framework then closes the wrapper element.</span></span>  
  
 <span data-ttu-id="85f0e-141"><xref:System.Xml.XmlWriter> ストリームに十分な情報を書き込んで、<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> メソッドがオブジェクトを再構築できるようにします。</span><span class="sxs-lookup"><span data-stu-id="85f0e-141">Write sufficient information to the <xref:System.Xml.XmlWriter> stream to allow the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method to reconstitute your object.</span></span>  
  
 <span data-ttu-id="85f0e-142">たとえば、オブジェクトの状態に配列変数が含まれている場合は、配列の長さを記述するか、または親要素を使用して配列値を記述する要素を格納します。これにより、オブジェクトが再構成されたときに読み取る値の数がわかるようになります。</span><span class="sxs-lookup"><span data-stu-id="85f0e-142">For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85f0e-143">次の例は、<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> メソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="85f0e-143">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 <span data-ttu-id="85f0e-144">次の例は、このオブジェクトを逆シリアル化するために <xref:System.Xml.Serialization.XmlSerializer> クラスを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85f0e-144">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
