<Type Name="GlyphRun" FullName="System.Windows.Media.GlyphRun">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6106eb3eb9ac3271b00525bec44203f79cd70cc" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78837276" /></Metadata><TypeSignature Language="C#" Value="public class GlyphRun : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlyphRun extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GlyphRun" />
  <TypeSignature Language="VB.NET" Value="Public Class GlyphRun&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlyphRun : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type GlyphRun = class&#xA;    interface ISupportInitialize" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type GlyphRun = class&#xA;    interface DUCE.IResource&#xA;    interface ISupportInitialize" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>同じ描画スタイルが設定され、サイズ、フォント、およびフォントの書体が同じである一連のグリフを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GlyphRun> オブジェクトには、グリフインデックスや個々のグリフ位置などのフォントの詳細が含まれます。 さらに、<xref:System.Windows.Media.GlyphRun> オブジェクトには、実行が生成された元の Unicode コードポイント、文字からグリフへのバッファーオフセットのマッピング情報、および文字数とグリフごとのフラグが含まれています。  
  
 <xref:System.Windows.Documents.Glyphs> 要素は、XAML の <xref:System.Windows.Media.GlyphRun> の出力を表します。 <xref:System.Windows.Documents.Glyphs> 要素を記述するには、次のマークアップ構文を使用します。  
  
 [!code-xaml[GlyphsOvwSample1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GlyphsOvwSample1/CS/default.xaml#1)]   
  
 各グリフは、他の <xref:System.Windows.Documents.Glyphs>とどのように配置するかを指定するメトリックを定義します。 次の図では、2 つの異なるグリフ文字のさまざまな印刷用品質を定義しています。  
  
 ![グリフの測定値のグリフ単位](~/add/media/glyph-example.png "グリフ単位のダイアグラム")  
2つの異なるグリフ文字のさまざまなタイポグラフィの品質  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (float pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pixelsPerDip As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(float pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : single -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun pixelsPerDip" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pixelsPerDip">スケール ファクターに相当する、ピクセル密度に依存しないピクセルごとの値。 たとえば、画面の DPI が 120 (または 120/96 = 1.25 のため 1.25) の場合は、ピクセル密度に依存しない 1.25 ピクセルが描画されます。 DIP は、デバイスの解像度と DPI に依存しないように WPF が使用する測定単位です。</param>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (glyphTypeface As GlyphTypeface, bidiLevel As Integer, isSideways As Boolean, renderingEmSize As Double, glyphIndices As IList(Of UShort), baselineOrigin As Point, advanceWidths As IList(Of Double), glyphOffsets As IList(Of Point), characters As IList(Of Char), deviceFontName As String, clusterMap As IList(Of UShort), caretStops As IList(Of Boolean), language As XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" />
        <Parameter Name="bidiLevel" Type="System.Int32" />
        <Parameter Name="isSideways" Type="System.Boolean" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" />
        <Parameter Name="deviceFontName" Type="System.String" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><see cref="T:System.Windows.Media.GlyphTypeface" /> 型の値。</param>
        <param name="bidiLevel"><see cref="T:System.Int32" /> 型の値。</param>
        <param name="isSideways"><see cref="T:System.Boolean" /> 型の値。</param>
        <param name="renderingEmSize"><see cref="T:System.Double" /> 型の値。</param>
        <param name="glyphIndices"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="baselineOrigin"><see cref="T:System.Windows.Point" /> 型の値。</param>
        <param name="advanceWidths"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="glyphOffsets"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="characters"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="deviceFontName"><see cref="T:System.String" /> 型の値。</param>
        <param name="clusterMap"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="caretStops"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="language"><see cref="T:System.Windows.Markup.XmlLanguage" /> 型の値。</param>
        <summary>指定したクラスのプロパティを使用して、<see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, float32 pixelsPerDip, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Single,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (glyphTypeface As GlyphTypeface, bidiLevel As Integer, isSideways As Boolean, renderingEmSize As Double, pixelsPerDip As Single, glyphIndices As IList(Of UShort), baselineOrigin As Point, advanceWidths As IList(Of Double), glyphOffsets As IList(Of Point), characters As IList(Of Char), deviceFontName As String, clusterMap As IList(Of UShort), caretStops As IList(Of Boolean), language As XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * single * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, pixelsPerDip, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bidiLevel" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isSideways" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="renderingEmSize" Type="System.Double" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="4" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="5" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" Index="6" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" Index="7" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" Index="8" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" Index="9" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceFontName" Type="System.String" Index="10" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="11" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" Index="12" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" Index="13" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><see cref="T:System.Windows.Media.GlyphTypeface" /> 型の値。</param>
        <param name="bidiLevel"><see cref="T:System.Int32" /> 型の値。</param>
        <param name="isSideways"><see cref="T:System.Boolean" /> 型の値。</param>
        <param name="renderingEmSize"><see cref="T:System.Double" /> 型の値。</param>
        <param name="pixelsPerDip"><see cref="T:System.Double" /> 型の値。</param>
        <param name="glyphIndices"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="baselineOrigin"><see cref="T:System.Windows.Point" /> 型の値。</param>
        <param name="advanceWidths"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="glyphOffsets"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="characters"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="deviceFontName"><see cref="T:System.String" /> 型の値。</param>
        <param name="clusterMap"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="caretStops"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列です。</param>
        <param name="language"><see cref="T:System.Windows.Markup.XmlLanguage" /> 型の値。</param>
        <summary>指定したクラスのプロパティを使用して、<see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceWidths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; AdvanceWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; AdvanceWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvanceWidths As IList(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;double&gt; ^ AdvanceWidths { System::Collections::Generic::IList&lt;double&gt; ^ get(); void set(System::Collections::Generic::IList&lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdvanceWidths : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.DoubleIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリフ インデックスに対応するアドバンス幅を表す <see cref="T:System.Double" /> 値の一覧を取得または設定します。</summary>
        <value>アドバンス幅を表す <see cref="T:System.Double" /> 値の一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アドバンス幅の一覧の各項目は、<xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> プロパティによって返されるグリフの値に対応します。 実行内の n<sup>番目</sup>のグリフの公称オリジン (n > 0) は、n-1<sup>番目</sup>のグリフの公称原点であり、実行前のベクターに沿って追加された n-1<sup>番目</sup>の前の幅を加えたものです。 基本グリフには通常、ゼロでない事前幅がありますが、グリフの結合には通常、事前幅がゼロになっています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point BaselineOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BaselineOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BaselineOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.BaselineOrigin : System.Windows.Point with get, set" Usage="System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> のベースライン原点を取得または設定します。</summary>
        <value>ベースライン原点を表す <see cref="T:System.Windows.Point" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidiLevel">
      <MemberSignature Language="C#" Value="public int BidiLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BidiLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property BidiLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BidiLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BidiLevel : int with get, set" Usage="System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> の双方向の入れ子レベルを取得または設定します。</summary>
        <value>双方向の入れ子レベルを表す <see cref="T:System.Int32" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.BuildGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry();" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="glyphRun.BuildGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Geometry" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得します。</summary>
        <returns><see cref="T:System.Windows.Media.Geometry" /> に対応する <see cref="T:System.Windows.Media.GlyphRun" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返される <xref:System.Windows.Media.Geometry> には、<xref:System.Windows.Media.GlyphRun>内のすべてのグリフの結合されたジオメトリが含まれます。 重複する輪郭は、ブール和集合演算を実行することによってマージされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretStops">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; CaretStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; CaretStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.CaretStops" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretStops As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ CaretStops { System::Collections::Generic::IList&lt;bool&gt; ^ get(); void set(System::Collections::Generic::IList&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretStops : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="System.Windows.Media.GlyphRun.CaretStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.BoolIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Boolean" /> を表す Unicode で UTF16 コード ポイント毎にキャレット ストップがあるかどうかを決定する <see cref="T:System.Windows.Media.GlyphRun" /> 値の一覧を取得または設定します。</summary>
        <value>キャレット ストップがあるかどうかを表す <see cref="T:System.Boolean" /> 値の一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GlyphRun>を表す Unicode 内のすべての UTF16 コードポイントにキャレットストップがある場合、戻り値は `null` です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;char&gt; Characters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;char&gt; Characters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Characters" />
      <MemberSignature Language="VB.NET" Value="Public Property Characters As IList(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;char&gt; ^ Characters { System::Collections::Generic::IList&lt;char&gt; ^ get(); void set(System::Collections::Generic::IList&lt;char&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Characters : System.Collections.Generic.IList&lt;char&gt; with get, set" Usage="System.Windows.Media.GlyphRun.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.CharIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> の Unicode を表す UTF16 コード ポイントの一覧を取得または設定します。</summary>
        <value>Unicode コンテンツを表す <see cref="T:System.Char" /> 値の一覧。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; ClusterMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; ClusterMap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterMap As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ ClusterMap { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClusterMap : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.UInt16" /> の文字をグリフ インデックスにマップする <see cref="T:System.Windows.Media.GlyphRun" /> 値の一覧を取得または設定します。</summary>
        <value>マップされたグリフ インデックスを表す <see cref="T:System.UInt16" /> 値の一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リスト内の1文字につき1つのエントリがあります。 リスト内の各値は、<xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>によって表される最初のグリフのオフセットを、<xref:System.Windows.Media.GlyphRun.Characters%2A>によって表される対応する文字に与えます。  
  
 複数の文字が1つのグリフにマップされている場合、または個々の文字に正確にマップするために分割できないグリフグループにマップされている場合は、すべての文字のエントリの値が同じになります。これは、この文字のグループを表す最初のグリフのオフセットです。  
  
 リストが `null` または <xref:System.String.Empty>に等しい場合は、1 ~ 1 の順次マッピングが想定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeAlignmentBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeAlignmentBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeAlignmentBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeAlignmentBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeAlignmentBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeAlignmentBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeAlignmentBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> の配置ボックスを取得します。</summary>
        <returns><see cref="T:System.Windows.Rect" /> の配置ボックスを表す <see cref="T:System.Windows.Media.GlyphRun" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返される <xref:System.Windows.Rect> は、<xref:System.Windows.Media.GlyphRun>の原点を基準としています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeInkBoundingBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeInkBoundingBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeInkBoundingBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeInkBoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeInkBoundingBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeInkBoundingBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeInkBoundingBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeInkBoundingBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> のインク境界ボックスを取得します。</summary>
        <returns><see cref="T:System.Windows.Rect" /> のインク境界ボックスを表す <see cref="T:System.Windows.Media.GlyphRun" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返される <xref:System.Windows.Rect> は、<xref:System.Windows.Media.GlyphRun>の原点を基準としています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceFontName">
      <MemberSignature Language="C#" Value="public string DeviceFontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceFontName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeviceFontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeviceFontName : string with get, set" Usage="System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> が最適化される対象の、デバイス固有のフォントを取得または設定します。</summary>
        <value>デバイス フォントを表す <see cref="T:System.String" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前付きデバイスフォントの組み込みサポートが組み込まれているデバイスに <xref:System.Windows.Media.GlyphRun> がレンダリングされる場合、そのフォントを選択するためのデバイス固有のメカニズムを使用して、グリフインデックスではなく Unicode コードポイントを送信することによって、<xref:System.Windows.Media.GlyphRun> をレンダリングする必要があります。 名前付きデバイスフォントの組み込みサポートが含まれていないデバイスにレンダリングする場合、<xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> は無視する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontRenderingEmSize">
      <MemberSignature Language="C#" Value="public double FontRenderingEmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontRenderingEmSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontRenderingEmSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontRenderingEmSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontRenderingEmSize : double with get, set" Usage="System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> のレンダリングに使用する全角サイズを取得または設定します。</summary>
        <value>描画に使用する全角サイズを表す <see cref="T:System.Double" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaretCharacterHitFromDistance">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance (double distance, out bool isInside);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance(float64 distance, [out] bool&amp; isInside) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetCaretCharacterHitFromDistance(System.Double,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCaretCharacterHitFromDistance (distance As Double, ByRef isInside As Boolean) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetCaretCharacterHitFromDistance(double distance, [Runtime::InteropServices::Out] bool % isInside);" />
      <MemberSignature Language="F#" Value="member this.GetCaretCharacterHitFromDistance : double * bool -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetCaretCharacterHitFromDistance (distance, isInside)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Double" />
        <Parameter Name="isInside" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="distance">キャレット文字ヒットの計算に使用するオフセット。</param>
        <param name="isInside">文字ヒットが <see cref="T:System.Windows.Media.GlyphRun" /> 内にあるかどうかを確認します。</param>
        <summary><see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> のキャレットの文字ヒットを表す <see cref="T:System.Windows.Media.GlyphRun" /> 値を取得します。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> の値に最も近い文字ヒットを表す <paramref name="distance" /> 値。 出力パラメーター <paramref name="isInside" /> は、文字ヒットが <see langword="true" /> 内にある場合は <see cref="T:System.Windows.Media.GlyphRun" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `distance` 値は、<xref:System.Windows.Media.GlyphRun>の先頭端からのオフセットを表します。  
  
 ヒットが <xref:System.Windows.Media.GlyphRun>の外側にある場合、文字ヒットは、<xref:System.Windows.Media.GlyphRun>内でヒットした最も近いキャレット文字を表します。  
  
 <xref:System.Windows.Media.TextFormatting.CharacterHit> 構造体は、<xref:System.Windows.Media.GlyphRun> 内の文字ヒットに関する情報 (ヒットした最初の文字のインデックス、および先頭または末尾のエッジに関する情報) を表します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceFromCaretCharacterHit">
      <MemberSignature Language="C#" Value="public double GetDistanceFromCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDistanceFromCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetDistanceFromCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDistanceFromCaretCharacterHit (characterHit As CharacterHit) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDistanceFromCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetDistanceFromCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; double" Usage="glyphRun.GetDistanceFromCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">オフセットの計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</param>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> のリーディング エッジから、指定した文字ヒットを含むキャレット位置のリーディング エッジまたはトレーリング エッジまでの、オフセットを取得します。</summary>
        <returns><see cref="T:System.Double" /> のリーディング エッジから、文字ヒットを含むキャレット位置のリーディング エッジまたはトレーリング エッジまでのオフセットを表す <see cref="T:System.Windows.Media.GlyphRun" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GlyphRun> のヒットテストが行われていない場合は、0.0 の距離が返されます。 <xref:System.Windows.Media.GlyphRun> をヒットテストできるかどうかを判断するには、<xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">文字ヒットが、<see cref="T:System.Windows.Media.GlyphRun" /> の Unicode 文字列によって指定される範囲の外にあります。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextCaretCharacterHit (characterHit As CharacterHit) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetNextCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetNextCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetNextCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">次のヒット値の計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</param>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> の論理方向にある、次の有効なキャレット文字ヒットを取得します。</summary>
        <returns>論理方向にある次の有効なキャレット文字ヒットを表す <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。 戻り値が <paramref name="characterHit" /> と等しい場合、<see cref="T:System.Windows.Media.GlyphRun" /> でそれ以上ナビゲートすることはできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以前の有効なキャレット文字ヒットを取得するには、<xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousCaretCharacterHit (characterHit As CharacterHit) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetPreviousCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetPreviousCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">前のヒット値の計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</param>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> の論理方向にある、前の有効なキャレット文字ヒットを取得します。</summary>
        <returns>論理方向にある前の有効なキャレット文字ヒットを表す <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。 戻り値が <paramref name="characterHit" /> と等しい場合、<see cref="T:System.Windows.Media.GlyphRun" /> でそれ以上ナビゲートすることはできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の有効なキャレット文字ヒットを取得するには、<xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; GlyphIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; GlyphIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphIndices As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ GlyphIndices { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphIndices : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画物理フォントのグリフ インデックスを表す <see cref="T:System.UInt16" /> 値の配列を取得または設定します。</summary>
        <value>グリフのインデックスを表す <see cref="T:System.UInt16" /> 値のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グリフインデックスの既定値は、内部テキスト内の対応する Unicode コードポイントのフォントの文字マップテーブルによって定義されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphOffsets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Point&gt; GlyphOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; GlyphOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphOffsets As IList(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ GlyphOffsets { System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphOffsets : System.Collections.Generic.IList&lt;System.Windows.Point&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.PointIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Point&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Point" /> のグリフのオフセットを表す <see cref="T:System.Windows.Media.GlyphRun" /> 値の配列を取得または設定します。</summary>
        <value>グリフのオフセットを表す <see cref="T:System.Windows.Point" /> 値の一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グリフのオフセット値は、グリフの最終的な原点を生成するために、基準グリフの原点に追加されます。 <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> プロパティは、<xref:System.Windows.Media.GlyphRun>の公称グリフオリジンの値を表します。  
  
 基本グリフには通常、グリフオフセット (0, 0) があります。これには、通常、前の基本グリフの上に適切に配置されるオフセットがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphTypeface">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GlyphTypeface GlyphTypeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GlyphTypeface GlyphTypeface" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphTypeface As GlyphTypeface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::GlyphTypeface ^ GlyphTypeface { System::Windows::Media::GlyphTypeface ^ get(); void set(System::Windows::Media::GlyphTypeface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphTypeface : System.Windows.Media.GlyphTypeface with get, set" Usage="System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GlyphTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphTypeface" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Media.GlyphTypeface" /> の <see cref="T:System.Windows.Media.GlyphRun" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestable">
      <MemberSignature Language="C#" Value="public bool IsHitTestable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHitTestable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestable : bool" Usage="System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.GlyphRun" /> 内に有効なキャレット文字ヒットがあるかどうかを示す値を取得します。</summary>
        <value>有効なキャレット文字ヒットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideways">
      <MemberSignature Language="C#" Value="public bool IsSideways { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideways" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsSideways" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSideways As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSideways { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSideways : bool with get, set" Usage="System.Windows.Media.GlyphRun.IsSideways" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリフを回転するかどうかを示す値を取得または設定します。</summary>
        <value>グリフが回転される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GlyphRun.IsSideways%2A> が `true`場合、テキスト文字を構成するグリフは、垂直方向のベースライン配置メトリックを使用して、90°の反時計回りに回転されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.Media.GlyphRun.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.XmlLanguage" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Markup.XmlLanguage" /> の <see cref="T:System.Windows.Media.GlyphRun" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public float PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PixelsPerDip { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : single with get, set" Usage="System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストを表示する PixelsPerDip を取得または設定します。</summary>
        <value>現在の <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ISupportInitialize.BeginInit : unit -&gt; unit&#xA;override this.System.ComponentModel.ISupportInitialize.BeginInit : unit -&gt; unit" Usage="glyphRun.System.ComponentModel.ISupportInitialize.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />」を参照してください。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ISupportInitialize.EndInit : unit -&gt; unit&#xA;override this.System.ComponentModel.ISupportInitialize.EndInit : unit -&gt; unit" Usage="glyphRun.System.ComponentModel.ISupportInitialize.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />」を参照してください。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
