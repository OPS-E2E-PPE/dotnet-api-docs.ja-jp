<Type Name="GlyphRun" FullName="System.Windows.Media.GlyphRun">
  <Metadata><Meta Name="ms.openlocfilehash" Value="033114fea408624829a0e3ab7408fb97605d750f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179942" /></Metadata><TypeSignature Language="C#" Value="public class GlyphRun : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlyphRun extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GlyphRun" />
  <TypeSignature Language="VB.NET" Value="Public Class GlyphRun&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlyphRun : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type GlyphRun = class&#xA;    interface DUCE.IResource&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bf1e0-101">同じ描画スタイルが設定され、サイズ、フォント、およびフォントの書体が同じである一連のグリフを表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-101">Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-102"><xref:System.Windows.Media.GlyphRun> オブジェクトには、グリフインデックスや個々のグリフ位置などのフォントの詳細が含まれます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-102">The <xref:System.Windows.Media.GlyphRun> object includes font details such as glyph indices and individual glyph positions.</span></span> <span data-ttu-id="bf1e0-103">さらに、<xref:System.Windows.Media.GlyphRun> オブジェクトには、実行が生成された元の Unicode コードポイント、文字からグリフへのバッファーオフセットのマッピング情報、および文字数とグリフごとのフラグが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-103">In addition, The <xref:System.Windows.Media.GlyphRun> object contains the original Unicode code points the run was generated from, character to glyph buffer offset mapping information, and per-character and per-glyph flags.</span></span>  
  
 <span data-ttu-id="bf1e0-104"><xref:System.Windows.Documents.Glyphs> 要素は、XAML の <xref:System.Windows.Media.GlyphRun> の出力を表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-104">The <xref:System.Windows.Documents.Glyphs> element represents the output of a <xref:System.Windows.Media.GlyphRun> in XAML.</span></span> <span data-ttu-id="bf1e0-105"><xref:System.Windows.Documents.Glyphs> 要素を記述するには、次のマークアップ構文を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-105">The following markup syntax is used to describe the <xref:System.Windows.Documents.Glyphs> element.</span></span>  
  
 [!code-xaml[GlyphsOvwSample1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GlyphsOvwSample1/CS/default.xaml#1)]   
  
 <span data-ttu-id="bf1e0-106">各グリフは、他の <xref:System.Windows.Documents.Glyphs>とどのように配置するかを指定するメトリックを定義します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-106">Each glyph defines metrics that specify how it aligns with other <xref:System.Windows.Documents.Glyphs>.</span></span> <span data-ttu-id="bf1e0-107">次の図では、2 つの異なるグリフ文字のさまざまな印刷用品質を定義しています。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-107">The following graphic defines the various typographic qualities of two different glyph characters.</span></span>  
  
 <span data-ttu-id="bf1e0-108">![グリフの測定値のグリフ単位](~/add/media/glyph-example.png "グリフ単位のダイアグラム")</span><span class="sxs-lookup"><span data-stu-id="bf1e0-108">![Diagraph of glyph measurements](~/add/media/glyph-example.png "Diagraph of glyph measurements")</span></span>  
<span data-ttu-id="bf1e0-109">2つの異なるグリフ文字のさまざまなタイポグラフィの品質</span><span class="sxs-lookup"><span data-stu-id="bf1e0-109">Various typographic qualities of two different glyph characters</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bf1e0-110">
          <see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-110">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-111">
          <see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-111">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (float pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pixelsPerDip As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(float pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : single -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun pixelsPerDip" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pixelsPerDip"><span data-ttu-id="bf1e0-112">スケール ファクターに相当する、ピクセル密度に依存しないピクセルごとの値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-112">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor.</span></span> <span data-ttu-id="bf1e0-113">たとえば、画面の DPI が 120 (または 120/96 = 1.25 のため 1.25) の場合は、ピクセル密度に依存しない 1.25 ピクセルが描画されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-113">For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn.</span></span> <span data-ttu-id="bf1e0-114">DIP は、デバイスの解像度と DPI に依存しないように WPF が使用する測定単位です。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-114">DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</span></span></param>
        <summary><span data-ttu-id="bf1e0-115">
          <see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-115">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" />
        <Parameter Name="bidiLevel" Type="System.Int32" />
        <Parameter Name="isSideways" Type="System.Boolean" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" />
        <Parameter Name="deviceFontName" Type="System.String" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><span data-ttu-id="bf1e0-116"><see cref="T:System.Windows.Media.GlyphTypeface" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-116">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span></span></param>
        <param name="bidiLevel"><span data-ttu-id="bf1e0-117"><see cref="T:System.Int32" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-117">A value of type <see cref="T:System.Int32" />.</span></span></param>
        <param name="isSideways"><span data-ttu-id="bf1e0-118"><see cref="T:System.Boolean" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-118">A value of type <see cref="T:System.Boolean" />.</span></span></param>
        <param name="renderingEmSize"><span data-ttu-id="bf1e0-119"><see cref="T:System.Double" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-119">A value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="glyphIndices"><span data-ttu-id="bf1e0-120"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-120">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="baselineOrigin"><span data-ttu-id="bf1e0-121"><see cref="T:System.Windows.Point" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-121">A value of type <see cref="T:System.Windows.Point" />.</span></span></param>
        <param name="advanceWidths"><span data-ttu-id="bf1e0-122"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-122">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="glyphOffsets"><span data-ttu-id="bf1e0-123"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-123">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="characters"><span data-ttu-id="bf1e0-124"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-124">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="deviceFontName"><span data-ttu-id="bf1e0-125"><see cref="T:System.String" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-125">A value of type <see cref="T:System.String" />.</span></span></param>
        <param name="clusterMap"><span data-ttu-id="bf1e0-126"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-126">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="caretStops"><span data-ttu-id="bf1e0-127"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-127">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="language"><span data-ttu-id="bf1e0-128"><see cref="T:System.Windows.Markup.XmlLanguage" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-128">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span></span></param>
        <summary><span data-ttu-id="bf1e0-129">指定したクラスのプロパティを使用して、<see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-129">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, float32 pixelsPerDip, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Single,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * single * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, pixelsPerDip, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bidiLevel" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isSideways" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="renderingEmSize" Type="System.Double" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pixelsPerDip" Type="System.Single" Index="4" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="5" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" Index="6" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" Index="7" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" Index="8" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" Index="9" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceFontName" Type="System.String" Index="10" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" Index="11" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" Index="12" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" Index="13" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface"><span data-ttu-id="bf1e0-130"><see cref="T:System.Windows.Media.GlyphTypeface" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-130">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span></span></param>
        <param name="bidiLevel"><span data-ttu-id="bf1e0-131"><see cref="T:System.Int32" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-131">A value of type <see cref="T:System.Int32" />.</span></span></param>
        <param name="isSideways"><span data-ttu-id="bf1e0-132"><see cref="T:System.Boolean" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-132">A value of type <see cref="T:System.Boolean" />.</span></span></param>
        <param name="renderingEmSize"><span data-ttu-id="bf1e0-133"><see cref="T:System.Double" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-133">A  value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="pixelsPerDip"><span data-ttu-id="bf1e0-134"><see cref="T:System.Double" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-134">A  value of type <see cref="T:System.Double" />.</span></span></param>
        <param name="glyphIndices"><span data-ttu-id="bf1e0-135"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-135">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="baselineOrigin"><span data-ttu-id="bf1e0-136"><see cref="T:System.Windows.Point" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-136">A value of type <see cref="T:System.Windows.Point" />.</span></span></param>
        <param name="advanceWidths"><span data-ttu-id="bf1e0-137"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-137">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="glyphOffsets"><span data-ttu-id="bf1e0-138"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-138">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="characters"><span data-ttu-id="bf1e0-139"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-139">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="deviceFontName"><span data-ttu-id="bf1e0-140"><see cref="T:System.String" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-140">A value of type <see cref="T:System.String" />.</span></span></param>
        <param name="clusterMap"><span data-ttu-id="bf1e0-141"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-141">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="caretStops"><span data-ttu-id="bf1e0-142"><see cref="T:System.Collections.Generic.IList`1" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-142">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <param name="language"><span data-ttu-id="bf1e0-143"><see cref="T:System.Windows.Markup.XmlLanguage" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-143">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span></span></param>
        <summary><span data-ttu-id="bf1e0-144">指定したクラスのプロパティを使用して、<see cref="T:System.Windows.Media.GlyphRun" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-144">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceWidths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; AdvanceWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; AdvanceWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvanceWidths As IList(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;double&gt; ^ AdvanceWidths { System::Collections::Generic::IList&lt;double&gt; ^ get(); void set(System::Collections::Generic::IList&lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdvanceWidths : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.DoubleIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-145">グリフ インデックスに対応するアドバンス幅を表す <see cref="T:System.Double" /> 値の一覧を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-145">Gets or sets the list of <see cref="T:System.Double" /> values that represent the advance widths corresponding to the glyph indices.</span></span></summary>
        <value><span data-ttu-id="bf1e0-146">アドバンス幅を表す <see cref="T:System.Double" /> 値の一覧。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-146">A list of <see cref="T:System.Double" /> values that represent the advance widths.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-147">アドバンス幅の一覧の各項目は、<xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> プロパティによって返されるグリフの値に対応します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-147">Each item in the list of advance widths corresponds to the glyph values returned by the <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> property.</span></span> <span data-ttu-id="bf1e0-148">実行内の n<sup>番目</sup>のグリフの公称オリジン (n > 0) は、n-1<sup>番目</sup>のグリフの公称原点であり、実行前のベクターに沿って追加された n-1<sup>番目</sup>の前の幅を加えたものです。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-148">The nominal origin of the n<sup>th</sup> glyph in the run (n>0) is the nominal origin of the n-1<sup>th</sup> glyph plus the n-1<sup>th</sup> advance width added along the runs advance vector.</span></span> <span data-ttu-id="bf1e0-149">基本グリフには通常、ゼロでない事前幅がありますが、グリフの結合には通常、事前幅がゼロになっています。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-149">Base glyphs generally have a non-zero advance width, whereas combining glyphs generally have a zero advance width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point BaselineOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BaselineOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BaselineOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.BaselineOrigin : System.Windows.Point with get, set" Usage="System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-150"><see cref="T:System.Windows.Media.GlyphRun" /> のベースライン原点を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-150">Gets or sets the baseline origin of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-151">ベースライン原点を表す <see cref="T:System.Windows.Point" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-151">A <see cref="T:System.Windows.Point" /> value representing the baseline origin.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidiLevel">
      <MemberSignature Language="C#" Value="public int BidiLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BidiLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property BidiLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BidiLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BidiLevel : int with get, set" Usage="System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-152"><see cref="T:System.Windows.Media.GlyphRun" /> の双方向の入れ子レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-152">Gets or sets the bidirectional nesting level of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-153">双方向の入れ子レベルを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-153">An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.BuildGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry();" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="glyphRun.BuildGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-154"><see cref="T:System.Windows.Media.Geometry" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-154">Retrieves the <see cref="T:System.Windows.Media.Geometry" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-155"><see cref="T:System.Windows.Media.Geometry" /> に対応する <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-155">The <see cref="T:System.Windows.Media.Geometry" /> corresponding to the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-156">返される <xref:System.Windows.Media.Geometry> には、<xref:System.Windows.Media.GlyphRun>内のすべてのグリフの結合されたジオメトリが含まれます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-156">The <xref:System.Windows.Media.Geometry> returned contains the combined geometry of all glyphs in the <xref:System.Windows.Media.GlyphRun>.</span></span> <span data-ttu-id="bf1e0-157">重複する輪郭は、ブール和集合演算を実行することによってマージされます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-157">Overlapping contours are merged by performing a Boolean union operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretStops">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; CaretStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; CaretStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.CaretStops" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretStops As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ CaretStops { System::Collections::Generic::IList&lt;bool&gt; ^ get(); void set(System::Collections::Generic::IList&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretStops : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="System.Windows.Media.GlyphRun.CaretStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.BoolIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-158"><see cref="T:System.Boolean" /> を表す Unicode で UTF16 コード ポイント毎にキャレット ストップがあるかどうかを決定する <see cref="T:System.Windows.Media.GlyphRun" /> 値の一覧を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-158">Gets or sets the list of <see cref="T:System.Boolean" /> values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-159">キャレット ストップがあるかどうかを表す <see cref="T:System.Boolean" /> 値の一覧。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-159">A list of <see cref="T:System.Boolean" /> values that represent whether there are caret stops.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-160"><xref:System.Windows.Media.GlyphRun>を表す Unicode 内のすべての UTF16 コードポイントにキャレットストップがある場合、戻り値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-160">The return value is `null` if there is a caret stop for every UTF16 code point in the Unicode representing the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;char&gt; Characters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;char&gt; Characters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Characters" />
      <MemberSignature Language="VB.NET" Value="Public Property Characters As IList(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;char&gt; ^ Characters { System::Collections::Generic::IList&lt;char&gt; ^ get(); void set(System::Collections::Generic::IList&lt;char&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Characters : System.Collections.Generic.IList&lt;char&gt; with get, set" Usage="System.Windows.Media.GlyphRun.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.CharIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-161"><see cref="T:System.Windows.Media.GlyphRun" /> の Unicode を表す UTF16 コード ポイントの一覧を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-161">Gets or sets the list of UTF16 code points that represent the Unicode content of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-162">Unicode コンテンツを表す <see cref="T:System.Char" /> 値の一覧。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-162">A list of <see cref="T:System.Char" /> values that represent Unicode content.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; ClusterMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; ClusterMap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterMap As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ ClusterMap { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClusterMap : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-163"><see cref="T:System.UInt16" /> の文字をグリフ インデックスにマップする <see cref="T:System.Windows.Media.GlyphRun" /> 値の一覧を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-163">Gets or sets the list of <see cref="T:System.UInt16" /> values that maps characters in the <see cref="T:System.Windows.Media.GlyphRun" /> to glyph indices.</span></span></summary>
        <value><span data-ttu-id="bf1e0-164">マップされたグリフ インデックスを表す <see cref="T:System.UInt16" /> 値の一覧。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-164">A list of <see cref="T:System.UInt16" /> values that represent mapped glyph indices.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-165">リスト内の1文字につき1つのエントリがあります。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-165">There is one entry per character in the list.</span></span> <span data-ttu-id="bf1e0-166">リスト内の各値は、<xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>によって表される最初のグリフのオフセットを、<xref:System.Windows.Media.GlyphRun.Characters%2A>によって表される対応する文字に与えます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-166">Each value in the list gives the offset of the first glyph, represented by <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>, to the corresponding character, represented by <xref:System.Windows.Media.GlyphRun.Characters%2A>.</span></span>  
  
 <span data-ttu-id="bf1e0-167">複数の文字が1つのグリフにマップされている場合、または個々の文字に正確にマップするために分割できないグリフグループにマップされている場合は、すべての文字のエントリの値が同じになります。これは、この文字のグループを表す最初のグリフのオフセットです。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-167">Where multiple characters map to a single glyph, or to a glyph group that cannot be broken down to map exactly to individual characters, the entries for all the characters have the same value: the offset of the first glyph that represents this group of characters.</span></span>  
  
 <span data-ttu-id="bf1e0-168">リストが `null` または <xref:System.String.Empty>に等しい場合は、1 ~ 1 の順次マッピングが想定されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-168">If the list is `null` or equal to <xref:System.String.Empty>, sequential 1 to 1 mapping is assumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeAlignmentBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeAlignmentBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeAlignmentBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeAlignmentBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeAlignmentBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeAlignmentBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeAlignmentBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-169"><see cref="T:System.Windows.Media.GlyphRun" /> の配置ボックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-169">Retrieves the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-170"><see cref="T:System.Windows.Rect" /> の配置ボックスを表す <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-170">A <see cref="T:System.Windows.Rect" /> that represents the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-171">返される <xref:System.Windows.Rect> は、<xref:System.Windows.Media.GlyphRun>の原点を基準としています。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-171">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeInkBoundingBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeInkBoundingBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeInkBoundingBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeInkBoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeInkBoundingBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeInkBoundingBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeInkBoundingBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeInkBoundingBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-172"><see cref="T:System.Windows.Media.GlyphRun" /> のインク境界ボックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-172">Retrieves the ink bounding box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-173"><see cref="T:System.Windows.Rect" /> のインク境界ボックスを表す <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-173">A <see cref="T:System.Windows.Rect" /> that represents the ink bounding box the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-174">返される <xref:System.Windows.Rect> は、<xref:System.Windows.Media.GlyphRun>の原点を基準としています。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-174">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceFontName">
      <MemberSignature Language="C#" Value="public string DeviceFontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceFontName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeviceFontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeviceFontName : string with get, set" Usage="System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-175"><see cref="T:System.Windows.Media.GlyphRun" /> が最適化される対象の、デバイス固有のフォントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-175">Gets or sets the specific device font for which the <see cref="T:System.Windows.Media.GlyphRun" /> has been optimized.</span></span></summary>
        <value><span data-ttu-id="bf1e0-176">デバイス フォントを表す <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-176">A <see cref="T:System.String" /> value that represents the device font.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-177">名前付きデバイスフォントの組み込みサポートが組み込まれているデバイスに <xref:System.Windows.Media.GlyphRun> がレンダリングされる場合、そのフォントを選択するためのデバイス固有のメカニズムを使用して、グリフインデックスではなく Unicode コードポイントを送信することによって、<xref:System.Windows.Media.GlyphRun> をレンダリングする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-177">When a <xref:System.Windows.Media.GlyphRun> is rendered on a device that has built-in support for the named device font, the <xref:System.Windows.Media.GlyphRun> should be rendered using a device specific mechanism for selecting that font, and by sending Unicode code points rather than glyph indices.</span></span> <span data-ttu-id="bf1e0-178">名前付きデバイスフォントの組み込みサポートが含まれていないデバイスにレンダリングする場合、<xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> は無視する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-178">When rendering onto a device that does not include built-in support for the named device font, <xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontRenderingEmSize">
      <MemberSignature Language="C#" Value="public double FontRenderingEmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontRenderingEmSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontRenderingEmSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontRenderingEmSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontRenderingEmSize : double with get, set" Usage="System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-179"><see cref="T:System.Windows.Media.GlyphRun" /> のレンダリングに使用する全角サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-179">Gets or sets the em size used for rendering the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-180">描画に使用する全角サイズを表す <see cref="T:System.Double" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-180">A <see cref="T:System.Double" /> value that represents the em size used for rendering.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaretCharacterHitFromDistance">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance (double distance, out bool isInside);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance(float64 distance, [out] bool&amp; isInside) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetCaretCharacterHitFromDistance(System.Double,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCaretCharacterHitFromDistance (distance As Double, ByRef isInside As Boolean) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetCaretCharacterHitFromDistance(double distance, [Runtime::InteropServices::Out] bool % isInside);" />
      <MemberSignature Language="F#" Value="member this.GetCaretCharacterHitFromDistance : double * bool -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetCaretCharacterHitFromDistance (distance, isInside)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Double" />
        <Parameter Name="isInside" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="distance"><span data-ttu-id="bf1e0-181">キャレット文字ヒットの計算に使用するオフセット。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-181">Offset to use for computing the caret character hit.</span></span></param>
        <param name="isInside"><span data-ttu-id="bf1e0-182">文字ヒットが <see cref="T:System.Windows.Media.GlyphRun" /> 内にあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-182">Determines whether the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></param>
        <summary><span data-ttu-id="bf1e0-183"><see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> のキャレットの文字ヒットを表す <see cref="T:System.Windows.Media.GlyphRun" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-183">Retrieves the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit of the caret of the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-184"><see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> の値に最も近い文字ヒットを表す <paramref name="distance" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-184">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit that is closest to the <paramref name="distance" /> value.</span></span> <span data-ttu-id="bf1e0-185">出力パラメーター <paramref name="isInside" /> は、文字ヒットが <see langword="true" /> 内にある場合は <see cref="T:System.Windows.Media.GlyphRun" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-185">The out parameter <paramref name="isInside" /> returns <see langword="true" /> if the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-186">`distance` 値は、<xref:System.Windows.Media.GlyphRun>の先頭端からのオフセットを表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-186">The `distance` value represents the offset from the leading edge of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="bf1e0-187">ヒットが <xref:System.Windows.Media.GlyphRun>の外側にある場合、文字ヒットは、<xref:System.Windows.Media.GlyphRun>内でヒットした最も近いキャレット文字を表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-187">If the hit is outside the <xref:System.Windows.Media.GlyphRun>, the character hit represents the closest caret character hit within the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="bf1e0-188"><xref:System.Windows.Media.TextFormatting.CharacterHit> 構造体は、<xref:System.Windows.Media.GlyphRun> 内の文字ヒットに関する情報 (ヒットした最初の文字のインデックス、および先頭または末尾のエッジに関する情報) を表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-188">The <xref:System.Windows.Media.TextFormatting.CharacterHit> structure represents information about a character hit within a <xref:System.Windows.Media.GlyphRun> - the index of the first character that was hit as well as information about the leading or trailing edge.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceFromCaretCharacterHit">
      <MemberSignature Language="C#" Value="public double GetDistanceFromCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDistanceFromCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetDistanceFromCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDistanceFromCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetDistanceFromCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; double" Usage="glyphRun.GetDistanceFromCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="bf1e0-189">オフセットの計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-189">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the offset.</span></span></param>
        <summary><span data-ttu-id="bf1e0-190"><see cref="T:System.Windows.Media.GlyphRun" /> のリーディング エッジから、指定した文字ヒットを含むキャレット位置のリーディング エッジまたはトレーリング エッジまでの、オフセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-190">Retrieves the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the specified character hit.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-191"><see cref="T:System.Double" /> のリーディング エッジから、文字ヒットを含むキャレット位置のリーディング エッジまたはトレーリング エッジまでのオフセットを表す <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-191">A <see cref="T:System.Double" /> that represents the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the character hit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-192"><xref:System.Windows.Media.GlyphRun> のヒットテストが行われていない場合は、0.0 の距離が返されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-192">If the <xref:System.Windows.Media.GlyphRun> is not hit testable, the distance of 0.0 is returned.</span></span> <span data-ttu-id="bf1e0-193"><xref:System.Windows.Media.GlyphRun> をヒットテストできるかどうかを判断するには、<xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-193">Use the <xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> property to determine if a <xref:System.Windows.Media.GlyphRun> can be hit test.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bf1e0-194">文字ヒットが、<see cref="T:System.Windows.Media.GlyphRun" /> の Unicode 文字列によって指定される範囲の外にあります。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-194">The character hit is outside the range specified by the <see cref="T:System.Windows.Media.GlyphRun" /> Unicode string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetNextCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetNextCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetNextCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="bf1e0-195">次のヒット値の計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-195">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the next hit value.</span></span></param>
        <summary><span data-ttu-id="bf1e0-196"><see cref="T:System.Windows.Media.GlyphRun" /> の論理方向にある、次の有効なキャレット文字ヒットを取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-196">Retrieves the next valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-197">論理方向にある次の有効なキャレット文字ヒットを表す <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-197">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the next valid caret character hit in the logical direction.</span></span> <span data-ttu-id="bf1e0-198">戻り値が <paramref name="characterHit" /> と等しい場合、<see cref="T:System.Windows.Media.GlyphRun" /> でそれ以上ナビゲートすることはできません。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-198">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-199">以前の有効なキャレット文字ヒットを取得するには、<xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-199">To retrieve the previous valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetPreviousCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetPreviousCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit"><span data-ttu-id="bf1e0-200">前のヒット値の計算に使用する <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-200">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the previous hit value.</span></span></param>
        <summary><span data-ttu-id="bf1e0-201"><see cref="T:System.Windows.Media.GlyphRun" /> の論理方向にある、前の有効なキャレット文字ヒットを取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-201">Retrieves the previous valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <returns><span data-ttu-id="bf1e0-202">論理方向にある前の有効なキャレット文字ヒットを表す <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-202">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the previous valid caret character hit in the logical direction.</span></span> <span data-ttu-id="bf1e0-203">戻り値が <paramref name="characterHit" /> と等しい場合、<see cref="T:System.Windows.Media.GlyphRun" /> でそれ以上ナビゲートすることはできません。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-203">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-204">次の有効なキャレット文字ヒットを取得するには、<xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-204">To retrieve the next valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; GlyphIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; GlyphIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphIndices As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ GlyphIndices { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphIndices : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-205">描画物理フォントのグリフ インデックスを表す <see cref="T:System.UInt16" /> 値の配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-205">Gets or sets an array of <see cref="T:System.UInt16" /> values that represent the glyph indices in the rendering physical font.</span></span></summary>
        <value><span data-ttu-id="bf1e0-206">グリフのインデックスを表す <see cref="T:System.UInt16" /> 値のリスト。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-206">A list of <see cref="T:System.UInt16" /> values that represent the glyph indices.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-207">グリフインデックスの既定値は、内部テキスト内の対応する Unicode コードポイントのフォントの文字マップテーブルによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-207">The default value of the glyph indices are defined by the font's character map table for the corresponding Unicode code points in the inner text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphOffsets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Point&gt; GlyphOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; GlyphOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphOffsets As IList(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ GlyphOffsets { System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphOffsets : System.Collections.Generic.IList&lt;System.Windows.Point&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.PointIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Point&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-208"><see cref="T:System.Windows.Point" /> のグリフのオフセットを表す <see cref="T:System.Windows.Media.GlyphRun" /> 値の配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-208">Gets or sets an array of <see cref="T:System.Windows.Point" /> values representing the offsets of the glyphs in the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-209">グリフのオフセットを表す <see cref="T:System.Windows.Point" /> 値の一覧。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-209">A list of <see cref="T:System.Windows.Point" /> values representing the offsets of glyph.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-210">グリフのオフセット値は、グリフの最終的な原点を生成するために、基準グリフの原点に追加されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-210">The glyph offset values are added to the nominal glyph origin to generate the final origin for the glyph.</span></span> <span data-ttu-id="bf1e0-211"><xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> プロパティは、<xref:System.Windows.Media.GlyphRun>の公称グリフオリジンの値を表します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-211">The <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> property represents the values of the nominal glyph origins for the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="bf1e0-212">基本グリフには通常、グリフオフセット (0, 0) があります。これには、通常、前の基本グリフの上に適切に配置されるオフセットがあります。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-212">Base glyphs generally have a glyph offset of (0, 0), combining glyphs generally have an offset that places them correctly on top of the nearest preceding base glyph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphTypeface">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GlyphTypeface GlyphTypeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GlyphTypeface GlyphTypeface" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphTypeface As GlyphTypeface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::GlyphTypeface ^ GlyphTypeface { System::Windows::Media::GlyphTypeface ^ get(); void set(System::Windows::Media::GlyphTypeface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphTypeface : System.Windows.Media.GlyphTypeface with get, set" Usage="System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GlyphTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-213"><see cref="T:System.Windows.Media.GlyphTypeface" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-213">Gets or sets the <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-214"><see cref="T:System.Windows.Media.GlyphTypeface" /> の <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-214">The <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestable">
      <MemberSignature Language="C#" Value="public bool IsHitTestable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHitTestable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestable : bool" Usage="System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-215"><see cref="T:System.Windows.Media.GlyphRun" /> 内に有効なキャレット文字ヒットがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-215">Gets a value indicating whether there are any valid caret character hits within the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-216">有効なキャレット文字ヒットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-216"><see langword="true" /> if there are valid caret character hits; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideways">
      <MemberSignature Language="C#" Value="public bool IsSideways { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideways" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsSideways" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSideways As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSideways { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSideways : bool with get, set" Usage="System.Windows.Media.GlyphRun.IsSideways" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-217">グリフを回転するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-217">Gets or sets a value indicating whether to rotate glyphs.</span></span></summary>
        <value><span data-ttu-id="bf1e0-218">グリフが回転される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-218"><see langword="true" /> if the glyphs are rotated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf1e0-219"><xref:System.Windows.Media.GlyphRun.IsSideways%2A> が `true`場合、テキスト文字を構成するグリフは、垂直方向のベースライン配置メトリックを使用して、90°の反時計回りに回転されます。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-219">If <xref:System.Windows.Media.GlyphRun.IsSideways%2A> is `true`, the glyphs that make up text characters are rotated 90° counter-clockwise, using vertical baseline positioning metrics.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.Media.GlyphRun.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-220"><see cref="T:System.Windows.Markup.XmlLanguage" /> の <see cref="T:System.Windows.Media.GlyphRun" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-220">Gets or sets the <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></summary>
        <value><span data-ttu-id="bf1e0-221"><see cref="T:System.Windows.Markup.XmlLanguage" /> の <see cref="T:System.Windows.Media.GlyphRun" />。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-221">The <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public float PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PixelsPerDip { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : single with get, set" Usage="System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bf1e0-222">テキストを表示する PixelsPerDip を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-222">Get or sets the PixelsPerDip at which the text should be rendered.</span></span></summary>
        <value><span data-ttu-id="bf1e0-223">現在の <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> 値。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-223">The current <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-224">このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-224">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf1e0-225">このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="bf1e0-225">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
