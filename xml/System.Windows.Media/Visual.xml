<Type Name="Visual" FullName="System.Windows.Media.Visual">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1855469333257665a7bb4d42a8ee3a1be982ee8f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78809092" /></Metadata><TypeSignature Language="C#" Value="public abstract class Visual : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visual extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Visual" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Visual&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Visual abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject&#xA;    interface DUCE.IResource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4f755-101">WPF でヒット テスト、座標変換、境界ボックス計算などの描画をサポートします。</span><span class="sxs-lookup"><span data-stu-id="4f755-101">Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-102"><xref:System.Windows.Media.Visual> クラスは、すべての <xref:System.Windows.FrameworkElement> オブジェクトが派生する基本抽象化です。</span><span class="sxs-lookup"><span data-stu-id="4f755-102">The <xref:System.Windows.Media.Visual> class is the basic abstraction from which every <xref:System.Windows.FrameworkElement> object derives.</span></span> <span data-ttu-id="4f755-103">また、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]で新しいコントロールを作成するためのエントリポイントとしても機能します。また、多くの点で、[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] アプリケーションモデルのウィンドウハンドル (HWND) に相当するものと考えることができます。</span><span class="sxs-lookup"><span data-stu-id="4f755-103">It also serves as the entry point for writing new controls in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], and in many ways can be thought of as an equivalent of a window handle (HWND) in the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] application model.</span></span>  
  
 <span data-ttu-id="4f755-104"><xref:System.Windows.Media.Visual> オブジェクトは、レンダリングサポートを提供する主要な役割を持つ主要な [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="4f755-104">The <xref:System.Windows.Media.Visual> object is a core [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] object, whose primary role is to provide rendering support.</span></span> <span data-ttu-id="4f755-105"><xref:System.Windows.Controls.Button> や <xref:System.Windows.Controls.TextBox>などのユーザーインターフェイスコントロールは <xref:System.Windows.Media.Visual> クラスから派生し、<xref:System.Windows.Media.Visual> 定義されたプロパティを使用して表示データを保持します。</span><span class="sxs-lookup"><span data-stu-id="4f755-105">User interface controls, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBox>, derive from the <xref:System.Windows.Media.Visual> class, and use the <xref:System.Windows.Media.Visual> defined properties for persisting their rendering data.</span></span> <span data-ttu-id="4f755-106"><xref:System.Windows.Media.Visual> オブジェクトは、次の機能をサポートします。</span><span class="sxs-lookup"><span data-stu-id="4f755-106">The <xref:System.Windows.Media.Visual> object provides support for the following:</span></span>  
  
-   <span data-ttu-id="4f755-107">出力表示: ビジュアルの、シリアル化された永続的な描画内容をレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="4f755-107">Output display: Rendering the persisted, serialized drawing content of a visual.</span></span>  
  
-   <span data-ttu-id="4f755-108">変換: ビジュアルで変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="4f755-108">Transformations: Performing transformations on a visual.</span></span>  
  
-   <span data-ttu-id="4f755-109">クリッピング: ビジュアルのクリッピング領域をサポートします。</span><span class="sxs-lookup"><span data-stu-id="4f755-109">Clipping: Providing clipping region support for a visual.</span></span>  
  
-   <span data-ttu-id="4f755-110">ヒットテスト: 指定された座標 (ポイント) またはジオメトリがビジュアルの境界内に含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="4f755-110">Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</span></span>  
  
-   <span data-ttu-id="4f755-111">境界ボックスの計算: ビジュアルの四角形領域を決定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-111">Bounding box calculations: Determining the bounding rectangle of a visual.</span></span>  
  
 <span data-ttu-id="4f755-112">アーキテクチャ上、<xref:System.Windows.Media.Visual> オブジェクトには、次のように、そのレンダリングにすぐに関連しない他のアプリケーション開発要件/[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 機能のサポートは含まれません。</span><span class="sxs-lookup"><span data-stu-id="4f755-112">Architecturally, the <xref:System.Windows.Media.Visual> object does not include support for other application development requirements / [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features that are not immediately related to its rendering, such as the following:</span></span>  
  
-   <span data-ttu-id="4f755-113">イベント処理</span><span class="sxs-lookup"><span data-stu-id="4f755-113">Event handling</span></span>  
  
-   <span data-ttu-id="4f755-114">[レイアウト]</span><span class="sxs-lookup"><span data-stu-id="4f755-114">Layout</span></span>  
  
-   <span data-ttu-id="4f755-115">スタイル</span><span class="sxs-lookup"><span data-stu-id="4f755-115">Styles</span></span>  
  
-   <span data-ttu-id="4f755-116">データ バインディング</span><span class="sxs-lookup"><span data-stu-id="4f755-116">Data binding</span></span>  
  
-   <span data-ttu-id="4f755-117">グローバリゼーション</span><span class="sxs-lookup"><span data-stu-id="4f755-117">Globalization</span></span>  
  
 <span data-ttu-id="4f755-118"><xref:System.Windows.Media.Visual> は、さらにクラスを派生させることができるパブリック抽象クラスとして提供されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-118"><xref:System.Windows.Media.Visual> is provided as a public abstract class from which further classes can be derived.</span></span> <span data-ttu-id="4f755-119">次の図は、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] アーキテクチャで定義されている既存のビジュアルオブジェクトの階層を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-119">The following illustration shows the hierarchy of the existing visual objects that are defined in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] architecture.</span></span>  
  
 <span data-ttu-id="4f755-120">![Visual オブジェクトから派生したクラスのダイアグラム](~/add/media/visualclass01.png "Visual オブジェクトから派生したクラスのダイアグラム")</span><span class="sxs-lookup"><span data-stu-id="4f755-120">![Diagram of classes derived from the Visual object](~/add/media/visualclass01.png "Diagram of classes derived from the Visual object")</span></span>  
<span data-ttu-id="4f755-121">Visual クラスの階層構造</span><span class="sxs-lookup"><span data-stu-id="4f755-121">Visual class hierarchy</span></span>  
  
 <span data-ttu-id="4f755-122">場合によっては、<xref:System.Windows.Media.Visual> で protected として定義されているメンバーは、派生 <xref:System.Windows.UIElement> クラスに類似した名前を持つ、より簡単にアクセスできるメンバーとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-122">In some cases, members that are defined as protected in <xref:System.Windows.Media.Visual> are exposed as more readily accessible members with similar names in the derived <xref:System.Windows.UIElement> class.</span></span>  
  
 <span data-ttu-id="4f755-123">詳しくは、「[WPF グラフィックス レンダリングの概要](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="4f755-123">For more information, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).</span></span>  
  
 <span data-ttu-id="4f755-124"><xref:System.Windows.Media.Visual> には、制限された数のレベルがあります。</span><span class="sxs-lookup"><span data-stu-id="4f755-124">A <xref:System.Windows.Media.Visual> has a limited number of levels.</span></span> <span data-ttu-id="4f755-125">以前のバージョンの .NET Framework では、この最大深度は255でした。</span><span class="sxs-lookup"><span data-stu-id="4f755-125">In previous versions of the .NET Framework, this maximum depth was 255.</span></span> <span data-ttu-id="4f755-126">ビジュアルツリーに多数のレベルがあるレイアウトでは、この制限は不十分です。</span><span class="sxs-lookup"><span data-stu-id="4f755-126">This limit is inadequate for some layouts that have many levels in the visual tree.</span></span>  
  
 <span data-ttu-id="4f755-127">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]では、<xref:System.Windows.Media.Visual> の最大深度は2047であり、これにより、より深いビジュアルツリーが可能になります。</span><span class="sxs-lookup"><span data-stu-id="4f755-127">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the maximum depth of a <xref:System.Windows.Media.Visual> is 2047, which enables much deeper visual trees.</span></span> <span data-ttu-id="4f755-128">ほとんどのアプリケーションでは、多数のレベルを走査するのに十分なスタック領域がないため、結果はレイアウト中の <xref:System.StackOverflowException> になります。</span><span class="sxs-lookup"><span data-stu-id="4f755-128">In most applications, there is not enough stack space to traverse so many levels, and the result is a <xref:System.StackOverflowException> during layout.</span></span> <span data-ttu-id="4f755-129">既定のスタックサイズでは、ツリーの深さが約800の場合に、この例外がスローされます。これは、入れ子になった <xref:System.Windows.Controls.TreeViewItem> オブジェクトの約190に対応します。</span><span class="sxs-lookup"><span data-stu-id="4f755-129">For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested <xref:System.Windows.Controls.TreeViewItem> objects.</span></span>  
  
 <span data-ttu-id="4f755-130">この例外がアプリケーションによってスローされ、より深い視覚ツリーが必要な場合は、アプリケーションのスタックサイズを増やすことができます。</span><span class="sxs-lookup"><span data-stu-id="4f755-130">If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</span></span> <span data-ttu-id="4f755-131">スタックのサイズを増やすには、コンパイル時に/STACK オプションを使用するか、EDITBIN ユーティリティを使用します。</span><span class="sxs-lookup"><span data-stu-id="4f755-131">You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</span></span> <span data-ttu-id="4f755-132">スタックサイズを大きくすると、アプリケーションのパフォーマンスに影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-132">Increasing the stack size may affect your application's performance.</span></span> <span data-ttu-id="4f755-133">詳細については、「 [Stack の割り当て](https://go.microsoft.com/fwlink/?LinkId=165510)」および「 [EDITBIN オプション](https://go.microsoft.com/fwlink/?LinkId=165511)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4f755-133">For more information, see [Stack Allocations](https://go.microsoft.com/fwlink/?LinkId=165510) and [EDITBIN Options](https://go.microsoft.com/fwlink/?LinkId=165511).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.VisualCollection" />
    <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visual ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Visual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f755-134"><see cref="T:System.Windows.Media.Visual" /> クラスから派生したオブジェクトの基本の初期化を行います。</span><span class="sxs-lookup"><span data-stu-id="4f755-134">Provides the base initialization for objects derived from the <see cref="T:System.Windows.Media.Visual" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVisualChild">
      <MemberSignature Language="C#" Value="protected void AddVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.AddVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="4f755-135">親ビジュアルに追加するビジュアル子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-135">The child visual object to add to parent visual.</span></span></param>
        <summary><span data-ttu-id="4f755-136">2 つのビジュアル間の親子リレーションシップを定義します。</span><span class="sxs-lookup"><span data-stu-id="4f755-136">Defines the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-137"><xref:System.Windows.Media.Visual.AddVisualChild%2A> メソッドは、2つのビジュアルオブジェクト間の親子リレーションシップを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-137">The <xref:System.Windows.Media.Visual.AddVisualChild%2A> method sets up the parent-child relationship between two visual objects.</span></span> <span data-ttu-id="4f755-138">このメソッドは、ビジュアル子オブジェクトの基になるストレージの実装に対してより高いレベルの制御が必要な場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-138">This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="4f755-139"><xref:System.Windows.Media.VisualCollection> は、子オブジェクトを格納するための既定の実装として使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f755-139"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-140">次の例では、ビジュアル子のカスタムストレージ要件を定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-140">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="4f755-141">この例では、<xref:System.Windows.Media.Visual.AddVisualChild%2A> および <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> メソッドを使用して、親ビジュアルと `child`の間に親子リレーションシップを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-141">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="4f755-142">ビジュアルツリーが正しく列挙されるようにするために、この例では、<xref:System.Windows.Media.Visual.GetVisualChild%2A> メソッドと <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> プロパティのオーバーライドされた実装を提供しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-142">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f755-143">ビジュアルオブジェクト間に親子関係を作成するために <xref:System.Windows.Media.VisualCollection> を使用することもできますが、1つの子のみが親にリンクされている場合は、独自のカスタムストレージの実装を提供する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="4f755-143">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindCommonVisualAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject FindCommonVisualAncestor(class System.Windows.DependencyObject otherVisual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindCommonVisualAncestor (otherVisual As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ FindCommonVisualAncestor(System::Windows::DependencyObject ^ otherVisual);" />
      <MemberSignature Language="F#" Value="member this.FindCommonVisualAncestor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="visual.FindCommonVisualAncestor otherVisual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherVisual" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="otherVisual"><span data-ttu-id="4f755-144"><see cref="T:System.Windows.DependencyObject" /> 型のビジュアル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-144">A visual object of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="4f755-145">2 つのビジュアル オブジェクトの共通の先祖を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-145">Returns the common ancestor of two visual objects.</span></span></summary>
        <returns><span data-ttu-id="4f755-146">ビジュアル オブジェクトと <paramref name="otherVisual" /> との間に共通する先祖が存在する場合は、その共通の先祖。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-146">The common ancestor of the visual object and <paramref name="otherVisual" /> if one exists; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-147">2D オブジェクトと3D オブジェクトに共通のビジュアル先祖を持つことができるため、`otherVisual`の <xref:System.Windows.Media.Media3D.Visual3D> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="4f755-147">2D and 3D objects can have common visual ancestors, so it is possible to pass a <xref:System.Windows.Media.Media3D.Visual3D> for `otherVisual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetVisualChild : int -&gt; System.Windows.Media.Visual&#xA;override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="visual.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4f755-148"><see cref="T:System.Windows.Media.VisualCollection" /> 内のビジュアル オブジェクトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="4f755-148">The index of the visual object in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="4f755-149">親 <see cref="T:System.Windows.Media.Visual" /> 内の指定した <see cref="T:System.Windows.Media.VisualCollection" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-149">Returns the specified <see cref="T:System.Windows.Media.Visual" /> in the parent <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="4f755-150">指定した <see cref="T:System.Windows.Media.VisualCollection" /> 値にある <paramref name="index" /> 内の子。</span><span class="sxs-lookup"><span data-stu-id="4f755-150">The child in the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified <paramref name="index" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-151">既定では、<xref:System.Windows.Media.Visual> には子がありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-151">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="4f755-152">したがって、既定の実装では、常に <xref:System.ArgumentOutOfRangeException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4f755-152">Therefore, the default implementation always throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-153">次の例では、<xref:System.Windows.Media.Visual.GetVisualChild%2A>のオーバーライドされた実装を定義します。</span><span class="sxs-lookup"><span data-stu-id="4f755-153">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102b](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102b)]
 [!code-vb[DrawingVisualSample#102b](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102b)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4f755-154"><see cref="T:System.Windows.Media.Visual" /> から派生するクラスは、ビジュアルツリーを正しく列挙するために、このメソッドと <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> プロパティをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-154">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this method, and also the <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> property, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f755-155">点またはジオメトリ値がビジュアル オブジェクトの境界内にあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4f755-155">Determines whether a point or geometry value is within the bounds of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult&#xA;override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="4f755-156">ヒット テストの対象となる <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> を指定する <see cref="T:System.Windows.Media.Geometry" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-156">A <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="4f755-157">ジオメトリ値がビジュアル オブジェクトの境界内にあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4f755-157">Determines whether a geometry value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-158">ヒット テストの結果を表す <see cref="T:System.Windows.Media.GeometryHitTestResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-158">A <see cref="T:System.Windows.Media.GeometryHitTestResult" /> that represents the result of the hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-159"><xref:System.Windows.Media.Visual.HitTestCore%2A> メソッドをオーバーライドすることによって、ビジュアルオブジェクトの既定のヒットテストのサポートをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="4f755-159">You can override default hit testing support for a visual object by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="4f755-160">これは、<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> メソッドを呼び出すと、オーバーライドされた <xref:System.Windows.Media.Visual.HitTestCore%2A> の実装が呼び出されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4f755-160">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="4f755-161">ビジュアルオブジェクトのジオメトリ外にある場合でも、ビジュアルオブジェクトの外接する四角形内でヒットテストが行われると、オーバーライドされたメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-161">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-162"><xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> メソッドをオーバーライドする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-162">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> method.</span></span> <span data-ttu-id="4f755-163">このメソッドをオーバーライドする理由の1つは、ヒットテストプロセス中に追加機能を提供することです。</span><span class="sxs-lookup"><span data-stu-id="4f755-163">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult&#xA;override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="4f755-164">ヒット テストの対象となる <see cref="T:System.Windows.Media.PointHitTestParameters" /> を指定する <see cref="T:System.Windows.Point" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-164">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="4f755-165">点の座標値がビジュアル オブジェクトの境界内にあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4f755-165">Determines whether a point coordinate value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-166">ヒット テストから返される <see cref="T:System.Windows.Media.HitTestResult" /> を表す <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-166">A <see cref="T:System.Windows.Media.HitTestResult" /> that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-167"><xref:System.Windows.Media.Visual.HitTestCore%2A> メソッドをオーバーライドすることにより、ビジュアルオブジェクトの既定のヒットテストのサポートをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="4f755-167">You can override the default hit testing support on visual objects by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="4f755-168">これは、<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> メソッドを呼び出すと、オーバーライドされた <xref:System.Windows.Media.Visual.HitTestCore%2A> の実装が呼び出されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4f755-168">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="4f755-169">ビジュアルオブジェクトのジオメトリ外にある場合でも、ビジュアルオブジェクトの外接する四角形内でヒットテストが行われると、オーバーライドされたメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-169">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-170"><xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> メソッドをオーバーライドする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-170">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> method.</span></span> <span data-ttu-id="4f755-171">このメソッドをオーバーライドする理由の1つは、ヒットテストプロセス中に追加機能を提供することです。</span><span class="sxs-lookup"><span data-stu-id="4f755-171">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#107](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#107)]
 [!code-vb[HitTestingOverview#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAncestorOf">
      <MemberSignature Language="C#" Value="public bool IsAncestorOf (System.Windows.DependencyObject descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAncestorOf(class System.Windows.DependencyObject descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAncestorOf (descendant As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAncestorOf(System::Windows::DependencyObject ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.IsAncestorOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsAncestorOf descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="4f755-172"><see cref="T:System.Windows.DependencyObject" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-172">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="4f755-173">ビジュアル オブジェクトが、指定した子孫ビジュアル オブジェクトの先祖かどうかを判定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-173">Determines whether the visual object is an ancestor of the descendant visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-174">ビジュアル オブジェクトが <see langword="true" /> の先祖である場合は <paramref name="descendant" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-174"><see langword="true" /> if the visual object is an ancestor of <paramref name="descendant" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public bool IsDescendantOf (System.Windows.DependencyObject ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDescendantOf(class System.Windows.DependencyObject ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDescendantOf (ancestor As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDescendantOf(System::Windows::DependencyObject ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.IsDescendantOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsDescendantOf ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="4f755-175"><see cref="T:System.Windows.DependencyObject" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-175">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="4f755-176">ビジュアル オブジェクトが、指定した先祖ビジュアル オブジェクトの子孫かどうかを判定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-176">Determines whether the visual object is a descendant of the ancestor visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-177">ビジュアル オブジェクトが <see langword="true" /> の子孫である場合は <paramref name="ancestor" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-177"><see langword="true" /> if the visual object is a descendant of <paramref name="ancestor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="visual.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="4f755-178">以前の DPI スケール設定。</span><span class="sxs-lookup"><span data-stu-id="4f755-178">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="4f755-179">新規の DPI スケール設定。</span><span class="sxs-lookup"><span data-stu-id="4f755-179">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="4f755-180">このビューが表示される DPI が変更するときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-180">Called when the DPI at which this View is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="4f755-181">コレクションに追加された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-181">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="4f755-182">コレクションから削除された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-182">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection</span></span></param>
        <summary><span data-ttu-id="4f755-183">ビジュアル オブジェクトの <see cref="T:System.Windows.Media.VisualCollection" /> が変更されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-183">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of the visual object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="4f755-184"><see cref="T:System.Windows.DependencyObject" /> オブジェクトの直前の親を表す <see cref="T:System.Windows.Media.Visual" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-184">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Visual" /> object.</span></span> <span data-ttu-id="4f755-185"><see cref="T:System.Windows.Media.Visual" /> オブジェクトの直前の親がなかった場合、パラメーターの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f755-185">If the <see cref="T:System.Windows.Media.Visual" /> object did not have a previous parent, the value of the parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4f755-186">ビジュアル オブジェクトの親が変更されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-186">Called when the parent of the visual object is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-187"><xref:System.Windows.Media.Visual> から派生したクラスは、このメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="4f755-187">A class that derives from <xref:System.Windows.Media.Visual> can choose to override this method.</span></span>  
  
 <span data-ttu-id="4f755-188">この変更をインスタンスに報告する "VisualParentChanged" イベントは提供されていません。</span><span class="sxs-lookup"><span data-stu-id="4f755-188">There is no "VisualParentChanged" event provided that reports this change to instances.</span></span> <span data-ttu-id="4f755-189">そのため、通知シナリオを処理し、そのインスタンスがシナリオの一部である場合は、通知のインスタンスバージョンを提供するには、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-189">Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-190">次の例では、<xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>のオーバーライドされた実装を定義します。</span><span class="sxs-lookup"><span data-stu-id="4f755-190">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet10)]
 [!code-vb[VisualSnippets#VisualSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualParent" />
      </Docs>
    </Member>
    <Member MemberName="PointFromScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointFromScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointFromScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointFromScreen (point As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointFromScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointFromScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointFromScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="4f755-191">画面座標における <see cref="T:System.Windows.Point" /> の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-191">The <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="4f755-192">画面座標における <see cref="T:System.Windows.Point" /> を、<see cref="T:System.Windows.Point" /> の現在の座標系を表す <see cref="T:System.Windows.Media.Visual" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f755-192">Converts a <see cref="T:System.Windows.Point" /> in screen coordinates into a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="4f755-193"><see cref="T:System.Windows.Point" /> の現在の座標系を表す変換後の <see cref="T:System.Windows.Media.Visual" /> の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-193">The converted <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-194"><xref:System.Windows.Media.Visual> の現在の座標系を表す <xref:System.Windows.Point> を画面座標で <xref:System.Windows.Point> に変換するには、<xref:System.Windows.Media.Visual.PointToScreen%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="4f755-194">Use the <xref:System.Windows.Media.Visual.PointToScreen%2A> method to convert a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual> into a <xref:System.Windows.Point> in screen coordinates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointToScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointToScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (point As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointToScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="4f755-195"><see cref="T:System.Windows.Point" /> の現在の座標系を表す <see cref="T:System.Windows.Media.Visual" /> の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-195">The <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="4f755-196"><see cref="T:System.Windows.Point" /> の現在の座標系を表す <see cref="T:System.Windows.Media.Visual" /> を、画面座標における <see cref="T:System.Windows.Point" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f755-196">Converts a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" /> into a <see cref="T:System.Windows.Point" /> in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="4f755-197">画面座標に変換された <see cref="T:System.Windows.Point" /> の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-197">The converted <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-198"><xref:System.Windows.Media.Visual.PointFromScreen%2A> メソッドを使用して、画面座標の <xref:System.Windows.Point> を <xref:System.Windows.Media.Visual>の現在の座標系を表す <xref:System.Windows.Point> に変換します。</span><span class="sxs-lookup"><span data-stu-id="4f755-198">Use the <xref:System.Windows.Media.Visual.PointFromScreen%2A> method to convert a <xref:System.Windows.Point> in screen coordinates into a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVisualChild">
      <MemberSignature Language="C#" Value="protected void RemoveVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.RemoveVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="4f755-199">親ビジュアルから削除するビジュアル子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4f755-199">The child visual object to remove from the parent visual.</span></span></param>
        <summary><span data-ttu-id="4f755-200">2 つのビジュアル間の親子リレーションシップを削除します。</span><span class="sxs-lookup"><span data-stu-id="4f755-200">Removes the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-201"><xref:System.Windows.Media.Visual.RemoveVisualChild%2A> メソッドは、2つのビジュアル間の親子リレーションシップを削除します。</span><span class="sxs-lookup"><span data-stu-id="4f755-201">The <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> method removes the parent-child relationship between two visuals.</span></span> <span data-ttu-id="4f755-202">このメソッドは、<xref:System.Windows.Media.Visual.AddVisualChild%2A> メソッドと共に使用して、ビジュアル子オブジェクトの基になるストレージの実装をより高いレベルで制御する必要がある場合に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-202">This method, along with the <xref:System.Windows.Media.Visual.AddVisualChild%2A> method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="4f755-203"><xref:System.Windows.Media.VisualCollection> は、子オブジェクトを格納するための既定の実装として使用できます。</span><span class="sxs-lookup"><span data-stu-id="4f755-203"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-204">次の例では、ビジュアル子のカスタムストレージ要件を定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-204">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="4f755-205">この例では、<xref:System.Windows.Media.Visual.AddVisualChild%2A> および <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> メソッドを使用して、親ビジュアルと `child`の間に親子リレーションシップを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-205">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="4f755-206">ビジュアルツリーが正しく列挙されるようにするために、この例では、<xref:System.Windows.Media.Visual.GetVisualChild%2A> メソッドと <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> プロパティのオーバーライドされた実装を提供しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-206">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f755-207">ビジュアルオブジェクト間に親子関係を作成するために <xref:System.Windows.Media.VisualCollection> を使用することもできますが、1つの子のみが親にリンクされている場合は、独自のカスタムストレージの実装を提供する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="4f755-207">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformToAncestor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f755-208"><see cref="T:System.Windows.Media.Visual" /> から指定したビジュアル オブジェクトの先祖に座標を変換するために使用できる変換を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-208">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified ancestor of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor(class System.Windows.Media.Media3D.Visual3D ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual3D) As GeneralTransform2DTo3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform2DTo3D ^ TransformToAncestor(System::Windows::Media::Media3D::Visual3D ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform2DTo3D" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform2DTo3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="4f755-209">座標の変換先となる <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-209">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="4f755-210"><see cref="T:System.Windows.Media.Visual" /> からビジュアル オブジェクトの指定した <see cref="T:System.Windows.Media.Media3D.Visual3D" /> の先祖に座標を変換するために使用できる変換を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-210">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-211"><see cref="T:System.Windows.Media.Visual" /> からビジュアル オブジェクトの指定した <see cref="T:System.Windows.Media.Media3D.Visual3D" /> の先祖に座標を変換するために使用できる変換。</span><span class="sxs-lookup"><span data-stu-id="4f755-211">A transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToAncestor(class System.Windows.Media.Visual ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToAncestor(System::Windows::Media::Visual ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="4f755-212">座標の変換先となる <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-212">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="4f755-213"><see cref="T:System.Windows.Media.Visual" /> からビジュアル オブジェクトの指定した <see cref="T:System.Windows.Media.Visual" /> の先祖に座標を変換するために使用できる変換を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-213">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-214"><see cref="T:System.Windows.Media.GeneralTransform" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-214">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-215">または、<xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> メソッドを使用して、その親を基準としたビジュアルオブジェクトのオフセットを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="4f755-215">Alternatively, you can use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> method to retrieve the offset of a visual object relative to its parent.</span></span> <span data-ttu-id="4f755-216">オフセット値は、返された <xref:System.Windows.Vector> 値内に含まれます。</span><span class="sxs-lookup"><span data-stu-id="4f755-216">The offset values are contained within the returned <xref:System.Windows.Vector> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
   
  
## Examples  
 <span data-ttu-id="4f755-217">次のマークアップの例は、2つの <xref:System.Windows.Controls.StackPanel> オブジェクトの中に入れ子になっている <xref:System.Windows.Controls.TextBlock> を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-217">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window2.xaml#visualsnippet7)]  
  
 <span data-ttu-id="4f755-218">次のコード例では、<xref:System.Windows.Media.Visual.TransformToAncestor%2A> メソッドを使用して、含まれている <xref:System.Windows.Window>を基準とする <xref:System.Windows.Controls.TextBlock> のオフセットを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-218">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="4f755-219">オフセット値は、返された <xref:System.Windows.Media.GeneralTransform>に含まれます。</span><span class="sxs-lookup"><span data-stu-id="4f755-219">The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet5)]
 [!code-vb[VisualSnippets#VisualSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet5)]  
  
 <span data-ttu-id="4f755-220">オフセットでは、含んでいる <xref:System.Windows.Window>内のすべてのオブジェクトの <xref:System.Windows.FrameworkElement.Margin%2A> 値が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-220">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="4f755-221">この場合、<xref:System.Windows.Vector.X%2A> は28、<xref:System.Windows.Vector.Y%2A> は28です。</span><span class="sxs-lookup"><span data-stu-id="4f755-221">In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4f755-222"><paramref name="ancestor" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f755-222"><paramref name="ancestor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f755-223"><paramref name="ancestor" /> は、ビジュアルの先祖ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-223"><paramref name="ancestor" /> is not an ancestor of the visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4f755-224">ビジュアル オブジェクトは相対的ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-224">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToDescendant">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToDescendant(class System.Windows.Media.Visual descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToDescendant (descendant As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToDescendant(System::Windows::Media::Visual ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.TransformToDescendant : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToDescendant descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="4f755-225">座標の変換先となる <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-225">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="4f755-226"><see cref="T:System.Windows.Media.Visual" /> から指定したビジュアル オブジェクトの子孫に座標を変換するために使用できる変換を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-226">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object descendant.</span></span></summary>
        <returns><span data-ttu-id="4f755-227"><see cref="T:System.Windows.Media.GeneralTransform" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-227">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4f755-228">次のマークアップの例は、<xref:System.Windows.Controls.StackPanel> オブジェクト内に含まれる <xref:System.Windows.Controls.TextBlock> を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-228">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="4f755-229">次のコード例では、<xref:System.Windows.Media.Visual.TransformToDescendant%2A> メソッドを使用して、その子 <xref:System.Windows.Controls.TextBlock>に対する <xref:System.Windows.Controls.StackPanel> のオフセットを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-229">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="4f755-230">オフセット値は、返された <xref:System.Windows.Media.GeneralTransform> 値内に含まれます。</span><span class="sxs-lookup"><span data-stu-id="4f755-230">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet9)]
 [!code-vb[VisualSnippets#VisualSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet9)]  
  
 <span data-ttu-id="4f755-231">オフセットでは、すべてのオブジェクトの <xref:System.Windows.FrameworkElement.Margin%2A> 値が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-231">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="4f755-232">この場合、<xref:System.Windows.Vector.X%2A> は-4、<xref:System.Windows.Vector.Y%2A> は-4 です。</span><span class="sxs-lookup"><span data-stu-id="4f755-232">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="4f755-233">親オブジェクトはその子オブジェクトを基準とした負のオフセットであるため、オフセット値は負の値です。</span><span class="sxs-lookup"><span data-stu-id="4f755-233">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4f755-234"><paramref name="descendant" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f755-234"><paramref name="descendant" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f755-235">ビジュアルは、<paramref name="descendant" /> ビジュアルの先祖ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-235">The visual is not an ancestor of the <paramref name="descendant" /> visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4f755-236">ビジュアル オブジェクトは相対的ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-236">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToVisual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToVisual (visual As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.TransformToVisual : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="4f755-237">座標の変換先となる <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-237">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="4f755-238"><see cref="T:System.Windows.Media.Visual" /> から指定したビジュアル オブジェクトに座標を変換するために使用できる変換を返します。</span><span class="sxs-lookup"><span data-stu-id="4f755-238">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object.</span></span></summary>
        <returns><span data-ttu-id="4f755-239"><see cref="T:System.Windows.Media.GeneralTransform" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-239">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-240"><xref:System.Windows.Media.Visual.TransformToAncestor%2A> メソッドと <xref:System.Windows.Media.Visual.TransformToDescendant%2A> メソッドを使用して、ビジュアルオブジェクトの変換を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="4f755-240">The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods can also be used to return a transform for a visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-241">次のマークアップの例は、<xref:System.Windows.Controls.StackPanel> オブジェクト内に含まれる <xref:System.Windows.Controls.TextBlock> を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-241">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="4f755-242">次のコード例では、<xref:System.Windows.Media.Visual.TransformToVisual%2A> メソッドを使用して、その子 <xref:System.Windows.Controls.TextBlock>に対する <xref:System.Windows.Controls.StackPanel> のオフセットを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-242">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToVisual%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="4f755-243">オフセット値は、返された <xref:System.Windows.Media.GeneralTransform> 値内に含まれます。</span><span class="sxs-lookup"><span data-stu-id="4f755-243">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet8](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet8)]
 [!code-vb[VisualSnippets#VisualSnippet8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet8)]  
  
 <span data-ttu-id="4f755-244">オフセットでは、すべてのオブジェクトの <xref:System.Windows.FrameworkElement.Margin%2A> 値が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-244">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="4f755-245">この場合、<xref:System.Windows.Vector.X%2A> は-4、<xref:System.Windows.Vector.Y%2A> は-4 です。</span><span class="sxs-lookup"><span data-stu-id="4f755-245">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="4f755-246">親オブジェクトはその子オブジェクトを基準とした負のオフセットであるため、オフセット値は負の値です。</span><span class="sxs-lookup"><span data-stu-id="4f755-246">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4f755-247"><paramref name="visual" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4f755-247"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4f755-248">ビジュアル オブジェクトは相対的ではありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-248">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffect ^ VisualBitmapEffect {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-249"><see cref="T:System.Windows.Media.Effects.BitmapEffect" /> の <see cref="T:System.Windows.Media.Visual" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-249">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-250">このビジュアル オブジェクトのビットマップ効果。</span><span class="sxs-lookup"><span data-stu-id="4f755-250">The bitmap effect for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffectInput ^ VisualBitmapEffectInput {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffectInput ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-251"><see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> の <see cref="T:System.Windows.Media.Visual" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-251">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-252">このビジュアル オブジェクトのビットマップ効果の入力値。</span><span class="sxs-lookup"><span data-stu-id="4f755-252">The bitmap effect input value for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffectInput" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapScalingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapScalingMode As BitmapScalingMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::BitmapScalingMode VisualBitmapScalingMode {  protected public:&#xA;System::Windows::Media::BitmapScalingMode get(); protected:&#xA; void set(System::Windows::Media::BitmapScalingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapScalingMode : System.Windows.Media.BitmapScalingMode with get, set" Usage="System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapScalingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-253"><see cref="T:System.Windows.Media.BitmapScalingMode" /> の <see cref="T:System.Windows.Media.Visual" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-253">Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-254">の <see cref="T:System.Windows.Media.BitmapScalingMode" /> の値 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-254">The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualCacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode VisualCacheMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode VisualCacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualCacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualCacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::CacheMode ^ VisualCacheMode {  protected public:&#xA;System::Windows::Media::CacheMode ^ get(); protected:&#xA; void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualCacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.Media.Visual.VisualCacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-255"><see cref="T:System.Windows.Media.Visual" /> のキャッシュされた表現を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-255">Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-256"><see cref="T:System.Windows.Media.CacheMode" /> のキャッシュされた表現を保持する <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-256">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-257">レンダリングに時間がかかるコンテンツのパフォーマンスを向上させる必要がある場合は、<xref:System.Windows.Media.Visual.VisualCacheMode%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-257">Set the <xref:System.Windows.Media.Visual.VisualCacheMode%2A> property when you need to increase performance for content that is time-consuming to render.</span></span> <span data-ttu-id="4f755-258">詳細については、<xref:System.Windows.Media.BitmapCache> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4f755-258">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
        <altmember cref="P:System.Windows.Media.ContainerVisual.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected virtual int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-259"><see cref="T:System.Windows.Media.Visual" /> の子要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="4f755-259">Gets the number of child elements for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-260">子要素の数。</span><span class="sxs-lookup"><span data-stu-id="4f755-260">The number of child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-261">既定では、<xref:System.Windows.Media.Visual> には子がありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-261">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="4f755-262">したがって、既定の実装では常に0が返されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-262">Therefore, the default implementation always returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f755-263">次の例では、<xref:System.Windows.Media.Visual.VisualChildrenCount%2A>のオーバーライドされた実装を定義します。</span><span class="sxs-lookup"><span data-stu-id="4f755-263">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.VisualChildrenCount%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102a](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102a)]
 [!code-vb[DrawingVisualSample#102a](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102a)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4f755-264"><see cref="T:System.Windows.Media.Visual" /> から派生するクラスは、ビジュアルツリーを正しく列挙するために、このプロパティと <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-264">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this property, and also the <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> method, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="VisualClearTypeHint">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.ClearTypeHint VisualClearTypeHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualClearTypeHint As ClearTypeHint" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::ClearTypeHint VisualClearTypeHint { System::Windows::Media::ClearTypeHint get(); void set(System::Windows::Media::ClearTypeHint value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClearTypeHint : System.Windows.Media.ClearTypeHint with get, set" Usage="System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ClearTypeHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-265"><see cref="T:System.Windows.Media.ClearTypeHint" /> での ClearType のレンダリング方法を決定する <see cref="T:System.Windows.Media.Visual" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-265">Gets or sets the <see cref="T:System.Windows.Media.ClearTypeHint" /> that determines how ClearType is rendered in the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-266"><see cref="T:System.Windows.Media.ClearTypeHint" /> の <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-266">A <see cref="T:System.Windows.Media.ClearTypeHint" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualClip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry VisualClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry VisualClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualClip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Geometry ^ VisualClip {  protected public:&#xA;System::Windows::Media::Geometry ^ get(); protected:&#xA; void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.Media.Visual.VisualClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-267"><see cref="T:System.Windows.Media.Visual" /> 値としての <see cref="T:System.Windows.Media.Geometry" /> のクリップ領域を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-267">Gets or sets the clip region of the <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</span></span></summary>
        <value><span data-ttu-id="4f755-268"><see cref="T:System.Windows.Media.Geometry" /> 型としてのビジュアルのクリップ領域値。</span><span class="sxs-lookup"><span data-stu-id="4f755-268">The clip region value of the visual as a <see cref="T:System.Windows.Media.Geometry" /> type.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms746710(v=vs.90)"><span data-ttu-id="4f755-269">方法: クリップ領域を作成する</span><span class="sxs-lookup"><span data-stu-id="4f755-269">How to: Create a Clip Region</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisualEdgeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.EdgeMode VisualEdgeMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.EdgeMode VisualEdgeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEdgeMode As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::EdgeMode VisualEdgeMode {  protected public:&#xA;System::Windows::Media::EdgeMode get(); protected:&#xA; void set(System::Windows::Media::EdgeMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEdgeMode : System.Windows.Media.EdgeMode with get, set" Usage="System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-270"><see cref="T:System.Windows.Media.Visual" /> のエッジ モードを <see cref="T:System.Windows.Media.EdgeMode" /> 値として取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-270">Gets or sets the edge mode of the <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</span></span></summary>
        <value><span data-ttu-id="4f755-271">ビジュアルの <see cref="T:System.Windows.Media.EdgeMode" /> 値。</span><span class="sxs-lookup"><span data-stu-id="4f755-271">The <see cref="T:System.Windows.Media.EdgeMode" /> value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect VisualEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect VisualEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEffect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::Effect ^ VisualEffect {  protected public:&#xA;System::Windows::Media::Effects::Effect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEffect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.Media.Visual.VisualEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-272"><see cref="T:System.Windows.Media.Visual" /> に適用するビットマップ効果を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-272">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-273">ビットマップ効果を表す <see cref="T:System.Windows.Media.Effects.Effect" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-273">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Vector VisualOffset { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector VisualOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOffset As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Vector VisualOffset {  protected public:&#xA;System::Windows::Vector get(); protected:&#xA; void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOffset : System.Windows.Vector with get, set" Usage="System.Windows.Media.Visual.VisualOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-274">ビジュアル オブジェクトのオフセット値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-274">Gets or sets the offset value of the visual object.</span></span></summary>
        <value><span data-ttu-id="4f755-275">オフセット値を指定する <see cref="T:System.Windows.Vector" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-275">A <see cref="T:System.Windows.Vector" /> that specifies the offset value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacity">
      <MemberSignature Language="C#" Value="public double VisualOpacity { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VisualOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:  property double VisualOpacity {  protected public:&#xA;double get(); protected:&#xA; void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacity : double with get, set" Usage="System.Windows.Media.Visual.VisualOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-276"><see cref="T:System.Windows.Media.Visual" /> の不透明度を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-276">Gets or sets the opacity of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-277">ビジュアルの不透明度の値。</span><span class="sxs-lookup"><span data-stu-id="4f755-277">The opacity value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-278"><xref:System.Windows.Media.Visual> の不透明度の値は、0 ~ 1 の値で表されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-278">The value of the opacity of the <xref:System.Windows.Media.Visual> is expressed as a value between 0 and 1.</span></span> <span data-ttu-id="4f755-279">値が0の場合は、要素が完全に透明であることを示します。一方、値1は要素が完全に不透明であることを示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-279">A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</span></span> <span data-ttu-id="4f755-280">値0.5 は、要素の不透明度が50% であることを示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-280">A value of 0.5 indicates that the element is 50 percent opaque.</span></span> <span data-ttu-id="4f755-281">0未満の値は0として処理されます。1より大きい値は1として扱われます。</span><span class="sxs-lookup"><span data-stu-id="4f755-281">Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush VisualOpacityMask { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush VisualOpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Brush ^ VisualOpacityMask {  protected public:&#xA;System::Windows::Media::Brush ^ get(); protected:&#xA; void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-282"><see cref="T:System.Windows.Media.Brush" /> の不透明マスクを表す <see cref="T:System.Windows.Media.Visual" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-282">Gets or sets the <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-283">ビジュアルの不透明マスクの値を表す <see cref="T:System.Windows.Media.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-283">A <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-284">不透明度マスクは、このビジュアルのレンダリングされるコンテンツのアルファチャネルマスクに適用される <xref:System.Windows.Media.Brush> です。</span><span class="sxs-lookup"><span data-stu-id="4f755-284">The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this visual.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualParent">
      <MemberSignature Language="C#" Value="protected System.Windows.DependencyObject VisualParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject VisualParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualParent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VisualParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::DependencyObject ^ VisualParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualParent : System.Windows.DependencyObject" Usage="System.Windows.Media.Visual.VisualParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-285">ビジュアル オブジェクトのビジュアル ツリーの親を取得します。</span><span class="sxs-lookup"><span data-stu-id="4f755-285">Gets the visual tree parent of the visual object.</span></span></summary>
        <value><span data-ttu-id="4f755-286">親 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-286">The <see cref="T:System.Windows.Media.Visual" /> parent.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Parent" />
        <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="VisualScrollableAreaClip">
      <MemberSignature Language="C#" Value="public System.Windows.Rect? VisualScrollableAreaClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Rect&gt; VisualScrollableAreaClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualScrollableAreaClip As Nullable(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;System::Windows::Rect&gt; VisualScrollableAreaClip {  protected public:&#xA;Nullable&lt;System::Windows::Rect&gt; get(); protected:&#xA; void set(Nullable&lt;System::Windows::Rect&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.VisualScrollableAreaClip : Nullable&lt;System.Windows.Rect&gt; with get, set" Usage="System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-287"><see cref="T:System.Windows.Media.Visual" /> のクリップ対象のスクロール可能な領域を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-287">Gets or sets a clipped scrollable area for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-288">スクロール可能なクリップ領域を表す <see cref="T:System.Windows.Rect" />。クリップ領域が割り当てられていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-288">A <see cref="T:System.Windows.Rect" /> that represents the scrollable clipping area, or <see langword="null" /> if no clipping area is assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-289">ソフトウェアでの表示時に高速スクロールを有効にするには、<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-289">Set the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property to enable accelerated scrolling when rendering in software.</span></span> <span data-ttu-id="4f755-290">これは、リモートデスクトップ上で実行する場合や、仮想マシンで実行する場合など、リモートレンダリングのシナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="4f755-290">This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</span></span> <span data-ttu-id="4f755-291">子をスクロールする親要素で、このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-291">Set this property on the parent element whose children will be scrolled.</span></span> <span data-ttu-id="4f755-292">レンダリングがハードウェアアクセラレータの場合、<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="4f755-292">Setting the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property has no effect when rendering is hardware accelerated.</span></span>  
  
 <span data-ttu-id="4f755-293"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティを使用すると、特定の高度なシナリオを実現できます。</span><span class="sxs-lookup"><span data-stu-id="4f755-293">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enables specific, advanced scenarios.</span></span> <span data-ttu-id="4f755-294">次の一覧は、<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティを使用する場合に適用される注意事項を示しています。</span><span class="sxs-lookup"><span data-stu-id="4f755-294">The following list shows the caveats that apply when you use the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property.</span></span>  
  
-   <span data-ttu-id="4f755-295">スクロールした領域の背景が不透明であるか、またはスクロールアイテムが発生します。</span><span class="sxs-lookup"><span data-stu-id="4f755-295">The background of the scrolled area must be opaque, or scrolling artifacts will occur.</span></span>  
  
-   <span data-ttu-id="4f755-296"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティは、WPF がソフトウェアでレンダリングされている場合にのみ、スクロールを高速化します。</span><span class="sxs-lookup"><span data-stu-id="4f755-296">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property accelerates scrolling only when WPF is rendering in software.</span></span> <span data-ttu-id="4f755-297">たとえば、このような状況は、アプリケーションがリモートデスクトップ上で実行されている場合や、仮想マシンでローカルで実行されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4f755-297">For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</span></span>  
  
-   <span data-ttu-id="4f755-298">スクロール動作は、ハードウェアでのレンダリング時に変更されません。</span><span class="sxs-lookup"><span data-stu-id="4f755-298">The scrolling behavior is unchanged when rendering in hardware.</span></span> <span data-ttu-id="4f755-299">スクロール動作の違いを回避するには、<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> プロパティをハードウェアとソフトウェアの両方で有効にしておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-299">To prevent differences in scrolling behavior, you should keep the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enabled for both hardware and software.</span></span>  
  
-   <span data-ttu-id="4f755-300">回転と傾斜の変換では、高速スクロールが無効になります。</span><span class="sxs-lookup"><span data-stu-id="4f755-300">Rotate and skew transforms disable accelerated scrolling.</span></span> <span data-ttu-id="4f755-301">スクロールした領域の上にあるスケール変換と水平方向または垂直方向の変換は正しく動作し、スクロールの加速を無効にしません。</span><span class="sxs-lookup"><span data-stu-id="4f755-301">Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</span></span>  
  
-   <span data-ttu-id="4f755-302">アニメーションを使用して再描画するために、スクロール可能な領域のサブツリーまたはトリガー部分を変更すると、想定どおりに動作しますが、再描画領域の高速スクロールの利点は失われます。</span><span class="sxs-lookup"><span data-stu-id="4f755-302">Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</span></span> <span data-ttu-id="4f755-303">スクロールが発生した同じフレーム内でスクロールされた領域を無効にするアニメーションは、この最適化の利点を排除します。</span><span class="sxs-lookup"><span data-stu-id="4f755-303">Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</span></span>  
  
-   <span data-ttu-id="4f755-304"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 四角形は、ピクセル単位でスナップされます。</span><span class="sxs-lookup"><span data-stu-id="4f755-304">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> rectangle snaps inward to pixels.</span></span> <span data-ttu-id="4f755-305">そのため、スクロールする四角形のスナップされたサイズは、設定したサイズ以下になります。</span><span class="sxs-lookup"><span data-stu-id="4f755-305">Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</span></span>  
  
-   <span data-ttu-id="4f755-306">スナップを下にオフセットします。</span><span class="sxs-lookup"><span data-stu-id="4f755-306">Offsets snap downward.</span></span> <span data-ttu-id="4f755-307">これは、前のスナップされたオフセットと現在のスナップされたオフセットの差が常に整数のピクセル数であることを意味します。</span><span class="sxs-lookup"><span data-stu-id="4f755-307">This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</span></span>  
  
-   <span data-ttu-id="4f755-308">ヒットテストは、最大で1ピクセルまでオフにできます。</span><span class="sxs-lookup"><span data-stu-id="4f755-308">Hit tests can be off by up to a pixel.</span></span>  
  
-   <span data-ttu-id="4f755-309">レイアウトの丸め処理は、スクロール可能な領域と境界ウィンドウのクライアント領域の端がピクセル境界にスナップされることを保証し、正しい配置になるため、有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-309">Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</span></span>  
  
-   <span data-ttu-id="4f755-310">スクロールの加速は、レイヤードウィンドウでは機能しません。</span><span class="sxs-lookup"><span data-stu-id="4f755-310">Scrolling acceleration does not work on layered windows.</span></span> <span data-ttu-id="4f755-311">これは、AllowTransparency = = true、system.windows.window.windowstyle = = none などのウィンドウを意味します。</span><span class="sxs-lookup"><span data-stu-id="4f755-311">This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</span></span>  
  
-   <span data-ttu-id="4f755-312">スクロールの加速は、全ウィンドウのレンダリング中には発生しません。</span><span class="sxs-lookup"><span data-stu-id="4f755-312">Scrolling acceleration does not occur during full-window rendering.</span></span>  
  
-   <span data-ttu-id="4f755-313">ウィンドウが2つのモニターをまたがっしている場合、スクロールの加速は機能しません。</span><span class="sxs-lookup"><span data-stu-id="4f755-313">Scrolling acceleration does not work when the window straddles two monitors.</span></span>  
  
-   <span data-ttu-id="4f755-314">スクロールの加速は、スクロールした要素の親チェーンに中間レンダーターゲットが存在する場合には機能しません。</span><span class="sxs-lookup"><span data-stu-id="4f755-314">Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</span></span> <span data-ttu-id="4f755-315">これらの中間レンダーターゲットの一部を次の一覧に示します。</span><span class="sxs-lookup"><span data-stu-id="4f755-315">The following list shows some of these intermediate render targets.</span></span>  
  
    -   <span data-ttu-id="4f755-316">Clips</span><span class="sxs-lookup"><span data-stu-id="4f755-316">Clips</span></span>  
  
    -   <span data-ttu-id="4f755-317">効果</span><span class="sxs-lookup"><span data-stu-id="4f755-317">Effects</span></span>  
  
    -   <span data-ttu-id="4f755-318">図面ブラシ</span><span class="sxs-lookup"><span data-stu-id="4f755-318">DrawingBrushes</span></span>  
  
    -   <span data-ttu-id="4f755-319">VisualBrushes</span><span class="sxs-lookup"><span data-stu-id="4f755-319">VisualBrushes</span></span>  
  
    -   <span data-ttu-id="4f755-320">OpacityMasks</span><span class="sxs-lookup"><span data-stu-id="4f755-320">OpacityMasks</span></span>  
  
    -   <span data-ttu-id="4f755-321">Opacity</span><span class="sxs-lookup"><span data-stu-id="4f755-321">Opacity</span></span>  
  
-   <span data-ttu-id="4f755-322">1フレームにつき1つのアクセラレータスクロールだけが発生します。</span><span class="sxs-lookup"><span data-stu-id="4f755-322">Only one accelerated scroll can happen per frame.</span></span> <span data-ttu-id="4f755-323">加速スクロール領域は複数存在する場合がありますが、そのうちの1つだけが、フレーム中に高速スクロールを実行できます。</span><span class="sxs-lookup"><span data-stu-id="4f755-323">There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</span></span> <span data-ttu-id="4f755-324">スクロールされる領域は不確定です。</span><span class="sxs-lookup"><span data-stu-id="4f755-324">Which area is scrolled is indeterminate.</span></span>  
  
-   <span data-ttu-id="4f755-325">スクロールの加速は、コンテンツの残りの部分でスクロールされないスクロール領域 (z オーダー) 上のコンテンツをサポートします。</span><span class="sxs-lookup"><span data-stu-id="4f755-325">Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</span></span> <span data-ttu-id="4f755-326">システムは必要なすべてのダーティ領域を計算し、高速スクロールを完了しますが、誤ってスクロールされた部分を画面上の正しい位置に移動するために、ネットワーク上でいくつかの追加のビットマップを送信します。</span><span class="sxs-lookup"><span data-stu-id="4f755-326">The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextHintingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextHintingMode VisualTextHintingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextHintingMode As TextHintingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextHintingMode VisualTextHintingMode { System::Windows::Media::TextHintingMode get(); void set(System::Windows::Media::TextHintingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextHintingMode : System.Windows.Media.TextHintingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextHintingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-327"><see cref="T:System.Windows.Media.TextHintingMode" /> の <see cref="T:System.Windows.Media.Visual" />を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-327">Gets or sets the <see cref="T:System.Windows.Media.TextHintingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-328"><see cref="T:System.Windows.Media.TextHintingMode" /> に適用される <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-328">The <see cref="T:System.Windows.Media.TextHintingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextRenderingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextRenderingMode VisualTextRenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextRenderingMode As TextRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextRenderingMode VisualTextRenderingMode { System::Windows::Media::TextRenderingMode get(); void set(System::Windows::Media::TextRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextRenderingMode : System.Windows.Media.TextRenderingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-329"><see cref="T:System.Windows.Media.TextRenderingMode" /> の <see cref="T:System.Windows.Media.Visual" />を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-329">Gets or sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-330"><see cref="T:System.Windows.Media.TextRenderingMode" /> に適用される <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="4f755-330">The <see cref="T:System.Windows.Media.TextRenderingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform VisualTransform { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform VisualTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Transform ^ VisualTransform {  protected public:&#xA;System::Windows::Media::Transform ^ get(); protected:&#xA; void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.Media.Visual.VisualTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-331"><see cref="T:System.Windows.Media.Transform" /> の <see cref="T:System.Windows.Media.Visual" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-331">Gets or sets the <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="4f755-332">ビジュアルの変換値。</span><span class="sxs-lookup"><span data-stu-id="4f755-332">The transform value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualXSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualXSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualXSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualXSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-333">X 座標 (垂直) ガイドライン コレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-333">Gets or sets the x-coordinate (vertical) guideline collection.</span></span></summary>
        <value><span data-ttu-id="4f755-334">ビジュアルの X 座標ガイドライン コレクション。</span><span class="sxs-lookup"><span data-stu-id="4f755-334">The x-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-335">ピクセルスナップとは、オブジェクトの端がデバイス固有のピクセルにレンダリングされるように、コンテンツレイアウトが固定されるプロセスです。</span><span class="sxs-lookup"><span data-stu-id="4f755-335">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="4f755-336">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を可能にします。</span><span class="sxs-lookup"><span data-stu-id="4f755-336">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="4f755-337">デバイスに依存しない各ピクセルは、システムの [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定を使用して自動的にスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="4f755-337">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="4f755-338">これにより、異なる [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 設定に対して [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] アプリケーションに適切なスケーリングを提供し、アプリケーションを自動的に [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 対応にします。</span><span class="sxs-lookup"><span data-stu-id="4f755-338">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="4f755-339">ただし、この [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 独立していると、アンチエイリアシングによって不規則なエッジレンダリングが作成される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-339">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="4f755-340">これらの成果物は、一般にぼやけた、または "ソフト" のエッジとして表示されます。エッジの位置がデバイスのピクセル間ではなく、デバイスのピクセルの途中にある場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-340">These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="4f755-341">この問題に対処するために、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] には、ビジュアルツリー内のオブジェクトの端をデバイスピクセルに "スナップ" する方法が用意されています。これにより、アンチエイリアシングによって生成されるソフトエッジが除去されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-341">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="VisualYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualYSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualYSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualYSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualYSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f755-342">Y 座標 (水平) ガイドライン コレクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4f755-342">Gets or sets the y-coordinate (horizontal) guideline collection.</span></span></summary>
        <value><span data-ttu-id="4f755-343">ビジュアルの Y 座標ガイドライン コレクション。</span><span class="sxs-lookup"><span data-stu-id="4f755-343">The y-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f755-344">ピクセルスナップとは、オブジェクトの端がデバイス固有のピクセルにレンダリングされるように、コンテンツレイアウトが固定されるプロセスです。</span><span class="sxs-lookup"><span data-stu-id="4f755-344">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="4f755-345">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] グラフィックス システムでは、デバイスに依存しない単位を使用して、解像度とデバイスの独立性を可能にします。</span><span class="sxs-lookup"><span data-stu-id="4f755-345">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="4f755-346">デバイスに依存しない各ピクセルは、システムの [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定を使用して自動的にスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="4f755-346">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="4f755-347">これにより、異なる [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 設定に対して [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] アプリケーションに適切なスケーリングを提供し、アプリケーションを自動的に [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 対応にします。</span><span class="sxs-lookup"><span data-stu-id="4f755-347">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="4f755-348">ただし、この [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 独立していると、アンチエイリアシングによって不規則なエッジレンダリングが作成される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-348">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="4f755-349">これらの成果物は、一般にぼやけた、つまり "ソフトな" エッジとして表示されます。エッジの位置がデバイスピクセル間ではなく、デバイスピクセルの途中にある場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4f755-349">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="4f755-350">この問題に対処するために、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] には、ビジュアルツリー内のオブジェクトの端をデバイスピクセルに "スナップ" する方法が用意されています。これにより、アンチエイリアシングによって生成されるソフトエッジが除去されます。</span><span class="sxs-lookup"><span data-stu-id="4f755-350">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
  </Members>
</Type>
