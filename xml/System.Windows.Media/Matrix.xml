<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13af0260c6c1114e222ccfecb3f031f09df6aadb" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82488221" /></Metadata><TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <TypeSignature Language="F#" Value="type Matrix = struct&#xA;    interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3adae-101">2-D 空間での変換に使用される 3 x 3 アフィン変換行列を表します。</span><span class="sxs-lookup"><span data-stu-id="3adae-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-102">3 x 3 行列は [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y 平面の変換に使用されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-102">A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y plane.</span></span> <span data-ttu-id="3adae-103">アフィン変換行列を乗算して、回転や傾斜 (傾斜) の後に平行移動などの任意の数の線形変換を形成できます。</span><span class="sxs-lookup"><span data-stu-id="3adae-103">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</span></span> <span data-ttu-id="3adae-104">アフィン変換行列の最終的な列は (0, 0, 1) と等しくなるため、最初の2つの列のメンバーのみを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-104">An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</span></span>  <span data-ttu-id="3adae-105">ベクターは、列ベクターではなく、行ベクターとして表されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-105">Note that vectors are expressed as row-vectors, not column vectors.</span></span>  
  
 <span data-ttu-id="3adae-106">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> は、行優先順を使用して格納され、次の構造になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> is stored using row-major order and has the following structure:</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-107">0</span><span class="sxs-lookup"><span data-stu-id="3adae-107">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-108">0</span><span class="sxs-lookup"><span data-stu-id="3adae-108">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-109">1</span><span class="sxs-lookup"><span data-stu-id="3adae-109">1</span></span>|  
  
 <span data-ttu-id="3adae-110">最後の行のメンバー <xref:System.Windows.Media.Matrix.OffsetX%2A> と <xref:System.Windows.Media.Matrix.OffsetY%2A>は、翻訳値を表します。</span><span class="sxs-lookup"><span data-stu-id="3adae-110">The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.</span></span>  
  
 <span data-ttu-id="3adae-111">メソッドとプロパティでは、通常、次のように、変換行列は6つのメンバーのみを持つベクトルとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-111">In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</span></span>  
  
 <span data-ttu-id="3adae-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span><span class="sxs-lookup"><span data-stu-id="3adae-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span></span>  
  
 <span data-ttu-id="3adae-113"><xref:System.Windows.Media.Matrix> 構造体を直接使用して個々の点を変換したり、<xref:System.Windows.Media.MatrixTransform> を使用してオブジェクトを変換したりすることもできますが [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]、では、マトリックスを直接操作することなくオブジェクトを変換できるようにするクラスのセット (<xref:System.Windows.Media.RotateTransform>、<xref:System.Windows.Media.ScaleTransform>、<xref:System.Windows.Media.SkewTransform>、<xref:System.Windows.Media.TranslateTransform>) も用意されています。</span><span class="sxs-lookup"><span data-stu-id="3adae-113">Although you can use a <xref:System.Windows.Media.Matrix> structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.</span></span>  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3adae-114">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="3adae-114">XAML Attribute Usage</span></span>  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3adae-115">XAML 値</span><span class="sxs-lookup"><span data-stu-id="3adae-115">XAML Values</span></span>  
 <span data-ttu-id="3adae-116">*m11*</span><span class="sxs-lookup"><span data-stu-id="3adae-116">*m11*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-117">この <xref:System.Windows.Media.Matrix>の第1行、第1列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-117">The value in the first row and first column of this <xref:System.Windows.Media.Matrix>.</span></span> <span data-ttu-id="3adae-118">詳細については、<xref:System.Windows.Media.Matrix.M11%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-118">For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.</span></span>  
  
 <span data-ttu-id="3adae-119">*m12*</span><span class="sxs-lookup"><span data-stu-id="3adae-119">*m12*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-120">1行目と2番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-120">The value in the first row and second column.</span></span> <span data-ttu-id="3adae-121">詳細については、<xref:System.Windows.Media.Matrix.M12%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-121">For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.</span></span>  
  
 <span data-ttu-id="3adae-122">*m21*</span><span class="sxs-lookup"><span data-stu-id="3adae-122">*m21*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-123">2番目の行と最初の列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-123">The value in the second row and first column.</span></span> <span data-ttu-id="3adae-124">詳細については、<xref:System.Windows.Media.Matrix.M21%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-124">For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.</span></span>  
  
 <span data-ttu-id="3adae-125">*m22*</span><span class="sxs-lookup"><span data-stu-id="3adae-125">*m22*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-126">2番目の行と2番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-126">The value in the second row and second column.</span></span> <span data-ttu-id="3adae-127">詳細については、<xref:System.Windows.Media.Matrix.M22%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-127">For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.</span></span>  
  
 <span data-ttu-id="3adae-128">*offsetX*</span><span class="sxs-lookup"><span data-stu-id="3adae-128">*offsetX*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-129">3番目の行と1番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-129">The value in the third row and first column.</span></span> <span data-ttu-id="3adae-130">詳細については、<xref:System.Windows.Media.Matrix.OffsetX%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-130">For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.</span></span>  
  
 <span data-ttu-id="3adae-131">*offsetY*</span><span class="sxs-lookup"><span data-stu-id="3adae-131">*offsetY*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="3adae-132">3番目の行と2番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-132">The value in the third row and second column.</span></span> <span data-ttu-id="3adae-133">詳細については、<xref:System.Windows.Media.Matrix.OffsetY%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3adae-133">For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159044"><span data-ttu-id="3adae-134">マトリックスのサンプル</span><span class="sxs-lookup"><span data-stu-id="3adae-134">Matrix Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Matrix : double * double * double * double * double * double -&gt; System.Windows.Media.Matrix" Usage="new System.Windows.Media.Matrix (m11, m12, m21, m22, offsetX, offsetY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="3adae-135">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M11" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span></span></param>
        <param name="m12"><span data-ttu-id="3adae-136">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M12" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span></span></param>
        <param name="m21"><span data-ttu-id="3adae-137">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M21" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span></span></param>
        <param name="m22"><span data-ttu-id="3adae-138">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M22" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span></span></param>
        <param name="offsetX"><span data-ttu-id="3adae-139">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span></span></param>
        <param name="offsetY"><span data-ttu-id="3adae-140">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="3adae-140">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span></span></param>
        <summary><span data-ttu-id="3adae-141"><see cref="T:System.Windows.Media.Matrix" /> 構造体の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3adae-141">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Append matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="3adae-142">この <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-142">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="3adae-143">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-143">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-144">この操作は、この <xref:System.Windows.Media.Matrix> 構造とパラメーター `matrix`を乗算することと同じです。</span><span class="sxs-lookup"><span data-stu-id="3adae-144">This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.</span></span>  <span data-ttu-id="3adae-145">ただし、行列乗算は可換ではありません。したがって、この演算は、この <xref:System.Windows.Media.Matrix> 構造体によってパラメーター `matrix` を乗算することと同じではありません。つまり、(this \* `matrix`) は (`matrix` \* this) と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-145">Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this \* `matrix`) is not the same as (`matrix` \* this).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-146">次の例では、<xref:System.Windows.Media.Matrix> 構造体を別の <xref:System.Windows.Media.Matrix> 構造に追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-146">The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Determinant : double" Usage="System.Windows.Media.Matrix.Determinant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-147">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の行列式を取得します。</span><span class="sxs-lookup"><span data-stu-id="3adae-147">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-148">この <see cref="T:System.Windows.Media.Matrix" /> の行列式。</span><span class="sxs-lookup"><span data-stu-id="3adae-148">The determinant of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-149">この例では、<xref:System.Windows.Media.Matrix>の決定を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-149">This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3adae-150">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体の値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-150">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-151"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-151">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-152"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-152">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-153">2つの <xref:System.Windows.Media.Matrix> 構造体が等しいかどうかを確認する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-153">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="3adae-154">比較対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-154">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="3adae-155">指定した <see cref="T:System.Object" /> が、この <see cref="T:System.Windows.Media.Matrix" /> と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-155">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="3adae-156"><paramref name="o" /> が、この <see cref="T:System.Windows.Media.Matrix" /> 構造体と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-156"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-157"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-157">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-158"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-158">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-159">2つの <xref:System.Windows.Media.Matrix> 構造体が等しいかどうかを確認する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-159">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Matrix -&gt; bool" Usage="matrix.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3adae-160">このインスタンスと比較する <see cref="T:System.Windows.Media.Matrix" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="3adae-160">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="3adae-161">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体がこのインスタンスと同一であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-161">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span></span></summary>
        <returns><span data-ttu-id="3adae-162">インスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-162"><see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-163"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-163">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-164"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-164">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-165">2つの <xref:System.Windows.Media.Matrix> 構造体が等しいかどうかを確認する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-165">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.Equals (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="3adae-166">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-166">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="3adae-167">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-167">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="3adae-168">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-168">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="3adae-169"><paramref name="matrix1" /> と <paramref name="matrix2" /> が同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-169"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-170"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-170">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-171"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-171">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3adae-172">この <see cref="T:System.Windows.Media.Matrix" /> 構造体のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="3adae-172">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3adae-173">対象のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="3adae-173">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInverse : bool" Usage="System.Windows.Media.Matrix.HasInverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-174">この <see cref="T:System.Windows.Media.Matrix" /> 構造体が反転可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3adae-174">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span></span></summary>
        <value><span data-ttu-id="3adae-175"><see cref="T:System.Windows.Media.Matrix" /> の逆が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-175"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> has an inverse; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3adae-176">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="3adae-176">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-177">次の例では、<xref:System.Windows.Media.Matrix> が反転できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3adae-177">The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible.</span></span> <span data-ttu-id="3adae-178">反転できるの場合、<xref:System.Windows.Media.Matrix> は反転されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-178">If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-179">恒等 <see cref="T:System.Windows.Media.Matrix" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="3adae-179">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="3adae-180">恒等行列。</span><span class="sxs-lookup"><span data-stu-id="3adae-180">An identity matrix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-181">Id 行列の値は、係数 [1, 1]、[2, 2]、[3, 3]、および残りの係数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="3adae-181">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="3adae-182">これは、<xref:System.Windows.Media.Matrix.M11%2A> の設定と <xref:System.Windows.Media.Matrix.M22%2A> を1に、<xref:System.Windows.Media.Matrix.M12%2A>、<xref:System.Windows.Media.Matrix.M21%2A>、<xref:System.Windows.Media.Matrix.OffsetX%2A>、および <xref:System.Windows.Media.Matrix.OffsetY%2A> を0に設定することに関連しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-182">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="3adae-183">アフィン行列では、<xref:System.Windows.Media.Matrix>、構造体、係数 [3, 1]、[3、2]、[3.3] の各値を常に0、0、および1に設定することを [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] する実装です。</span><span class="sxs-lookup"><span data-stu-id="3adae-183">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="3adae-184">1</span><span class="sxs-lookup"><span data-stu-id="3adae-184">1</span></span>|<span data-ttu-id="3adae-185">0</span><span class="sxs-lookup"><span data-stu-id="3adae-185">0</span></span>|<span data-ttu-id="3adae-186">0</span><span class="sxs-lookup"><span data-stu-id="3adae-186">0</span></span>|  
|<span data-ttu-id="3adae-187">0</span><span class="sxs-lookup"><span data-stu-id="3adae-187">0</span></span>|<span data-ttu-id="3adae-188">1</span><span class="sxs-lookup"><span data-stu-id="3adae-188">1</span></span>|<span data-ttu-id="3adae-189">0</span><span class="sxs-lookup"><span data-stu-id="3adae-189">0</span></span>|  
|<span data-ttu-id="3adae-190">0</span><span class="sxs-lookup"><span data-stu-id="3adae-190">0</span></span>|<span data-ttu-id="3adae-191">0</span><span class="sxs-lookup"><span data-stu-id="3adae-191">0</span></span>|<span data-ttu-id="3adae-192">1</span><span class="sxs-lookup"><span data-stu-id="3adae-192">1</span></span>|  
  
 <span data-ttu-id="3adae-193">Id 行列の場合、<xref:System.Windows.Media.Matrix.ToString%2A> メソッドは、<xref:System.Windows.Media.Matrix>の係数ではなく、文字列 "Identity" を返します。</span><span class="sxs-lookup"><span data-stu-id="3adae-193">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity" instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-194">次の例は、<xref:System.Windows.Media.Matrix.Identity%2A> 行列を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-194">The following example shows how to retrieve the <xref:System.Windows.Media.Matrix.Identity%2A> matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3adae-195">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を反転します。</span><span class="sxs-lookup"><span data-stu-id="3adae-195">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-196">次の例では、<xref:System.Windows.Media.Matrix> 構造体が反転できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="3adae-196">The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible.</span></span> <span data-ttu-id="3adae-197">反転できるの場合、<xref:System.Windows.Media.Matrix> 構造は反転されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-197">If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3adae-198"><see cref="T:System.Windows.Media.Matrix" /> 構造体は反転できません。</span><span class="sxs-lookup"><span data-stu-id="3adae-198">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Windows.Media.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-199">この <see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3adae-199">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span></span></summary>
        <value><span data-ttu-id="3adae-200"><see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-200"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3adae-201">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="3adae-201">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-202">Id 行列の値は、係数 [1, 1]、[2, 2]、[3, 3]、および残りの係数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="3adae-202">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="3adae-203">これは、<xref:System.Windows.Media.Matrix.M11%2A> の設定と <xref:System.Windows.Media.Matrix.M22%2A> を1に、<xref:System.Windows.Media.Matrix.M12%2A>、<xref:System.Windows.Media.Matrix.M21%2A>、<xref:System.Windows.Media.Matrix.OffsetX%2A>、および <xref:System.Windows.Media.Matrix.OffsetY%2A> を0に設定することに関連しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-203">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="3adae-204"><xref:System.Windows.Media.Matrix> 構造体に対して [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 使用する実装であるアフィン行列では、係数 [3, 1]、[3, 2]、[3.3] が常に0、0、1の値を常に持つことが暗黙的に指定されています。</span><span class="sxs-lookup"><span data-stu-id="3adae-204">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="3adae-205">1</span><span class="sxs-lookup"><span data-stu-id="3adae-205">1</span></span>|<span data-ttu-id="3adae-206">0</span><span class="sxs-lookup"><span data-stu-id="3adae-206">0</span></span>|<span data-ttu-id="3adae-207">0</span><span class="sxs-lookup"><span data-stu-id="3adae-207">0</span></span>|  
|<span data-ttu-id="3adae-208">0</span><span class="sxs-lookup"><span data-stu-id="3adae-208">0</span></span>|<span data-ttu-id="3adae-209">1</span><span class="sxs-lookup"><span data-stu-id="3adae-209">1</span></span>|<span data-ttu-id="3adae-210">0</span><span class="sxs-lookup"><span data-stu-id="3adae-210">0</span></span>|  
|<span data-ttu-id="3adae-211">0</span><span class="sxs-lookup"><span data-stu-id="3adae-211">0</span></span>|<span data-ttu-id="3adae-212">0</span><span class="sxs-lookup"><span data-stu-id="3adae-212">0</span></span>|<span data-ttu-id="3adae-213">1</span><span class="sxs-lookup"><span data-stu-id="3adae-213">1</span></span>|  
  
 <span data-ttu-id="3adae-214">Id 行列の場合、<xref:System.Windows.Media.Matrix.ToString%2A> メソッドは、<xref:System.Windows.Media.Matrix>の係数ではなく、文字列 "Identity" を返します。</span><span class="sxs-lookup"><span data-stu-id="3adae-214">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M11 : double with get, set" Usage="System.Windows.Media.Matrix.M11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-215">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-215">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-216">この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-216">The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="3adae-217">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-217">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-218">次の例では、2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法と、値を宣言するときと構造体を宣言した後に <xref:System.Windows.Media.Matrix> に値を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-218">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M12 : double with get, set" Usage="System.Windows.Media.Matrix.M12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-219">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-219">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-220">この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-220">The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="3adae-221">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-221">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-222">次の表は、<xref:System.Windows.Media.Matrix>のレイアウトを示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-222">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-223">0</span><span class="sxs-lookup"><span data-stu-id="3adae-223">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-224">0</span><span class="sxs-lookup"><span data-stu-id="3adae-224">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-225">1</span><span class="sxs-lookup"><span data-stu-id="3adae-225">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3adae-226">次の例では、2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法と、値を宣言するときと構造体を宣言した後に <xref:System.Windows.Media.Matrix> に値を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-226">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M21 : double with get, set" Usage="System.Windows.Media.Matrix.M21" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-227">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-227">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-228">この <see cref="T:System.Windows.Media.Matrix" /> の第 2 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-228">The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="3adae-229">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-229">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-230">次の表は、<xref:System.Windows.Media.Matrix>のレイアウトを示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-230">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-231">0</span><span class="sxs-lookup"><span data-stu-id="3adae-231">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-232">0</span><span class="sxs-lookup"><span data-stu-id="3adae-232">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-233">1</span><span class="sxs-lookup"><span data-stu-id="3adae-233">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3adae-234">次の例では、2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法と、値を宣言するときと構造体を宣言した後に <xref:System.Windows.Media.Matrix> に値を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-234">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M22 : double with get, set" Usage="System.Windows.Media.Matrix.M22" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-235">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-235">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-236">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-236">The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="3adae-237">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-237">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-238">次の表は、<xref:System.Windows.Media.Matrix> 構造のレイアウトを示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-238">The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-239">0</span><span class="sxs-lookup"><span data-stu-id="3adae-239">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-240">0</span><span class="sxs-lookup"><span data-stu-id="3adae-240">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-241">1</span><span class="sxs-lookup"><span data-stu-id="3adae-241">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3adae-242">次の例では、2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法と、値を宣言するときと構造体を宣言した後に <xref:System.Windows.Media.Matrix> に値を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-242">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Multiply (trans1, trans2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="3adae-243">最初に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-243">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="3adae-244">2 番目に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-244">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="3adae-245"><see cref="T:System.Windows.Media.Matrix" /> 構造体に別の <see cref="T:System.Windows.Media.Matrix" /> 構造体を乗算します。</span><span class="sxs-lookup"><span data-stu-id="3adae-245">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3adae-246"><paramref name="trans1" /> と <paramref name="trans2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="3adae-246">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-247">行列乗算は可換ではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-247">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="3adae-248">`trans2` による `trans1` の乗算は、`trans1`による `trans2` の乗算と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-248">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-249">2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-249">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : double with get, set" Usage="System.Windows.Media.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-250">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-250">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-251">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-251">The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="3adae-252">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-252">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-253"><xref:System.Windows.Media.Matrix.OffsetX%2A> プロパティは、座標空間を x 軸に沿って平行移動する量を指定するため、という名前になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-253">The <xref:System.Windows.Media.Matrix.OffsetX%2A> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</span></span>  
  
 <span data-ttu-id="3adae-254">次の表は、<xref:System.Windows.Media.Matrix>のレイアウトを示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-254">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-255">0</span><span class="sxs-lookup"><span data-stu-id="3adae-255">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-256">0</span><span class="sxs-lookup"><span data-stu-id="3adae-256">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-257">1</span><span class="sxs-lookup"><span data-stu-id="3adae-257">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : double with get, set" Usage="System.Windows.Media.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3adae-258">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3adae-258">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="3adae-259">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="3adae-259">The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="3adae-260">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="3adae-260">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-261"><xref:System.Windows.Media.Matrix.OffsetY%2A> プロパティは、y 軸に沿って座標空間を変換する量を指定するため、という名前になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-261">The <xref:System.Windows.Media.Matrix.OffsetY%2A> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</span></span>  
  
 <span data-ttu-id="3adae-262">次の表は、<xref:System.Windows.Media.Matrix>のレイアウトを示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-262">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="3adae-263">0</span><span class="sxs-lookup"><span data-stu-id="3adae-263">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="3adae-264">0</span><span class="sxs-lookup"><span data-stu-id="3adae-264">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="3adae-265">1</span><span class="sxs-lookup"><span data-stu-id="3adae-265">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="matrix1 = matrix2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="3adae-266">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-266">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="3adae-267">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-267">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="3adae-268">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-268">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="3adae-269"><paramref name="matrix1" /> と <paramref name="matrix2" /> が同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-269"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-270"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-270">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-271"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-271">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-272">2つの <xref:System.Windows.Media.Matrix> 構造体が等しいかどうかを確認する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-272">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.op_Inequality (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="3adae-273">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-273">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="3adae-274">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-274">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="3adae-275">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が異なるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3adae-275">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span></span></summary>
        <returns><span data-ttu-id="3adae-276"><paramref name="matrix1" /> と <paramref name="matrix2" /> が異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-276"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3adae-277"><xref:System.Windows.Media.Matrix> には、その値が double として格納されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-277">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="3adae-278"><xref:System.Double> の値は算術演算を実行すると有効桁数が失われる可能性があるため、論理的に等しい2つの <xref:System.Double> 構造体の比較は失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3adae-278">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-279">2つの <xref:System.Windows.Media.Matrix> 構造体が等しいかどうかを確認する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-279">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="trans1 * trans2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="3adae-280">最初に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-280">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="3adae-281">2 番目に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-281">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="3adae-282"><see cref="T:System.Windows.Media.Matrix" /> 構造体に別の <see cref="T:System.Windows.Media.Matrix" /> 構造体を乗算します。</span><span class="sxs-lookup"><span data-stu-id="3adae-282">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3adae-283"><paramref name="trans1" /> と <paramref name="trans2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="3adae-283">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-284">行列乗算は可換ではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-284">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="3adae-285">`trans2` による `trans1` の乗算は、`trans1`による `trans2` の乗算と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-285">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-286">2つの <xref:System.Windows.Media.Matrix> 構造体を乗算する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-286">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="3adae-287">行列の <see cref="T:System.String" /> 表現。</span><span class="sxs-lookup"><span data-stu-id="3adae-287">The <see cref="T:System.String" /> representation of the matrix.</span></span></param>
        <summary><span data-ttu-id="3adae-288">行列の <see cref="T:System.String" /> 表現を、等価の <see cref="T:System.Windows.Media.Matrix" /> 構造体に変換します。</span><span class="sxs-lookup"><span data-stu-id="3adae-288">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3adae-289">等価の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-289">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-290">次の例では、マトリックスの文字列形式を <xref:System.Windows.Media.Matrix> 構造体に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-290">The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepend (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Prepend matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="3adae-291">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="3adae-291">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="3adae-292">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-292">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-293">この操作は、この <xref:System.Windows.Media.Matrix> 構造によって `matrix` パラメーターを乗算することと同じです。</span><span class="sxs-lookup"><span data-stu-id="3adae-293">This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure.</span></span> <span data-ttu-id="3adae-294">ただし、行列乗算は可換ではありません。したがって、この演算は、この <xref:System.Windows.Media.Matrix> 構造とパラメーター `matrix`を乗算することとは異なります。つまり、`matrix` \* この \* `matrix`と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="3adae-294">Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` \* this is not the same as this \* `matrix`.</span></span>  
  
 <span data-ttu-id="3adae-295">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-295">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-296">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-296">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-297">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-297">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-298">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-298">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-299">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-299">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-300">次の例では、<xref:System.Windows.Media.Matrix> を別の <xref:System.Windows.Media.Matrix>に付加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-300">The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="3adae-301">回転角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-301">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="3adae-302">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の原点を中心とする指定した角度の回転を適用します。</span><span class="sxs-lookup"><span data-stu-id="3adae-302">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-303">次の例では、<xref:System.Windows.Media.Matrix>を回転させる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-303">The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : double * double * double -&gt; unit" Usage="matrix.RotateAt (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="3adae-304">この行列を回転する角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-304">The angle, in degrees, by which to rotate this matrix.</span></span></param>
        <param name="centerX"><span data-ttu-id="3adae-305">この行列の回転の中心とする点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-305">The x-coordinate of the point about which to rotate this matrix.</span></span></param>
        <param name="centerY"><span data-ttu-id="3adae-306">この行列の回転の中心とする点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-306">The y-coordinate of the point about which to rotate this matrix.</span></span></param>
        <summary><span data-ttu-id="3adae-307">指定した点を中心にこの行列を回転します。</span><span class="sxs-lookup"><span data-stu-id="3adae-307">Rotates this matrix about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-308">次の例では、指定したポイントについて <xref:System.Windows.Media.Matrix> を回転させる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-308">The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAtPrepend : double * double * double -&gt; unit" Usage="matrix.RotateAtPrepend (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="3adae-309">回転角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-309">The rotation angle, in degrees.</span></span></param>
        <param name="centerX"><span data-ttu-id="3adae-310">回転の中心の x 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-310">The x-coordinate of the rotation center.</span></span></param>
        <param name="centerY"><span data-ttu-id="3adae-311">回転の中心の y 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-311">The y-coordinate of the rotation center.</span></span></param>
        <summary><span data-ttu-id="3adae-312">指定した点における指定した角度の回転を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-312">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-313">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-313">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-314">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-314">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-315">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-315">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-316">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-316">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-317">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-317">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-318">次の例は、回転を <xref:System.Windows.Media.Matrix>に付加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-318">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberSignature Language="F#" Value="member this.RotatePrepend : double -&gt; unit" Usage="matrix.RotatePrepend angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="3adae-319">前に付加する回転角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-319">The angle of rotation to prepend.</span></span></param>
        <summary><span data-ttu-id="3adae-320">指定した角度の回転を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-320">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-321">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-321">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-322">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-322">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-323">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-323">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-324">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-324">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-325">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-325">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-326">次の例は、回転を <xref:System.Windows.Media.Matrix>に付加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-326">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="3adae-327">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="3adae-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="3adae-328">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="3adae-328">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="3adae-329">指定したスケールのベクターを <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-329">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-330">次の例では、<xref:System.Windows.Media.Matrix> 構造体をスケーリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-330">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAt : double * double * double * double -&gt; unit" Usage="matrix.ScaleAt (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="3adae-331">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってスケーリングする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="3adae-332">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってスケーリングする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-332">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <param name="centerX"><span data-ttu-id="3adae-333">スケーリング操作の中心点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-333">The x-coordinate of the scale operation's center point.</span></span></param>
        <param name="centerY"><span data-ttu-id="3adae-334">スケーリング操作の中心点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-334">The y-coordinate of the scale operation's center point.</span></span></param>
        <summary><span data-ttu-id="3adae-335">この <see cref="T:System.Windows.Media.Matrix" /> を、指定した点を中心として指定した量だけスケーリングします。</span><span class="sxs-lookup"><span data-stu-id="3adae-335">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-336">次の例では、<xref:System.Windows.Media.Matrix> 構造体をスケーリングする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-336">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAtPrepend : double * double * double * double -&gt; unit" Usage="matrix.ScaleAtPrepend (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="3adae-337">x 軸のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="3adae-337">The x-axis scale factor.</span></span></param>
        <param name="scaleY"><span data-ttu-id="3adae-338">y 軸のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="3adae-338">The y-axis scale factor.</span></span></param>
        <param name="centerX"><span data-ttu-id="3adae-339">スケーリング操作が実行される点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-339">The x-coordinate of the point about which the scale operation is performed.</span></span></param>
        <param name="centerY"><span data-ttu-id="3adae-340">スケーリング操作が実行される点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="3adae-340">The y-coordinate of the point about which the scale operation is performed.</span></span></param>
        <summary><span data-ttu-id="3adae-341">この <see cref="T:System.Windows.Media.Matrix" /> の指定した点を中心とする指定したスケールを前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-341">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-342">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-342">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-343">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-343">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-344">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-344">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-345">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-345">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-346">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-346">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-347">次の例は、スケールを <xref:System.Windows.Media.Matrix>に付加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-347">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.ScalePrepend : double * double -&gt; unit" Usage="matrix.ScalePrepend (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="3adae-348">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を x 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="3adae-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="3adae-349">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を y 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="3adae-349">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span></span></param>
        <summary><span data-ttu-id="3adae-350">指定したスケールのベクターをこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-350">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-351">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-351">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-352">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-352">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-353">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-353">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-354">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-354">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-355">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-355">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-356">次の例は、スケールを <xref:System.Windows.Media.Matrix> 構造に付加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-356">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : unit -&gt; unit" Usage="matrix.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3adae-357">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を恒等行列に変更します。</span><span class="sxs-lookup"><span data-stu-id="3adae-357">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-358">Id 行列の値は、係数 [1, 1]、[2, 2]、[3, 3]、および残りの係数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="3adae-358">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="3adae-359">これは、<xref:System.Windows.Media.Matrix.M11%2A> の設定と <xref:System.Windows.Media.Matrix.M22%2A> を1に、<xref:System.Windows.Media.Matrix.M12%2A>、<xref:System.Windows.Media.Matrix.M21%2A>、<xref:System.Windows.Media.Matrix.OffsetX%2A>、および <xref:System.Windows.Media.Matrix.OffsetY%2A> を0に設定することに関連しています。</span><span class="sxs-lookup"><span data-stu-id="3adae-359">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="3adae-360"><xref:System.Windows.Media.Matrix> 構造体に対して [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 使用する実装であるアフィン行列では、係数 [3, 1]、[3, 2]、[3.3] が常に0、0、1の値を常に持つことが暗黙的に指定されています。</span><span class="sxs-lookup"><span data-stu-id="3adae-360">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="3adae-361">1</span><span class="sxs-lookup"><span data-stu-id="3adae-361">1</span></span>|<span data-ttu-id="3adae-362">0</span><span class="sxs-lookup"><span data-stu-id="3adae-362">0</span></span>|<span data-ttu-id="3adae-363">0</span><span class="sxs-lookup"><span data-stu-id="3adae-363">0</span></span>|  
|<span data-ttu-id="3adae-364">0</span><span class="sxs-lookup"><span data-stu-id="3adae-364">0</span></span>|<span data-ttu-id="3adae-365">1</span><span class="sxs-lookup"><span data-stu-id="3adae-365">1</span></span>|<span data-ttu-id="3adae-366">0</span><span class="sxs-lookup"><span data-stu-id="3adae-366">0</span></span>|  
|<span data-ttu-id="3adae-367">0</span><span class="sxs-lookup"><span data-stu-id="3adae-367">0</span></span>|<span data-ttu-id="3adae-368">0</span><span class="sxs-lookup"><span data-stu-id="3adae-368">0</span></span>|<span data-ttu-id="3adae-369">1</span><span class="sxs-lookup"><span data-stu-id="3adae-369">1</span></span>|  
  
 <span data-ttu-id="3adae-370">Id 行列の場合、<xref:System.Windows.Media.Matrix.ToString%2A> メソッドは、<xref:System.Windows.Media.Matrix>の係数ではなく、文字列 "Identity" を返します。</span><span class="sxs-lookup"><span data-stu-id="3adae-370">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-371">次の例では、<xref:System.Windows.Media.Matrix> 構造体を恒等行列に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-371">The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.Skew : double * double -&gt; unit" Usage="matrix.Skew (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="3adae-372">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の x 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-372">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="3adae-373">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の y 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-373">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="3adae-374">x 次元と y 次元の指定した角度の傾斜を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-374">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-375">この例では、<xref:System.Windows.Media.Matrix> 構造体を傾斜させる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-375">This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.SkewPrepend : double * double -&gt; unit" Usage="matrix.SkewPrepend (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="3adae-376">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の x 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-376">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="3adae-377">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の y 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="3adae-377">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="3adae-378">x 次元と y 次元の指定した角度の傾斜を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-378">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-379">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-379">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-380">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-380">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-381">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-381">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-382">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-382">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-383">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-383">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-384">この例では、<xref:System.Windows.Media.Matrix> 構造体に傾斜を付加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-384">This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IFormattable.ToString : string * IFormatProvider -&gt; string&#xA;override this.System.IFormattable.ToString : string * IFormatProvider -&gt; string" Usage="matrix.System.IFormattable.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="3adae-385">使用する書式。</span><span class="sxs-lookup"><span data-stu-id="3adae-385">The format to use.</span></span>  
  
<span data-ttu-id="3adae-386">- または -</span><span class="sxs-lookup"><span data-stu-id="3adae-386">-or-</span></span> 
<span data-ttu-id="3adae-387"><see cref="T:System.IFormattable" /> 実装の型に対して定義されている既定の書式を使用する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="3adae-387">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="3adae-388">値の書式付けに使用するプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="3adae-388">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="3adae-389">- または -</span><span class="sxs-lookup"><span data-stu-id="3adae-389">-or-</span></span> 
<span data-ttu-id="3adae-390">オペレーティング システムの現在のロケール設定から数値書式情報を取得する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="3adae-390">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="3adae-391">指定した書式を使用して、現在のインスタンスの値に書式を付けます。</span><span class="sxs-lookup"><span data-stu-id="3adae-391">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="3adae-392">指定された書式の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3adae-392">The value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3adae-393">この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="3adae-393">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-394">この <xref:System.Windows.Media.Matrix> 構造体が id 行列の場合は、"Identity" という文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-394">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="matrix.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3adae-395">この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="3adae-395">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3adae-396">この <see cref="T:System.String" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-396">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-397">この <xref:System.Windows.Media.Matrix> が <xref:System.Windows.Media.Matrix.Identity%2A> マトリックスの場合は、"Identity" という文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-397">If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="matrix.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3adae-398">カルチャ固有の書式設定情報。</span><span class="sxs-lookup"><span data-stu-id="3adae-398">The culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="3adae-399">カルチャ固有の書式設定情報を使用して、この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="3adae-399">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="3adae-400">この <see cref="T:System.String" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="3adae-400">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-401">この <xref:System.Windows.Media.Matrix> 構造体が id 行列の場合は、"Identity" という文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-401">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3adae-402">指定した点、点の配列、ベクター、またはベクターの配列を、この <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="3adae-402">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-403">次の例では、<xref:System.Windows.Media.Matrix> を使用して点とベクトルを変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-403">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (point As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point -&gt; System.Windows.Point" Usage="matrix.Transform point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3adae-404">変換する点。</span><span class="sxs-lookup"><span data-stu-id="3adae-404">The point to transform.</span></span></param>
        <summary><span data-ttu-id="3adae-405">指定した点を <see cref="T:System.Windows.Media.Matrix" /> で変換し、その結果を返します。</span><span class="sxs-lookup"><span data-stu-id="3adae-405">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="3adae-406">この <see cref="T:System.Windows.Media.Matrix" /> によって <paramref name="point" /> を変換した結果。</span><span class="sxs-lookup"><span data-stu-id="3adae-406">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-407">次の例では、<xref:System.Windows.Media.Matrix> を使用して点とベクトルを変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-407">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point[] -&gt; unit" Usage="matrix.Transform points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="3adae-408">変換対象の点。</span><span class="sxs-lookup"><span data-stu-id="3adae-408">The points to transform.</span></span> <span data-ttu-id="3adae-409">配列内の元の点は、変換後の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="3adae-409">The original points in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="3adae-410">指定した点をこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="3adae-410">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-411">次の例では、<xref:System.Windows.Media.Matrix> を使用して点とベクトルを変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-411">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (vector As Vector) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector -&gt; System.Windows.Vector" Usage="matrix.Transform vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector"><span data-ttu-id="3adae-412">変換するベクトル。</span><span class="sxs-lookup"><span data-stu-id="3adae-412">The vector to transform.</span></span></param>
        <summary><span data-ttu-id="3adae-413">指定したベクターをこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="3adae-413">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="3adae-414">この <see cref="T:System.Windows.Media.Matrix" /> によって <paramref name="vector" /> を変換した結果。</span><span class="sxs-lookup"><span data-stu-id="3adae-414">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-415">次の例では、<xref:System.Windows.Media.Matrix> を使用して点とベクトルを変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-415">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector[] -&gt; unit" Usage="matrix.Transform vectors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors"><span data-ttu-id="3adae-416">変換するベクター。</span><span class="sxs-lookup"><span data-stu-id="3adae-416">The vectors to transform.</span></span> <span data-ttu-id="3adae-417">配列内の元のベクターは、変換後の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="3adae-417">The original vectors in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="3adae-418">指定したベクターをこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="3adae-418">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-419">次の例では、<xref:System.Windows.Media.Matrix> を使用して点とベクトルを変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-419">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : double * double -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="3adae-420">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-420">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="3adae-421">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-421">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="3adae-422">指定したオフセットの変換をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-422">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3adae-423">次の例では、<xref:System.Windows.Media.Matrix> 構造に変換を追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-423">The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.TranslatePrepend : double * double -&gt; unit" Usage="matrix.TranslatePrepend (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="3adae-424">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-424">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="3adae-425">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="3adae-425">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="3adae-426">指定したオフセットの変換をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="3adae-426">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3adae-427">複合変換では、個々の変換の順序が重要になります。</span><span class="sxs-lookup"><span data-stu-id="3adae-427">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="3adae-428">たとえば、最初に回転した後、スケーリングしてから平行移動した場合、最初に変換してから回転してからスケールする場合とは異なる結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="3adae-428">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="3adae-429">理由の1つは、回転やスケーリングなどの変換が、座標系の原点に対して行われるということです。</span><span class="sxs-lookup"><span data-stu-id="3adae-429">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="3adae-430">原点から中央に配置されているオブジェクトをスケーリングすると、原点から離れた位置にあるオブジェクトをスケーリングする場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-430">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="3adae-431">同様に、原点から中央に配置されているオブジェクトを回転すると、原点から離れた位置にあるオブジェクトを回転した場合とは異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="3adae-431">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3adae-432">次の例では、変換を <xref:System.Windows.Media.Matrix> 構造体に付加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3adae-432">The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>
