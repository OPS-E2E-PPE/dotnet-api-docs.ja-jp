<Type Name="Enlistment" FullName="System.Transactions.Enlistment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acf214860c2fae6c11239d73eb79640d3229c102" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83978862" /></Metadata><TypeSignature Language="C#" Value="public class Enlistment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Enlistment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.Enlistment" />
  <TypeSignature Language="VB.NET" Value="Public Class Enlistment" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enlistment" />
  <TypeSignature Language="F#" Value="type Enlistment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Transactions.Local" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>トランザクションの最終フェーズにおいて、トランザクションに参加している参加要素とトランザクション マネージャーの間の通信を容易にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Transactions.Transaction> オブジェクトの <xref:System.Transactions.Transaction.EnlistVolatile%2A> および <xref:System.Transactions.Transaction.EnlistDurable%2A> メソッドを呼び出して、トランザクションに参加要素を参加させると、参加要素を説明するこのオブジェクトが返されます。  
  
 トランザクションのコミットの最終フェーズでは、トランザクションマネージャーは、トランザクションに参加している <xref:System.Transactions.IEnlistmentNotification> インターフェイスを実装するリソースマネージャーにこのオブジェクトを渡します。 具体的には、トランザクションマネージャーがトランザクションのコミットまたはロールバックを決定したかどうかに応じて、<xref:System.Transactions.IEnlistmentNotification.Commit%2A> または参加要素の <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> 方法のどちらかを呼び出します。 参加要素は、このオブジェクトの <xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出して、トランザクションマネージャーが作業を完了したことを通知する必要があります。  
  
 参加リストは、準備フェーズで <xref:System.Transactions.PreparingEnlistment.Prepared%2A> を呼び出す前に、いつでも <xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出すことができます。  これにより、参加リストは読み取り専用の投票にキャストします。つまり、トランザクションに対してコミットを投票しますが、最終的な結果を受け取る必要はありません。 <xref:System.Transactions.Enlistment.Done%2A> メソッドが呼び出された後、参加している参加要素はトランザクションマネージャーからそれ以上通知を受信しないことに注意してください。  
  
   
  
## Examples  
 次の例は、<xref:System.Transactions.IEnlistmentNotification> インターフェイスの実装と、<xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出す必要がある場合を示しています。  
  
 [!code-csharp[Tx_Enlist#2](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#2)]
 [!code-vb[Tx_Enlist#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <altmember cref="T:System.Transactions.PreparingEnlistment" />
    <altmember cref="T:System.Transactions.IEnlistmentNotification" />
    <related type="Article" href="/dotnet/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction">トランザクションの参加要素としてのリソースの参加</related>
  </Docs>
  <Members>
    <Member MemberName="Done">
      <MemberSignature Language="C#" Value="public void Done ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Done() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.Enlistment.Done" />
      <MemberSignature Language="VB.NET" Value="Public Sub Done ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Done();" />
      <MemberSignature Language="F#" Value="member this.Done : unit -&gt; unit" Usage="enlistment.Done " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トランザクション参加要素が作業を完了したことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トランザクションのコミットの最終フェーズでは、トランザクションがコミットされるかロールバックされるかに応じて、トランザクションマネージャーは、参加要素の <xref:System.Transactions.IEnlistmentNotification.Commit%2A>、<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>、<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> のいずれかの方法を呼び出します。 リソースマネージャーは、トランザクションを完了するために必要な作業を実行し、`enlistment` パラメーターの <xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出すことにより、トランザクションマネージャーに完了したことを通知する必要があります。  
  
 リソースマネージャーが永続的にを参加させても、<xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出すことによって応答しない場合、トランザクションマネージャーは、リソースマネージャーがそれぞれの通知呼び出しを受信したことを認識できません。 そのため、トランザクションマネージャーは応答を待機し続け、このトランザクションに関連する情報を保持します。  <xref:System.Transactions.Enlistment.Done%2A> が呼び出されない場合、この情報はメモリ内またはシステム全体のリソース内で無期限に保持されます。 これにより、リソースを再利用できなくなります。 分散トランザクションの場合、msdtc ログが最終的にいっぱいになり、MSDTC プロセスが停止する可能性があります。 <xref:System.Transactions>によって管理されるトランザクションの場合、これにより、リソースマネージャーのプロセスのメモリ消費量が徐々に増加し続けます。 そのため、リソースマネージャーで準備作業を行った後に、<xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出すことが重要です。  
  
 参加リストは、準備フェーズで <xref:System.Transactions.PreparingEnlistment.Prepared%2A> を呼び出す前に、いつでも <xref:System.Transactions.Enlistment.Done%2A> メソッドを呼び出すことができます。 これにより、参加リストは読み取り専用の投票にキャストします。つまり、トランザクションに対してコミットを投票しますが、最終的な結果を受け取る必要はありません。 このメソッドが呼び出された後、参加している参加要素はトランザクションマネージャーからそれ以上通知を受信しないことに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Transactions.PreparingEnlistment" />
        <altmember cref="T:System.Transactions.IEnlistmentNotification" />
        <related type="Article" href="/dotnet/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction">トランザクションの参加要素としてのリソースの参加</related>
      </Docs>
    </Member>
  </Members>
</Type>
