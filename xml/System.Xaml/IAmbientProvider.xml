<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce81c306d2c2d9ec2b7ed4a68bf9fd4800962928" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952502" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eeba7-101">型コンバーターおよびマークアップ拡張機能に、アンビエント プロパティまたはアンビエント型に関する情報アイテムを返すことのできるサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-101">Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeba7-102">このインターフェイスは、型コンバーターとマークアップ拡張機能を使用して、XAML 型システム (<xref:System.Xaml.XamlMember> オブジェクト) のアンビエントプロパティ識別子を取得するために役立つサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-102">This interface represents the service that can help type converters and markup extensions to get the ambient property identifiers for the XAML type system (<xref:System.Xaml.XamlMember> objects).</span></span> <span data-ttu-id="eeba7-103">サービスは、クラスからアンビエントプロパティの値を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-103">The service can also get the ambient property values from classes.</span></span> <span data-ttu-id="eeba7-104">型はアンビエントでもかまいません。その型を値として使用するメンバーは、アンビエントと見なされる必要があります。</span><span class="sxs-lookup"><span data-stu-id="eeba7-104">Types can also be ambient; any member that uses that type as its value should be considered ambient.</span></span>  
  
 <span data-ttu-id="eeba7-105">通常、このサービスは <xref:System.IServiceProvider.GetService%2A>を呼び出すことによって返されます。これは、コンテキスト固有のサービスプロバイダーに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-105">This service is typically returned through a call to <xref:System.IServiceProvider.GetService%2A>, which is made against a context-specific service provider.</span></span> <span data-ttu-id="eeba7-106">サービスプロバイダーは、それを必要とするコンテキスト (値コンバーターの実行コードなど) で一般公開されています。</span><span class="sxs-lookup"><span data-stu-id="eeba7-106">The service provider is generally available to contexts that need it, such as the execution code of a value converter.</span></span> <span data-ttu-id="eeba7-107">詳細については、「 [XAML の型コンバーターとマークアップ拡張機能](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml)」および「[型コンバーターとマークアップ拡張機能で使用できるサービスコンテキスト](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="eeba7-107">For more information, see [Type Converters and Markup Extensions for XAML](/dotnet/framework/xaml-services/type-converters-and-markup-extensions-for-xaml) and [Service Contexts Available to Type Converters and Markup Extensions](/dotnet/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions).</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="eeba7-108">アンビエントプロパティについて</span><span class="sxs-lookup"><span data-stu-id="eeba7-108">About Ambient Properties</span></span>  
 <span data-ttu-id="eeba7-109">アンビエントプロパティは、XAML ノード構造およびそこから作成されたオブジェクトグラフに存在する型コンバーターおよびマークアップ拡張機能によって使用されるプロパティ値を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="eeba7-109">An ambient property is a property whose property value should be available to type converter and markup extension usages that exist in the XAML node structure and in the object graph created from it.</span></span> <span data-ttu-id="eeba7-110">これは、読み込みパスのオブジェクト書き込みフェーズまたは保存パスのシリアル化フェーズ中に、XAML プロセッサに関連します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-110">This is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="eeba7-111">読み込みパスの場合、アンビエントプロパティの値は、XAML ノード構造の下位に存在する他のプロパティのオブジェクトグラフの値に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="eeba7-111">In the load path case, the ambient property value might influence the value in the object graph of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="eeba7-112">アンビエント概念は、XAML ノードストリームとして処理されるときに、アンビエントプロパティ値が `StartObject` から `EndObject`への型コンバーターおよびマークアップ拡張機能で使用できる必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-112">When processed as a XAML node stream, the ambient concept means the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="eeba7-113">同様に、保存パスに使用される型コンバーターは、アンビエントプロパティとその値の情報を使用できます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-113">Similarly, a type converter that is used for the save path can use knowledge of the ambient property and its value.</span></span> <span data-ttu-id="eeba7-114">したがって、生成される XAML はラウンドトリップ表現の方が適しています。</span><span class="sxs-lookup"><span data-stu-id="eeba7-114">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="eeba7-115">一般に、メンバーの場合、XAML では、オブジェクトのメンバーを処理する順序を指定しません。</span><span class="sxs-lookup"><span data-stu-id="eeba7-115">For members in general, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="eeba7-116">ただし、他のプロパティに含まれている型コンバーターおよびマークアップ拡張機能の使用が <xref:System.Xaml.IAmbientProvider> サービスを介してアクセスできるように、アンビエントプロパティの値は、XAML リーダーによって最初に処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="eeba7-116">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usages that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="eeba7-117"><xref:System.Xaml.XamlMember.DependsOn%2A> は、XAML ノードの処理順序にも影響を与える同様の概念です。</span><span class="sxs-lookup"><span data-stu-id="eeba7-117"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="eeba7-118">ただし、<xref:System.Xaml.XamlMember.DependsOn%2A> は、ピアメンバーとノードのリレーションシップに対してのみ使用できます。すべての子孫に影響を与えることはできません。</span><span class="sxs-lookup"><span data-stu-id="eeba7-118">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="eeba7-119">また <xref:System.Xaml.XamlMember.DependsOn%2A> は、オブジェクトグラフのプロパティ設定を直接影響します。一方、アンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-119">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting; whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="eeba7-120">アンビエント手法では、アンビエントプロパティ値の解釈方法とオブジェクトへの適用方法を指定する、特定の型コンバーターまたはマークアップ拡張機能の定義も必要です。</span><span class="sxs-lookup"><span data-stu-id="eeba7-120">In the ambient technique, there must also be a specific type converter or markup extension definition that specifies how the ambient property value should be interpreted and applied to the object.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="eeba7-121">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="eeba7-121">WPF Usage Notes</span></span>  
 <span data-ttu-id="eeba7-122">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 機能セットに示されているアンビエントプロパティのシナリオは <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>であり、他の値に必要なプロパティ名の参照を修飾できます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-122">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="eeba7-123">この場合、<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 値は、その下の XAML ノードにある <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 値を修飾します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-123">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values that are located in the XAML nodes underneath it.</span></span> <span data-ttu-id="eeba7-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> は、<xref:System.Windows.DependencyProperty>に対して型コンバーターの動作を使用します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="eeba7-125">この動作では、型コンバーターおよびマークアップ拡張機能で使用できるサービスコンテキストから <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> を照会することによって、アンビエント <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 値にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="eeba7-125">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 <span data-ttu-id="eeba7-126">WPF 機能セットに示されているアンビエント型のシナリオは <xref:System.Windows.ResourceDictionary>です。</span><span class="sxs-lookup"><span data-stu-id="eeba7-126">An ambient type scenario that is illustrated in the WPF feature set is <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="eeba7-127"><xref:System.Windows.ResourceDictionary> には、マージする他の <xref:System.Windows.ResourceDictionary> オブジェクトを含むことができる <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> プロパティがあり、マージされたシナリオのリソース解決の目的の順序は、型が読み込まれた順序と競合します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-127"><xref:System.Windows.ResourceDictionary> has a <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property that can contain other <xref:System.Windows.ResourceDictionary> objects to merge, and the intended order of resource resolution for the merged scenario clashes with the order that types are loaded.</span></span> <span data-ttu-id="eeba7-128"><xref:System.Windows.ResourceDictionary> は <xref:System.Windows.Markup.AmbientAttribute> 適用されます。これにより、XAML プロセッサは `StaticResource` の使用によって、マージされたディクショナリ内の参照を正しく処理できるようになります。</span><span class="sxs-lookup"><span data-stu-id="eeba7-128"><xref:System.Windows.ResourceDictionary> applies <xref:System.Windows.Markup.AmbientAttribute> so that a XAML processor can correctly process the references in a merged dictionary with `StaticResource` usages.</span></span> <span data-ttu-id="eeba7-129">具体的には、`StaticResource` は、<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>を呼び出すマークアップ拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="eeba7-129">Specifically, `StaticResource` is a markup extension, which calls <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eeba7-130">要求されたスコープのアンビエント型またはアンビエント プロパティの情報アイテムの列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-130">Returns an enumerable set of ambient type or property information items for the requested scope.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="eeba7-131">アンビエント型情報を取得する型のセット。</span><span class="sxs-lookup"><span data-stu-id="eeba7-131">The set of types from which to retrieve ambient type information.</span></span></param>
        <summary><span data-ttu-id="eeba7-132">要求された型に対する使用可能なアンビエント型のオブジェクト インスタンスの列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-132">Returns an enumerable set of object instances of possible ambient types for the requested types.</span></span></summary>
        <returns><span data-ttu-id="eeba7-133">要求した <see cref="T:System.Xaml.XamlType" /> 識別子のセットに対する値を表す列挙可能なオブジェクトのセット。</span><span class="sxs-lookup"><span data-stu-id="eeba7-133">An enumerable set of objects that represent the values for the requested set of <see cref="T:System.Xaml.XamlType" /> identifiers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="eeba7-134">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-134">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="eeba7-135">この型に目的のアンビエント プロパティが保持されています。</span><span class="sxs-lookup"><span data-stu-id="eeba7-135">This type holds the desired ambient property.</span></span> <span data-ttu-id="eeba7-136"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-136">May be <see langword="null" />.</span></span></param>
        <param name="properties"><span data-ttu-id="eeba7-137">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-137">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="eeba7-138">要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-138">Returns an enumerable set of ambient property information items for the requested set of properties.</span></span></summary>
        <returns><span data-ttu-id="eeba7-139">要求されたプロパティ セットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。</span><span class="sxs-lookup"><span data-stu-id="eeba7-139">An enumerable set of ambient property information items for the requested set of properties.</span></span> <span data-ttu-id="eeba7-140">返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="properties" /> のいずれかに一致します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-140">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="properties" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeba7-141">返される各 <xref:System.Xaml.AmbientPropertyValue> には、<xref:System.Xaml.XamlMember> 識別子とプロパティ値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-141">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="eeba7-142">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-142">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="eeba7-143">この型に目的のアンビエント プロパティが保持されています。</span><span class="sxs-lookup"><span data-stu-id="eeba7-143">This type holds the desired ambient property.</span></span> <span data-ttu-id="eeba7-144"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-144">May be <see langword="null" />.</span></span></param>
        <param name="searchLiveStackOnly"><span data-ttu-id="eeba7-145">保存されたコンテキストを使用しない場合は <see langword="true" />。保存されたコンテキストを使用する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeba7-145"><see langword="true" /> to not use a saved context; <see langword="false" /> to use a saved context.</span></span> <span data-ttu-id="eeba7-146">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="eeba7-146">The default is <see langword="false" />.</span></span></param>
        <param name="types"><span data-ttu-id="eeba7-147">アンビエントと見なされる型を識別する 1 つ以上の型識別子オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-147">Specifies one or more type identifier objects that identify the types to be considered ambient.</span></span></param>
        <param name="properties"><span data-ttu-id="eeba7-148">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティ識別子オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-148">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="eeba7-149">要求された型とプロパティのセットに対するアンビエント プロパティ情報項目の列挙可能なセットを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-149">Returns an enumerable set of ambient property information items for the requested set of types and properties.</span></span></summary>
        <returns><span data-ttu-id="eeba7-150">要求された型とプロパティのセットに対するアンビエント プロパティ情報アイテムの列挙可能なセット。</span><span class="sxs-lookup"><span data-stu-id="eeba7-150">An enumerable set of ambient property information items for the requested set of types and properties.</span></span> <span data-ttu-id="eeba7-151">返された各 <see cref="T:System.Xaml.AmbientPropertyValue" /> のプロパティ情報は、入力された <paramref name="types" /> または <paramref name="properties" /> のいずれかに一致します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-151">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="types" /> or <paramref name="properties" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeba7-152">返される各 <xref:System.Xaml.AmbientPropertyValue> には、<xref:System.Xaml.XamlMember> 識別子とプロパティ値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-152">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 <span data-ttu-id="eeba7-153">この特定の <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> オーバーロードは、同じパスのツリーを通じてアンビエント型とアンビエントプロパティを検索できます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-153">This particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> overload can search for ambient types and ambient properties in the same pass through a tree.</span></span> <span data-ttu-id="eeba7-154">このオーバーロードを使用すると、戻り値の項目が <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> または <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>とは異なる順序で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-154">Using this overload results in an ordering of items in the return value that is different from <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="eeba7-155">このオーバーロードでは、保存されているコンテキストを検索で使用できないようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-155">This overload also permits the search to not use any saved context.</span></span> <span data-ttu-id="eeba7-156"><xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> または <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> オーバーロードは、使用可能な場合は、保存されているコンテキストを暗黙的に使用します (これらは常に、暗黙的な `searchLiveStackOnly` パラメーターが `false`であるかのように動作します)。</span><span class="sxs-lookup"><span data-stu-id="eeba7-156">The <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`).</span></span> <span data-ttu-id="eeba7-157">保存されたコンテキストの概念は、特定の XAML スキーマコンテキスト、または XAML を組み込んだフレームワークによって処理される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="eeba7-157">The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML.</span></span> <span data-ttu-id="eeba7-158">WPF XAML 実装では、テンプレートの展開やその他の機能領域に対して、保存されたコンテキストが使用されます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-158">In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eeba7-159">最初に検出されたプロパティに基づいて、要求されたセットから単一のアンビエント型またはアンビエント プロパティの情報アイテムを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-159">Returns a single ambient type or property information item from the requested set, based on which property is first encountered.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="eeba7-160">アンビエント型情報を取得する型のセット。</span><span class="sxs-lookup"><span data-stu-id="eeba7-160">The set of types from which to retrieve ambient type information.</span></span></param>
        <summary><span data-ttu-id="eeba7-161">要求された型に対する使用可能なアンビエント型の最初に一致したオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-161">Returns the first matching object that is a possible ambient type for the requested types.</span></span></summary>
        <returns><span data-ttu-id="eeba7-162">要求されたセットに対する最初の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="eeba7-162">The first result object for the requested set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="eeba7-163">オブジェクト グラフの上方向の走査で検出された場合に評価を停止する 1 つ以上の型を指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-163">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="eeba7-164">この型に目的のアンビエント プロパティが保持されています。</span><span class="sxs-lookup"><span data-stu-id="eeba7-164">This type holds the desired ambient property.</span></span></param>
        <param name="properties"><span data-ttu-id="eeba7-165">アンビエントと見なされるプロパティを識別する 1 つ以上のオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-165">Specifies one or more objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="eeba7-166">最初に検出されたプロパティに基づいて、要求されたプロパティ セットから単一のアンビエント プロパティの情報アイテムを返します。</span><span class="sxs-lookup"><span data-stu-id="eeba7-166">Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.</span></span></summary>
        <returns><span data-ttu-id="eeba7-167"><paramref name="properties" /> リストで最初に見つかったアンビエント プロパティ値の単一のアンビエント プロパティの情報アイテム。</span><span class="sxs-lookup"><span data-stu-id="eeba7-167">A single ambient property information item for the first ambient property value from the <paramref name="properties" /> list that is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeba7-168">返される各 <xref:System.Xaml.AmbientPropertyValue> には、<xref:System.Xaml.XamlMember> 識別子とプロパティ値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="eeba7-168">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
