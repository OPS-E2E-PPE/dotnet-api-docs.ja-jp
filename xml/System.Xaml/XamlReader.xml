<Type Name="XamlReader" FullName="System.Xaml.XamlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07c8b359bf5de9f29d534cc3d15c795997c094a0" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78731842" /></Metadata><TypeSignature Language="C#" Value="public abstract class XamlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ff1c2-101">XAML 入力を処理して XAML ノード ストリームを生成するクラスの基本定義を提供します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-101">Provides base definitions for classes that consume XAML input and produce XAML node streams.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-102"><xref:System.Xaml.XamlReader> は抽象クラスであり、すべてのメンバーの作業結果を含む実装や定義は提供しません。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-102"><xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members.</span></span> <span data-ttu-id="ff1c2-103"><xref:System.Xaml.XamlReader> で実装されているメンバーについては、そのメンバーの解説に記載されています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-103">Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member.</span></span> <span data-ttu-id="ff1c2-104">具体的には、<xref:System.Xaml.XamlReader> にはいくつかの抽象メンバーを実装する必要があり、いくつかの仮想メンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-104">Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.</span></span>  
  
 <span data-ttu-id="ff1c2-105">仮想メンバーの <xref:System.Xaml.XamlReader.ReadSubtree%2A> と <xref:System.Xaml.XamlReader.Skip%2A> には、ほとんどの場合に適した既定の実装が用意されています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-105">Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases.</span></span> <span data-ttu-id="ff1c2-106">ただし、<xref:System.Xaml.XamlReader.ReadSubtree%2A> および <xref:System.Xaml.XamlReader.Skip%2A> の既定の実装は、実装する XAML リーダーの他の予期される動作に依存します。特に、<xref:System.Xaml.XamlReader.Read%2A> のオーバーライドに依存しています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-106">However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override.</span></span> <span data-ttu-id="ff1c2-107"><xref:System.Xaml.XamlReader.Dispose%2A> は、既定の実装が動作している仮想メンバーでもあります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-107"><xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.</span></span>  
  
 <span data-ttu-id="ff1c2-108">次の2つのクラスは、.NET Framework XAML サービスと .xaml アセンブリにおいて最も関連性のある実用的な派生クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-108">The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:</span></span>  
  
-   <span data-ttu-id="ff1c2-109"><xref:System.Xaml.XamlObjectReader>。実行時にアプリケーションのアクティブなオブジェクトグラフなどのオブジェクトグラフを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-109"><xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.</span></span>  
  
-   <span data-ttu-id="ff1c2-110"><xref:System.Xaml.XamlXmlReader>は、中間ヘルパークラスとしてファイルを読み込む一般的な <xref:System.Xml.XmlReader> を使用して、XML テキストファイルの形式で XAML を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-110"><xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.</span></span>  
  
 <span data-ttu-id="ff1c2-111">他のフレームワークの他の XAML リーダーには、<xref:System.Windows.Baml2006.Baml2006Reader> と <xref:System.Activities.Debugger.XamlDebuggerXmlReader>が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-111">Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</span></span>  
  
 <span data-ttu-id="ff1c2-112"><xref:System.Xaml.XamlReader> は、基になる既定の XAML リーダー実装を返すための `Create` メソッドが <xref:System.Xaml.XamlReader> にないため、[!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] および <xref:System.Xml.XmlReader> のデザイン原則とは異なります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-112"><xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations.</span></span> <span data-ttu-id="ff1c2-113">代わりに、コンストラクターまたはその他のクラス固有のヘルパー Api を呼び出すことによって、特定の派生 XAML リーダークラスをインスタンス化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-113">You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.</span></span>  
  
## <a name="subtree-readers"></a><span data-ttu-id="ff1c2-114">サブツリーリーダー</span><span class="sxs-lookup"><span data-stu-id="ff1c2-114">Subtree Readers</span></span>  
 <span data-ttu-id="ff1c2-115">ほとんどの場合、<xref:System.Xaml.XamlReader>から派生する特定の XAML リーダークラスのコンテキストで <xref:System.Xaml.XamlReader> API を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-115">For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="ff1c2-116">ただし、特定のケースでは、<xref:System.Xaml.XamlObjectReader> または <xref:System.Xaml.XamlXmlReader>から派生していない、パブリックではない実際の XAML リーダーインスタンスで <xref:System.Xaml.XamlReader> API にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-116">However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>.</span></span> <span data-ttu-id="ff1c2-117">この場合は、<xref:System.Xaml.XamlReader> インスタンスを返す <xref:System.Xaml.XamlReader.ReadSubtree%2A>を呼び出すと発生します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-117">This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance.</span></span> <span data-ttu-id="ff1c2-118">既定の実装では、この API によって返される <xref:System.Xaml.XamlReader> は内部クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-118">In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.</span></span>  
  
 <span data-ttu-id="ff1c2-119">サブツリーの読み取り用に取得された <xref:System.Xaml.XamlReader> には、<xref:System.Xaml.XamlReader.Read%2A> や <xref:System.Xaml.XamlReader.NodeType%2A>などの Api に対して有効なアクションがあり、これらのアクションは親リーダークラスに基づいています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-119">The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class.</span></span> <span data-ttu-id="ff1c2-120">この設計により、内部クラスは、サブツリーが入力されたフレームレベルを追跡できるようになります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-120">This design enables the internal class to track the frame level where the subtree was entered.</span></span> <span data-ttu-id="ff1c2-121">サブツリー <xref:System.Xaml.XamlReader> は、現在のノードの位置がサブツリーの境界を越えて移動した場合に、特定のサブツリーリーダーが現在のノードのファイルの終わりまたは `null` を報告するようにします。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-121">The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.</span></span>  
  
 <span data-ttu-id="ff1c2-122">サブツリーリーダーの使用に関する注意事項は、特定の <xref:System.Xaml.XamlReader> Api に含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-122">Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectReader" />
    <altmember cref="T:System.Xaml.XamlXmlReader" />
    <altmember cref="T:System.Xaml.XamlReaderSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="ff1c2-123">XAML ノード ストリームの構造と概念について</span><span class="sxs-lookup"><span data-stu-id="ff1c2-123">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-124"><see cref="T:System.Xaml.XamlReader" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-124">Initializes the <see cref="T:System.Xaml.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-125">XAML ノード ストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-125">Closes the XAML node stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-126">基本実装では、<xref:System.Xaml.XamlReader.Close%2A> を呼び出すと、`isDisposing` パラメーターを `true`として <xref:System.Xaml.XamlReader.Dispose%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-126">In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ff1c2-127">マネージド リソースを解放するには <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-127"><see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ff1c2-128"><see cref="T:System.Xaml.XamlReader" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-128">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlReader" />, and optionally, releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-129"><xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`を取得するには、基本クラスを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-129">You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlReader.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-130"><see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-130">Gets whether <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called.</span></span></summary>
        <value><span data-ttu-id="ff1c2-131"><see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> が呼び出されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-131"><see langword="true" /> if <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> has been called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public abstract bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-132">派生クラスで実装されている場合に、リーダーがファイルの末尾に配置されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-132">When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.</span></span></summary>
        <value><span data-ttu-id="ff1c2-133">XAML ノード ストリームのファイルの概念上の末尾に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-133"><see langword="true" /> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-134">サブツリーリーダーは、入力されたサブツリーの境界を正しく反映する動作を持つ <xref:System.Xaml.XamlReader.IsEof%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-134">Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree.</span></span> <span data-ttu-id="ff1c2-135">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-135">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.IsEof" />
        <altmember cref="P:System.Xaml.XamlXmlReader.IsEof" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-136">派生クラスで実装されており、リーダーが <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上に配置されている場合は、リーダーが現在配置されているメンバーを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-136">When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span></span></summary>
        <value><span data-ttu-id="ff1c2-137">現在のメンバー。リーダーがメンバー上に配置されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-137">The current member; or <see langword="null" />, if the reader position is not on a member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-138">サブツリーリーダーは、動作制限付きで <xref:System.Xaml.XamlReader.Member%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-138">Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions.</span></span> <span data-ttu-id="ff1c2-139">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-139">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Member" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Member" />
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-140">派生クラスで実装されている場合に、現在のノードから XAML 名前空間情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-140">When implemented in a derived class, gets the XAML namespace information from the current node.</span></span></summary>
        <value><span data-ttu-id="ff1c2-141">XAML 名前空間情報 (使用可能な場合)。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-141">The XAML namespace information, if it is available; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-142">この API の意図された設計は、現在のノードの <xref:System.Xaml.XamlReader.NodeType%2A> が <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>場合にのみ、null 以外の結果を返すことです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-142">The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="ff1c2-143">プロパティは、XAML スキーマコンテキストで解釈されるように、一般的なスコープの意味で、オブジェクトまたはメンバーに適用される XAML 名前空間を報告しません。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-143">The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.</span></span> <span data-ttu-id="ff1c2-144">Xaml スキーマコンテキストによってライターに報告される方法以外の方法で情報が必要な場合は、xaml ノードを通過するときに、動作する XAML 名前空間の情報をキャッシュする手段をアプリケーションで提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-144">Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.</span></span> <span data-ttu-id="ff1c2-145">リファレンス実装については、「<xref:System.Xaml.XamlXmlReader.Namespace%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-145">See <xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Namespace" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-146">派生クラスで実装された場合、現在のノードの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-146">When implemented in a derived class, gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="ff1c2-147"><see cref="T:System.Xaml.XamlNodeType" /> 列挙体の値。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-147">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-148">サブツリーリーダーは、動作制限付きで <xref:System.Xaml.XamlReader.NodeType%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-148">Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions.</span></span> <span data-ttu-id="ff1c2-149">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-149">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.NodeType" />
        <altmember cref="P:System.Xaml.XamlXmlReader.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xamlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-150">派生クラスで実装された場合、処理対象から次の XAML ノードを読み取ります (ノードがある場合)。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-150">When implemented in a derived class, provides the next XAML node from the source, if a node is available.</span></span></summary>
        <returns><span data-ttu-id="ff1c2-151">ノードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-151"><see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-152">サブツリーリーダーは、動作制限付きで <xref:System.Xaml.XamlReader.Read%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-152">Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions.</span></span> <span data-ttu-id="ff1c2-153">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-153">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlXmlReader.Read" />
        <altmember cref="M:System.Xaml.XamlObjectReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xaml.XamlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xaml.XamlReader" Usage="xamlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-154">現在の <see cref="T:System.Xaml.XamlReader" /> に基づく <see cref="T:System.Xaml.XamlReader" /> を返します。返された <see cref="T:System.Xaml.XamlReader" /> は、XAML ノード構造のサブツリーでの反復処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-154">Returns a <see cref="T:System.Xaml.XamlReader" /> that is based on the current <see cref="T:System.Xaml.XamlReader" />, where the returned <see cref="T:System.Xaml.XamlReader" /> is used to iterate through a subtree of the XAML node structure.</span></span></summary>
        <returns><span data-ttu-id="ff1c2-155">サブツリーの新しい XAML リーダー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-155">A new XAML reader instance for the subtree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-156">このメソッドには既定の実装があり、有効な <xref:System.Xaml.XamlReader>を返します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-156">This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>.</span></span> <span data-ttu-id="ff1c2-157">返される <xref:System.Xaml.XamlReader> は、特定の <xref:System.Xaml.XamlReader> アクションを制限する内部クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-157">The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions.</span></span> <span data-ttu-id="ff1c2-158">制限は、XAML ノードセットに対して大規模なソースの寸法化されたサブツリーを読み取ることと、サブツリーが終了したときに現在のノードでファイルの終わりまたは `null` を返すことによって一貫しています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-158">The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.</span></span>  
  
 <span data-ttu-id="ff1c2-159">通常は、最初の <xref:System.Xaml.XamlReader.Read%2A> から現在のノードをチェックして、サブツリーリーダーが必要かどうかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-159">Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader.</span></span> <span data-ttu-id="ff1c2-160">これを確認する方法は実装固有のものであることがあります。ただし、すべてのサブツリーに対して複数のサブツリーリーダーを作成することは避けてください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-160">How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.</span></span> <span data-ttu-id="ff1c2-161">また、ノードのサブツリーを含めることができない特定のノードケース (たとえば、<xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) に対しては、サブツリーリーダーを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-161">In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.</span></span>  
  
 <span data-ttu-id="ff1c2-162">サブツリーリーダーを取得したら、それに対して <xref:System.Xaml.XamlReader.Read%2A> を呼び出して現在のノードを取得する (または <xref:System.Xaml.XamlReader.Skip%2A> を呼び出して次のノードを取得する) 必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-162">After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node).</span></span> <span data-ttu-id="ff1c2-163">最初のノードの位置は、作成時にサブツリーリーダーから自動的に取得されません。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-163">You do not automatically obtain an initial node position from the subtree reader when you create it.</span></span>  
  
 <span data-ttu-id="ff1c2-164">この既定の実装から <xref:System.Xaml.XamlReader.ReadSubtree%2A> を呼び出すことによって取得したリーダーは、内部クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-164">The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class.</span></span> <span data-ttu-id="ff1c2-165">内部クラスは、<xref:System.Xaml.XamlReader.ReadSubtree%2A> が呼び出されたときに使用されている <xref:System.Xaml.XamlReader> の実装に基づいて動作します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-165">The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called.</span></span> <span data-ttu-id="ff1c2-166">内部クラスの目的は、<xref:System.Xaml.XamlReader.Read%2A> と一般的なトラバーサルの動作をラップすることです。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-166">The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior.</span></span> <span data-ttu-id="ff1c2-167">このトラバーサルは、<xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> ペアまたは <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> ペアを追跡することで、意図したサブツリー内にとどまります。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-167">The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs.</span></span> <span data-ttu-id="ff1c2-168">また、エントリポイントで定義されているように、サブツリーの末尾にリーダーがある場合に、<xref:System.Xaml.XamlReader.Read%2A> および <xref:System.Xaml.XamlReader.IsEof%2A> `true` の `false` を正しく返します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-168">It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point.</span></span> <span data-ttu-id="ff1c2-169">一般に、サブツリーリーダーから呼び出す <xref:System.Xaml.XamlReader> API の実装は、トラバーサルの動作を除き、全体の <xref:System.Xaml.XamlReader> と同じであると想定しています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-169">In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.</span></span>  
  
 <span data-ttu-id="ff1c2-170">ただし、<xref:System.Xaml.XamlReader.ReadSubtree%2A> は virtual です。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-170">However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual.</span></span> <span data-ttu-id="ff1c2-171">したがって、特定の <xref:System.Xaml.XamlReader> 実装は、<xref:System.Xaml.XamlReader> 内部ラッパーの動作とは異なる動作を提供できます。また <xref:System.Xaml.XamlReader> の実装では、<xref:System.NotImplementedException> またはその他の例外を返すことによって、サブツリーリーダー機能を無効にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-171">Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-172">派生クラスで実装されている場合に、情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-172">When implemented in a derived class, gets an object that provides XAML schema context information for the information set.</span></span></summary>
        <value><span data-ttu-id="ff1c2-173">情報セットに XAML スキーマ コンテキスト情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-173">An object that provides XAML schema context information for the information set.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xamlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-174">現在のノードをスキップして、リーダーの位置を次のノードに進めます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-174">Skips the current node and advances the reader position to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-175">スキップされると、既定の <xref:System.Xaml.XamlReader.Skip%2A> 実装によって <xref:System.Xaml.XamlReader.Read%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-175">Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation.</span></span> <span data-ttu-id="ff1c2-176">通常、<xref:System.Xaml.XamlReader.Skip%2A> を呼び出して、<xref:System.Xaml.XamlReader.Read%2A> を順番に呼び出すことはありません。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-176">You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.</span></span>  
  
 <span data-ttu-id="ff1c2-177">既定の <xref:System.Xaml.XamlReader.Skip%2A> 実装では、リーダーの位置が現在どの <xref:System.Xaml.XamlReader.NodeType%2A> であるかに応じて異なるアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-177">In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on.</span></span> <span data-ttu-id="ff1c2-178">リーダーの位置が現在 <xref:System.Xaml.XamlNodeType.StartMember> または <xref:System.Xaml.XamlNodeType.StartObject>である場合、そのメンバーまたはオブジェクトはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-178">If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped.</span></span> <span data-ttu-id="ff1c2-179">その他の <xref:System.Xaml.XamlReader.NodeType%2A> 値については、現在の位置から <xref:System.Xaml.XamlReader.Read%2A> を呼び出した場合を除き、アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-179">For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.</span></span>  
  
 <span data-ttu-id="ff1c2-180">サブツリーリーダーは、動作制限付きで <xref:System.Xaml.XamlReader.Skip%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-180">Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions.</span></span> <span data-ttu-id="ff1c2-181">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-181">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 <span data-ttu-id="ff1c2-182"><xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> のノードツリーの動作は、XML に相当する <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>に基づいています。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-182">The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ff1c2-183"><xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> 動作の等価性に基づいて、<xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> 単一のエントリノードだけでなく、ノードとそのサブツリーをスキップします。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-183">Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=nameWithType> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=nameWithType> skips the node and its subtree, not just the single entry node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="xamlReader.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff1c2-184"><see cref="T:System.Xaml.XamlReader" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-184">Releases all resources used by the current instance of the <see cref="T:System.Xaml.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-185">派生クラスで実装されている場合に、現在のノードの <see cref="T:System.Xaml.XamlType" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-185">When implemented in a derived class, gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span></span></summary>
        <value><span data-ttu-id="ff1c2-186">現在のノードの <see cref="T:System.Xaml.XamlType" />。現在のリーダーの位置がオブジェクト上にない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-186">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff1c2-187">サブツリーリーダーは、動作制限付きで <xref:System.Xaml.XamlReader.Type%2A>を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-187">Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions.</span></span> <span data-ttu-id="ff1c2-188">詳細については、<xref:System.Xaml.XamlReader>の「サブツリーリーダー」セクションを参照するか、<xref:System.Xaml.XamlReader.ReadSubtree%2A>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-188">For more information, see the "Subtree Readers" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Type" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Type" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff1c2-189">派生クラスで実装された場合、現在のノードの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-189">When implemented in a derived class, gets the value of the current node.</span></span></summary>
        <value><span data-ttu-id="ff1c2-190">現在のノードの値。現在のリーダーの位置が <see cref="F:System.Xaml.XamlNodeType.Value" /> ノード型にない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ff1c2-190">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlObjectReader.Value" />
        <altmember cref="P:System.Xaml.XamlXmlReader.Value" />
      </Docs>
    </Member>
  </Members>
</Type>
