<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="877b9a0788232fa9dc54636c702886b6ab7e34d0" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952415" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>XAML 型のメンバーの XAML 型システム識別子を提供します。 識別子は、メンバー ノードの処理時 (XAML リーダーの位置が <see cref="F:System.Xaml.XamlNodeType.StartMember" /> のとき) および一般的な XAML 型システムのロジックに、XAML リーダーおよび XAML ライターによって使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember> は、XAML メンバーに関する情報を返すために3つの方法論を使用できます。標準の共通言語ランタイム (CLR) リフレクションです。最適化されたビットフラグを使用する内部 Api を呼び出す参照専用のリフレクション技法。または、可能な <xref:System.Xaml.XamlMember> サブクラスによって提供される `Lookup*` API の仮想オーバーライドを呼び出します。 .NET Framework XAML サービス Api と <xref:System.Xaml.XamlMember> API のほとんどの用途では、既定の XAML スキーマコンテキストを使用します。 .NET Framework XAML サービスの既定の XAML スキーマコンテキストでは、型システムの CLR バッキングが使用されます。 これにより、XAML リーダーと XAML ライターは、CLR とそのリフレクション手法で定義または使用可能な任意の型またはメンバーを操作できます。  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a>Lookup * Api と XamlMember の派生クラス  
 <xref:System.Xaml.XamlMember> は、派生クラスがオーバーライドする可能性のあるいくつかの仮想メンバーを定義します。 これらのメンバーには、常に文字列 `Lookup`で始まる名前が付いています。 API 名の残りの部分は、仮想メソッドが影響するプロパティを参照します。 たとえば、<xref:System.Xaml.XamlMember> 派生クラスは <xref:System.Xaml.XamlMember.LookupTargetType%2A> をオーバーライドして、派生クラスで <xref:System.Xaml.XamlMember.TargetType%2A> が返す基本定義プロパティの内容に影響を与える可能性があります。 関連する `Lookup*` メソッドのドキュメントを読むことで、<xref:System.Xaml.XamlMember> または既存の派生クラスのプロパティの戻り値を予測できます。  
  
 `Lookup*` メソッドの目的は、<xref:System.Xaml.XamlMember> 基底クラスを組み込む XAML 型システムの拡張手法を提供することです。 <xref:System.Xaml.XamlMember> から派生させ、`Lookup` 仮想メンバーをオーバーライドすることにより、バッキング型システムまたはテクノロジの詳細に関連付けられていない xaml 型システムで xaml スキーマの xaml メンバーの概念を定義できます。 このスキームでは、指定された XAML スキーマコンテキストを使用することもできます。それでも、必要な結果を返すことができます。  
  
 例として、<xref:System.Xaml.XamlMember> プロパティ <xref:System.Xaml.XamlMember.IsWritePublic%2A>を考えてみます。 このプロパティは、シリアル化のために <xref:System.Xaml.XamlWriter> を使用するなどの操作で、ターゲットオブジェクトにこのメンバーの値を書き込むことができることを呼び出し元に通知します。 既定の実装では、バッキング CLR <xref:System.Type> とそのメンバー (<xref:System.Reflection.MemberInfo>) に対してリフレクション手法を使用して、メンバーが書き込み可能かどうかを判断します。 したがって、既定では、XAML 型システムは CLR 型システムに依存します。 ただし、API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>をオーバーライドすることにより、<xref:System.Xaml.XamlMember.IsWritePublic%2A> の XAML 型システムレポートのこの依存関係を削除できます。 オーバーライドでは、テクノロジに固有のメタデータ、固定の XAML 語彙用に最適化されたマスター参照テーブル、xaml ボキャブラリで XAML メンバーを書き込み可能にするかどうかを決定するためのさまざまな方法など、他の決定を使用できます。  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a>XAML スキーマコンテキストなしで XamlMember を構築しています  
 <xref:System.Xaml.XamlMember> のほとんどのコンストラクターでは、初期化の一部として <xref:System.Xaml.XamlSchemaContext> が必要です。 <xref:System.Xaml.XamlSchemaContext> は、バッキング型から転送される情報の取得など、多くの内部 <xref:System.Xaml.XamlSchemaContext> 操作にも必要です。 <xref:System.Xaml.XamlMember> API を使用する場合は、通常、<xref:System.Xaml.XamlWriter>などの周囲の構成要素から使用できる <xref:System.Xaml.XamlSchemaContext> があります。 この場合は、XAML スキーマコンテキストを必要とするすべての XAML 型システム呼び出しに <xref:System.Xaml.XamlSchemaContext> 参照を渡すことができます。  
  
 1つの特定のコンストラクター <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>には、<xref:System.Xaml.XamlSchemaContext>は必要ありません。 ただし、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。  
  
 <xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、このようなメンバーをオブジェクトグラフに書き込むことはできません。 .NET Framework XAML サービスの実装を使用すると、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A>  
  
 実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合、または <xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A> に対して `true` の値を持つ <xref:System.Xaml.XamlMember> を構築しないでください。 たとえば、実装によっては次の1つ以上が当てはまります。  
  
-   XAML スキーマコンテキストは、後で使用できます。  
  
-   メンバー呼び出し元パターンを使用します。  
  
-   カスタム XAML ライターで <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> を意図的にオーバーライドします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">XAML ノード ストリームの構造と概念について</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <summary>CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがイベント (イベントハンドラーの接続ポイントプロパティ) を表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <summary>CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがプロパティを表している (特に、イベントハンドラーの接続ではない) 場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <param name="invoker"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
        <summary>CLR 型システム <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがイベント (またはイベントハンドラーの接続ポイントプロパティ) を表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <param name="invoker"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
        <summary>リフレクション <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、メンバーがプロパティを表し、イベントハンドラー接続でない場合にのみ使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">アタッチ可能なイベントの文字列名。</param>
        <param name="adder">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <summary>アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがアタッチ可能なイベントメンバーを表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">メンバーの文字列名。</param>
        <param name="declaringType">宣言している型に対する <see cref="T:System.Xaml.XamlType" /> 情報。</param>
        <param name="isAttachable">メンバーがアタッチ可能であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>文字列名と宣言 <see cref="T:System.Xaml.XamlMember" /> 情報を使用して、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。 このシグネチャで作成された <see cref="T:System.Xaml.XamlMember" /> には重要な制限があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。  
  
 <xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、このようなメンバーをオブジェクトグラフに書き込むことはできません。 .NET Framework XAML サービスの実装を使用すると、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A>  
  
 実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合や、<xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A>`true` で <xref:System.Xaml.XamlMember> を構築しないでください。 たとえば、実装によっては次の1つ以上が当てはまります。  
  
-   XAML スキーマコンテキストは、後で使用できます。  
  
-   メンバー呼び出し元パターンを使用します。  
  
-   カスタム XAML ライターで <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> を意図的にオーバーライドします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 、または <paramref name="declaringType" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">アタッチ可能なプロパティの文字列名。</param>
        <param name="getter">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="setter">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <summary>アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがアタッチ可能なプロパティを表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName">アタッチ可能なイベントの文字列名。</param>
        <param name="adder">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <param name="invoker"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
        <summary>アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがアタッチ可能なイベントメンバーを表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName">アタッチ可能なプロパティの文字列名。</param>
        <param name="getter">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="setter">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</param>
        <param name="schemaContext">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</param>
        <param name="invoker"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</param>
        <summary>アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メンバーがアタッチ可能なプロパティメンバーを表す場合は、このコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、この値は初期化中に設定され、通常は `null`ません。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.DeclaringType%2A> 情報は、初期化のためにコンストラクターによって渡すことができます。 基本コンストラクターに直接を呼び出すことによって、<xref:System.Xaml.XamlMember> 派生クラスの初期化では、基本クラスで行われた値チェックの一部を省略できます。 したがって、派生初期化では、XAML メンバーの報告される型とメンバーの関係情報を変更して、基になる CLR 宣言の型システム情報との間に予期しない方法で配置されないようにすることができます。 型情報を宣言するセキュリティクリティカルなチェックの場合は、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
        <value>ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.DeferringLoader%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> または特定のオーバーライドが呼び出されます。 この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を取得します。 これらは、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーを報告します。</summary>
        <value>一連の <see cref="T:System.Xaml.XamlMember" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.DependsOn%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupDependsOn%2A> または特定のオーバーライドが呼び出されます。 この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。  
  
 `DependsOn` パターンは、一般的な XAML 規則に意図的に矛盾するオブジェクトモデルのケースに適用できます。 一般的な XAML ルールでは、初期化テキスト (または XAML 2009 のファクトリメソッド) として渡されない型のメンバーは、任意の順序で割り当てることができなければなりません。 メンバーに `DependsOn` パターンを適用することで、このメンバーの前に参照先のメンバーを常に処理するように XAML ライターに指示できます。 現在のメンバーの値に、他のメンバーが設定された後にのみ使用可能なコンテキストやその他の情報が必要な場合に、このパターンを適用できます。  
  
 `DependsOn` パターンは慎重に適用し、アーキテクチャの目的で使用されるプロパティのシナリオ用に予約する必要があります。 依存関係の数が多いと、XAML 処理の速度が低下する可能性があります。 また、循環依存関係を生成することもできます。この場合、XAML 処理の動作は定義されていません。  
  
 例 `DependsOn` WPF のシナリオには、<xref:System.Windows.Controls.ControlTemplate> と <xref:System.Windows.DataTemplate>、<xref:System.Windows.Trigger>、<xref:System.Windows.Setter>上の特定のプロパティが含まれます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このオブジェクトと比較するオブジェクトです。</param>
        <summary>現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
        <returns>現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other">このオブジェクトと比較するオブジェクトです。</param>
        <summary>現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
        <returns>現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このオブジェクトのハッシュ コードを返します。</summary>
        <returns>整数のハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この XAML メンバーが存在することのできる XAML 名前空間のリストを返します。</summary>
        <returns>文字列としての XAML 名前空間識別子のリスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装は、この <xref:System.Xaml.XamlMember>に関連付けられている <xref:System.Xaml.XamlMember.DeclaringType%2A> から <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> 呼び出し結果を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> の実装を取得します。</summary>
        <value>この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> 実装。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Invoker` パターンは、高度な XAML 型システム拡張手法です。 `Invoker` パターンを使用すると、さまざまなスキーマ型のマッピング動作を挿入する一方で、.NET Framework XAML サービスから XAML 型システム定義を使用することができます。  
  
 <xref:System.Xaml.XamlMember.LookupInvoker%2A> のオーバーライドで `null`が返された場合、または既定の実装がこの <xref:System.Xaml.XamlMember>の <xref:System.Xaml.XamlMember.UnderlyingMember%2A> を持たないために `null` を返した場合、<xref:System.Xaml.XamlMember.Invoker%2A> プロパティは <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>を返します。  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> は既定値です。 これは、.NET Framework XAML サービスと既定の XAML スキーマコンテキストを使用するほとんどの操作に当てはまります。 XAML 型システムエンティティの構築用に特定のオーバーライド `Invoker` パターンが渡されることはありません。  
  
 <xref:System.Xaml.XamlMember.Invoker%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupInvoker%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告するかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsAmbient%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> または特定のオーバーライドが呼び出されます。 この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない実装で発生します。  
  
 アンビエントプロパティのチェックは、通常、XAML 処理ロジックの一部であり、型の修飾子のアンビエント使用に依存するオブジェクトと値が正しく機能することを確認します。 .NET Framework XAML サービス Api と既定の XAML スキーマコンテキストは、<xref:System.Windows.Markup.AmbientAttribute>の属性に基づいてこの値を設定します。 <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> の既定の実装では、この既存の <xref:System.Windows.Markup.AmbientAttribute> 手法が使用され、<xref:System.Windows.Markup.AmbientAttribute> がメンバー宣言に存在する場合は `true` が返されます。  
  
 <xref:System.Windows.Markup.AmbientAttribute> は、<xref:System.Windows.Application>、<xref:System.Windows.Setter>、<xref:System.Windows.Style>など、いくつかの WPF の種類のメンバーにあります。 また、<xref:System.Windows.ResourceDictionary> 型にもあります。これは、メンバーが明確に属性付けされていない場合でも、<xref:System.Windows.ResourceDictionary> を型として使用するすべてのメンバーをアンビエントと見なす必要があることに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsAttachable%2A> 値は、<xref:System.Xaml.XamlMember>を構築するために使用されたコンストラクターに基づいて初期化されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsDirective%2A> 値は、<xref:System.Xaml.XamlMember>を構築するために使用されたコンストラクターに基づいて初期化されます。 基本 <xref:System.Xaml.XamlMember> コンストラクターは、<xref:System.Xaml.XamlMember.IsDirective%2A> が `false`するように初期化します。 ただし、<xref:System.Xaml.XamlDirective> クラス (<xref:System.Xaml.XamlMember> 派生クラス) によって、<xref:System.Xaml.XamlMember.IsDirective%2A> が `true`されるように初期化されます。  
  
 XAML メンバーのカスタム XAML スキーマクラスの呼び出し元に `true` として <xref:System.Xaml.XamlMember.IsDirective%2A> を報告する場合は、その動作を有効にする唯一の方法であるため、<xref:System.Xaml.XamlDirective> から派生していることを確認してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がイベント メンバーを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> がイベントを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsEvent%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsEvent%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が <see cref="P:System.Xaml.XamlMember.Name" /> として有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が有効な <see langword="true" /> 文字列で初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">XamlName</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用のメンバーを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsReadOnly%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="get" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsReadPublic%2A> 値は、<xref:System.Xaml.XamlMember.DeclaringType%2A> がパブリックであるかどうかを確認します。 <xref:System.Xaml.XamlMember.DeclaringType%2A> が非パブリックである場合は、`get` アクセサーを実用的な方法で呼び出すことはできず、<xref:System.Xaml.XamlMember.IsReadPublic%2A> は `false`を返します。  
  
 <xref:System.Xaml.XamlMember.IsReadPublic%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> または特定のオーバーライドが呼び出されます。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> メソッドは仮想であるため、オーバーライドできます。 オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。 アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーであるかどうかを示す値を取得します。</summary>
        <value>メンバーを解決できない場合は <see langword="true" />。メンバーを解決できる場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。  
  
 <xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、<xref:System.Xaml.XamlMember.IsUnknown%2A> の `true` を持つ <xref:System.Xaml.XamlMember> をオブジェクトグラフに書き込むことはできません。 .NET Framework XAML サービス Api の既定の実装では、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A>  
  
 実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合、または <xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A> に対して `true` の値を持つ <xref:System.Xaml.XamlMember> を構築しないでください。  
  
 <xref:System.Xaml.XamlMember.IsUnknown%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用のメンバーを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsWriteOnly%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="set" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.IsWritePublic%2A> 値は、<xref:System.Xaml.XamlMember.DeclaringType%2A> が決定の一部として公開されているかどうかを考慮します。 <xref:System.Xaml.XamlMember.DeclaringType%2A> が非パブリックである場合は、`set` アクセサーを実用的な方法で呼び出すことはできず、<xref:System.Xaml.XamlMember.IsWritePublic%2A> は `false`を返します。  
  
 <xref:System.Xaml.XamlMember.IsWritePublic%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> または特定のオーバーライドが呼び出されます。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> メソッドは仮想であるため、オーバーライドできます。 オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。 アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</summary>
        <returns><see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドをオーバーライドして、CLR 属性値を取得する別の方法で内部リフレクションを提供します。 オーバーライドがない場合、内部リフレクタは、<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>の呼び出しなどの一般的な CLR リフレクションロジックを使用します。  
  
 既定の実装では、 `null`が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
        <returns>ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.DeferringLoader%2A> プロパティから値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember.DeferringLoader%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。  
  
 既定の実装は、<xref:System.Windows.Markup.XamlDeferLoadAttribute> を読み取るか、または宣言する型の <xref:System.Xaml.XamlDeferringLoader> を使用することによって、オブジェクトを返します。 どちらのオブジェクトも使用できない場合、このメソッドは `null`を返す可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を返します。 一覧の項目では、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーが報告されます。</summary>
        <returns>一連の <see cref="T:System.Xaml.XamlMember" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.DependsOn%2A> プロパティから値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember.DependsOn%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。  
  
 このケースでは、WPF XAML リーダーとライター実装の属性が <xref:System.Windows.Markup.DependsOnAttribute>になります。 既定の実装では、この既存の <xref:System.Windows.Markup.DependsOnAttribute> 手法が使用されます。  
  
 この目的に <xref:System.Windows.Markup.DependsOnAttribute> を使用していない場合に、独自の手法でプロパティ処理順序を示す手法を置き換える場合は、このメソッドをオーバーライドします。 プロパティの処理順序をサポートする予定がない場合は、既定の実装を使用できます。これは、適切な結果が返されないためです。  
  
 リストは読み取り専用です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
        <returns>この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> の <see cref="T:System.Xaml.XamlMember" /> 情報、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlMember.Invoker%2A>の呼び出しによって呼び出されます。  
  
 既定の実装では、初期 <xref:System.Xaml.Schema.XamlMemberInvoker>を渡すコンストラクターのいずれかを使用して <xref:System.Xaml.XamlMember> を構築する必要はありません。 ただし、<xref:System.Xaml.XamlMember>には <xref:System.Xaml.XamlMember.UnderlyingMember%2A> 値が存在している必要があります。それ以外の場合、既定の実装では `null`が返されます。  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> から派生し、派生クラスを返す場合は、このメソッドをオーバーライドします。 `null`を返すと、<xref:System.Xaml.XamlMember.Invoker%2A> 呼び出し元に <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告されているかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アンビエント XAML プロパティ情報を確認する内部呼び出しによって呼び出されます。 アンビエントプロパティの動作は、XAML リーダーと XAML ライターのパブリック API の動作で使用されます。 <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> を参照する内部呼び出しは、通常、型修飾のアンビエント使用に依存するオブジェクトと値が正しく機能することを確認するために、XAML 処理ロジックの一部です。 XAML サービスの .NET Framework 既定の実装では、属性を使用して、バッキング型のリフレクションからこの情報を取得します。 具体的には、メンバー定義に <xref:System.Windows.Markup.AmbientAttribute> が存在する場合は、既定の実装によって <xref:System.Windows.Markup.AmbientAttribute> がチェックされ、<xref:System.Xaml.XamlMember.LookupIsAmbient%2A> の `true` が返されます。  
  
 この目的に <xref:System.Windows.Markup.AmbientAttribute> を使用していない場合に、アンビエント XAML プロパティを独自の手法で示す手法を置き換える場合は、このメソッドをオーバーライドします。  
  
 WPF からの Api の例 <xref:System.Windows.Markup.AmbientAttribute> の属性は <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> および <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すことを報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が <xref:System.Reflection.EventInfo>型であるかどうかがチェックされ、存在する場合は `true`が返されます。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsEvent%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、または、特定のメタデータを使用できる場合に、XAML 型システム表現をケースごとに決定するために、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が目的の読み取り専用プロパティを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> を目的の読み取り専用プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装は、<xref:System.Xaml.XamlMember.UnderlyingMember%2A> 存在する場合は `true` を返しますが、内部リフレクションによって決定されたパブリック `set` アクセサーは存在しません。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsReadOnly%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、または、特定のメタデータを使用できる場合に、XAML 型システム表現をケースごとに決定するために、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="get" /> アクセサーを持つプロパティを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="true" /> アクセサーを持つプロパティを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.IsWriteOnly%2A>の否定に基づいて結果が返され、その順序で処理されます。  
  
 <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> は、メンバー自体がパブリックであるかどうかを返します。このメソッドは、非パブリックな宣言型のパブリックメンバーの `true` を返します。 宣言型の可視性も考慮する必要がある場合は、代わりに <xref:System.Xaml.XamlMember.IsReadPublic%2A> を使用します。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsReadPublic%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> メソッドは仮想であるため、オーバーライドできます。 オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。 アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> が解決できないメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsUnknown%2A>から値を取得したときに呼び出すことができます。 既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.UnderlyingMember%2A>の `null` 値のチェックに基づいて、その順序で処理される結果が返されます。  
  
 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> が、パブリックの <see langword="set" /> アクセサーを持ちパブリックの <see langword="get" /> アクセサーを持たないメンバーを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装は、内部リフレクションによって決定されるパブリック `set` アクセサーと非パブリック `get` アクセサーを持つ <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が存在する場合に `true` を返します。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsWriteOnly%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> が書き込み可能なメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.IsReadOnly%2A>の否定のいずれかに基づいて結果が返され、その順序で処理されます。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsWritePublic%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> メソッドは仮想であるため、オーバーライドできます。 オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。 アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ拡張の左角かっこと右角かっこ文字を返します。</summary>
        <returns>左角かっこと右角かっこ文字を含むコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
        <returns><see cref="T:System.Xaml.XamlMember" /> が存在できる型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、アタッチ可能なメンバーとアタッチできないメンバーが区別されます。 アタッチできないメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は常に <xref:System.Xaml.XamlMember.DeclaringType%2A>を返します。 アタッチ可能なメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は <xref:System.Xaml.XamlMember.UnderlyingMember%2A> アクセサーパラメーター型の検査に基づいて結果を返し、XAML スキーマコンテキストに基づいてその型を解釈します。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.TargetType%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.Type%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember.Type%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。  
  
 既定の実装では、この <xref:System.Xaml.XamlMember> がプロパティ、メソッド、またはイベントを表すかどうかに基づいて、返された <xref:System.Xaml.XamlType> に対して異なるコードパスと概念上の意味を使用します。  
  
-   プロパティの場合、返される <xref:System.Xaml.XamlType> は、プロパティを設定する型か、プロパティによって返される型です。  
  
-   イベントの場合、返される <xref:System.Xaml.XamlType> は、必要なイベントハンドラーの型 (CLR 実装のデリゲート) です。  
  
-   メソッドの場合、<xref:System.Xaml.XamlType> は戻り値の型です。  
  
 どちらの場合も、XAML スキーマコンテキストは、基になるシステム型から XAML 型を評価するために使用されます。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.Type%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている型コンバーターの実装を返します。</summary>
        <returns><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> インスタンス、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、次のロジックと処理順序が使用されます。  
  
-   属性がメンバーレベル (<xref:System.ComponentModel.TypeConverterAttribute>) に存在する場合、属性情報は、XAML スキーマコンテキストに対して <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> を呼び出すために使用されます。  
  
-   <xref:System.Xaml.XamlMember.Type%2A> が有効な場合は、型に関連付けられている型コンバーターが返されます。  
  
-   メンバーがイベントである場合は、イベント固有の型コンバーターが返されます。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.TypeConverter%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="get" /> アクセサーを返します。</summary>
        <returns>関連付けられている <see langword="get" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、<xref:System.Xaml.XamlMember.UnderlyingMember%2A> プロパティが <xref:System.Reflection.PropertyInfo> として解釈され、<xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> の値 (パラメーターが `true`に設定されています) が返されます。これは、返されたメソッドが非パブリックになる可能性があることを意味します。 この動作により、特定の場合に `null` が発生する可能性があります。 関連付けられたアクセサーが存在しない場合、またはメンバーがプロパティではない場合を含みます。  
  
 このメソッドは、呼び出し元が、関連付けられた <xref:System.Xaml.Schema.XamlMemberInvoker>の <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> プロパティから値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。 すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
        <returns>この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、構築に基づく基になるメンバー情報が返されます。 基になるメンバーを設定するのに十分な情報が提供されていないシグネチャを使用して <xref:System.Reflection.MemberInfo> オブジェクトが構築されている場合、このメソッドは `null`を返します。  
  
 基になるメンバーが構築中に設定された場合は、このメソッドを呼び出す必要はありません。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.UnderlyingMember%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。 すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="set" /> アクセサーを返します。</summary>
        <returns>関連付けられている <see langword="set" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が <xref:System.Reflection.PropertyInfo> として解釈され、<xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> の値 (パラメーターが `true`に設定されている) が返されます。これは、返されたメソッドが非パブリックになる可能性があることを意味します。 これにより、そのようなアクセサーがない場合や、メンバーがプロパティではない場合など、特定のケースで `null` が発生する可能性があります。  
  
 このメソッドは、呼び出し元が、関連付けられた <xref:System.Xaml.Schema.XamlMemberInvoker>の <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> から値を取得したときに呼び出されます。<xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。 すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている値シリアライザーの実装を返します。</summary>
        <returns><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" /> インスタンス、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、次のロジックと処理順序が使用されます。  
  
-   属性がメンバーレベル (<xref:System.Windows.Markup.ValueSerializerAttribute>) に存在する場合、属性情報は、XAML スキーマコンテキストに対して <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> を呼び出すために使用されます。  
  
-   <xref:System.Xaml.XamlMember.Type%2A> が有効な場合は、型に関連付けられている値コンバーターが返されます。  
  
-   前の条件が適用されない場合は、`null` が返されます。  
  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.ValueSerializer%2A>から値を取得したときに呼び出されます。 <xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ拡張の左角かっこと右角かっこ文字を定義します。</summary>
        <value>左角かっこと右角かっこ文字を含むコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は常に構築時に設定されます。 <xref:System.Xaml.XamlMember> によって実装されるコンストラクターは、通常、初期名が指定されていない場合に例外をスローします。したがって、既定の .NET Framework XAML サービスの実装を使用している場合は、このプロパティを `null` または空の文字列にすることは想定されていません。  
  
 CLR 型およびメンバーの[XamlName 文法](/dotnet/framework/xaml-services/xamlname-grammar)と名前付け規則は、完全な積集合ではありません。 CLR で有効なメンバー名を宣言することはできますが、XAML の名前付けでは無効です。 可能な場合は、この状況を回避する必要があります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3">XamlName</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
        <param name="xamlMember2"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が同一かどうかを判断します。</summary>
        <returns><paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
        <param name="xamlMember2"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が異なるかどうかを判断します。</summary>
        <returns><paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間を識別する単一の XAML 名前空間の URI を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間の識別子を示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> プロパティは、<xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> の呼び出しと同じ値を提供し、返された一覧から最初の値の文字列を取得します。 XAML 名前空間の情報を保持するテキストまたはその他の表現にメンバーを書き戻す場合は、優先する XAML 名前空間を使用する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビジュアルなデザイナーでのメンバーの処理方法を示す <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値を取得します。</summary>
        <value><see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列挙体の値。 既定では、 <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</summary>
        <value><see cref="T:System.Xaml.XamlMember" /> が存在できる型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値は、アタッチ可能なメンバーとアタッチできないメンバーで異なります。 アタッチできないメンバーの場合、<xref:System.Xaml.XamlMember.TargetType%2A> は <xref:System.Xaml.XamlMember.DeclaringType%2A>を返します。 アタッチ可能なメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は、このロジックに基づく結果を返します。  
  
-   リフレクションがバッキング (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`) を解決できない場合、このメソッドはジェネリックオブジェクト型を表す内部定数を返します。  
  
-   前の条件が適用されない場合は、<xref:System.Xaml.XamlMember.LookupTargetType%2A> が呼び出されます。 既定の実装は、`get` と `set` アクセサーを実装するメソッドの検査に基づく <xref:System.Xaml.XamlType> を返します。 クラスは、アタッチ可能なメンバーのターゲット型を報告する可能性のある他のメタデータフォームなど、別の動作を使用するように <xref:System.Xaml.XamlMember.LookupTargetType%2A> をオーバーライドすることがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> の文字列表現を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> の文字列表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は <xref:System.Xaml.XamlMember.Name%2A>を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
        <value>メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.Type%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupType%2A> または特定のオーバーライドが呼び出されます。 このエラーは、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。  
  
 既定の動作 (<xref:System.Xaml.XamlMember.LookupType%2A> はオーバーライドされません) では、返される <xref:System.Xaml.XamlType> の概念上の意味が異なる場合があります。 適用される意味は、次の一覧に示すように、この <xref:System.Xaml.XamlMember> がプロパティ、メソッド、またはイベントを表すかどうかによって異なります。  
  
-   プロパティの場合、返される <xref:System.Xaml.XamlType> は、プロパティを設定する型か、プロパティによって返される型です。  
  
-   イベントの場合、返される <xref:System.Xaml.XamlType> は、必要なイベントハンドラーの型 (CLR 実装のデリゲート) です。  
  
-   メソッドの場合、<xref:System.Xaml.XamlType> はそのメソッドの戻り値の型であり、`null`可能性があります。  
  
 どちらの場合も、XAML スキーマコンテキストは、バッキング型から XAML 型を評価するために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML で宣言されたオブジェクトの型変換の構築に使用できる <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。</summary>
        <value>ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.TypeConverter%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> または特定のオーバーライドが呼び出されます。 この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。  
  
 <xref:System.Xaml.XamlMember.TypeConverter%2A> に対して null 以外のプロパティ値を返す実装は、必ずしも動作 <xref:System.ComponentModel.TypeConverter>ではありません。 次に示すのは、<xref:System.Xaml.XamlMember.TypeConverter%2A> で使用できる null 以外の戻り値の一覧と、これらの値が表すものです。  
  
-   戻り値は、そのメンバーに対して特に属性が付けられている型コンバーターを、コンバーターの対象の型に対して報告します。 通常、この動作は、型コンバーターをインスタンス化し、メソッドを呼び出すために、ほとんどの XAML 型システムと XAML プロセッサが検索します。  
  
-   戻り値は、組み込み値コンバーターを報告します。 これらのコンバーターは、XAML ライターによって実行される特定の内部操作に対して存在します。 特に、これらの組み込み値コンバーターは、生の属性文字列値を XAML 言語レベルのプリミティブに変換します。 .NET Framework XAML サービスの実装では、多くの場合、これらの組み込み型変換はシステムアセンブリで定義されている型コンバーターに転送されます。 たとえば、<xref:System.Int32> 値の変換には、組み込みの転送変換があるため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> 値は <xref:System.ComponentModel.Int32Converter>を参照します。  
  
-   戻り値は、制約のないオブジェクトモデルの特殊なケースを報告します。つまり、<xref:System.Xaml.XamlMember> の <xref:System.Xaml.XamlMember.Type%2A> の値は <xref:System.Object>です。 この場合、<xref:System.Xaml.Schema.XamlValueConverter%601> は <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> が {`Object}`であることを報告します。 ただし、この変換を実行するために使用できる実際の型またはインスタンスがないため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> が `null` ます。 代わりに、特定のテクノロジのランタイムによってオブジェクトグラフの処理が決定されると、実行時までオブジェクトモデルの動作を決定することはできません。  
  
 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>から作業中の <xref:System.ComponentModel.TypeConverter> にアクセスできる場合は、その変換メソッドを呼び出すことができます。 ただし、多くの変換メソッドは、サービスコンテキストに依存します。 型コンバーターがオブジェクトグラフのオブジェクトの一般的な書き込みに使用するのと同じサービスコンテキストを使用できない場合、コンバーターメソッドは例外をスローすることがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Reflection.MemberInfo" />、<see cref="T:System.Reflection.PropertyInfo" />、または <see cref="T:System.Reflection.MethodInfo" /> によって構築されるメンバーで使用できる CLR 型システム <see cref="T:System.Reflection.EventInfo" /> を取得します。</summary>
        <value>初期コンストラクター パラメーターからキャストされた CLR 型システム <see cref="T:System.Reflection.MemberInfo" /> の情報。 <see cref="T:System.Xaml.XamlMember" /> シグネチャを使用して構築された <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> は、<see langword="null" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.UnderlyingMember%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> または特定のオーバーライドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの値のシリアル化に使用されます。</summary>
        <value>ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlMember.ValueSerializer%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> または特定のオーバーライドが呼び出されます。 この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。  
  
 <xref:System.Xaml.XamlMember.ValueSerializer%2A> に対して null 以外のプロパティ値を返すケースは、必ずしも動作 <xref:System.Windows.Markup.ValueSerializer>であるとは限りません。 <xref:System.Xaml.XamlMember.TypeConverter%2A>を参照してください。<xref:System.Xaml.XamlMember.ValueSerializer%2A>にも同じ考慮事項が適用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
