<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8c3247d095faa010b24f0fc0d6926363fa23b5d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78685142" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="101cc-101">XAML 型のメンバーの XAML 型システム識別子を提供します。</span><span class="sxs-lookup"><span data-stu-id="101cc-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="101cc-102">識別子は、メンバー ノードの処理時 (XAML リーダーの位置が <see cref="F:System.Xaml.XamlNodeType.StartMember" /> のとき) および一般的な XAML 型システムのロジックに、XAML リーダーおよび XAML ライターによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-103"><xref:System.Xaml.XamlMember> は、XAML メンバーに関する情報を返すために3つの方法論を使用できます。標準の共通言語ランタイム (CLR) リフレクションです。最適化されたビットフラグを使用する内部 Api を呼び出す参照専用のリフレクション技法。または、可能な <xref:System.Xaml.XamlMember> サブクラスによって提供される `Lookup*` API の仮想オーバーライドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="101cc-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="101cc-104">.NET Framework XAML サービス Api と <xref:System.Xaml.XamlMember> API のほとんどの用途では、既定の XAML スキーマコンテキストを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="101cc-105">.NET Framework XAML サービスの既定の XAML スキーマコンテキストでは、型システムの CLR バッキングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="101cc-106">これにより、XAML リーダーと XAML ライターは、CLR とそのリフレクション手法で定義または使用可能な任意の型またはメンバーを操作できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="101cc-107">Lookup \* Api と XamlMember の派生クラス</span><span class="sxs-lookup"><span data-stu-id="101cc-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="101cc-108"><xref:System.Xaml.XamlMember> は、派生クラスがオーバーライドする可能性のあるいくつかの仮想メンバーを定義します。</span><span class="sxs-lookup"><span data-stu-id="101cc-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="101cc-109">これらのメンバーには、常に文字列 `Lookup`で始まる名前が付いています。</span><span class="sxs-lookup"><span data-stu-id="101cc-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="101cc-110">API 名の残りの部分は、仮想メソッドが影響するプロパティを参照します。</span><span class="sxs-lookup"><span data-stu-id="101cc-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="101cc-111">たとえば、<xref:System.Xaml.XamlMember> 派生クラスは <xref:System.Xaml.XamlMember.LookupTargetType%2A> をオーバーライドして、派生クラスで <xref:System.Xaml.XamlMember.TargetType%2A> が返す基本定義プロパティの内容に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="101cc-112">関連する `Lookup*` メソッドのドキュメントを読むことで、<xref:System.Xaml.XamlMember> または既存の派生クラスのプロパティの戻り値を予測できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="101cc-113">`Lookup*` メソッドの目的は、<xref:System.Xaml.XamlMember> 基底クラスを組み込む XAML 型システムの拡張手法を提供することです。</span><span class="sxs-lookup"><span data-stu-id="101cc-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="101cc-114"><xref:System.Xaml.XamlMember> から派生させ、`Lookup` 仮想メンバーをオーバーライドすることにより、バッキング型システムまたはテクノロジの詳細に関連付けられていない xaml 型システムで xaml スキーマの xaml メンバーの概念を定義できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="101cc-115">このスキームでは、指定された XAML スキーマコンテキストを使用することもできます。それでも、必要な結果を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="101cc-116">例として、<xref:System.Xaml.XamlMember> プロパティ <xref:System.Xaml.XamlMember.IsWritePublic%2A>を考えてみます。</span><span class="sxs-lookup"><span data-stu-id="101cc-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="101cc-117">このプロパティは、シリアル化のために <xref:System.Xaml.XamlWriter> を使用するなどの操作で、ターゲットオブジェクトにこのメンバーの値を書き込むことができることを呼び出し元に通知します。</span><span class="sxs-lookup"><span data-stu-id="101cc-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="101cc-118">既定の実装では、バッキング CLR <xref:System.Type> とそのメンバー (<xref:System.Reflection.MemberInfo>) に対してリフレクション手法を使用して、メンバーが書き込み可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="101cc-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="101cc-119">したがって、既定では、XAML 型システムは CLR 型システムに依存します。</span><span class="sxs-lookup"><span data-stu-id="101cc-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="101cc-120">ただし、API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>をオーバーライドすることにより、<xref:System.Xaml.XamlMember.IsWritePublic%2A> の XAML 型システムレポートのこの依存関係を削除できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="101cc-121">オーバーライド内では、テクノロジに固有のメタデータ、固定の XAML 語彙用に最適化されたマスター参照テーブル、または XAML メンバーがで書き込み可能かどうかを判断するためのさまざまな方法など、他の決定を使用できます。XAML ボキャブラリ。</span><span class="sxs-lookup"><span data-stu-id="101cc-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="101cc-122">XAML スキーマコンテキストなしで XamlMember を構築しています</span><span class="sxs-lookup"><span data-stu-id="101cc-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="101cc-123"><xref:System.Xaml.XamlMember> のほとんどのコンストラクターでは、初期化の一部として <xref:System.Xaml.XamlSchemaContext> が必要です。</span><span class="sxs-lookup"><span data-stu-id="101cc-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="101cc-124"><xref:System.Xaml.XamlSchemaContext> は、バッキング型から転送される情報の取得など、多くの内部 <xref:System.Xaml.XamlSchemaContext> 操作にも必要です。</span><span class="sxs-lookup"><span data-stu-id="101cc-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="101cc-125"><xref:System.Xaml.XamlMember> API を使用する場合は、通常、<xref:System.Xaml.XamlWriter>などの周囲の構成要素から使用できる <xref:System.Xaml.XamlSchemaContext> があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="101cc-126">この場合は、XAML スキーマコンテキストを必要とするすべての XAML 型システム呼び出しに <xref:System.Xaml.XamlSchemaContext> 参照を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="101cc-127">1つの特定のコンストラクター <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>には、<xref:System.Xaml.XamlSchemaContext>は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="101cc-128">ただし、<xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-129"><xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、このようなメンバーをオブジェクトグラフに書き込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="101cc-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="101cc-130">.NET Framework XAML サービスの実装を使用すると、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A></span><span class="sxs-lookup"><span data-stu-id="101cc-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-131">実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合、または <xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A> に対して `true` の値を持つ <xref:System.Xaml.XamlMember> を構築しないでください。</span><span class="sxs-lookup"><span data-stu-id="101cc-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="101cc-132">たとえば、実装によっては次の1つ以上が当てはまります。</span><span class="sxs-lookup"><span data-stu-id="101cc-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="101cc-133">XAML スキーマコンテキストは、後で使用できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="101cc-134">メンバー呼び出し元パターンを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="101cc-135">カスタム XAML ライターで <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> を意図的にオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="101cc-136">XAML ノード ストリームの構造と概念について</span><span class="sxs-lookup"><span data-stu-id="101cc-136">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="101cc-137"><see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="101cc-138">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-139">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="101cc-140">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-141">メンバーがイベント (イベントハンドラーの接続ポイントプロパティ) を表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="101cc-142">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-143">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="101cc-144">CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> を使用して、<see cref="T:System.Xaml.XamlSchemaContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-145">メンバーがプロパティを表している (特に、イベントハンドラーの接続ではない) 場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventInfo As EventInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="101cc-146">イベント メンバーを表す CLR 型システム <see cref="T:System.Reflection.EventInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-147">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="101cc-148"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="101cc-149">CLR 型システム <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.EventInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-150">メンバーがイベント (またはイベントハンドラーの接続ポイントプロパティ) を表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyInfo As PropertyInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="101cc-151">プロパティ メンバーを表す CLR 型システム <see cref="T:System.Reflection.PropertyInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-152">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="101cc-153"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="101cc-154">リフレクション <see cref="T:System.Xaml.XamlMember" /> および <see cref="T:System.Reflection.PropertyInfo" /> (<see cref="T:System.Xaml.XamlSchemaContext" /> の情報を含みます) を使用して、<see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-155">このコンストラクターは、メンバーがプロパティを表し、イベントハンドラー接続でない場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="101cc-156">アタッチ可能なイベントの文字列名。</span><span class="sxs-lookup"><span data-stu-id="101cc-156">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="101cc-157">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-158">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="101cc-159">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-160">メンバーがアタッチ可能なイベントメンバーを表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="101cc-161">メンバーの文字列名。</span><span class="sxs-lookup"><span data-stu-id="101cc-161">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="101cc-162">宣言している型に対する <see cref="T:System.Xaml.XamlType" /> 情報。</span><span class="sxs-lookup"><span data-stu-id="101cc-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable"><span data-ttu-id="101cc-163">メンバーがアタッチ可能であることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-163"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="101cc-164">文字列名と宣言 <see cref="T:System.Xaml.XamlMember" /> 情報を使用して、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="101cc-165">このシグネチャで作成された <see cref="T:System.Xaml.XamlMember" /> には重要な制限があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-166"><xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-167"><xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、このようなメンバーをオブジェクトグラフに書き込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="101cc-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="101cc-168">.NET Framework XAML サービスの実装を使用すると、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A></span><span class="sxs-lookup"><span data-stu-id="101cc-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-169">実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合や、<xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A>`true` で <xref:System.Xaml.XamlMember> を構築しないでください。</span><span class="sxs-lookup"><span data-stu-id="101cc-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="101cc-170">たとえば、実装によっては次の1つ以上が当てはまります。</span><span class="sxs-lookup"><span data-stu-id="101cc-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="101cc-171">XAML スキーマコンテキストは、後で使用できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="101cc-172">メンバー呼び出し元パターンを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="101cc-173">カスタム XAML ライターで <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> を意図的にオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="101cc-174"><paramref name="name" /> または <paramref name="declaringType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="101cc-174"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="101cc-175">アタッチ可能なプロパティの文字列名。</span><span class="sxs-lookup"><span data-stu-id="101cc-175">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="101cc-176">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="101cc-177">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-178">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="101cc-179">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> に対する <see cref="T:System.Xaml.XamlMember" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-180">メンバーがアタッチ可能なプロパティを表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="101cc-181">アタッチ可能なイベントの文字列名。</span><span class="sxs-lookup"><span data-stu-id="101cc-181">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="101cc-182">アタッチ可能なメンバーのバッキング実装のハンドラー <see langword="Add" /> メソッドに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-183">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="101cc-184"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="101cc-185">アタッチ可能なイベントを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-186">メンバーがアタッチ可能なイベントメンバーを表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="101cc-187">アタッチ可能なプロパティの文字列名。</span><span class="sxs-lookup"><span data-stu-id="101cc-187">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="101cc-188">アタッチ可能なメンバーのバッキング実装の <see langword="get" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="101cc-189">アタッチ可能なメンバーのバッキング実装の <see langword="set" /> アクセサーに対する CLR 型システムの <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="101cc-190">メンバーを修飾する <see cref="T:System.Xaml.XamlSchemaContext" /> コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="101cc-191"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に対するランタイム呼び出しを処理する <see cref="T:System.Xaml.XamlMember" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="101cc-192">アタッチ可能なプロパティを表す <see cref="T:System.Xaml.XamlMember" /> (<see cref="T:System.Xaml.XamlMember" /> の情報を含みます) に対する <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-193">メンバーがアタッチ可能なプロパティメンバーを表す場合は、このコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-194">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="101cc-195">この <see cref="T:System.Xaml.XamlType" /> に関連付けられているメンバーを宣言する型の <see cref="T:System.Xaml.XamlMember" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-196">通常、この値は初期化中に設定され、通常は `null`ません。</span><span class="sxs-lookup"><span data-stu-id="101cc-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="101cc-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> 情報は、初期化のためにコンストラクターによって渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="101cc-198">基本コンストラクターに直接を呼び出すことによって、<xref:System.Xaml.XamlMember> 派生クラスの初期化では、基本クラスで行われた値チェックの一部を省略できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="101cc-199">したがって、派生初期化では、XAML メンバーの報告される型とメンバーの関係情報を変更して、基になる CLR 宣言の型システム情報との間に予期しない方法で配置されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="101cc-200">型情報を宣言するセキュリティクリティカルなチェックの場合は、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-201"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="101cc-202">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-203"><xref:System.Xaml.XamlMember.DeferringLoader%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-204">この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-205"><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="101cc-206">これらは、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーを報告します。</span><span class="sxs-lookup"><span data-stu-id="101cc-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="101cc-207"><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧。</span><span class="sxs-lookup"><span data-stu-id="101cc-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-208"><xref:System.Xaml.XamlMember.DependsOn%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupDependsOn%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-209">この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="101cc-210">`DependsOn` パターンは、一般的な XAML 規則に意図的に矛盾するオブジェクトモデルのケースに適用できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="101cc-211">一般的な XAML ルールでは、初期化テキスト (または XAML 2009 のファクトリメソッド) として渡されない型のメンバーは、任意の順序で割り当てることができなければなりません。</span><span class="sxs-lookup"><span data-stu-id="101cc-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="101cc-212">メンバーに `DependsOn` パターンを適用することで、このメンバーの前に参照先のメンバーを常に処理するように XAML ライターに指示できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="101cc-213">現在のメンバーの値に、他のメンバーが設定された後にのみ使用可能なコンテキストやその他の情報が必要な場合に、このパターンを適用できます。</span><span class="sxs-lookup"><span data-stu-id="101cc-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="101cc-214">`DependsOn` パターンは慎重に適用し、アーキテクチャの目的で使用されるプロパティのシナリオ用に予約する必要があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="101cc-215">依存関係の数が多いと、XAML 処理の速度が低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="101cc-216">また、循環依存関係を生成することもできます。この場合、XAML 処理の動作は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="101cc-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="101cc-217">例 `DependsOn` WPF のシナリオには、<xref:System.Windows.Controls.ControlTemplate> と <xref:System.Windows.DataTemplate>、<xref:System.Windows.Trigger>、<xref:System.Windows.Setter>上の特定のプロパティが含まれます。</span><span class="sxs-lookup"><span data-stu-id="101cc-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="101cc-218">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="101cc-218">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="101cc-219">このオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="101cc-219">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="101cc-220">現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="101cc-220">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="101cc-221">現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-221"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="101cc-222">このオブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="101cc-222">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="101cc-223">現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="101cc-223">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="101cc-224">現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="101cc-224"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-225">このオブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-225">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="101cc-226">整数のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="101cc-226">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-227">この XAML メンバーが存在することのできる XAML 名前空間のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-227">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="101cc-228">文字列としての XAML 名前空間識別子のリスト。</span><span class="sxs-lookup"><span data-stu-id="101cc-228">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-229">既定の実装は、この <xref:System.Xaml.XamlMember>に関連付けられている <xref:System.Xaml.XamlMember.DeclaringType%2A> から <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> 呼び出し結果を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-230">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> の実装を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="101cc-231">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlMember" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-232">`Invoker` パターンは、高度な XAML 型システム拡張手法です。</span><span class="sxs-lookup"><span data-stu-id="101cc-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="101cc-233">`Invoker` パターンを使用すると、さまざまなスキーマ型のマッピング動作を挿入する一方で、.NET Framework XAML サービスから XAML 型システム定義を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="101cc-234"><xref:System.Xaml.XamlMember.LookupInvoker%2A> のオーバーライドで `null`が返された場合、または既定の実装がこの <xref:System.Xaml.XamlMember>の <xref:System.Xaml.XamlMember.UnderlyingMember%2A> を持たないために `null` を返した場合、<xref:System.Xaml.XamlMember.Invoker%2A> プロパティは <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="101cc-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> が既定値です。</span><span class="sxs-lookup"><span data-stu-id="101cc-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="101cc-236">これは、.NET Framework XAML サービスと既定の XAML スキーマコンテキストを使用するほとんどの操作に当てはまります。 XAML 型システムエンティティの構築用に特定のオーバーライド `Invoker` パターンが渡されることはありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="101cc-237"><xref:System.Xaml.XamlMember.Invoker%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupInvoker%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-238">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value><span data-ttu-id="101cc-239">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-239"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-240"><xref:System.Xaml.XamlMember.IsAmbient%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-241">この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない実装で発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="101cc-242">アンビエントプロパティのチェックは、通常、XAML 処理ロジックの一部であり、型の修飾子のアンビエント使用に依存するオブジェクトと値が正しく機能することを確認します。</span><span class="sxs-lookup"><span data-stu-id="101cc-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="101cc-243">.NET Framework XAML サービス Api と既定の XAML スキーマコンテキストは、<xref:System.Windows.Markup.AmbientAttribute>の属性に基づいてこの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="101cc-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="101cc-244"><xref:System.Xaml.XamlMember.LookupIsAmbient%2A> の既定の実装では、この既存の <xref:System.Windows.Markup.AmbientAttribute> 手法が使用され、<xref:System.Windows.Markup.AmbientAttribute> がメンバー宣言に存在する場合は `true` が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="101cc-245"><xref:System.Windows.Markup.AmbientAttribute> は、<xref:System.Windows.Application>、<xref:System.Windows.Setter>、<xref:System.Windows.Style>など、いくつかの WPF の種類のメンバーにあります。</span><span class="sxs-lookup"><span data-stu-id="101cc-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="101cc-246">また、<xref:System.Windows.ResourceDictionary> 型にもあります。これは、メンバーが明確に属性付けされていない場合でも、<xref:System.Windows.ResourceDictionary> を型として使用するすべてのメンバーをアンビエントと見なす必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="101cc-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-247">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value><span data-ttu-id="101cc-248">この <see cref="T:System.Xaml.XamlMember" /> がアタッチ可能なメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-248"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-249"><xref:System.Xaml.XamlMember.IsAttachable%2A> 値は、<xref:System.Xaml.XamlMember>を構築するために使用されたコンストラクターに基づいて初期化されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-250">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value><span data-ttu-id="101cc-251">この <see cref="T:System.Xaml.XamlMember" /> が XAML ディレクティブである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-251"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-252"><xref:System.Xaml.XamlMember.IsDirective%2A> 値は、<xref:System.Xaml.XamlMember>を構築するために使用されたコンストラクターに基づいて初期化されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="101cc-253">基本 <xref:System.Xaml.XamlMember> コンストラクターは、<xref:System.Xaml.XamlMember.IsDirective%2A> が `false`するように初期化します。</span><span class="sxs-lookup"><span data-stu-id="101cc-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="101cc-254">ただし、<xref:System.Xaml.XamlDirective> クラス (<xref:System.Xaml.XamlMember> 派生クラス) によって、<xref:System.Xaml.XamlMember.IsDirective%2A> が `true`されるように初期化されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="101cc-255">XAML メンバーのカスタム XAML スキーマクラスの呼び出し元に `true` として <xref:System.Xaml.XamlMember.IsDirective%2A> を報告する場合は、その動作を有効にする唯一の方法であるため、<xref:System.Xaml.XamlDirective> から派生していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="101cc-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-256">この <see cref="T:System.Xaml.XamlMember" /> がイベント メンバーを表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value><span data-ttu-id="101cc-257">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-258"><xref:System.Xaml.XamlMember.IsEvent%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsEvent%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-259">この <see cref="T:System.Xaml.XamlMember" /> が <see cref="P:System.Xaml.XamlMember.Name" /> として有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value><span data-ttu-id="101cc-260">この <see cref="T:System.Xaml.XamlMember" /> が有効な <see langword="true" /> 文字列で初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-260"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="101cc-261">XamlName</span><span class="sxs-lookup"><span data-stu-id="101cc-261">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-262">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用のメンバーを表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value><span data-ttu-id="101cc-263">この <see cref="T:System.Xaml.XamlMember" /> が読み取り専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-263"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-264"><xref:System.Xaml.XamlMember.IsReadOnly%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-265">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="get" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value><span data-ttu-id="101cc-266">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-266"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-267"><xref:System.Xaml.XamlMember.IsReadPublic%2A> 値は、<xref:System.Xaml.XamlMember.DeclaringType%2A> がパブリックであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="101cc-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="101cc-268"><xref:System.Xaml.XamlMember.DeclaringType%2A> が非パブリックである場合は、`get` アクセサーを実用的な方法で呼び出すことはできず、<xref:System.Xaml.XamlMember.IsReadPublic%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="101cc-269"><xref:System.Xaml.XamlMember.IsReadPublic%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="101cc-270"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> メソッドは仮想であるため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="101cc-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="101cc-271">オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。</span><span class="sxs-lookup"><span data-stu-id="101cc-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="101cc-272">アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-273">型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーであるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value><span data-ttu-id="101cc-274">メンバーを解決できない場合は <see langword="true" />。メンバーを解決できる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-274"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-275"><xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> シグネチャを使用して構築された <xref:System.Xaml.XamlMember> は <xref:System.Xaml.XamlMember.IsUnknown%2A>の `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-276"><xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、<xref:System.Xaml.XamlMember.IsUnknown%2A> の `true` を持つ <xref:System.Xaml.XamlMember> をオブジェクトグラフに書き込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="101cc-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="101cc-277">.NET Framework XAML サービス Api の既定の実装では、関連する <xref:System.Xaml.XamlMember> が `true` を報告するときに、<xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。<xref:System.Xaml.XamlMember.IsUnknown%2A></span><span class="sxs-lookup"><span data-stu-id="101cc-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="101cc-278">実装で <xref:System.Xaml.XamlObjectWriter>からの例外を処理できる場合、または <xref:System.Xaml.XamlObjectWriter> 動作を調整する他の方法がある場合を除き、<xref:System.Xaml.XamlMember.IsUnknown%2A> に対して `true` の値を持つ <xref:System.Xaml.XamlMember> を構築しないでください。</span><span class="sxs-lookup"><span data-stu-id="101cc-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="101cc-279"><xref:System.Xaml.XamlMember.IsUnknown%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-280">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用のメンバーを表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value><span data-ttu-id="101cc-281">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-281"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-282"><xref:System.Xaml.XamlMember.IsWriteOnly%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-283">この <see cref="T:System.Xaml.XamlMember" /> が、呼び出し可能なパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value><span data-ttu-id="101cc-284">この <see cref="T:System.Xaml.XamlMember" /> が呼び出し可能なパブリックの <see langword="true" /> アクセサーを表す場合は <see langword="set" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-284"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-285"><xref:System.Xaml.XamlMember.IsWritePublic%2A> 値は、<xref:System.Xaml.XamlMember.DeclaringType%2A> が決定の一部として公開されているかどうかを考慮します。</span><span class="sxs-lookup"><span data-stu-id="101cc-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="101cc-286"><xref:System.Xaml.XamlMember.DeclaringType%2A> が非パブリックである場合は、`set` アクセサーを実用的な方法で呼び出すことはできず、<xref:System.Xaml.XamlMember.IsWritePublic%2A> は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="101cc-287"><xref:System.Xaml.XamlMember.IsWritePublic%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="101cc-288"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> メソッドは仮想であるため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="101cc-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="101cc-289">オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。</span><span class="sxs-lookup"><span data-stu-id="101cc-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="101cc-290">アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-291">派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="101cc-292"><see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="101cc-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-293">このメソッドをオーバーライドして、CLR 属性値を取得する別の方法で内部リフレクションを提供します。</span><span class="sxs-lookup"><span data-stu-id="101cc-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="101cc-294">オーバーライドがない場合、内部リフレクタは、<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>の呼び出しなどの一般的な CLR リフレクションロジックを使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="101cc-295">既定の実装では、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-296"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="101cc-297">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-298">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.DeferringLoader%2A> プロパティから値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="101cc-299"><xref:System.Xaml.XamlMember.DeferringLoader%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="101cc-300">既定の実装は、<xref:System.Windows.Markup.XamlDeferLoadAttribute> を読み取るか、または宣言する型の <xref:System.Xaml.XamlDeferringLoader> を使用することによって、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="101cc-301">どちらのオブジェクトも使用できない場合、このメソッドは `null`を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-302"><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="101cc-303">一覧の項目では、この <see cref="T:System.Xaml.XamlMember" /> に関連して初期化順序の依存関係が存在するメンバーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-304"><see cref="T:System.Xaml.XamlMember" /> オブジェクトの一覧。</span><span class="sxs-lookup"><span data-stu-id="101cc-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-305">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.DependsOn%2A> プロパティから値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="101cc-306"><xref:System.Xaml.XamlMember.DependsOn%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="101cc-307">このケースでは、WPF XAML リーダーとライター実装の属性が <xref:System.Windows.Markup.DependsOnAttribute>になります。</span><span class="sxs-lookup"><span data-stu-id="101cc-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="101cc-308">既定の実装では、この既存の <xref:System.Windows.Markup.DependsOnAttribute> 手法が使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="101cc-309">この目的に <xref:System.Windows.Markup.DependsOnAttribute> を使用していない場合に、独自の手法でプロパティ処理順序を示す手法を置き換える場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="101cc-310">プロパティの処理順序をサポートする予定がない場合は、既定の実装を使用できます。これは、適切な結果が返されないためです。</span><span class="sxs-lookup"><span data-stu-id="101cc-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="101cc-311">リストは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="101cc-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-312">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlMember" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-313">この <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> の <see cref="T:System.Xaml.XamlMember" /> 情報、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-314">このメソッドは、<xref:System.Xaml.XamlMember.Invoker%2A>の呼び出しによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="101cc-315">既定の実装では、初期 <xref:System.Xaml.Schema.XamlMemberInvoker>を渡すコンストラクターのいずれかを使用して <xref:System.Xaml.XamlMember> を構築する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="101cc-316">ただし、<xref:System.Xaml.XamlMember>には <xref:System.Xaml.XamlMember.UnderlyingMember%2A> 値が存在している必要があります。それ以外の場合、既定の実装では `null`が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="101cc-317"><xref:System.Xaml.Schema.XamlMemberInvoker> から派生し、派生クラスを返す場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="101cc-318">`null`を返すと、<xref:System.Xaml.XamlMember.Invoker%2A> 呼び出し元に <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-319">この <see cref="T:System.Xaml.XamlMember" /> がアンビエント プロパティとして報告されているかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="101cc-320">この <see cref="T:System.Xaml.XamlMember" /> をアンビエント プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-320"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-321">このメソッドは、アンビエント XAML プロパティ情報を確認する内部呼び出しによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="101cc-322">アンビエントプロパティの動作は、XAML リーダーと XAML ライターのパブリック API の動作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="101cc-323"><xref:System.Xaml.XamlMember.LookupIsAmbient%2A> を参照する内部呼び出しは、通常、型修飾のアンビエント使用に依存するオブジェクトと値が正しく機能することを確認するために、XAML 処理ロジックの一部です。</span><span class="sxs-lookup"><span data-stu-id="101cc-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="101cc-324">XAML サービスの .NET Framework 既定の実装では、属性を使用して、バッキング型のリフレクションからこの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="101cc-325">具体的には、メンバー定義に <xref:System.Windows.Markup.AmbientAttribute> が存在する場合は、既定の実装によって <xref:System.Windows.Markup.AmbientAttribute> がチェックされ、<xref:System.Xaml.XamlMember.LookupIsAmbient%2A> の `true` が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="101cc-326">この目的に <xref:System.Windows.Markup.AmbientAttribute> を使用していない場合に、アンビエント XAML プロパティを独自の手法で示す手法を置き換える場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="101cc-327">WPF からの Api の例 <xref:System.Windows.Markup.AmbientAttribute> の属性は <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> および <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="101cc-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-328">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="101cc-329">この <see cref="T:System.Xaml.XamlMember" /> がイベントを表すことを報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-329"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-330">既定の実装では <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が <xref:System.Reflection.EventInfo>型であるかどうかがチェックされ、存在する場合は `true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="101cc-331">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsEvent%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="101cc-332"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、または、特定のメタデータを使用できる場合に、XAML 型システム表現をケースごとに決定するために、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-333">この <see cref="T:System.Xaml.XamlMember" /> が目的の読み取り専用プロパティを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="101cc-334">この <see cref="T:System.Xaml.XamlMember" /> を目的の読み取り専用プロパティとして報告する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-334"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-335">既定の実装は、<xref:System.Xaml.XamlMember.UnderlyingMember%2A> 存在する場合は `true` を返しますが、内部リフレクションによって決定されたパブリック `set` アクセサーは存在しません。</span><span class="sxs-lookup"><span data-stu-id="101cc-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="101cc-336">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsReadOnly%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="101cc-337"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、または、特定のメタデータを使用できる場合に、XAML 型システム表現をケースごとに決定するために、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-338">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="get" /> アクセサーを持つプロパティを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="101cc-339">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="true" /> アクセサーを持つプロパティを表す場合は <see langword="get" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-339"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-340">既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.IsWriteOnly%2A>の否定に基づいて結果が返され、その順序で処理されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="101cc-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> は、メンバー自体がパブリックであるかどうかを返します。このメソッドは、非パブリックな宣言型のパブリックメンバーの `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="101cc-342">宣言型の可視性も考慮する必要がある場合は、代わりに <xref:System.Xaml.XamlMember.IsReadPublic%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="101cc-343">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsReadPublic%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="101cc-344"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="101cc-345"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> メソッドは仮想であるため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="101cc-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="101cc-346">オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。</span><span class="sxs-lookup"><span data-stu-id="101cc-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="101cc-347">アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-348">この <see cref="T:System.Xaml.XamlMember" /> が型およびメンバーの解決に使用されるバッキング システムによって解決できないメンバーを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="101cc-349">この <see cref="T:System.Xaml.XamlMember" /> が解決できないメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-349"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-350">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsUnknown%2A>から値を取得したときに呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="101cc-351">既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.UnderlyingMember%2A>の `null` 値のチェックに基づいて、その順序で処理される結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="101cc-352"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-353">この <see cref="T:System.Xaml.XamlMember" /> が、パブリックの <see langword="set" /> アクセサーを持ちパブリックの <see langword="get" /> アクセサーを持たないメンバーを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="101cc-354">この <see cref="T:System.Xaml.XamlMember" /> が書き込み専用メンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-354"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-355">既定の実装は、内部リフレクションによって決定されるパブリック `set` アクセサーと非パブリック `get` アクセサーを持つ <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が存在する場合に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="101cc-356">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsWriteOnly%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="101cc-357"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-358">この <see cref="T:System.Xaml.XamlMember" /> がパブリックの <see langword="set" /> アクセサーを持つメンバーを表すかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="101cc-359">この <see cref="T:System.Xaml.XamlMember" /> が書き込み可能なメンバーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-359"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-360">既定の実装では、内部リフレクションまたは <xref:System.Xaml.XamlMember.IsReadOnly%2A>の否定のいずれかに基づいて結果が返され、その順序で処理されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="101cc-361">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.IsWritePublic%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="101cc-362"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="101cc-363"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> メソッドは仮想であるため、オーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="101cc-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="101cc-364">オーバーライドは、XAML メンバーのレポートされたアクセス情報を変更 (悪意のある、またはそれ以外の方法で) する可能性があります。これにより、基になる CLR 宣言の型システムアクセス情報に対して予期しない方法で配置されなくなります。</span><span class="sxs-lookup"><span data-stu-id="101cc-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="101cc-365">アクセスレベルのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-366">マークアップ拡張の左角かっこと右角かっこ文字を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-366">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="101cc-367">左角かっこと右角かっこ文字を含むコレクション。</span><span class="sxs-lookup"><span data-stu-id="101cc-367">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-368"><see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="101cc-369"><see cref="T:System.Xaml.XamlMember" /> が存在できる型。</span><span class="sxs-lookup"><span data-stu-id="101cc-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-370">既定の実装では、アタッチ可能なメンバーとアタッチできないメンバーが区別されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="101cc-371">アタッチできないメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は常に <xref:System.Xaml.XamlMember.DeclaringType%2A>を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="101cc-372">アタッチ可能なメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は <xref:System.Xaml.XamlMember.UnderlyingMember%2A> アクセサーパラメーター型の検査に基づいて結果を返し、XAML スキーマコンテキストに基づいてその型を解釈します。</span><span class="sxs-lookup"><span data-stu-id="101cc-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="101cc-373">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.TargetType%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="101cc-374"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-375">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="101cc-376">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-377">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.Type%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="101cc-378"><xref:System.Xaml.XamlMember.Type%2A> が既定の内部リフレクションで有効になっている値と異なる値を返す場合、およびカスタム <xref:System.Xaml.Schema.XamlMemberInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="101cc-379">既定の実装では、この <xref:System.Xaml.XamlMember> がプロパティ、メソッド、またはイベントを表すかどうかに基づいて、返された <xref:System.Xaml.XamlType> に対して異なるコードパスと概念上の意味を使用します。</span><span class="sxs-lookup"><span data-stu-id="101cc-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="101cc-380">プロパティの場合、返される <xref:System.Xaml.XamlType> は、プロパティを設定する型か、プロパティによって返される型です。</span><span class="sxs-lookup"><span data-stu-id="101cc-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="101cc-381">イベントの場合、返される <xref:System.Xaml.XamlType> は、必要なイベントハンドラーの型 (CLR 実装のデリゲート) です。</span><span class="sxs-lookup"><span data-stu-id="101cc-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="101cc-382">メソッドの場合、<xref:System.Xaml.XamlType> は戻り値の型です。</span><span class="sxs-lookup"><span data-stu-id="101cc-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="101cc-383">どちらの場合も、XAML スキーマコンテキストは、基になるシステム型から XAML 型を評価するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="101cc-384">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.Type%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="101cc-385"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-386">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている型コンバーターの実装を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-387"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> インスタンス、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-388">既定の実装では、次のロジックと処理順序が使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="101cc-389">属性がメンバーレベル (<xref:System.ComponentModel.TypeConverterAttribute>) に存在する場合、属性情報は、XAML スキーマコンテキストに対して <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> を呼び出すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="101cc-390"><xref:System.Xaml.XamlMember.Type%2A> が有効な場合は、型に関連付けられている型コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="101cc-391">メンバーがイベントである場合は、イベント固有の型コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="101cc-392">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.TypeConverter%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="101cc-393"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-394">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="get" /> アクセサーを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-395">関連付けられている <see langword="get" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-396">既定の実装では、<xref:System.Xaml.XamlMember.UnderlyingMember%2A> プロパティが <xref:System.Reflection.PropertyInfo> として解釈され、<xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> の値 (パラメーターが `true`に設定されています) が返されます。これは、返されたメソッドが非パブリックになる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="101cc-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="101cc-397">この動作により、特定の場合に `null` が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="101cc-398">関連付けられたアクセサーが存在しない場合、またはメンバーがプロパティではない場合を含みます。</span><span class="sxs-lookup"><span data-stu-id="101cc-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="101cc-399">このメソッドは、呼び出し元が、関連付けられた <xref:System.Xaml.Schema.XamlMemberInvoker>の <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> プロパティから値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="101cc-400"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="101cc-401">すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="101cc-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-402">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-403">この <see cref="T:System.Reflection.MemberInfo" /> に関連付けられている CLR 型システムの <see cref="T:System.Xaml.XamlMember" />、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-404">既定の実装では、構築に基づく基になるメンバー情報が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="101cc-405">基になるメンバーを設定するのに十分な情報が提供されていないシグネチャを使用して <xref:System.Reflection.MemberInfo> オブジェクトが構築されている場合、このメソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="101cc-406">基になるメンバーが構築中に設定された場合は、このメソッドを呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="101cc-407">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.UnderlyingMember%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="101cc-408"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="101cc-409">すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="101cc-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-410">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている <see langword="set" /> アクセサーを返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-411">関連付けられている <see langword="set" /> アクセサーの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-412">既定の実装では <xref:System.Xaml.XamlMember.UnderlyingMember%2A> が <xref:System.Reflection.PropertyInfo> として解釈され、<xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> の値 (パラメーターが `true`に設定されている) が返されます。これは、返されたメソッドが非パブリックになる可能性があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="101cc-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="101cc-413">これにより、そのようなアクセサーがない場合や、メンバーがプロパティではない場合など、特定のケースで `null` が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="101cc-414">このメソッドは、呼び出し元が、関連付けられた <xref:System.Xaml.Schema.XamlMemberInvoker>の <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> から値を取得したときに呼び出されます。<xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="101cc-415">すべての <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>、<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>、および <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> を実装して、すべての関連結果が返されるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="101cc-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-416">この <see cref="T:System.Xaml.XamlMember" /> に関連付けられている値シリアライザーの実装を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-417"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" /> インスタンス、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-418">既定の実装では、次のロジックと処理順序が使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="101cc-419">属性がメンバーレベル (<xref:System.Windows.Markup.ValueSerializerAttribute>) に存在する場合、属性情報は、XAML スキーマコンテキストに対して <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> を呼び出すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="101cc-420"><xref:System.Xaml.XamlMember.Type%2A> が有効な場合は、型に関連付けられている値コンバーターが返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="101cc-421">前の条件が適用されない場合は、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="101cc-422">このメソッドは、呼び出し元が <xref:System.Xaml.XamlMember.ValueSerializer%2A>から値を取得したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="101cc-423"><xref:System.Xaml.XamlMember> 派生クラス全体の一貫した結果を報告する場合、またはケースごとに特定のメタデータを使用できる場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="101cc-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-424">マークアップ拡張の左角かっこと右角かっこ文字を定義します。</span><span class="sxs-lookup"><span data-stu-id="101cc-424">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="101cc-425">左角かっこと右角かっこ文字を含むコレクション。</span><span class="sxs-lookup"><span data-stu-id="101cc-425">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-426">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="101cc-427">この <see cref="T:System.Xaml.XamlMember" /> を宣言する <see langword="xamlName" /> 名文字列。</span><span class="sxs-lookup"><span data-stu-id="101cc-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-428">この値は常に構築時に設定されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-428">This value is always set during construction.</span></span> <span data-ttu-id="101cc-429"><xref:System.Xaml.XamlMember> によって実装されるコンストラクターは、通常、初期名が指定されていない場合に例外をスローします。したがって、既定の .NET Framework XAML サービスの実装を使用している場合は、このプロパティを `null` または空の文字列にすることは想定されていません。</span><span class="sxs-lookup"><span data-stu-id="101cc-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="101cc-430">CLR 型およびメンバーの[XamlName 文法](~/docs/framework/xaml-services/xamlname-grammar.md)と名前付け規則は、完全な積集合ではありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="101cc-431">CLR で有効なメンバー名を宣言することはできますが、XAML の名前付けでは無効です。</span><span class="sxs-lookup"><span data-stu-id="101cc-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="101cc-432">可能な場合は、この状況を回避する必要があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="101cc-433">XamlName</span><span class="sxs-lookup"><span data-stu-id="101cc-433">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="101cc-434"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="101cc-435"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="101cc-436">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="101cc-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="101cc-437"><paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-437"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="101cc-438"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="101cc-439"><see cref="T:System.Xaml.XamlMember" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="101cc-440">指定した 2 つの <see cref="T:System.Xaml.XamlMember" /> オブジェクトの値が異なるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="101cc-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="101cc-441"><paramref name="xamlMember1" /> の値が <paramref name="xamlMember2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-441"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-442"><see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間を識別する単一の XAML 名前空間の URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="101cc-443">この <see cref="T:System.Xaml.XamlMember" /> のプライマリ XAML 名前空間の識別子を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="101cc-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-444"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> プロパティは、<xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> の呼び出しと同じ値を提供し、返された一覧から最初の値の文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="101cc-445">XAML 名前空間の情報を保持するテキストまたはその他の表現にメンバーを書き戻す場合は、優先する XAML 名前空間を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-446">ビジュアルなデザイナーでのメンバーの処理方法を示す <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="101cc-447"><see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列挙体の値。</span><span class="sxs-lookup"><span data-stu-id="101cc-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="101cc-448">既定値は、<see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" /> です。</span><span class="sxs-lookup"><span data-stu-id="101cc-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-449"><see cref="T:System.Xaml.XamlType" /> が存在できる型の <see cref="T:System.Xaml.XamlMember" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="101cc-450"><see cref="T:System.Xaml.XamlMember" /> が存在できる型。</span><span class="sxs-lookup"><span data-stu-id="101cc-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-451">戻り値は、アタッチ可能なメンバーとアタッチできないメンバーで異なります。</span><span class="sxs-lookup"><span data-stu-id="101cc-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="101cc-452">アタッチできないメンバーの場合、<xref:System.Xaml.XamlMember.TargetType%2A> は <xref:System.Xaml.XamlMember.DeclaringType%2A>を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="101cc-453">アタッチ可能なメンバーの場合、<xref:System.Xaml.XamlMember.LookupTargetType%2A> は、このロジックに基づく結果を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="101cc-454">リフレクションがバッキング (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`) を解決できない場合、このメソッドはジェネリックオブジェクト型を表す内部定数を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="101cc-455">前の条件が適用されない場合は、<xref:System.Xaml.XamlMember.LookupTargetType%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="101cc-456">既定の実装は、`get` と `set` アクセサーを実装するメソッドの検査に基づく <xref:System.Xaml.XamlType> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="101cc-457">クラスは、アタッチ可能なメンバーのターゲット型を報告する可能性のある他のメタデータフォームなど、別の動作を使用するように <xref:System.Xaml.XamlMember.LookupTargetType%2A> をオーバーライドすることがあります。</span><span class="sxs-lookup"><span data-stu-id="101cc-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="101cc-458">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="101cc-459">この <see cref="T:System.Xaml.XamlMember" /> の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="101cc-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-460">この実装は <xref:System.Xaml.XamlMember.Name%2A>を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-461">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="101cc-462">メンバーで使用される型の <see cref="T:System.Xaml.XamlType" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-463"><xref:System.Xaml.XamlMember.Type%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupType%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-464">このエラーは、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="101cc-465">既定の動作 (<xref:System.Xaml.XamlMember.LookupType%2A> はオーバーライドされません) では、返される <xref:System.Xaml.XamlType> の概念上の意味が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="101cc-466">適用される意味は、次の一覧に示すように、この <xref:System.Xaml.XamlMember> がプロパティ、メソッド、またはイベントを表すかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="101cc-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="101cc-467">プロパティの場合、返される <xref:System.Xaml.XamlType> は、プロパティを設定する型か、プロパティによって返される型です。</span><span class="sxs-lookup"><span data-stu-id="101cc-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="101cc-468">イベントの場合、返される <xref:System.Xaml.XamlType> は、必要なイベントハンドラーの型 (CLR 実装のデリゲート) です。</span><span class="sxs-lookup"><span data-stu-id="101cc-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="101cc-469">メソッドの場合、<xref:System.Xaml.XamlType> はそのメソッドの戻り値の型であり、`null`可能性があります。</span><span class="sxs-lookup"><span data-stu-id="101cc-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="101cc-470">どちらの場合も、XAML スキーマコンテキストは、バッキング型から XAML 型を評価するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-471">XAML で宣言されたオブジェクトの型変換の構築に使用できる <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="101cc-472">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.ComponentModel.TypeConverter" /> の値。</span><span class="sxs-lookup"><span data-stu-id="101cc-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-473"><xref:System.Xaml.XamlMember.TypeConverter%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-474">この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="101cc-475"><xref:System.Xaml.XamlMember.TypeConverter%2A> に対して null 以外のプロパティ値を返す実装は、必ずしも動作 <xref:System.ComponentModel.TypeConverter>ではありません。</span><span class="sxs-lookup"><span data-stu-id="101cc-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="101cc-476">次に示すのは、<xref:System.Xaml.XamlMember.TypeConverter%2A> で使用できる null 以外の戻り値の一覧と、これらの値が表すものです。</span><span class="sxs-lookup"><span data-stu-id="101cc-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="101cc-477">戻り値は、そのメンバーに対して特に属性が付けられている型コンバーターを、コンバーターの対象の型に対して報告します。</span><span class="sxs-lookup"><span data-stu-id="101cc-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="101cc-478">通常、この動作は、型コンバーターをインスタンス化し、メソッドを呼び出すために、ほとんどの XAML 型システムと XAML プロセッサが検索します。</span><span class="sxs-lookup"><span data-stu-id="101cc-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="101cc-479">戻り値は、組み込み値コンバーターを報告します。</span><span class="sxs-lookup"><span data-stu-id="101cc-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="101cc-480">これらのコンバーターは、XAML ライターによって実行される特定の内部操作に対して存在します。</span><span class="sxs-lookup"><span data-stu-id="101cc-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="101cc-481">特に、これらの組み込み値コンバーターは、生の属性文字列値を XAML 言語レベルのプリミティブに変換します。</span><span class="sxs-lookup"><span data-stu-id="101cc-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="101cc-482">.NET Framework XAML サービスの実装では、多くの場合、これらの組み込み型変換はシステムアセンブリで定義されている型コンバーターに転送されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="101cc-483">たとえば、<xref:System.Int32> 値の変換には、組み込みの転送変換があるため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> 値は <xref:System.ComponentModel.Int32Converter>を参照します。</span><span class="sxs-lookup"><span data-stu-id="101cc-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="101cc-484">戻り値は、制約のないオブジェクトモデルの特殊なケースを報告します。つまり、<xref:System.Xaml.XamlMember> の <xref:System.Xaml.XamlMember.Type%2A> の値は <xref:System.Object>です。</span><span class="sxs-lookup"><span data-stu-id="101cc-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="101cc-485">この場合、<xref:System.Xaml.Schema.XamlValueConverter%601> は <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> が {`Object}`であることを報告します。</span><span class="sxs-lookup"><span data-stu-id="101cc-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="101cc-486">ただし、この変換を実行するために使用できる実際の型またはインスタンスがないため、<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> が `null` ます。</span><span class="sxs-lookup"><span data-stu-id="101cc-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="101cc-487">代わりに、特定のテクノロジのランタイムによってオブジェクトグラフの処理が決定されると、実行時までオブジェクトモデルの動作を決定することはできません。</span><span class="sxs-lookup"><span data-stu-id="101cc-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="101cc-488"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>から作業中の <xref:System.ComponentModel.TypeConverter> にアクセスできる場合は、その変換メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="101cc-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="101cc-489">ただし、多くの変換メソッドは、サービスコンテキストに依存します。</span><span class="sxs-lookup"><span data-stu-id="101cc-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="101cc-490">型コンバーターがオブジェクトグラフのオブジェクトの一般的な書き込みに使用するのと同じサービスコンテキストを使用できない場合、コンバーターメソッドは例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="101cc-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-491"><see cref="T:System.Reflection.MemberInfo" />、<see cref="T:System.Reflection.PropertyInfo" />、または <see cref="T:System.Reflection.MethodInfo" /> によって構築されるメンバーで使用できる CLR 型システム <see cref="T:System.Reflection.EventInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="101cc-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="101cc-492">初期コンストラクター パラメーターからキャストされた CLR 型システム <see cref="T:System.Reflection.MemberInfo" /> の情報。</span><span class="sxs-lookup"><span data-stu-id="101cc-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="101cc-493"><see cref="T:System.Xaml.XamlMember" /> シグネチャを使用して構築された <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> は、<see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="101cc-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-494"><xref:System.Xaml.XamlMember.UnderlyingMember%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="101cc-495"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを取得します。これは XAML で宣言されたオブジェクトの値のシリアル化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="101cc-496">ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Windows.Markup.ValueSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="101cc-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="101cc-497"><xref:System.Xaml.XamlMember.ValueSerializer%2A> を呼び出すと、そのメソッドの <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> または特定のオーバーライドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="101cc-498">この動作は、初期の内部リフレクションロジックでまだ情報が設定されていない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="101cc-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="101cc-499"><xref:System.Xaml.XamlMember.ValueSerializer%2A> に対して null 以外のプロパティ値を返すケースは、必ずしも動作 <xref:System.Windows.Markup.ValueSerializer>であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="101cc-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="101cc-500"><xref:System.Xaml.XamlMember.TypeConverter%2A>を参照してください。<xref:System.Xaml.XamlMember.ValueSerializer%2A>にも同じ考慮事項が適用されます。</span><span class="sxs-lookup"><span data-stu-id="101cc-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
