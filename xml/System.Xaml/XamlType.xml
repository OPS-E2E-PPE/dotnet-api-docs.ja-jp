<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46cfe8c9dc89dc6d3df632dc9f650fdfa12eb320" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78731751" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>.NET Framework XAML サービスに実装されている XAML システム全体の一部として、XAML 型に関する情報を報告します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType> クラスの多くの Api は、xaml の型に関する情報を提供します。ここでは、レポートされる概念は、XAML 仕様 [MS-XAML] の特定のセクションに似ています。  
  
 XAML 型に関する情報をレポートするために、.NET Framework XAML サービス API で <xref:System.Xaml.XamlType> が広く使用されています。 <xref:System.Xaml.XamlType> は、インスタンスを操作したり、xaml ノードストリームからそのメンバーにアクセスしたりするために、xaml 型について認識する必要がある情報、または同様の XAML 表現を報告します。 このレポートは、CLR 型システムの <xref:System.Type> と <xref:System.Reflection.MemberInfo>などのリフレクションクラスを使用して、CLR 型とその使用方法に関する情報を提供する方法と似ています。  
  
 XAML 型システムを拡張するには、<xref:System.Xaml.XamlType>から派生させることができます。 これを効果的に行うには、<xref:System.Xaml.Schema.XamlTypeInvoker>も実装する必要があります。 <xref:System.Xaml.Schema.XamlTypeInvoker> を使用すると、一般化された XAML 型システムで、呼び出し動作の一部として指定した型システムのバッキングを操作できます。 特定のカスタム <xref:System.Xaml.Schema.XamlTypeInvoker> を使用すると、CLR 型システムの依存関係を減らすことができます。これは、既定の <xref:System.Xaml.XamlType> の動作で使用されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">作成する XAML 型の基になる CLR <see cref="T:System.Type" />。</param>
        <param name="schemaContext">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>基になる CLR 型情報に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">作成する型の名前。</param>
        <param name="typeArguments">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。 (多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</param>
        <param name="schemaContext">XAML リーダーおよび XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは保護されたコンストラクターです。 この特定のパスを構築に使用する現在のパブリック派生クラスは存在しません。 既存の <xref:System.Xaml.XamlType>のコンシューマーは、他のコンストラクターシグネチャ (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>、<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>、または <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) を使用して <xref:System.Xaml.XamlType> オブジェクトを初期化する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">1 つ以上の <paramref name="typeName" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">作成する XAML 型の基になる型。</param>
        <param name="schemaContext">XAML リーダーの XAML スキーマ コンテキスト。</param>
        <param name="invoker"><see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に対してランタイムのリフレクション呼び出しを処理する <see cref="T:System.Xaml.XamlType" /> 実装。</param>
        <summary>基になる型情報、および <see cref="T:System.Xaml.XamlType" /> の実装に基づいて、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">1 つ以上の <paramref name="underlyingType" /> または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">文字列としての、型の XAML 名前空間。</param>
        <param name="unknownTypeName">指定された <paramref name="unknownTypeNamespace" /> XAML 名前空間内の型の名前。</param>
        <param name="typeArguments">ジェネリック型を表す <see cref="T:System.Xaml.XamlType" /> の型引数。 (多くの場合は) <see langword="null" /> にできます。この値は、表される型がジェネリック型でないことを示します。</param>
        <param name="schemaContext">XAML リーダーまたは XAML ライターの XAML スキーマ コンテキスト。</param>
        <summary>XAML 名前空間と型の文字列名に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。 このコンストラクターは、サポートする型システムと XAML スキーマ コンテキストにバッキングを持たないことがわかっている型の使用法の分析および XAML ノード記録にのみ使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、基になる型システムにマップされる XAML 型が使用できない "unknown" 型に対してのみ使用してください。 このコンストラクターは、<xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> が `true`場合に結果を生成しない可能性があります。 代わりに、既定のリフレクタロジックによって、基になる型が <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>として報告されます。 ただし、この動作は <xref:System.Xaml.XamlType.LookupIsUnknown%2A> がオーバーライドされるために変更される可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">1 つ以上の <paramref name="unknownTypeNamespace" />、<paramref name="unknownTypeName" />、または <paramref name="schemaContext" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> の値として使用できる、型の読み取り専用のコレクションを取得します。</summary>
        <value>使用可能なコンテンツ型の読み取り専用のコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定のコンテンツタイプを割り当てることができる型 (たとえば、許可されたコンテンツタイプである基本データ型に割り当て可能な型) は、<xref:System.Xaml.XamlType.AllowedContentTypes%2A>の目的で複数の型とは見なされません。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> オーバーライドを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を取得します。 この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</summary>
        <value>この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupBaseType%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupBaseType%2A> に関するドキュメントを参照してください。 既定では、<xref:System.Xaml.XamlType.BaseType%2A> は <xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合、<xref:System.Object> を表す内部定数を返します。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> は仮想であるため、オーバーライドできます。 オーバーライドは、XAML 型に関する報告された型情報を変更して、基になる CLR 型の型システム情報と共に予期しない方法で配置されないようにする可能性があります (悪意のある目的であるかどうかにかかわらず)。 割り当て操作とアクセスのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanAssignTo (xamlType As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">現在の <see cref="T:System.Xaml.XamlType" /> に対して確認する型。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> のインスタンスの割り当て可能な型のリスト内に、指定された <see cref="T:System.Xaml.XamlType" /> が含まれているかどうかを示す値を返します。</summary>
        <returns>割り当て可能な型のリストに <paramref name="xamlType" /> が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 割り当て可能な型には、参照型の機能がすべて含まれているわけではありませんが、代入に使用できます。 たとえば、割り当てを使用して、プロパティの値に対して型の一致を行うことができます。 XAML での割り当て可能な型の概念は、CLR 型システムでのキャストの概念と似ています。 たとえば、CLR 型システムでは、すべての型に割り当て可能な型のリストに <xref:System.Object> があります。  
  
 比較に使用される2つの <xref:System.Xaml.XamlType> インスタンスのいずれか <xref:System.Xaml.XamlType.IsUnknown%2A> が `true`と等しい場合、このメソッドには、2つの <xref:System.Xaml.XamlType> インスタンスが等しい場合に `true` を返す特殊な不明なモードがあります。  
  
 既定の実装では、この <xref:System.Xaml.XamlType> と入力 <xref:System.Xaml.XamlType>の CLR <xref:System.Type> を <xref:System.Xaml.XamlType.UnderlyingType%2A> から使用し、<xref:System.Type.IsAssignableFrom%2A>を呼び出します。 割り当て可能な型を別に決定する場合は、このメソッドをオーバーライドします。  
  
 Null `xamlType` を渡す場合、例外はスローされず、常に `false`を返します。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.CanAssignTo%2A> は仮想であるため、オーバーライドできます。 オーバーライドは、XAML 型の割り当て機能を変更して、その基になる CLR 型の型キャストの動作と想定した方法が一致しないようにする可能性があります (悪意のある目的であるかどうかにかかわらず)。 割り当て操作とアクセスのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を取得します。</summary>
        <value>インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。 コンテンツ プロパティがない場合は <see langword="null" /> になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CLR 型システムのバインディングまたはバッキングを使用する場合、型定義に <xref:System.Windows.Markup.ContentPropertyAttribute> を適用することによって、XAML コンテンツプロパティを型に指定できます。  
  
 このプロパティは、[MS XAML] 仕様の `[content property]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupContentProperty%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupContentProperty%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>厳密に型指定された <see langword="Collection&lt;T&gt;" /> の文字列などのように、型の一致が厳密でない場合に、コンテンツ プロパティのコンテンツをラップする型を取得します。</summary>
        <value>使用可能なコンテンツ ラッパー型の読み取り専用のコレクション、または <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型一致の値の値を考慮するラッパーがない場合、このプロパティは `null`ます。  
  
 特定のコンテンツタイプの <xref:System.Xaml.XamlType.CanAssignTo%2A> として評価される型は、<xref:System.Xaml.XamlType.ContentWrappers%2A>のために複数の型とは見なされません。  
  
 <xref:System.Xaml> と <xref:System.Xaml.XamlType>の CLR バインドでは、XAML コンテンツラッパー型を <xref:System.Windows.Markup.ContentWrapperAttribute>として型に指定できます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupContentWrappers%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupContentWrappers%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この型の遅延読み込みの変換動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を取得します。</summary>
        <value>この型の遅延読み込みの動作を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 遅延読み込みの動作の例として、WPF での XAML テンプレートの動作があります。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このオブジェクトと比較するオブジェクト。</param>
        <summary>現在のオブジェクトが、別のオブジェクトと等しいかどうかを示します。</summary>
        <returns>現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">このオブジェクトと比較するオブジェクト。</param>
        <summary>現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
        <returns>現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</summary>
        <returns>見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このメソッドの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれたコレクションを返します。</summary>
        <returns>0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返されたコレクション内の各 <xref:System.Xaml.XamlMember> には、<xref:System.Xaml.XamlMember> がアタッチ可能なメンバーであるという概念をサポートする値が含まれている必要があります。 たとえば、メンバーは、<xref:System.Xaml.XamlMember.IsAttachable%2A>の `true`、<xref:System.Xaml.XamlMember.TargetType%2A>の型などを返す必要があります。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このメソッドの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれたコレクションを返します。</summary>
        <returns>0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれたコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、<xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupAllMembers%2A> のオーバーライドを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> の特定の名前の付いたアタッチ可能メンバーを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
        <returns>要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、<xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupAttachableMember%2A> のオーバーライドを呼び出すことができます。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> は仮想であるため、オーバーライドできます。 オーバーライドでは、XAML 型の報告されるメンバーを変更することが可能である (悪意のある目的であるかどうかにかかわらず) 可能性があります。これにより、基になる CLR 型に関する情報を <xref:System.ComponentModel.TypeDescriptor> `Get*` 情報と共に配置することができなくなります。 メンバーレポートのセキュリティクリティカルなチェックを行うには、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このオブジェクトのハッシュ コードを返します。</summary>
        <returns>整数のハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">取得するメンバーの名前 (文字列)。</param>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` の値は、非修飾であると想定されます。 アタッチされたメンバーを <xref:System.Xaml.XamlType.GetAttachableMember%2A> に送信する必要があることを示す型修飾名。 プレフィックスの付いたメンバー名は使用できません。プレフィックスは使用状況に関するものであり、XAML 型システムはこのような使用法のコンテキストとプレフィックスがどのようにマップされているかを知ることができません。  
  
 このメソッドを呼び出すと、<xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupMember%2A> のオーバーライドを呼び出すことができます。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> は仮想であるため、オーバーライドできます。 オーバーライドでは、XAML 型の報告されるメンバーを変更することが可能である (悪意のある目的であるかどうかにかかわらず) 可能性があります。これにより、基になる CLR 型に関する情報を <xref:System.ComponentModel.TypeDescriptor> `Get*` 情報と共に配置することができなくなります。 メンバーレポートのセキュリティクリティカルなチェックを行うには、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</param>
        <summary>マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</summary>
        <returns><see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は、構文内でその位置の型に相当します。 マークアップ拡張機能のマークアップ入力を指定する場合は、型を同一の順序で指定する必要があります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この API は、この <xref:System.Xaml.XamlType> がマークアップ拡張機能を表している場合にのみ関連します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> が `true`)。  
  
 入力 `parameterCount` は、特定の位置指定パラメーターの型を要求するためのものではありません。 これは、マークアップ拡張機能の使用のアリティを指定するためのものです。 多くの場合、マークアップ拡張機能の使用には複数の "シグネチャ" があり、区別するために位置パラメーターの異なるパラメーターアリティ (カウント) を使用します。 ただし、重複する arities を許可するようにスキーマコンテキストを構成したり、位置指定パラメーターの型を使用して区別したりすることができます。 詳細については、「<xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>」を参照してください。 特定のアリティ (count) の場合、パラメーターの位置と型は異なる場合があります。 特定のアリティのマークアップ拡張機能の使用の位置指定型を取得するには、まず、アリティカウントを指定して <xref:System.Xaml.XamlType.GetPositionalParameters%2A> を呼び出します。 次に、返されたコレクションからその位置にある項目を取得します。  
  
 このメソッドを呼び出すと、<xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> のオーバーライドを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>型が含まれている XAML 名前空間の文字列識別子のリストを返します。</summary>
        <returns>文字列値のリスト。各文字列は XAML 名前空間の URI 識別子です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般的な XAML 名前空間識別子は、URI 形式の文字列です。  
  
 既定の実装では、構築に指定された XAML 名前空間 (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> シグネチャのみ) が順に確認されます。スキーマコンテキストから使用できる名前空間。 これらが各 `null`の場合、1つの空の文字列を含む新しいリストが生成されます。 このメソッドをオーバーライドして、参照方法を変更できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> の実装を取得します。</summary>
        <value>この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられている <see cref="T:System.Xaml.XamlType" /> 実装。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、<xref:System.Xaml.XamlType.Invoker%2A> を呼び出すと、<xref:System.Xaml.XamlType.LookupInvoker%2A> またはそのメソッドの特定のオーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupInvoker%2A> に関するドキュメントを参照してください。  
  
 <xref:System.Xaml.XamlType.LookupInvoker%2A> のオーバーライドによって `null`が返された場合、または、この <xref:System.Xaml.XamlType>に <xref:System.Xaml.XamlType.UnderlyingType%2A> がないために既定の実装が `null` を返した場合、<xref:System.Xaml.XamlType.Invoker%2A> は <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsAmbient%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsAmbient%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が配列を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が配列を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupCollectionKind%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupCollectionKind%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がコレクションを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupCollectionKind%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupCollectionKind%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、[MS XAML] 仕様の `[is default constructible]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsConstructible%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsConstructible%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってディクショナリを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、[MS XAML] 仕様の `[is dictionary]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupCollectionKind%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupCollectionKind%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がジェネリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:System.Xaml.XamlType.TypeArguments%2A>の null 値をチェックするヘルパープロパティです。 <xref:System.Xaml.XamlType.IsGeneric%2A>に関連する特定の `Lookup` 方法はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 仕様用語では、<xref:System.Xaml.XamlType.IsMarkupExtension%2A>の `true` を返すために、この型を `x:MarkupExtension` に割り当て可能にする必要があります。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 名前スコープでは、`x:Name` / `[name property]`に使用されるプロパティの名前の一意性が強制されます。 <xref:System.Xaml.XamlType.IsNameScope%2A> が `true`場合は、一意性を適用するためのメカニズムが存在し、XAML 名前スコープを所有しているこの型のパースペクティブから評価される必要があります。 XAML 名前スコープは、別の XAML 名前スコープ所有型が検出されるまで、型のコンテンツに拡張されます。  
  
 このプロパティは、[MS XAML] 仕様の `[is name scope]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsNameScope%2A> オーバーライドを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が <see cref="P:System.Xaml.XamlType.Name" /> に有効な <see langword="xamlName" /> 文字列を使用して初期化されているかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が有効な <see langword="true" /> 文字列を使用して初期化されている場合は <see langword="xamlName" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、[MS XAML] 仕様の `[is nullable]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用していない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsNullable%2A> オーバーライドを呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsPublic%2A> オーバーライドを呼び出すことができます。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> は仮想であるため、オーバーライドできます。 オーバーライドは、XAML 型に関する報告されたアクセス情報を変更して、型システムおよびその基になる CLR 型のアクセス情報との間で適切に配置されないようにする可能性があります (悪意のある目的で、またはそれ以外の場合)。 割り当て操作とアクセスのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsUnknown%2A> オーバーライドを呼び出すことができます。  
  
 <xref:System.Xaml.XamlObjectWriter>を含む読み込みパスの場合、<xref:System.Xaml.XamlType.IsUnknown%2A> の `true` を持つ <xref:System.Xaml.XamlType> をオブジェクトグラフに書き込むことはできません。 <xref:System.Xaml> の既定の実装では、関連する <xref:System.Xaml.XamlType> が `true` に対して <xref:System.Xaml.XamlType.IsUnknown%2A>を報告したときに、<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> 呼び出しによって <xref:System.Xaml.XamlObjectWriterException> がスローされます。 <xref:System.Xaml.XamlObjectWriter>からの例外を処理する準備が整っている場合や、オブジェクトグラフを書き込む前に <xref:System.Xaml.XamlObjectWriter> 動作または XAML ノードストリームを調整する方法がある場合を除き、<xref:System.Xaml.XamlType.IsUnknown%2A> を持つ <xref:System.Xaml.XamlType> を `true` として渡すことはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を取得します。</summary>
        <value>XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トップダウンは、オブジェクトグラフを作成するときに XAML プロセッサの動作を近似する比喩です。 上から順に構築されると、型がインスタンス化され、親にアタッチされて、そのプロパティが設定されます。 トップダウン構築では、プロパティ変更ハンドラーを複数回呼び出すことが回避されます。 このような処理によってオブジェクトグラフが解放されるため、は複数のハンドラー呼び出しを排除し、オブジェクトグラフの起動時にパフォーマンスを最適化します。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、[MS XAML] 仕様の `[is xdata]` 情報項目に合わせて配置されます。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsXData%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsXData%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を取得します。</summary>
        <value>コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、この <xref:System.Xaml.XamlType> がコレクションを表している場合にのみ関連します (<xref:System.Xaml.XamlType.IsCollection%2A> は `true`)。 `Items` プロパティは、コレクションまたは配列のその型の項目を保持するプロパティです。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupItemType%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupItemType%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を取得します。</summary>
        <value>ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、この <xref:System.Xaml.XamlType> がディクショナリを表している場合にのみ関連します (<xref:System.Xaml.XamlType.IsDictionary%2A> は `true`)。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupKeyType%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupKeyType%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">エイリアスが設定されたメンバーの検索対象となるディレクティブ。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> によってエイリアスが XAML ディレクティブに設定された XAML メンバーを返します。</summary>
        <returns>見つかった場合はエイリアスが設定されたメンバー。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.GetAliasedProperty%2A>から値を取得したときに呼び出すことができます。  
  
 既定の実装では、次の XAML ディレクティブの結果を返すことができます: `Key`;`Name`;`Uid`;および `xml:lang`ます。 これらの値は基になるリフレクションに依存し、エイリアスプロパティが見つからない場合は `null` を返すことがあります。  
  
 既定の内部 CLR リフレクションに依存せず、XAML 型システム情報または型のスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのアタッチ可能なプロパティが含まれた列挙可能なセットを返します。</summary>
        <returns>0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>から値を取得したときに呼び出すことができます。  
  
 <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> はジェネリックコレクションを返しますが、この `Lookup` メソッドは汎用の列挙可能なセットを返します。  
  
 既定の実装では、内部 CLR リフレクションが使用されます。 <xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合、既定の実装では <xref:System.Xaml.XamlType.BaseType%2A>を使用できます (使用可能な場合)。 この動作では、有効な基本型の検索を試行するために <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> 再帰的にを呼び出し、有効な基本型が存在しない場合は `null` を返します。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。 型システムまたはリフレクションのサポートがないために情報を特定できない場合は、null の戻り値を予約する必要があります。 型が有効であり、リフレクションなどの手法を使用できても、型にアタッチ可能なメンバーがない場合は、代わりに空の <xref:System.Collections.Generic.IEnumerable%601> セットを返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> で公開されているすべてのメンバーが含まれた列挙可能なセットを返します。</summary>
        <returns>0 個以上の <see cref="T:System.Xaml.XamlMember" /> 値が含まれている列挙可能なセット。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.GetAllMembers%2A>から値を取得したときに呼び出すことができます。  
  
 <xref:System.Xaml.XamlType.GetAllMembers%2A> はジェネリックコレクションを返しますが、この `Lookup` メソッドは汎用の列挙可能なセットを返します。  
  
 既定の実装では、内部 CLR リフレクションが使用されます。 <xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合、既定の実装では <xref:System.Xaml.XamlType.BaseType%2A>を使用できます (使用可能な場合)。 この動作では、有効な基本型の検索を試行するために <xref:System.Xaml.XamlType.LookupAllMembers%2A> 再帰的にを呼び出し、有効な基本型が存在しない場合は `null` を返します。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。 型システムまたはリフレクションのサポートがないために情報を特定できない場合は、null の戻り値を予約する必要があります。 型が有効な場合は、リフレクションなどの手法を使用できます。型にメンバーがない場合は、代わりに空の <xref:System.Collections.Generic.IEnumerable%601> セットを返す必要があります。  
  
 <xref:System.Xaml.XamlType.LookupAllMembers%2A> と <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> の戻り値は相互に排他的である必要があります。 バッキング型システムプロパティが、標準インスタンスの使用法とアタッチ可能な使用法をサポートできる状況では、そのメンバーは2つの異なる <xref:System.Xaml.XamlMember> 値として報告される必要があります。この場合、アタッチ可能なリストに1つの値が表示され、標準メンバーの一覧に別の値が表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="P:System.Xaml.XamlType.ContentProperty" /> の <see cref="T:System.Xaml.XamlType" /> 値として使用できる、型のリストを返します。</summary>
        <returns>使用可能なコンテンツ型のリスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.AllowedContentTypes%2A>から値を取得したときに呼び出すことができます。  
  
 特定のコンテンツタイプの <xref:System.Xaml.XamlType.CanAssignTo%2A> として評価される型は、<xref:System.Xaml.XamlType.AllowedContentTypes%2A>のために複数の型とは見なされません。  
  
 既定の実装では、<xref:System.Xaml.XamlType> の他のプロパティ (<xref:System.Xaml.XamlType.ContentWrappers%2A>、<xref:System.Xaml.XamlType.ContentProperty%2A>、または <xref:System.Xaml.XamlType.ItemType%2A>) を使用して結果を取得できます。 この決定では、前のプロパティリストの `Lookup` オーバーライドを呼び出すこともできます。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><c>ownerTypeName.MemberName</c> フォームで取得するアタッチ可能メンバーの名前。</param>
        <summary>この <see cref="T:System.Xaml.XamlType" /> から、特定の名前の付いたアタッチ可能なものを表す <see cref="T:System.Xaml.XamlMember" /> を返します。</summary>
        <returns>要求されたアタッチ可能メンバーの <see cref="T:System.Xaml.XamlMember" /> オブジェクト。その名前のアタッチ可能メンバーが存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.GetAttachableMember%2A>から値を取得したときに呼び出すことができます。  
  
 既定の実装では、内部 CLR リフレクションが使用されます。 <xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合、既定の実装では <xref:System.Xaml.XamlType.BaseType%2A>を使用できます (使用可能な場合)。 この動作では、有効な基本型の検索を試行するために <xref:System.Xaml.XamlType.LookupAttachableMember%2A> 再帰的にを呼び出し、有効な基本型が存在しない場合は `null` を返します。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> は仮想であるため、オーバーライドできます。 オーバーライドでは、XAML 型の報告されるメンバーを変更することが可能である (悪意のある目的であるかどうかにかかわらず) 可能性があります。これにより、基になる CLR 型に関する情報を <xref:System.ComponentModel.TypeDescriptor> `Get*` 情報と共に配置することができなくなります。 メンバーレポートのセキュリティクリティカルなチェックを行うには、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" /> を返します。 この値は、この <see cref="T:System.Xaml.XamlType" /> の基になる型とスキーマ コンテキストに基づいて決定されます。</summary>
        <returns>この XAML 型の直接の基本型の <see cref="T:System.Xaml.XamlType" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.BaseType%2A>から値を取得したときに呼び出すことができます。  
  
 既定の実装は、<xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合に、<xref:System.Object> を表す内部定数を返すことがあります。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> は仮想であるため、オーバーライドできます。 オーバーライドは、XAML 型に関する報告された型情報を変更して、基になる CLR 型の型システム情報と共に予期しない方法で配置されないようにする可能性があります (悪意のある目的であるかどうかにかかわらず)。 割り当て操作とアクセスのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> で使用される特定のコレクション型を宣言する <see cref="T:System.Xaml.XamlType" /> 列挙体の値を返します。</summary>
        <returns><see cref="T:System.Xaml.Schema.XamlCollectionKind" /> 列挙体の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、内部プライベートメソッド (パブリック `CollectionKind` がないか、<xref:System.Xaml.XamlType>に `GetCollectionKind` API が存在しません) によって呼び出されます。  
  
 既定の実装では、内部 CLR リフレクションが使用されます。 <xref:System.Xaml.XamlType.UnderlyingType%2A> が `null`場合、既定の実装では <xref:System.Xaml.XamlType.BaseType%2A>を使用できます (使用可能な場合)。 この動作では、間接的に <xref:System.Xaml.XamlType.LookupCollectionKind%2A> を呼び出して、有効な基本型を見つけようとします。有効な基本型が存在しない場合は <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> を返します。 一般に、既定の実装では、リフレクションによって基になる型の `Add` メソッドの検索が試行されます。 見つかった場合、`Add` メソッドの <xref:System.Reflection.MethodInfo> によって、返される <xref:System.Xaml.Schema.XamlCollectionKind> 値を決定するのに十分な情報が得られます。 それ以外の場合は、 <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>を返します。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>型の有効なインスタンスを作成するために、この <see cref="T:System.Xaml.XamlType" /> が引数 (<see langword="x:TypeArguments" /> を通じたジェネリック制約、初期化テキスト、または他の XAML 手法) を持つ必要があるかどうかを示す値を返します。</summary>
        <returns>インスタンスの作成に引数値が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>から値を取得したときに呼び出すことができます。  
  
 既定の実装は、CLR 型システムで値型と見なされる型の `false` を返します。 値型以外の CLR リフレクション <xref:System.Reflection.ConstructorInfo> は、パラメーターなしのコンストラクターが存在するかどうかを判断するために使用されます。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlMember" /> のコンテンツ プロパティの <see cref="T:System.Xaml.XamlType" /> 情報。 <see langword="null" /> でもかまいません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.ContentProperty%2A>から値を取得したときに呼び出すことができます。  
  
 既定の実装では、型定義の <xref:System.Windows.Markup.ContentPropertyAttribute> が確認されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 これらのチェックでコンテンツの種類が検出されない場合、既定の実装では `null`が返されます。  
  
 既定の内部 CLR リフレクションに依存せず、型の XAML 型システム情報またはスキーマ情報をレポートするためにメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリストを取得します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> のコンテンツ ラッパーを表す <see cref="T:System.Xaml.XamlType" /> 値のリスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンテンツラッパーは、そのコレクションで使用されている型が型システムに隣接していない場合に、コンテンツコレクション型を表すクラスです。 コンテンツラッパーのコレクションアイテムの種類は、<xref:System.Object> またはそれと同等のニュートラルオブジェクト以外の何らかの方法で制限されることが予想されます。 ただし、この制限は、型システムではなく、その型を使用するプロパティの設計または目的によってのみ適用されます。 1つの型に複数のコンテンツラッパーを存在させることができます。  
  
 WPF XAML 実装のクラスとシナリオの例については、「<xref:System.Windows.Documents.InlineCollection>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスで実装される場合、<see cref="T:System.Reflection.ICustomAttributeProvider" /> 実装を返します。</summary>
        <returns><see cref="T:System.Reflection.ICustomAttributeProvider" /> の実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドをオーバーライドして、CLR 属性値を取得する別の方法で内部リフレクションを提供します。 オーバーライドが存在しない場合、内部リフレクタは一般的な CLR リフレクションロジックを使用します。  
  
 既定の実装では、`null` が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを返します。これは XAML で宣言されたオブジェクトの遅延読み込みに使用されます。</summary>
        <returns>ジェネリックの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 制約のある <see cref="T:System.Xaml.XamlDeferringLoader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し元が <xref:System.Xaml.XamlType.DeferringLoader%2A>から値を取得したときに呼び出すことができます。 <xref:System.Xaml.XamlType.DeferringLoader%2A> が既定の内部リフレクションで有効になっている値とは別の値を返す場合に、カスタム <xref:System.Xaml.Schema.XamlTypeInvoker> 情報も提供する場合は、このメソッドをオーバーライドします。  
  
 既定の実装は、<xref:System.Windows.Markup.XamlDeferLoadAttribute>の読み取りに基づいてオブジェクトを返します。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合、このメソッドは `null`を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連付けられた <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="T:System.Xaml.XamlType" /> 情報、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.Invoker%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、初期 <xref:System.Xaml.Schema.XamlTypeInvoker>を渡すコンストラクターのいずれかを使用して <xref:System.Xaml.XamlType> を構築する必要はありません。 ただし、<xref:System.Xaml.XamlType>には <xref:System.Xaml.XamlType.UnderlyingType%2A> 値が存在している必要があります。それ以外の場合、既定の実装では `null`が返されます。  
  
 <xref:System.Xaml.Schema.XamlTypeInvoker> から派生クラスも作成し、派生クラスを返す場合は、このメソッドをオーバーライドします。 `null`を返すと、<xref:System.Xaml.XamlType.Invoker%2A> 呼び出し元に <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によってアンビエント型を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> がアンビエント型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsAmbient%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Xaml.XamlType.UnderlyingType%2A> で CLR リフレクションが使用され、基本型を確認できます。 この実装では、クラスレベルで関連する型の定義に適用されている <xref:System.Windows.Markup.AmbientAttribute> を確認し、この場合は `true` を返します。 それ以外の場合は `false`が返されます。  
  
 <xref:System.Xaml.XamlType.IsAmbient%2A> が既定の内部リフレクションで有効になっている値とは異なる値を返すようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって構築可能な型を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が構築可能な型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsConstructible%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Xaml.XamlType.UnderlyingType%2A>で CLR リフレクションが使用されます。 型は、具象、入れ子になっていない、および閉じている必要があります。 既定の実装では、型が値型であり、<xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>の戻り値であるかどうかがチェックされます。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>の場合、このメソッドは `true`を返します。  
  
 <xref:System.Xaml.XamlType.IsConstructible%2A> が既定の内部リフレクションで有効になっている値とは異なる値を返すようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsMarkupExtension%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装は、次の呼び出しでのみ構成されます。  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <xref:System.Xaml.XamlType.IsMarkupExtension%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 XAML 仕様用語では、<xref:System.Xaml.XamlType.IsMarkupExtension%2A>の `true` を返すために、この型を `x:MarkupExtension` に割り当て可能にする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XAML 名前スコープを表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が XAML 名前スコープを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsNameScope%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.INameScope>型に対して間接的に <xref:System.Xaml.XamlType.CanAssignTo%2A> の呼び出しが行われます。 <xref:System.Windows.Markup.INameScope> は、アセンブリ WindowsBase .dll で定義されているインターフェイスです。 XAML 名前スコープ id のこの手法は、XAML の WPF と Windows Workflow Foundation の実装の両方で使用されます。  
  
 <xref:System.Xaml.XamlType.IsNameScope%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 XAML 名前スコープでは、`x:Name` / `[name property]`に使用されるプロパティの名前の一意性が強制されます。 <xref:System.Xaml.XamlType.IsNameScope%2A> が `true`場合は、一意性を適用するためのいくつかのメカニズムが存在し、XAML 名前スコープを所有しているこの型のパースペクティブから評価される必要があります。 XAML 名前スコープは、別の XAML 名前スコープの所有型が検出されるまで、型のコンテンツに拡張されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって null 許容型を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が null 許容型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsNullable%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、CLR コアライブラリの null 許容の概念に基づいて、<xref:System.Xaml.XamlType.UnderlyingType%2A>に対してチェックされます。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>の場合、`true`を返します。  
  
 <xref:System.Xaml.XamlType.IsNullable%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が関連する型システムでパブリック型を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> がパブリック型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsPublic%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、null 以外の <xref:System.Xaml.XamlType.UnderlyingType%2A>に対して CLR リフレクションが使用されます。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>の場合、`true`を返します。  
  
 <xref:System.Xaml.XamlType.IsPublic%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> は仮想であるため、オーバーライドできます。 オーバーライドは、XAML 型に関する報告されたアクセス情報を変更して、型システムまたはその基になる CLR 型のアクセス情報と共に予期しない方法で配置されないようにする可能性があります (悪意のある目的で、またはそれ以外の場合)。 割り当て操作とアクセスのセキュリティクリティカルなチェックでは、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が基になる型システムで解決できない型を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が解決できない型を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsUnknown%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、CLR リフレクションを使用できます。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>の場合、`true`を返します。  
  
 <xref:System.Xaml.XamlType.IsUnknown%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XML 定義によって有意な空白のコレクションを表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が有意な空白のコレクションを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`false`を返します。  
  
 <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が XAML 定義によって XML <see langword="XDATA" /> を表すかどうかを示す値を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> が <see langword="true" /> を表す場合は <see langword="XDATA" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.IsXData%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Xml.Serialization.IXmlSerializable>型に対して間接的に <xref:System.Xaml.XamlType.CanAssignTo%2A> の呼び出しが行われます。  
  
 <xref:System.Xaml.XamlType.IsXData%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> の <see langword="Items" /> プロパティの型情報を提供する値を返します。</summary>
        <returns>コレクション内のアイテムの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がコレクションを表していない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.ItemType%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、CLR リフレクションの概念を使用できます。たとえば、<xref:System.Reflection.MethodInfo> によって `Add` メソッドをチェックし <xref:System.Reflection.ParameterInfo>を使用します。<xref:System.Xaml.XamlType.IsArray%2A>を確認しています。<xref:System.Xaml.XamlType.BaseType%2A> し、同じロジックを試してみます。  
  
 <xref:System.Xaml.XamlType.ItemType%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。 <xref:System.Xaml.XamlType.LookupCollectionKind%2A> が返される場合 <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> は `null`を返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表す場合、この <see cref="T:System.Xaml.XamlType" /> のキー プロパティの型情報を提供する値を返します。</summary>
        <returns>ディクショナリを使用する場合はキーの型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がディクショナリを表していない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.KeyType%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、CLR リフレクションの概念を使用できます。たとえば、<xref:System.Reflection.MethodInfo> によって `Add` メソッドをチェックし <xref:System.Reflection.ParameterInfo>を使用します。<xref:System.Xaml.XamlType.BaseType%2A> し、同じロジックを試してみます。  
  
 <xref:System.Xaml.XamlType.KeyType%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。 <xref:System.Xaml.XamlType.LookupCollectionKind%2A> が返されない場合 <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> は `null`を返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を返します。</summary>
        <returns>マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>の読み取りに基づいて <xref:System.Xaml.XamlType> が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`null`を返します。  
  
 <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">取得するメンバーの名前 (文字列)。</param>
        <param name="skipReadOnlyCheck">メンバーの <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> の値が <see langword="true" /> であってもメンバーを返す場合は <see langword="true" />。<see cref="P:System.Xaml.XamlMember.IsReadOnly" /> のメンバーを返さない場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
        <summary>この <see cref="T:System.Xaml.XamlMember" /> から、特定の名前が付けられたメンバーの <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>該当するメンバーが見つかった場合はメンバーの <see cref="T:System.Xaml.XamlMember" /> 情報。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.GetMember%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、CLR の内部リフレクションとスキーマコンテキストに対する評価に基づいて、<xref:System.Xaml.XamlType> が返されます。  
  
 <xref:System.Xaml.XamlType.GetMember%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> は仮想であるため、オーバーライドできます。 オーバーライドでは、XAML 型の報告されるメンバーを変更することが可能である (悪意のある目的であるかどうかにかかわらず) 可能性があります。これにより、基になる CLR 型に関する情報を <xref:System.ComponentModel.TypeDescriptor> `Get*` 情報と共に配置することができなくなります。 メンバーレポートのセキュリティクリティカルなチェックを行うには、基になる CLR 型を代わりに使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">情報を取得する必要のある、特定の構文またはコンストラクター モードの個数 (アリティ)。</param>
        <summary>マークアップ拡張型の場合は、この <see cref="T:System.Xaml.XamlType" /> の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型を返します。</summary>
        <returns><see cref="T:System.Xaml.XamlType" /> 値のリスト。各 <see cref="T:System.Xaml.XamlType" /> は構文内でその位置の型に相当します。 マークアップ拡張機能のマークアップ入力を指定する場合は、これらの型を同一の順序で指定する必要があります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.GetPositionalParameters%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、コンストラクターの検索とアリティのチェックに基づいて、内部リフレクション情報が使用されます。 <xref:System.Xaml.XamlType.GetPositionalParameters%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 この API は、この <xref:System.Xaml.XamlType> がマークアップ拡張機能を表している場合にのみ関連します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> が `true`)。  
  
 入力 `parameterCount` は、特定の位置指定パラメーターの型を要求するためのものではありません。 これは、マークアップ拡張機能の使用のアリティを指定するためのものです。 多くの場合、マークアップ拡張機能の使用には複数のシグネチャがあり、区別するために位置指定パラメーターの異なるパラメーターアリティ (カウント) を使用します。 ただし、重複する arities を許可するようにスキーマコンテキストを構成したり、位置指定パラメーターの型を使用して区別したりすることができます。 詳細については、「<xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>」を参照してください。 特定のアリティ数については、パラメーターの位置と型が異なる場合があります。 特定のアリティのマークアップ拡張機能の使用の位置指定型を取得するには、まず、アリティカウントを使用して <xref:System.Xaml.XamlType.GetPositionalParameters%2A> を呼び出します。 次に、返されたコレクションからその位置にある項目を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ拡張機能のセット操作で使用するハンドラー コールバックを返します。</summary>
        <returns>マークアップ拡張機能のセット操作で使用するハンドラー コールバック。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`null`を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>型コンバーターを設定する場合に使用するハンドラーを返します。</summary>
        <returns>型コンバーターを設定する場合に使用するハンドラー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装では、<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`null`を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>周囲の空白をトリムするモードを使用して、この <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns>周囲の空白をトリムするモードでこの <see cref="T:System.Xaml.XamlType" /> をシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`false`を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.TypeConverter%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.ComponentModel.TypeConverterAttribute>の読み取りに基づいて値が返されます。 既定の実装では、直接の基になる型に属性が見つからない場合に、属性の <xref:System.Xaml.XamlType.BaseType%2A> をチェックすることもできます。 また、列挙型、共通値型、ジェネリック型の既定の変換に対する特別なロジックも含まれています。 値が使用できない場合は、`null`を返します。  
  
 <xref:System.Xaml.XamlType.TypeConverter%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.UnderlyingType%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、内部フィールドが返されます。 このフィールドは通常、構築時に初期化され、その値は、呼び出されたコンストラクターと、指定した情報に基づいています。  
  
 <xref:System.Xaml.XamlType.UnderlyingType%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築されるかどうかを示す値を返します。</summary>
        <returns>XAML の初期化中にこの <see cref="T:System.Xaml.XamlType" /> がトップダウンで構築される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 トップダウンは、オブジェクトグラフを作成するときに XAML プロセッサの動作を近似する比喩です。 上から下に構築された場合、型はインスタンス化され、親にアタッチされ、そのプロパティが設定されます。 トップダウン構築では、プロパティ変更ハンドラーを複数回呼び出すことが回避されます。 このような処理によってオブジェクトグラフが解放されるため、は複数のハンドラー呼び出しを排除し、オブジェクトグラフの起動時にパフォーマンスを最適化します。  
  
 このメソッドは、<xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.UsableDuringInitializationAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 値が使用できない場合は、`false`を返します。  
  
 <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約がある <see cref="T:System.Xaml.XamlType" /> を返します。</summary>
        <returns>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Xaml.XamlType.ValueSerializer%2A>を呼び出すことによって呼び出すことができます。  
  
 既定の実装では、<xref:System.Windows.Markup.ValueSerializerAttribute>の読み取りに基づいて値が返されます。 また、直接基になる型に属性が見つからない場合は、属性の <xref:System.Xaml.XamlType.BaseType%2A> を確認することもできます。 また、列挙型、共通値型、またはジェネリックの既定のシリアル化に対する特別なロジックも含まれています。 値が使用できない場合は、`null`を返します。  
  
 <xref:System.Xaml.XamlType.ValueSerializer%2A> が異なるロジックを使用するようにする場合は、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ拡張機能を表す場合、この <see cref="T:System.Xaml.XamlType" /> の返された <see langword="ProvideValue" /> の型情報を提供する値を取得します。</summary>
        <value>マークアップ拡張機能を使用する場合は戻り値の型の <see cref="T:System.Xaml.XamlType" /> オブジェクト。この <see cref="T:System.Xaml.XamlType" /> がマークアップ拡張機能を表していない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、この <xref:System.Xaml.XamlType> がマークアップ拡張機能を表している場合にのみ関連します (`x:MarkupExtension` 割り当て可能な型の一覧にあります)。  
  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> が表す型の文字列名を取得します。</summary>
        <value>この XAML 型の文字列名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、通常、CLR 型システムの適切なコンストラクターを使用して構築されている場合は、(<xref:System.Xaml.XamlType.%23ctor%2A> シグネチャに従って) スキーマによって構築された名前または <xref:System.Type>の名前を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
        <param name="xamlType2"><see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が同一かどうかを判断します。</summary>
        <returns><paramref name="xamlType1" /> の値が <paramref name="xamlType2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
        <param name="xamlType2"><see cref="T:System.Xaml.XamlType" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.XamlType" /> オブジェクトの値が異なるかどうかを判断します。</summary>
        <returns><paramref name="xamlType1" /> の値が <paramref name="xamlType2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> のプライマリ XAML 名前空間である単一の名前空間を取得します。</summary>
        <value>文字列で表される、この XAML 型のプライマリ XAML 名前空間の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装では <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> の呼び出しと同じ値を使用して、返された列挙可能なセットから最初の値の文字列を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlSchemaContext" /> を処理するアクティブな <see cref="T:System.Xaml.XamlType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlSchemaContext> は、<xref:System.Xaml.XamlType>を構築するときに必須のパラメーターエントリです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> の文字列表現を返します。</summary>
        <returns>この <see cref="T:System.Xaml.XamlType" /> の文字列表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Object.ToString%2A> の <xref:System.Xaml.XamlType> の実装は、<xref:System.Xaml.XamlType>の <xref:System.Xaml.XamlType.Name%2A> プロパティを返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツを囲んでいる空白をトリムするシリアル化の空白処理動作がこの <see cref="T:System.Xaml.XamlType" /> に含まれているかどうかを示す値を取得します。</summary>
        <value>この <see cref="T:System.Xaml.XamlType" /> が空白をトリムする型を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表す場合に型引数のリストを取得します。</summary>
        <value>型引数の型のリスト。または、この <see cref="T:System.Xaml.XamlType" /> がジェネリックを表していない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType> には特定のシナリオがあります。この場合、<xref:System.Xaml.XamlType.TypeArguments%2A> パラメーターを呼び出すと、型がまだ開いているリストが返されます。 この場合、返された <xref:System.Xaml.XamlType> 値の1つ以上に、ジェネリックがまだ開いていることを表す `T`などの <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>のプレースホルダー値が設定されます。 このシナリオは、XAML リーダーの実装ではなく、<xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>の呼び出しから <xref:System.Xaml.XamlType> を取得した場合に発生する可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
        <value>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する型変換動作を表す <see cref="T:System.ComponentModel.TypeConverter" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupTypeConverter%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupTypeConverter%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
        <value>この <see cref="T:System.Type" /> の基になる CLR <see cref="T:System.Xaml.XamlType" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" /> を取得します。</summary>
        <value>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の値に対する値のシリアル化動作を表す <see cref="T:System.Windows.Markup.ValueSerializer" /> 制約を持つ <see cref="T:System.Xaml.XamlType" />、または <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType>に対して既定の内部 CLR リフレクション手法を使用しない場合、このプロパティの呼び出しは <xref:System.Xaml.XamlType> 派生クラスで <xref:System.Xaml.XamlType.LookupValueSerializer%2A> オーバーライドを呼び出すことができます。 戻り値とその他の動作の詳細については、この型の <xref:System.Xaml.XamlType.LookupValueSerializer%2A> に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
