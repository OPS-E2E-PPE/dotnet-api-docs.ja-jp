<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a58a388e9112a399f68dfa7188e79db5f94b512e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82483788" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6027e-101"><see cref="T:System.Xaml.IAmbientProvider" /> 実装の一部として、アンビエント プロパティに関する情報を報告します。</span><span class="sxs-lookup"><span data-stu-id="6027e-101">Reports information about an ambient property, as part of an <see cref="T:System.Xaml.IAmbientProvider" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6027e-102"><xref:System.Xaml.AmbientPropertyValue> は、<xref:System.Xaml.IAmbientProvider> サービスメソッドを呼び出すことによって返される情報項目を表します。</span><span class="sxs-lookup"><span data-stu-id="6027e-102"><xref:System.Xaml.AmbientPropertyValue> represents an information item that is returned by calling an <xref:System.Xaml.IAmbientProvider> service method.</span></span> <span data-ttu-id="6027e-103">`GetAll` メソッドは、<xref:System.Xaml.AmbientPropertyValue> 項目の列挙または配列を返します。`GetFirst` メソッドは、1つの <xref:System.Xaml.AmbientPropertyValue>を返します。</span><span class="sxs-lookup"><span data-stu-id="6027e-103">The `GetAll` methods return enumerations or arrays of <xref:System.Xaml.AmbientPropertyValue> items; the `GetFirst` methods return a single <xref:System.Xaml.AmbientPropertyValue>.</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="6027e-104">アンビエントプロパティについて</span><span class="sxs-lookup"><span data-stu-id="6027e-104">About Ambient Properties</span></span>  
 <span data-ttu-id="6027e-105">アンビエントプロパティは、XAML ノード構造およびその下のオブジェクトグラフで値コンバーターの使用に使用できるプロパティ値を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="6027e-105">An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</span></span> <span data-ttu-id="6027e-106">アンビエント概念は、読み込みパスのオブジェクト書き込みフェーズまたは保存パスのシリアル化フェーズ中に、XAML プロセッサに関連します。</span><span class="sxs-lookup"><span data-stu-id="6027e-106">The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="6027e-107">型はアンビエントとして属性を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6027e-107">A type can also be attributed as ambient.</span></span> <span data-ttu-id="6027e-108">この場合、属性付きの型を使用するすべてのプロパティがアンビエントとして報告されます。</span><span class="sxs-lookup"><span data-stu-id="6027e-108">In this case, all properties that use the attributed type are reported as ambient.</span></span>  
  
 <span data-ttu-id="6027e-109">読み込みパスの場合、アンビエントプロパティの値は、XAML ノード構造の下位に存在する他のプロパティの値を生成したオブジェクトグラフに影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6027e-109">In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="6027e-110">アンビエント概念は、XAML ノードストリームとして処理されるときに、アンビエントプロパティ値が `StartObject` から `EndObject`への型コンバーターおよびマークアップ拡張機能で使用できる必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="6027e-110">When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="6027e-111">同様に、保存パスに使用される型コンバーターまたはマークアップ拡張機能は、アンビエントプロパティとその値を参照できます。</span><span class="sxs-lookup"><span data-stu-id="6027e-111">Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</span></span> <span data-ttu-id="6027e-112">したがって、生成される XAML はラウンドトリップ表現の方が適しています。</span><span class="sxs-lookup"><span data-stu-id="6027e-112">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="6027e-113">XAML では、その言語定義によって、オブジェクトのメンバーを処理する順序が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="6027e-113">By its language definition, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="6027e-114">ただし、他のプロパティに含まれている型コンバーターおよびマークアップ拡張機能の使用によって <xref:System.Xaml.IAmbientProvider> サービスを介してアクセスできるように、アンビエントプロパティ値は、最初に XAML リーダーによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="6027e-114">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="6027e-115"><xref:System.Xaml.XamlMember.DependsOn%2A> は、XAML ノードの処理順序にも影響を与える同様の概念です。</span><span class="sxs-lookup"><span data-stu-id="6027e-115"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="6027e-116">ただし、<xref:System.Xaml.XamlMember.DependsOn%2A> は、ピアメンバーとノードのリレーションシップに対してのみ使用できます。すべての子孫に影響を与えることはできません。</span><span class="sxs-lookup"><span data-stu-id="6027e-116">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="6027e-117">また <xref:System.Xaml.XamlMember.DependsOn%2A> は、オブジェクトグラフのプロパティ設定に直接影響します。一方、アンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存します。</span><span class="sxs-lookup"><span data-stu-id="6027e-117">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="6027e-118">アンビエント手法では、特定の型コンバーターまたはマークアップ拡張機能の定義も必要です。</span><span class="sxs-lookup"><span data-stu-id="6027e-118">In the ambient technique, there must also be a specific type converter or markup extension definition.</span></span> <span data-ttu-id="6027e-119">アンビエントプロパティ値を解釈し、型コンバーターまたはマークアップ拡張機能が使用されているオブジェクトグラフの場所に適用する方法を決定するには、それぞれの型コンバーターまたはマークアップ拡張機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="6027e-119">It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="6027e-120">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="6027e-120">WPF Usage Notes</span></span>  
 <span data-ttu-id="6027e-121">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 機能セットに示されているアンビエントプロパティのシナリオは <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>であり、他の値に必要なプロパティ名の参照を修飾できます。</span><span class="sxs-lookup"><span data-stu-id="6027e-121">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="6027e-122">この場合、<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 値は、その下にある XAML ノードの <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 値を修飾します。</span><span class="sxs-lookup"><span data-stu-id="6027e-122">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values in the XAML nodes underneath it.</span></span> <span data-ttu-id="6027e-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> は、<xref:System.Windows.DependencyProperty>に対して型コンバーターの動作を使用します。</span><span class="sxs-lookup"><span data-stu-id="6027e-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="6027e-124">この動作では、型コンバーターおよびマークアップ拡張機能で使用できるサービスコンテキストから <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> を照会することによって、アンビエント <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 値にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6027e-124">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="6027e-125">アンビエント プロパティを表す識別子。</span><span class="sxs-lookup"><span data-stu-id="6027e-125">The identifier that represents the ambient property.</span></span></param>
        <param name="value"><span data-ttu-id="6027e-126">報告される値。</span><span class="sxs-lookup"><span data-stu-id="6027e-126">The value to report.</span></span></param>
        <summary><span data-ttu-id="6027e-127"><see cref="T:System.Xaml.AmbientPropertyValue" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6027e-127">Initializes a new instance of the <see cref="T:System.Xaml.AmbientPropertyValue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6027e-128">アンビエント プロパティを表す XAML 型システム識別子 (<see cref="T:System.Xaml.XamlMember" />) を取得します。</span><span class="sxs-lookup"><span data-stu-id="6027e-128">Gets the XAML type system identifier (<see cref="T:System.Xaml.XamlMember" />) that represents the ambient property.</span></span></summary>
        <value><span data-ttu-id="6027e-129">アンビエント プロパティを表す識別子。</span><span class="sxs-lookup"><span data-stu-id="6027e-129">The identifier that represents the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6027e-130">アンビエント プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6027e-130">Gets the value of the ambient property.</span></span></summary>
        <value><span data-ttu-id="6027e-131">アンビエント プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="6027e-131">The value of the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
