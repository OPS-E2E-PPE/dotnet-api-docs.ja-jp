<Type Name="SendParametersContent" FullName="System.ServiceModel.Activities.SendParametersContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6b7e96657c9e07498a23eb39f1aa7bd2d0e913a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82465055" /></Metadata><TypeSignature Language="C#" Value="public sealed class SendParametersContent : System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendParametersContent extends System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.SendParametersContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendParametersContent&#xA;Inherits SendContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendParametersContent sealed : System::ServiceModel::Activities::SendContent" />
  <TypeSignature Language="F#" Value="type SendParametersContent = class&#xA;    inherit SendContent" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activities.SendContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Parameters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="078c7-101">ワークフロー サービスとの間でパラメーター形式のデータを送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="078c7-101">Enables sending data to or from a workflow service in the form of parameters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="078c7-102"><xref:System.ServiceModel.Activities.SendParametersContent> は、通常の WCF クライアントおよびサービスと相互運用できます。</span><span class="sxs-lookup"><span data-stu-id="078c7-102"><xref:System.ServiceModel.Activities.SendParametersContent> is interoperable with regular WCF clients and services.</span></span> <span data-ttu-id="078c7-103"><xref:System.ServiceModel.Activities.SendParametersContent> コレクションは、 C#メソッドシグネチャの引数宣言に似ています。</span><span class="sxs-lookup"><span data-stu-id="078c7-103">The <xref:System.ServiceModel.Activities.SendParametersContent> collection is similar to the argument declaration on a C# method signature.</span></span> <span data-ttu-id="078c7-104"><xref:System.ServiceModel.Activities.SendParametersContent> コレクションには、メッセージコントラクトまたは <xref:System.ServiceModel.Channels.Message>型の引数を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="078c7-104">The <xref:System.ServiceModel.Activities.SendParametersContent> collection cannot contain an argument that is a message contract or of type <xref:System.ServiceModel.Channels.Message>.</span></span> <span data-ttu-id="078c7-105">これらのデータ型には、<xref:System.ServiceModel.Activities.SendMessageContent> を使用します。</span><span class="sxs-lookup"><span data-stu-id="078c7-105">Use <xref:System.ServiceModel.Activities.SendMessageContent> for these types of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="078c7-106"><xref:System.ServiceModel.Activities.SendParametersContent> クラスを使用する方法を示す例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="078c7-106">The following example shows how to use the <xref:System.ServiceModel.Activities.SendParametersContent> class.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="078c7-107"><see cref="T:System.ServiceModel.Activities.SendParametersContent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="078c7-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendParametersContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendParametersContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendParametersContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="078c7-108"><see cref="T:System.ServiceModel.Activities.SendParametersContent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="078c7-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendParametersContent (System.Collections.Generic.IDictionary&lt;string,System.Activities.InArgument&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.InArgument&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As IDictionary(Of String, InArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendParametersContent(System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendParametersContent : System.Collections.Generic.IDictionary&lt;string, System.Activities.InArgument&gt; -&gt; System.ServiceModel.Activities.SendParametersContent" Usage="new System.ServiceModel.Activities.SendParametersContent parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Activities.InArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="078c7-109">パラメーター名を含むキーと引数を含む値で構成された、キーと値のペアのコレクション。</span><span class="sxs-lookup"><span data-stu-id="078c7-109">A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</span></span></param>
        <summary><span data-ttu-id="078c7-110">指定したパラメーターを使用して、<see cref="T:System.ServiceModel.Activities.SendParametersContent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="078c7-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class with the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="078c7-111">次の例は、この <xref:System.ServiceModel.Activities.SendParametersContent> コンストラクターを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="078c7-111">The following example shows how to use this <xref:System.ServiceModel.Activities.SendParametersContent> constructor.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Activities.InArgument&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.InArgument&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDictionary(Of String, InArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ Parameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::Activities::InArgument ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IDictionary&lt;string, System.Activities.InArgument&gt;" Usage="System.ServiceModel.Activities.SendParametersContent.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Activities.InArgument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="078c7-112">ワークフロー サービス操作のパラメーターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="078c7-112">Gets or sets the workflow service operation parameters.</span></span></summary>
        <value><span data-ttu-id="078c7-113">パラメーター名を含むキーと引数を含む値で構成された、キーと値のペアの順序付けられたコレクション。</span><span class="sxs-lookup"><span data-stu-id="078c7-113">An ordered collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="078c7-114"><xref:System.ServiceModel.Activities.SendParametersContent.Parameters%2A> プロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="078c7-114">The following example shows how to set the <xref:System.ServiceModel.Activities.SendParametersContent.Parameters%2A> property.</span></span>  
  
 [!code-csharp[SendReceiveParameters#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendreceiveparameters/cs/echoworkflowservice/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
