<Type Name="CryptoStream" FullName="System.Security.Cryptography.CryptoStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc31d0132b9fa07c4e0be610653aae4201ac3136" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82328906" /></Metadata><TypeSignature Language="C#" Value="public class CryptoStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoStream extends System.IO.Stream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoStream" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type CryptoStream = class&#xA;    inherit Stream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68a1a-101">データ ストリームを暗号変換にリンクするストリームを定義します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-101">Defines a stream that links data streams to cryptographic transformations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-102">共通言語ランタイムでは、暗号化にストリーム指向のデザインを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-102">The common language runtime uses a stream-oriented design for cryptography.</span></span> <span data-ttu-id="68a1a-103">この設計の中核となるのは、<xref:System.Security.Cryptography.CryptoStream>です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-103">The core of this design is <xref:System.Security.Cryptography.CryptoStream>.</span></span> <span data-ttu-id="68a1a-104"><xref:System.Security.Cryptography.CryptoStream> を実装する暗号化オブジェクトは、<xref:System.IO.Stream>を実装するすべてのオブジェクトと連結できます。そのため、1つのオブジェクトからのストリーム出力を別のオブジェクトの入力に渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-104">Any cryptographic objects that implement <xref:System.Security.Cryptography.CryptoStream> can be chained together with any objects that implement <xref:System.IO.Stream>, so the streamed output from one object can be fed into the input of another object.</span></span> <span data-ttu-id="68a1a-105">中間結果 (最初のオブジェクトからの出力) は、個別に保存する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-105">The intermediate result (the output from the first object) does not need to be stored separately.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="68a1a-106">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="68a1a-107">型の使用が完了したら、その <xref:System.Security.Cryptography.CryptoStream.Clear%2A> メソッドを呼び出すことによって、直接または間接的にその型を破棄する必要があります。このメソッドは、<xref:System.IDisposable> の実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-107">When you have finished using the type, you should dispose of it either directly or indirectly by calling its <xref:System.Security.Cryptography.CryptoStream.Clear%2A> method, which in turn calls its <xref:System.IDisposable> implementation.</span></span> <span data-ttu-id="68a1a-108">直接的に型を破棄するには、<xref:System.Security.Cryptography.CryptoStream.Clear%2A>`try`/ ブロック内で `catch` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-108">To dispose of the type directly, call its <xref:System.Security.Cryptography.CryptoStream.Clear%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="68a1a-109">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="68a1a-110">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="68a1a-111"><xref:System.Security.Cryptography.CryptoStream> オブジェクトは、<xref:System.Security.Cryptography.CryptoStream.Clear%2A> メソッドを呼び出すことによって、常に明示的に閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-111">You should always explicitly close your <xref:System.Security.Cryptography.CryptoStream> object after you are done using it by calling the <xref:System.Security.Cryptography.CryptoStream.Clear%2A> method.</span></span>  <span data-ttu-id="68a1a-112">これにより、基になるストリームがフラッシュされ、残りのすべてのデータブロックが <xref:System.Security.Cryptography.CryptoStream> オブジェクトによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-112">Doing so flushes the underlying stream and causes all remaining blocks of data to be processed by the <xref:System.Security.Cryptography.CryptoStream> object.</span></span>  <span data-ttu-id="68a1a-113">ただし、<xref:System.IO.Stream.Close%2A> メソッドを呼び出す前に例外が発生した場合、<xref:System.Security.Cryptography.CryptoStream> オブジェクトは閉じられない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-113">However, if an exception occurs before you call the <xref:System.IO.Stream.Close%2A> method, the <xref:System.Security.Cryptography.CryptoStream> object might not be closed.</span></span>  <span data-ttu-id="68a1a-114"><xref:System.IO.Stream.Close%2A> メソッドが常に呼び出されるようにするには、`try`/`catch` ステートメントの `finally` ブロック内の <xref:System.Security.Cryptography.CryptoStream.Clear%2A> メソッドに呼び出しを配置します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-114">To ensure that the <xref:System.IO.Stream.Close%2A> method always gets called, place your call to the <xref:System.Security.Cryptography.CryptoStream.Clear%2A> method within the `finally` block of a `try`/`catch` statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68a1a-115">次の例では、<xref:System.Security.Cryptography.CryptoStream> を使用して文字列を暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-115">The following example demonstrates how to use a <xref:System.Security.Cryptography.CryptoStream> to encrypt a string.</span></span> <span data-ttu-id="68a1a-116">このメソッドは、指定された <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> および初期化ベクター (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) で <xref:System.Security.Cryptography.RijndaelManaged> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-116">This method uses <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>).</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-117">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-117">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptoStream (System.IO.Stream stream, System.Security.Cryptography.ICryptoTransform transform, System.Security.Cryptography.CryptoStreamMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Security.Cryptography.ICryptoTransform transform, valuetype System.Security.Cryptography.CryptoStreamMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, transform As ICryptoTransform, mode As CryptoStreamMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CryptoStream(System::IO::Stream ^ stream, System::Security::Cryptography::ICryptoTransform ^ transform, System::Security::Cryptography::CryptoStreamMode mode);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CryptoStream : System.IO.Stream * System.Security.Cryptography.ICryptoTransform * System.Security.Cryptography.CryptoStreamMode -&gt; System.Security.Cryptography.CryptoStream" Usage="new System.Security.Cryptography.CryptoStream (stream, transform, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="transform" Type="System.Security.Cryptography.ICryptoTransform" />
        <Parameter Name="mode" Type="System.Security.Cryptography.CryptoStreamMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="68a1a-118">暗号変換を実行する対象のストリーム。</span><span class="sxs-lookup"><span data-stu-id="68a1a-118">The stream on which to perform the cryptographic transformation.</span></span></param>
        <param name="transform"><span data-ttu-id="68a1a-119">指定したストリームで実行する暗号変換。</span><span class="sxs-lookup"><span data-stu-id="68a1a-119">The cryptographic transformation that is to be performed on the stream.</span></span></param>
        <param name="mode"><span data-ttu-id="68a1a-120"><see cref="T:System.Security.Cryptography.CryptoStreamMode" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="68a1a-120">One of the <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> values.</span></span></param>
        <summary><span data-ttu-id="68a1a-121">暗号化の対象とするデータ ストリーム、使用する変換、およびストリームのモードを指定して、<see cref="T:System.Security.Cryptography.CryptoStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-121">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptoStream" /> class with a target data stream, the transformation to use, and the mode of the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-122"><xref:System.IO.Stream> から派生したオブジェクトは、`stream` パラメーターに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-122">Any object that derives from <xref:System.IO.Stream> can be passed into the `stream` parameter.</span></span> <span data-ttu-id="68a1a-123"><xref:System.Security.Cryptography.ICryptoTransform> を実装するオブジェクト (<xref:System.Security.Cryptography.HashAlgorithm>など) は、`transform` パラメーターに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-123">Any object that implements <xref:System.Security.Cryptography.ICryptoTransform> (such as <xref:System.Security.Cryptography.HashAlgorithm>) can be passed into the `transform` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-124"><paramref name="stream" /> が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-124"><paramref name="stream" /> is invalid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-125">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-125">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptoStream (System.IO.Stream stream, System.Security.Cryptography.ICryptoTransform transform, System.Security.Cryptography.CryptoStreamMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Security.Cryptography.ICryptoTransform transform, valuetype System.Security.Cryptography.CryptoStreamMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, transform As ICryptoTransform, mode As CryptoStreamMode, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CryptoStream(System::IO::Stream ^ stream, System::Security::Cryptography::ICryptoTransform ^ transform, System::Security::Cryptography::CryptoStreamMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CryptoStream : System.IO.Stream * System.Security.Cryptography.ICryptoTransform * System.Security.Cryptography.CryptoStreamMode * bool -&gt; System.Security.Cryptography.CryptoStream" Usage="new System.Security.Cryptography.CryptoStream (stream, transform, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="transform" Type="System.Security.Cryptography.ICryptoTransform" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Security.Cryptography.CryptoStreamMode" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="68a1a-126">暗号変換を実行する対象のストリーム。</span><span class="sxs-lookup"><span data-stu-id="68a1a-126">The stream on which to perform the cryptographic transformation.</span></span></param>
        <param name="transform"><span data-ttu-id="68a1a-127">指定したストリームで実行する暗号変換。</span><span class="sxs-lookup"><span data-stu-id="68a1a-127">The cryptographic transformation that is to be performed on the stream.</span></span></param>
        <param name="mode"><span data-ttu-id="68a1a-128">ストリームのモード。</span><span class="sxs-lookup"><span data-stu-id="68a1a-128">The mode of the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="68a1a-129"><see langword="true" /> オブジェクトが破棄されるときに基礎となるストリームを閉じない場合は <see cref="T:System.Security.Cryptography.CryptoStream" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68a1a-129"><see langword="true" /> to not close the underlying stream when the <see cref="T:System.Security.Cryptography.CryptoStream" /> object is disposed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="68a1a-130"><see cref="T:System.Security.Cryptography.CryptoStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptoStream" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-131"><paramref name="mode" /> が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-131"><paramref name="mode" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="cryptoStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-132">データの読み込み先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="68a1a-132">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-133">ストリームから読み込んだデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-133">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-134">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-134">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="68a1a-135">読み取りを完了したときに呼び出す、省略可能な非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="68a1a-135">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="68a1a-136">この特定の非同期読み取り要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68a1a-136">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="68a1a-137">非同期の読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-137">Begins an asynchronous read operation.</span></span> <span data-ttu-id="68a1a-138">(代わりに、<see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="68a1a-138">(Consider using <see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="68a1a-139">非同期の読み込みを表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-139">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-140">.NET Framework 4 およびそれ以前のバージョンで非同期 I/O 操作を実装するには、 <xref:System.IO.Stream.BeginRead%2A> 、 <xref:System.IO.Stream.EndRead%2A> などのメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-140">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="68a1a-141">これらのメソッドは、レガシコードをサポートするために .NET で引き続き使用できます。ただし、<xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-141">These methods are still available in .NET to support legacy code; however, the new async methods, such as <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>, <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="68a1a-142">`IAsyncResult` 戻り値をストリームの <xref:System.Security.Cryptography.CryptoStream.EndRead%2A> メソッドに渡して、読み取ったバイト数を確認し、読み取りに使用するオペレーティングシステムリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-142">Pass the `IAsyncResult` return value to the <xref:System.Security.Cryptography.CryptoStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="68a1a-143"><xref:System.Security.Cryptography.CryptoStream.BeginRead%2A>を呼び出すたびに、<xref:System.Security.Cryptography.CryptoStream.EndRead%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-143"><xref:System.Security.Cryptography.CryptoStream.EndRead%2A> must be called once for every call to <xref:System.Security.Cryptography.CryptoStream.BeginRead%2A>.</span></span> <span data-ttu-id="68a1a-144">これを行うには、`BeginRead` を呼び出したコードと同じコードを使用するか、`BeginRead`に渡されたコールバックを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-144">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="68a1a-145">ストリーム内の現在位置は、i/o 操作が完了したときではなく、非同期の読み取りまたは書き込みが実行されたときに更新されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-145">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="68a1a-146">複数の同時非同期要求は、要求の完了順序が不明確であることを表示します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-146">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="68a1a-147">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.Security.Cryptography.CryptoStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-147">Use the <xref:System.Security.Cryptography.CryptoStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="68a1a-148">ストリームが閉じている場合、または無効な引数を渡した場合、`BeginRead`からすぐに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-148">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="68a1a-149">I/o 要求中のディスク障害など、非同期の読み取り要求中に発生したエラーは、スレッドプールのスレッドで発生し、`EndRead`を呼び出すときに例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-149">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="68a1a-150">ストリームの末尾を越えて非同期の読み込みを実行しようとしました。または、ディスク エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-150">Attempted an asynchronous read past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-151">1 つ以上の引数が無効です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-151">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-152">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-152">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-153">現在の <see langword="Stream" /> 実装は、読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-153">The current <see langword="Stream" /> implementation does not support the read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="cryptoStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-154">書き込むデータの取得元のバッファーです。</span><span class="sxs-lookup"><span data-stu-id="68a1a-154">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-155">書き込むデータの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-155">The byte offset in <paramref name="buffer" /> from which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-156">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-156">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="68a1a-157">書き込みを完了したときに呼び出す、省略可能な非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="68a1a-157">An optional asynchronous callback, to be called when the write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="68a1a-158">この特定の非同期書き込み要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68a1a-158">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="68a1a-159">非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-159">Begins an asynchronous write operation.</span></span> <span data-ttu-id="68a1a-160">(代わりに、<see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="68a1a-160">(Consider using <see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="68a1a-161">非同期の書き込みを表す <see langword="IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-161">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-162">.NET Framework 4 およびそれ以前のバージョンで非同期 I/O 操作を実装するには、 <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A> 、 <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> などのメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-162">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A> and <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="68a1a-163">これらのメソッドは、レガシコードをサポートするために .NET で引き続き使用できます。ただし、<xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-163">These methods are still available in .NET to support legacy code; however, the new async methods, such as <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>, <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="68a1a-164">現在のメソッドから返された `IAsyncResult` を <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> に渡して、書き込みが完了し、リソースが適切に解放されるようにします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-164">Pass the `IAsyncResult` returned by the current method to <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="68a1a-165"><xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A>を呼び出すたびに、<xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> を1回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-165"><xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> must be called once for every call to <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A>.</span></span> <span data-ttu-id="68a1a-166">これを行うには、`BeginWrite` を呼び出したコードと同じコードを使用するか、`BeginWrite`に渡されたコールバックを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-166">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="68a1a-167">非同期書き込み中にエラーが発生した場合、このメソッドによって返された `IAsyncResult` を使用して `EndWrite` が呼び出されるまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-167">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="68a1a-168">ストリームが書き込み可能な場合は、ストリームの末尾に書き込みを行うとストリームが拡張されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-168">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="68a1a-169">ストリーム内の現在位置は、i/o 操作が完了したときではなく、非同期の読み取りまたは書き込みを発行したときに更新されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-169">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="68a1a-170">複数の同時非同期要求は、要求の完了順序が不明確であることを表示します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-170">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="68a1a-171">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.Security.Cryptography.CryptoStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-171">Use the <xref:System.Security.Cryptography.CryptoStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="68a1a-172">ストリームが閉じている場合、または無効な引数を渡した場合、`BeginWrite`からすぐに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-172">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="68a1a-173">I/o 要求中のディスク障害など、非同期書き込み要求中に発生したエラーは、スレッドプールのスレッドで発生し、`EndWrite`を呼び出すときに例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-173">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="68a1a-174">ファイルの末尾を越えて非同期の書き込みを実行しようとしました。または、ディスク エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-174">Attempted an asynchronous write past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-175">1 つ以上の引数が無効です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-175">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-176">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-176">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-177">現在の <see langword="Stream" /> 実装は、書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-177">The current <see langword="Stream" /> implementation does not support the write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Security.Cryptography.CryptoStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-178">現在の <see cref="T:System.Security.Cryptography.CryptoStream" /> が読み取り可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-178">Gets a value indicating whether the current <see cref="T:System.Security.Cryptography.CryptoStream" /> is readable.</span></span></summary>
        <value><span data-ttu-id="68a1a-179">現在のストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68a1a-179"><see langword="true" /> if the current stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-180">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-180">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Security.Cryptography.CryptoStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-181">現在の <see cref="T:System.Security.Cryptography.CryptoStream" /> 内でシークできるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-181">Gets a value indicating whether you can seek within the current <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
        <value><span data-ttu-id="68a1a-182">常に <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-182">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-183"><xref:System.Security.Cryptography.CryptoStream>でシークが有効になっていないため、このメソッドは常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-183">Seeking is not enabled in a <xref:System.Security.Cryptography.CryptoStream>, so this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-184">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-184">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Security.Cryptography.CryptoStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-185">現在の <see cref="T:System.Security.Cryptography.CryptoStream" /> が書き込み可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-185">Gets a value indicating whether the current <see cref="T:System.Security.Cryptography.CryptoStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="68a1a-186">現在のストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68a1a-186"><see langword="true" /> if the current stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-187">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-187">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cryptoStream.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-188"><see cref="T:System.Security.Cryptography.CryptoStream" /> で使用されるすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-188">Releases all resources used by the <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-189">このメソッドは、型の <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 実装への呼び出しをラップします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-189">This method wraps a call to the type's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="68a1a-190">`Dispose` を呼び出すと、<xref:System.Security.Cryptography.CryptoStream> によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-190">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="68a1a-191">`Dispose`の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-191">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md)</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-192">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-192">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="cryptoStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-193">現在のストリームを閉じ、現在のストリームに関連付けられているすべてのリソース (ソケット、ファイル ハンドルなど) を解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-193">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="cryptoStream.Dispose disposing" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoStream.Dispose disposing" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="68a1a-194">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68a1a-194"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="68a1a-195"><see cref="T:System.Security.Cryptography.CryptoStream" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-195">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.CryptoStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-196">このメソッドは、パブリックな `Dispose()` メソッドと `Finalize` メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-196">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="68a1a-197">`Dispose()` は、disposing パラメーターを `Dispose(Boolean)` に設定して、protected `true` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-197">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="68a1a-198">`Finalize` は、disposing を `Dispose` に設定して `false` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-198">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="68a1a-199">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.CryptoStream> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-199">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.CryptoStream> references.</span></span> <span data-ttu-id="68a1a-200">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-200">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="68a1a-201">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-201">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="68a1a-202"><see langword="Dispose(Boolean)" />をオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-202">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="68a1a-203"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-203">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="68a1a-204"><see langword="Dispose" /> と <see langword="Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-204">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-205">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-205">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="cryptoStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-206"><see cref="T:System.Security.Cryptography.CryptoStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-206">Asynchronously releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
        <returns><span data-ttu-id="68a1a-207">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="68a1a-207">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-208"><xref:System.Security.Cryptography.CryptoStream.DisposeAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する dispose 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-208">The <xref:System.Security.Cryptography.CryptoStream.DisposeAsync%2A> method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="68a1a-209">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-209">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="68a1a-210">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-210">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span> 
 
 <span data-ttu-id="68a1a-211">このメソッドは、バッキングストアに変更を書き込んでストリームを破棄し、リソースを解放するためにストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-211">This method disposes the stream by writing any changes to the backing store and closing the stream to release resources.</span></span>   
  
 <span data-ttu-id="68a1a-212">`DisposeAsync` を呼び出すと、<xref:System.Security.Cryptography.CryptoStream> によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-212">Calling `DisposeAsync` allows the resources used by the <xref:System.Security.Cryptography.CryptoStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="68a1a-213">詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-213">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="cryptoStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="68a1a-214">完了する保留中の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="68a1a-214">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="68a1a-215">保留中の非同期の読み取りが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-215">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="68a1a-216">(代わりに、<see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="68a1a-216">(Consider using <see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="68a1a-217">ストリームから読み取ったバイト数 (0 から要求したバイト数までの範囲)。</span><span class="sxs-lookup"><span data-stu-id="68a1a-217">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span></span> <span data-ttu-id="68a1a-218">ゼロ (0) が返されるのはストリームの終端に達している場合だけです。それ以外の場合は、少なくとも 1 バイト使用できるようになるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-218">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-219">.NET Framework 4 およびそれ以前のバージョンで非同期 I/O 操作を実装するには、 <xref:System.Security.Cryptography.CryptoStream.BeginRead%2A> 、 <xref:System.Security.Cryptography.CryptoStream.EndRead%2A> などのメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-219">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.Security.Cryptography.CryptoStream.BeginRead%2A> and <xref:System.Security.Cryptography.CryptoStream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="68a1a-220">これらのメソッドは、レガシコードをサポートするために .NET で引き続き使用できます。ただし、<xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-220">These methods are still available in .NET to support legacy code; however, the new async methods, such as <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>, <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="68a1a-221">`EndRead` を呼び出して、ストリームから読み取ったバイト数を確認します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-221">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="68a1a-222">`EndRead` は、<xref:System.Security.Cryptography.CryptoStream.BeginRead%2A>からのすべての <xref:System.IAsyncResult> で1回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-222">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.Security.Cryptography.CryptoStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="68a1a-223">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-223">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68a1a-224"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-224"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-225">保留中の読み取り操作へのハンドルは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-225">A handle to the pending read operation is not available.</span></span>  
  
 <span data-ttu-id="68a1a-226">または</span><span class="sxs-lookup"><span data-stu-id="68a1a-226">-or-</span></span>  
  
 <span data-ttu-id="68a1a-227">保留中の操作は読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-227">The pending operation does not support reading.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68a1a-228"><paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.Security.Cryptography.CryptoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68a1a-228"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.Security.Cryptography.CryptoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="68a1a-229">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-229">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="cryptoStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="68a1a-230">未処理の非同期 I/O 要求への参照。</span><span class="sxs-lookup"><span data-stu-id="68a1a-230">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="68a1a-231">非同期の書き込み操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-231">Ends an asynchronous write operation.</span></span> <span data-ttu-id="68a1a-232">(代わりに、<see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" /> の使用を検討してください。)</span><span class="sxs-lookup"><span data-stu-id="68a1a-232">(Consider using <see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-233">.NET Framework 4 およびそれ以前のバージョンで非同期 I/O 操作を実装するには、 <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A> 、 <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> などのメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-233">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A> and <xref:System.Security.Cryptography.CryptoStream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="68a1a-234">これらのメソッドは、レガシコードをサポートするために .NET で引き続き使用できます。ただし、<xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>、<xref:System.IO.Stream.CopyToAsync%2A>、<xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>などの新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-234">These methods are still available in .NET to support legacy code; however, the new async methods, such as <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A>, <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="68a1a-235">`EndWrite` は、<xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A>からのすべての <xref:System.IAsyncResult> で1回だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-235">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.Security.Cryptography.CryptoStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="68a1a-236">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-236">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="68a1a-237">I/o 要求中のディスク障害など、非同期書き込み要求中に発生したエラーは、スレッドプールのスレッドで発生し、`EndWrite`の呼び出し時に表示されるようになります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-237">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="68a1a-238">スレッドプールのスレッドによってスローされた例外は、`EndWrite`を呼び出すときに表示されません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-238">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68a1a-239"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-239"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-240">保留中の書き込み操作へのハンドルは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-240">A handle to the pending write operation is not available.</span></span>  
  
 <span data-ttu-id="68a1a-241">または</span><span class="sxs-lookup"><span data-stu-id="68a1a-241">-or-</span></span>  
  
 <span data-ttu-id="68a1a-242">保留中の操作は書き込みをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-242">The pending operation does not support writing.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68a1a-243"><paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68a1a-243"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="68a1a-244">ストリームが閉じているか、内部エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-244">The stream is closed or an internal error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-245">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-245">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="cryptoStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-246">現在のストリームのバッファーをすべてクリアし、バッファー内にあるデータすべてを、基になるデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-246">Clears all buffers for the current stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-247">明示的に <xref:System.Security.Cryptography.CryptoStream.Flush%2A> または <xref:System.IO.Stream.Close%2A>を呼び出さない限り、ストリームをフラッシュしても、基になるエンコーダーはフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Security.Cryptography.CryptoStream.Flush%2A> or <xref:System.IO.Stream.Close%2A>.</span></span> <span data-ttu-id="68a1a-248"><xref:System.IO.StreamWriter.AutoFlush%2A> を `true` に設定すると、バッファーからストリームにデータがフラッシュされますが、エンコーダーの状態はフラッシュされません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-248">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="68a1a-249">これにより、エンコーダーは次の文字ブロックを正しくエンコードできるように、その状態 (部分文字) を保持できます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="68a1a-250">このシナリオは、エンコーダーが隣接する文字を受け取ると、特定の文字のみをエンコードできる UTF8 と UTF7 に影響します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68a1a-251">バッファーのフラッシュを完了するには、<xref:System.IO.Stream.Close%2A> メソッドまたは <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-251">You should call either the <xref:System.IO.Stream.Close%2A> method or the <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> method to complete flushing the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-252">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-252">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cryptoStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="68a1a-253">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="68a1a-253">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="68a1a-254">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-254">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="68a1a-255">現在のストリームのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-255">Clears all buffers for the current stream asynchronously, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="68a1a-256">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="68a1a-256">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-257">タスクが完了するまでメソッドの実行を中断するC#には、`await` () または `Await` (Visual Basic) 演算子を使用して <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-257">You must preface your call to <xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A> with the `await` (C#) or `Await` (Visual Basic) operator to suspend execution of the method until the task is complete.</span></span> <span data-ttu-id="68a1a-258">詳細については、「[Async および Await を使用した非同期プログラミング](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-258">For more information, see [Asynchronous Programming with Async and Await](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7).</span></span>  
  
 <span data-ttu-id="68a1a-259">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-259">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-260">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-260">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushFinalBlock">
      <MemberSignature Language="C#" Value="public void FlushFinalBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushFinalBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushFinalBlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlushFinalBlock();" />
      <MemberSignature Language="F#" Value="member this.FlushFinalBlock : unit -&gt; unit" Usage="cryptoStream.FlushFinalBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-261">基になるデータ ソースまたはリポジトリをバッファーの現在の状態に更新し、その後でバッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-261">Updates the underlying data source or repository with the current state of the buffer, then clears the buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-262"><xref:System.IO.Stream.Close%2A> メソッドを呼び出すと、<xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-262">Calling the <xref:System.IO.Stream.Close%2A> method will call <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A>.</span></span> <span data-ttu-id="68a1a-263"><xref:System.IO.Stream.Close%2A>を呼び出さない場合は、<xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> を呼び出してバッファーのフラッシュを完了します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-263">If you do not call <xref:System.IO.Stream.Close%2A>, call <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> to complete flushing the buffer.</span></span> <span data-ttu-id="68a1a-264">すべてのストリームアクティビティが完了した場合にのみ <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-264">Call <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> only when all stream activity is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="68a1a-265">キーが破損しており、ストリームに無効な埋め込みが行われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-265">The key is corrupt which can cause invalid padding to the stream.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-266">現在のストリームが書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-266">The current stream is not writable.</span></span>  
  
 <span data-ttu-id="68a1a-267">または</span><span class="sxs-lookup"><span data-stu-id="68a1a-267">-or-</span></span>  
  
 <span data-ttu-id="68a1a-268">最後のブロックが既に変換されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-268">The final block has already been transformed.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-269">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-269">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasFlushedFinalBlock">
      <MemberSignature Language="C#" Value="public bool HasFlushedFinalBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFlushedFinalBlock" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFlushedFinalBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFlushedFinalBlock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFlushedFinalBlock : bool" Usage="System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-270">最後のバッファー ブロックが基になるストリームに書き込まれたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-270">Gets a value indicating whether the final buffer block has been written to the underlying stream.</span></span></summary>
        <value><span data-ttu-id="68a1a-271">最後のブロックがフラッシュされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68a1a-271"><see langword="true" /> if the final block has been flushed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-272">このプロパティは、<xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> メソッドが呼び出されたときに `true` 設定されます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-272">This property is set `true` when the <xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Security.Cryptography.CryptoStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-273">ストリームの長さをバイト単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-273">Gets the length in bytes of the stream.</span></span></summary>
        <value><span data-ttu-id="68a1a-274">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-274">This property is not supported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-275">このプロパティは <xref:System.IO.Stream> からの継承をサポートするためだけのもので、使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-275">This property exists only to support inheritance from <xref:System.IO.Stream>, and cannot be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-276">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-276">This property is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-277">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-277">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Security.Cryptography.CryptoStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68a1a-278">現在のストリーム内の位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-278">Gets or sets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="68a1a-279">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-279">This property is not supported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-280">このプロパティは <xref:System.IO.Stream> からの継承をサポートするためだけのもので、使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-280">This property exists only to support inheritance from <xref:System.IO.Stream>, and cannot be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-281">このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-281">This property is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-282">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-282">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="cryptoStream.Read (buffer, offset, count)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-283">バイトの配列です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-283">An array of bytes.</span></span> <span data-ttu-id="68a1a-284">現在のストリームから最大で <paramref name="count" /> バイトを読み取り、<paramref name="buffer" /> 内に格納します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-284">A maximum of <paramref name="count" /> bytes are read from the current stream and stored in <paramref name="buffer" />.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-285">現在のストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-285">The byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-286">現在のストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-286">The maximum number of bytes to be read from the current stream.</span></span></param>
        <summary><span data-ttu-id="68a1a-287">現在のストリームからバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-287">Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="68a1a-288">バッファーに読み取られた合計バイト数です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-288">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="68a1a-289">要求されたバイト数をその時点で読み取れなかった場合、この値は要求されたバイト数より小さくなることがあります。ストリームの末尾に達していた場合は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-289">This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-290">現在の <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> オブジェクトと関連付けられた <see cref="T:System.Security.Cryptography.CryptoStream" /> が、使用されているストリームと一致しません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-290">The <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> associated with current <see cref="T:System.Security.Cryptography.CryptoStream" /> object does not match the underlying stream.</span></span>  <span data-ttu-id="68a1a-291"><see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /> を書き込み専用のストリームで使用した場合などに、この例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-291">For example, this exception is thrown when using <see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /> with an underlying stream that is write only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68a1a-292"><paramref name="offset" /> パラメーターが 0 未満。</span><span class="sxs-lookup"><span data-stu-id="68a1a-292">The <paramref name="offset" /> parameter is less than zero.</span></span>  
  
<span data-ttu-id="68a1a-293">または</span><span class="sxs-lookup"><span data-stu-id="68a1a-293">-or-</span></span> 
<span data-ttu-id="68a1a-294"><paramref name="count" /> パラメーターが 0 未満。</span><span class="sxs-lookup"><span data-stu-id="68a1a-294">The <paramref name="count" /> parameter is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-295"><paramref name="count" /> パラメーターと <paramref name="offset" /> パラメーターの合計が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-295">The sum of the <paramref name="count" /> and <paramref name="offset" /> parameters is longer than the length of the buffer.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-296">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-296">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="cryptoStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-297">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="68a1a-297">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-298">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-298">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-299">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-299">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="68a1a-300">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="68a1a-300">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="68a1a-301">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-301">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="68a1a-302">現在のストリームから非同期的にバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-302">Reads a sequence of bytes from the current stream asynchronously, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="68a1a-303">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="68a1a-303">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="68a1a-304">タスク オブジェクトの <paramref name="TResult" /> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-304">The value of the task object's <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="68a1a-305">現在使用できるバイト数が要求した数より小さい場合、結果は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-305">The result can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-306">タスクが完了するまでメソッドの実行を中断するC#には、`await` () または `Await` (Visual Basic) 演算子を使用して <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-306">You must preface your call to <xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A> with the `await` (C#) or `Await` (Visual Basic) operator to suspend execution of the method until the task is complete.</span></span> <span data-ttu-id="68a1a-307">詳細については、「[Async および Await を使用した非同期プログラミング](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-307">For more information, see [Asynchronous Programming with Async and Await](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7).</span></span>  
  
 <span data-ttu-id="68a1a-308">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-308">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68a1a-309"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-309"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68a1a-310"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-310"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-311"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="68a1a-311">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-312">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-312">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-313">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-313">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68a1a-314">ストリームは、前の読み取り操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-314">The stream is currently in use by a previous read operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="68a1a-315">キャンセル</span><span class="sxs-lookup"><span data-stu-id="68a1a-315">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="cryptoStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-316">ストリームから 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。ストリームの末尾の場合は -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-316">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="68a1a-317"><see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="68a1a-317">The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-318">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.Security.Cryptography.CryptoStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-318">Use the <xref:System.Security.Cryptography.CryptoStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="68a1a-319">ストリームが閉じられた後にストリームを操作しようとすると、<xref:System.ObjectDisposedException>がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-319">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-320">ストリームは読み取りをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-320">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-321">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-321">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="cryptoStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="68a1a-322"><paramref name="origin" /> パラメーターからの相対バイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-322">A byte offset relative to the <paramref name="origin" /> parameter.</span></span></param>
        <param name="origin"><span data-ttu-id="68a1a-323">新しい位置を取得するために使用する参照ポイントを示す <see cref="T:System.IO.SeekOrigin" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68a1a-323">A <see cref="T:System.IO.SeekOrigin" /> object indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="68a1a-324">現在のストリーム内の位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-324">Sets the position within the current stream.</span></span></summary>
        <returns><span data-ttu-id="68a1a-325">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-325">This method is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-326">このメソッドは、<xref:System.IO.Stream>からの継承をサポートするためだけに存在し、使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-326">This method exists only to support inheritance from <xref:System.IO.Stream>, and cannot be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-327">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-327">This method is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-328">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-328">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="cryptoStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68a1a-329">現在のストリームの目的の長さ (バイト数) です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-329">The desired length of the current stream in bytes.</span></span></param>
        <summary><span data-ttu-id="68a1a-330">現在のストリームの長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-330">Sets the length of the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-331">このプロパティは <xref:System.IO.Stream> からの継承をサポートするためだけのもので、使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-331">This property exists only to support inheritance from <xref:System.IO.Stream>, and cannot be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-332">このプロパティは <see cref="T:System.IO.Stream" /> からの継承をサポートするためだけのもので、使用できません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-332">This property exists only to support inheritance from <see cref="T:System.IO.Stream" />, and cannot be used.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-333">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-333">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="cryptoStream.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68a1a-334"><see cref="T:System.Security.Cryptography.CryptoStream" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-334">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.CryptoStream" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="cryptoStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-335">バイトの配列です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-335">An array of bytes.</span></span> <span data-ttu-id="68a1a-336">このメソッドは、<paramref name="count" /> から現在のストリームに、<paramref name="buffer" /> で指定されたバイト数だけコピーします。</span><span class="sxs-lookup"><span data-stu-id="68a1a-336">This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-337">現在のストリームへのバイトのコピーを開始する位置を示す、<paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="68a1a-337">The byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-338">現在のストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-338">The number of bytes to be written to the current stream.</span></span></param>
        <summary><span data-ttu-id="68a1a-339">バイト シーケンスを現在の <see cref="T:System.Security.Cryptography.CryptoStream" /> に書き込み、書き込んだバイト数の分だけストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-339">Writes a sequence of bytes to the current <see cref="T:System.Security.Cryptography.CryptoStream" /> and advances the current position within the stream by the number of bytes written.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-340">現在の <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> オブジェクトと関連付けられた <see cref="T:System.Security.Cryptography.CryptoStream" /> が、使用されているストリームと一致しません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-340">The <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> associated with current <see cref="T:System.Security.Cryptography.CryptoStream" /> object does not match the underlying stream.</span></span>  <span data-ttu-id="68a1a-341"><see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /> を読み取り専用のストリームで使用した場合などに、この例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-341">For example, this exception is thrown when using <see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /> with an underlying stream that is read only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68a1a-342"><paramref name="offset" /> パラメーターが 0 未満。</span><span class="sxs-lookup"><span data-stu-id="68a1a-342">The <paramref name="offset" /> parameter is less than zero.</span></span>  
  
<span data-ttu-id="68a1a-343">または</span><span class="sxs-lookup"><span data-stu-id="68a1a-343">-or-</span></span> 
<span data-ttu-id="68a1a-344"><paramref name="count" /> パラメーターが 0 未満。</span><span class="sxs-lookup"><span data-stu-id="68a1a-344">The <paramref name="count" /> parameter is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-345"><paramref name="count" /> パラメーターと <paramref name="offset" /> パラメーターの合計が、バッファーの長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-345">The sum of the <paramref name="count" /> and <paramref name="offset" /> parameters is longer than the length of the buffer.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="68a1a-346">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="68a1a-346">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cryptoStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="68a1a-347">書き込むデータの取得元のバッファーです。</span><span class="sxs-lookup"><span data-stu-id="68a1a-347">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="68a1a-348">ストリームへのバイトの書き込みを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-348">The zero-based byte offset in <paramref name="buffer" /> from which to begin writing bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="68a1a-349">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="68a1a-349">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="68a1a-350">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="68a1a-350">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="68a1a-351">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-351">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="68a1a-352">現在のストリームにバイト シーケンスを非同期で書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-352">Writes a sequence of bytes to the current stream asynchronously, advances the current position within the stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="68a1a-353">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="68a1a-353">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-354">タスクが完了するまでメソッドの実行を中断するC#には、`await` () または `Await` (Visual Basic) 演算子を使用して <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="68a1a-354">You must preface your call to <xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A> with the `await` (C#) or `Await` (Visual Basic) operator to suspend execution of the method until the task is complete.</span></span> <span data-ttu-id="68a1a-355">詳細については、「[Async および Await を使用した非同期プログラミング](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68a1a-355">For more information, see [Asynchronous Programming with Async and Await](https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7).</span></span>  
  
 <span data-ttu-id="68a1a-356">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status%2A> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-356">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68a1a-357"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-357"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68a1a-358"><paramref name="offset" /> または <paramref name="count" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="68a1a-358"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68a1a-359"><paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="68a1a-359">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-360">ストリームは書き込みをサポートしません。</span><span class="sxs-lookup"><span data-stu-id="68a1a-360">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-361">ストリームは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-361">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68a1a-362">ストリームは、前の書き込み操作によって現在使用されています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-362">The stream is currently in use by a previous write operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="68a1a-363">キャンセル</span><span class="sxs-lookup"><span data-stu-id="68a1a-363">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="cryptoStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68a1a-364">ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="68a1a-364">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="68a1a-365">ストリームの現在位置にバイトを書き込み、ストリームの位置を 1 バイトだけ進めます。</span><span class="sxs-lookup"><span data-stu-id="68a1a-365">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68a1a-366">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.Security.Cryptography.CryptoStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-366">Use the <xref:System.Security.Cryptography.CryptoStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="68a1a-367">I/O エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="68a1a-367">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68a1a-368">ストリームが書き込みをサポートしていないか、既に閉じています。</span><span class="sxs-lookup"><span data-stu-id="68a1a-368">The stream does not support writing, or the stream is already closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68a1a-369">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68a1a-369">Methods were called after the stream was closed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
