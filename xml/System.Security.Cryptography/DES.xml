<Type Name="DES" FullName="System.Security.Cryptography.DES">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2f23997204c4bc4e10eaa8b39ec9dcf7d7a6695" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946460" /></Metadata><TypeSignature Language="C#" Value="public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DES = class&#xA;    inherit SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Algorithms" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="94875-101">すべての <see cref="T:System.Security.Cryptography.DES" /> の実装の派生元となる DES (Data Encryption Standard) アルゴリズムの基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="94875-101">Represents the base class for the Data Encryption Standard (DES) algorithm from which all <see cref="T:System.Security.Cryptography.DES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-102">このアルゴリズムでは、キーの長さが64ビットであることがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="94875-102">This algorithm supports a key length of 64 bits.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="94875-103">新しい対称暗号化アルゴリズム (Advanced Encryption Standard (AES)) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="94875-103">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="94875-104"><xref:System.Security.Cryptography.DES> クラスではなく、<xref:System.Security.Cryptography.Aes> クラスを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="94875-104">Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class.</span></span> <span data-ttu-id="94875-105"><xref:System.Security.Cryptography.DES> は、レガシアプリケーションおよびデータとの互換性のためだけに使用してください。</span><span class="sxs-lookup"><span data-stu-id="94875-105">Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.</span></span>
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-106">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-106">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DES ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DES();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public DES ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DES();" FrameworkAlternate="netframework-1.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94875-107"><see cref="T:System.Security.Cryptography.DES" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="94875-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-108">抽象クラスのインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="94875-108">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="94875-109">アプリケーションコードによって、派生クラスの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="94875-109">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="94875-110">このメソッドは、<xref:System.Security.Cryptography.SymmetricAlgorithm> クラスの保護されたフィールドを、次の表に示す既定値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="94875-110">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="94875-111">フィールド</span><span class="sxs-lookup"><span data-stu-id="94875-111">Field</span></span>|<span data-ttu-id="94875-112">Default value</span><span class="sxs-lookup"><span data-stu-id="94875-112">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="94875-113">64</span><span class="sxs-lookup"><span data-stu-id="94875-113">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="94875-114">64</span><span class="sxs-lookup"><span data-stu-id="94875-114">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="94875-115">64</span><span class="sxs-lookup"><span data-stu-id="94875-115">64</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-116">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-116">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94875-117">暗号オブジェクトのインスタンスを作成して、Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) アルゴリズムを実行します。</span><span class="sxs-lookup"><span data-stu-id="94875-117">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94875-118">暗号オブジェクトのインスタンスを作成して、Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) アルゴリズムを実行します。</span><span class="sxs-lookup"><span data-stu-id="94875-118">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="94875-119">暗号オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="94875-119">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-120">データの暗号化と復号化に使用できる <xref:System.Security.Cryptography.DES> オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="94875-120">Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94875-121">次のコード例では、<xref:System.Security.Cryptography.DES> オブジェクトを作成して使用し、ファイル内のデータを暗号化および復号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="94875-121">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="94875-122">次のコード例では、<xref:System.Security.Cryptography.DES> オブジェクトを作成して使用し、メモリ内のデータを暗号化および復号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="94875-122">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-123">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-123">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="94875-124">使用する <see cref="T:System.Security.Cryptography.DES" /> の特定の実装の名前。</span><span class="sxs-lookup"><span data-stu-id="94875-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DES" /> to use.</span></span></param>
        <summary><span data-ttu-id="94875-125">暗号オブジェクトのインスタンスを作成して、<see cref="T:System.Security.Cryptography.DES" /> (Data Encryption Standard) アルゴリズムの指定した実装を実行します。</span><span class="sxs-lookup"><span data-stu-id="94875-125">Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="94875-126">暗号オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="94875-126">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94875-127">次のコード例では、<xref:System.Security.Cryptography.DES> オブジェクトを作成して使用し、ファイル内のデータを暗号化および復号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="94875-127">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="94875-128">次のコード例では、<xref:System.Security.Cryptography.DES> オブジェクトを作成して使用し、メモリ内のデータを暗号化および復号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="94875-128">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-129">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-129">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSemiWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsSemiWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSemiWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSemiWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSemiWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsSemiWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsSemiWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="94875-130">半脆弱性をテストする共有キー。</span><span class="sxs-lookup"><span data-stu-id="94875-130">The secret key to test for semi-weakness.</span></span></param>
        <summary><span data-ttu-id="94875-131">指定したキーが半脆弱であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94875-131">Determines whether the specified key is semi-weak.</span></span></summary>
        <returns><span data-ttu-id="94875-132">キーが半脆弱である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="94875-132"><see langword="true" /> if the key is semi-weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-133">半脆弱キーは、暗号を解読しやすいキーのペアです。</span><span class="sxs-lookup"><span data-stu-id="94875-133">Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="94875-134">テキストが半脆弱キーで暗号化されている場合、その半脆弱キーのパートナーとの結果の暗号を暗号化すると、元のテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="94875-134">If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</span></span> <span data-ttu-id="94875-135">Data Encryption Standard (<xref:System.Security.Cryptography.DES>) アルゴリズムには、6つの既知の半弱キーペアがあります。このメソッドは、これらの半脆弱キーをチェックします。</span><span class="sxs-lookup"><span data-stu-id="94875-135">There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.</span></span>  
  
 <span data-ttu-id="94875-136">半弱いキーを設定しようとすると、<xref:System.Security.Cryptography.CryptographicException>になります。</span><span class="sxs-lookup"><span data-stu-id="94875-136">Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="94875-137">ランダムキーを作成するために <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> を呼び出すと、半弱いキーは返されません。</span><span class="sxs-lookup"><span data-stu-id="94875-137">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="94875-138"><paramref name="rgbKey" /> パラメーターのサイズが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="94875-138">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-139">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-139">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="94875-140">脆弱性をテストする共有キー。</span><span class="sxs-lookup"><span data-stu-id="94875-140">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="94875-141">指定したキーが脆弱であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94875-141">Determines whether the specified key is weak.</span></span></summary>
        <returns><span data-ttu-id="94875-142">キーが脆弱である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="94875-142"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-143">弱いキーは、解読しやすい暗号を生成するキーです。</span><span class="sxs-lookup"><span data-stu-id="94875-143">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="94875-144">テキストが弱いキーで暗号化されている場合、同じ弱キーを使用して結果の暗号を再び暗号化すると、元のテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="94875-144">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="94875-145">Data Encryption Standard (<xref:System.Security.Cryptography.DES>) アルゴリズムには、4つの既知の弱いキーがあります。このメソッドは、これらの弱いキーを確認します。</span><span class="sxs-lookup"><span data-stu-id="94875-145">There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.</span></span>  
  
 <span data-ttu-id="94875-146">弱いキーを設定しようとすると、<xref:System.Security.Cryptography.CryptographicException>になります。</span><span class="sxs-lookup"><span data-stu-id="94875-146">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="94875-147">ランダムキーを作成するために <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> を呼び出すと、弱いキーは返されません。</span><span class="sxs-lookup"><span data-stu-id="94875-147">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="94875-148"><paramref name="rgbKey" /> パラメーターのサイズが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="94875-148">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-149">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-149">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.DES.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94875-150"><see cref="T:System.Security.Cryptography.DES" /> (Data Encryption Standard) アルゴリズムの共有キーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="94875-150">Gets or sets the secret key for the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <value><span data-ttu-id="94875-151"><see cref="T:System.Security.Cryptography.DES" /> アルゴリズムの共有キー。</span><span class="sxs-lookup"><span data-stu-id="94875-151">The secret key for the <see cref="T:System.Security.Cryptography.DES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94875-152">このプロパティが使用されている場合 `null`、新しい乱数値を作成するために <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="94875-152">If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.</span></span>  
  
 <span data-ttu-id="94875-153">キーの長さは <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="94875-153">The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.</span></span>  
  
 <span data-ttu-id="94875-154">このアルゴリズムでは、キーの長さが64ビットであることがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="94875-154">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="94875-155">キーを <see langword="null" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="94875-155">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="94875-156">長さが <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" /> と等しくないキーを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="94875-156">An attempt was made to set a key whose length is not equal to <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="94875-157">脆弱キー (<see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /> を参照) または半脆弱キー (<see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /> を参照) を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="94875-157">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />) or a semi-weak key (see <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />).</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="94875-158">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="94875-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
