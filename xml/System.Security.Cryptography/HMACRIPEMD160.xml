<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fd3906fcbab62384e6ca161bad0c386ca4d50fc" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963984" /></Metadata><TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Security.Cryptography.RIPEMD160" /> ハッシュ関数を使用して、ハッシュ メッセージ認証コード (HMAC) を計算します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> は、RIPEMD-160 ハッシュ関数から構築され、ハッシュベースのメッセージ認証コード (HMAC) として使用される、キー付きハッシュアルゴリズムの一種です。 HMAC プロセスでは、秘密キーをメッセージデータと組み合わせ、ハッシュ関数を使用して結果をハッシュし、そのハッシュ値を秘密キーで再びミックスして、もう一度ハッシュ関数を適用します。 出力ハッシュの長さは160ビットです。  
  
 HMAC は、送信側と受信側が秘密キーを共有している場合に、セキュリティで保護されていないチャネルを介して送信されたメッセージが改ざんされていないかどうかを判断するために使用できます。 送信側は元のデータのハッシュ値を計算し、元のデータとハッシュ値の両方を1つのメッセージとして送信します。 受信側は、受信したメッセージのハッシュ値を再計算し、計算された HMAC が送信された HMAC と一致することを確認します。  
  
 データまたはハッシュ値を変更した場合、メッセージを変更し、正しいハッシュ値を再現するために秘密鍵の知識が必要になるため、不一致が発生します。 したがって、元のハッシュ値と計算されたハッシュ値が一致する場合、メッセージは認証されます。  
  
 <xref:System.Security.Cryptography.HMACRIPEMD160> は任意のサイズのキーを受け入れ、160ビット長のハッシュシーケンスを生成します。  
  
 RIPEMD ハッシュアルゴリズムとその後継は、欧州準備プロジェクトによって開発されました。 元の RIPEMD アルゴリズムは、MD4 と MD5 を置き換えるように設計されており、後で RIPEMD-160 を強化し、名前を変更しました。 RIPEMD-160 ハッシュアルゴリズムでは、160ビットのハッシュ値が生成されます。 これは、アルゴリズムのデザイナーによってパブリックドメインに配置されています。  
  
 MD4 と MD5 の衝突の問題のため、SHA256 以上をお勧めします。  
  
## Examples  
 次の例では、<xref:System.Security.Cryptography.HMACRIPEMD160> オブジェクトを使用してファイルに署名する方法と、ファイルを検証する方法を示します。  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services">暗号サービス</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>ランダムに生成された 64 バイトのキーを指定して、<see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> は、RIPEMD-160 ハッシュ関数から構築され、ハッシュベースのメッセージ認証コード (HMAC) として使用される、キー付きハッシュアルゴリズムの一種です。 HMAC プロセスでは、秘密キーをメッセージデータと組み合わせ、ハッシュ関数を使用して結果をハッシュし、そのハッシュ値を秘密キーで再びミックスして、もう一度ハッシュ関数を適用します。 出力ハッシュの長さは160バイトです。  
  
 このコンストラクターは、64バイトのランダムに生成されたキーを使用します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services">暗号サービス</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> 暗号化の共有キー。 キーは任意の長さにできますが、64 バイトを超えた場合は、SHA-1 を使用してハッシュされ、最終的には 64 バイトのキーが生成されます。 したがって、共有キーの推奨サイズは 64 バイトです。</param>
        <summary>キー データを指定して、<see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> は、RIPEMD-160 ハッシュ関数から構築され、ハッシュベースのメッセージ認証コード (HMAC) として使用される、キー付きハッシュアルゴリズムの一種です。 HMAC プロセスでは、秘密キーをメッセージデータと組み合わせ、ハッシュ関数を使用して結果をハッシュし、そのハッシュ値を秘密キーで再びミックスして、もう一度ハッシュ関数を適用します。 出力ハッシュの長さは160バイトです。  
  
   
  
## Examples  
 このコンストラクターの使用方法の例については、<xref:System.Security.Cryptography.HMACRIPEMD160> クラスを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services">暗号サービス</related>
      </Docs>
    </Member>
  </Members>
</Type>
