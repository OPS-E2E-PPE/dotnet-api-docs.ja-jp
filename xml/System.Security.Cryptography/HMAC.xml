<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dcaeccb126149a7423d5aeb1509a5eae36d4c61" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83964006" /></Metadata><TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6061-101">ハッシュ ベース メッセージ認証コード (HMAC) のすべての実装の派生元にする必要のある抽象クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="b6061-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-102">送信側と受信側が秘密キーを共有している場合、セキュリティで保護されていないチャネルを介して送信されたメッセージが改ざんされているかどうかを判断するために、ハッシュベースのメッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="b6061-103">送信側は元のデータのハッシュ値を計算し、元のデータと HMAC の両方を1つのメッセージとして送信します。</span><span class="sxs-lookup"><span data-stu-id="b6061-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="b6061-104">受信側は、受信したメッセージのハッシュ値を計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="b6061-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="b6061-105">HMAC は、MD5 や SHA-1 などの反復的な暗号ハッシュ関数と共に、秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="b6061-106">HMAC の暗号強度は、基になるハッシュ関数のプロパティによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b6061-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
   
 <span data-ttu-id="b6061-107">データまたはハッシュ値を変更した場合、メッセージを変更し、正しいハッシュ値を再現するために秘密鍵の知識が必要になるため、不一致が発生します。</span><span class="sxs-lookup"><span data-stu-id="b6061-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="b6061-108">したがって、元のハッシュ値と計算されたハッシュ値が一致する場合、メッセージは認証されます。</span><span class="sxs-lookup"><span data-stu-id="b6061-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="b6061-109">MD5 と SHA-1 の衝突の問題のため、Microsoft では、SHA-256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b6061-109">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b6061-110">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="b6061-110">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6061-111"><see cref="T:System.Security.Cryptography.HMAC" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b6061-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6061-112">ハッシュ値で使用するブロック サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b6061-112">Gets or sets the block size to use in the hash value.</span></span></summary>
        <value><span data-ttu-id="b6061-113">ハッシュ値で使用するブロック サイズ。</span><span class="sxs-lookup"><span data-stu-id="b6061-113">The block size to use in the hash value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-114">ハッシュベースのメッセージ認証コード (HMAC) は、データのブロックに対して基本的な圧縮関数を反復処理することで、データがハッシュされるハッシュ関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="b6061-114">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="b6061-115"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> は、このようなブロックのバイトサイズです。</span><span class="sxs-lookup"><span data-stu-id="b6061-115"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="b6061-116">値は64バイトです。</span><span class="sxs-lookup"><span data-stu-id="b6061-116">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6061-117">ハッシュ ベース メッセージ認証コード (<see cref="T:System.Security.Cryptography.HMAC" />) の実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6061-117">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6061-118">ハッシュ ベース メッセージ認証コード (HMAC) の既定の実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6061-118">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="b6061-119">[&lt;cryptoClass&gt; 要素](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element)を使用して既定の設定が変更されていない限り、新しい SHA-1 のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b6061-119">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](/dotnet/framework/configure-apps/file-schema/cryptography/cryptoclass-element).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-120">既定では、このオーバーロードは HMAC の SHA-1 実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="b6061-120">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="b6061-121">別の実装を指定する場合は、代わりに、アルゴリズム名を指定できる <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b6061-121">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  

 <span data-ttu-id="b6061-122">SHA-1 との競合の問題により、Microsoft は SHA-256 以上に基づくセキュリティモデルを推奨しています。</span><span class="sxs-lookup"><span data-stu-id="b6061-122">Due to collision problems with SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="algorithmName"><span data-ttu-id="b6061-123">使用する HMAC 実装。</span><span class="sxs-lookup"><span data-stu-id="b6061-123">The HMAC implementation to use.</span></span> <span data-ttu-id="b6061-124"><paramref name="algorithmName" /> パラメーターの有効値、およびそれらの割り当て先のアルゴリズムを次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="b6061-124">The following table shows the valid values for the <paramref name="algorithmName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="b6061-125">パラメーター値</span><span class="sxs-lookup"><span data-stu-id="b6061-125">Parameter value</span></span> 
 </term><description> <span data-ttu-id="b6061-126">実装</span><span class="sxs-lookup"><span data-stu-id="b6061-126">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="b6061-127">System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="b6061-127">System.Security.Cryptography.HMAC</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="b6061-128">System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="b6061-128">System.Security.Cryptography.KeyedHashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="b6061-129">HMACMD5</span><span class="sxs-lookup"><span data-stu-id="b6061-129">HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="b6061-130">System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="b6061-130">System.Security.Cryptography.HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="b6061-131">HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="b6061-131">HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="b6061-132">System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="b6061-132">System.Security.Cryptography.HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="b6061-133">HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="b6061-133">HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="b6061-134">System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="b6061-134">System.Security.Cryptography.HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="b6061-135">HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="b6061-135">HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="b6061-136">System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="b6061-136">System.Security.Cryptography.HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="b6061-137">HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="b6061-137">HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="b6061-138">System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="b6061-138">System.Security.Cryptography.HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="b6061-139">HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="b6061-139">HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="b6061-140">System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="b6061-140">System.Security.Cryptography.HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="b6061-141">MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="b6061-141">MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> <span data-ttu-id="b6061-142">System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="b6061-142">System.Security.Cryptography.MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="b6061-143">ハッシュ ベース メッセージ認証コード (HMAC) の指定した実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b6061-143">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="b6061-144">指定した HMAC 実装の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b6061-144">A new instance of the specified HMAC implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-145">HMAC では、MD5、SHA-1、SHA-256、RIPEMD160 など、多数のハッシュアルゴリズムがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="b6061-145">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="b6061-146">完全な一覧については、`algorithmName` パラメーターでサポートされている値を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6061-146">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  

 <span data-ttu-id="b6061-147">MD5 と SHA-1 の衝突の問題のため、Microsoft では、SHA-256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b6061-147">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b6061-148">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6061-148"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b6061-149">キー変更が有効な場合、<see cref="T:System.Security.Cryptography.HMAC" /> クラスによって使用されているアンマネージド リソースを解放します。また、オプションとして、マネージド リソースを解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="b6061-149">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-150">このメソッドは、パブリックな `Dispose()` メソッドと `Finalize` メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b6061-150">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="b6061-151">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b6061-151">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b6061-152">`Finalize` は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b6061-152">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b6061-153">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.HMAC> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="b6061-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="b6061-154">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b6061-154">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b6061-155">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b6061-155">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b6061-156"><see langword="Dispose(Boolean)" />をオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="b6061-156">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b6061-157"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6061-157">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="b6061-158"><see langword="Dispose" /> と <see langword="Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b6061-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b6061-159">HMAC コードを計算する対象の入力データ。</span><span class="sxs-lookup"><span data-stu-id="b6061-159">The input to compute the HMAC code for.</span></span></param>
        <summary><span data-ttu-id="b6061-160">HMAC を計算するために、オブジェクトに書き込んだデータを HMAC アルゴリズムにルーティングします。</span><span class="sxs-lookup"><span data-stu-id="b6061-160">Routes data written to the object into the HMAC algorithm for computing the HMAC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="b6061-161">このメソッドの既定の実装では、HMAC のマネージ実装がないため、<xref:System.PlatformNotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b6061-161">The default implementation of this method throws a <xref:System.PlatformNotSupportedException> because there is no managed implementation of HMAC.</span></span>

<span data-ttu-id="b6061-162">派生型はこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b6061-162">Derived types must override this method.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b6061-163">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="b6061-163">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="b6061-164">入力データ。</span><span class="sxs-lookup"><span data-stu-id="b6061-164">The input data.</span></span></param>
        <param name="ib"><span data-ttu-id="b6061-165">バイト配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="b6061-165">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="b6061-166">配列内でデータとして使用されるバイトの数。</span><span class="sxs-lookup"><span data-stu-id="b6061-166">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="b6061-167">派生クラスでオーバーライドされると、HMAC 値を計算するために、オブジェクトに書き込まれたデータを HMAC アルゴリズムにルーティングします。</span><span class="sxs-lookup"><span data-stu-id="b6061-167">When overridden in a derived class, routes data written to the object into the HMAC algorithm for computing the HMAC value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-168">このメソッドは、アプリケーションコードによって呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="b6061-168">This method is not called by application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b6061-169">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="b6061-169">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6061-170">派生クラスでオーバーライドされると、アルゴリズムによって最後のデータが処理された後に、HMAC 計算を終了します。</span><span class="sxs-lookup"><span data-stu-id="b6061-170">When overridden in a derived class, finalizes the HMAC computation after the last data is processed by the algorithm.</span></span></summary>
        <returns><span data-ttu-id="b6061-171">バイト配列での計算済された HMAC 値。</span><span class="sxs-lookup"><span data-stu-id="b6061-171">The computed HMAC value in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-172">このメソッドは、アプリケーションコードによって呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="b6061-172">This method is not called by application code.</span></span> <span data-ttu-id="b6061-173">このメソッドは、部分計算を終了し、データストリームの正しいハッシュ値を返します。</span><span class="sxs-lookup"><span data-stu-id="b6061-173">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b6061-174">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="b6061-174">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6061-175">ハッシュに使用するハッシュ アルゴリズムの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b6061-175">Gets or sets the name of the hash algorithm to use for hashing.</span></span></summary>
        <value><span data-ttu-id="b6061-176">ハッシュ アルゴリズムの名前。</span><span class="sxs-lookup"><span data-stu-id="b6061-176">The name of the hash algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b6061-177">現在のハッシュ アルゴリズムは変更できません。</span><span class="sxs-lookup"><span data-stu-id="b6061-177">The current hash algorithm cannot be changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6061-178"><see cref="T:System.Security.Cryptography.HMAC" /> の既定の実装のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b6061-178">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-179">送信側と受信側が秘密キーを共有している場合、セキュリティで保護されていないチャネルを介して送信されたメッセージが改ざんされているかどうかを判断するために、ハッシュベースのメッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-179">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="b6061-180">送信側は元のデータのハッシュ値を計算し、元のデータと HMAC の両方を1つのメッセージとして送信します。</span><span class="sxs-lookup"><span data-stu-id="b6061-180">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="b6061-181">受信側は、受信したメッセージのハッシュ値を計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="b6061-181">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="b6061-182">HMAC は、MD5 や SHA-1 などの反復的な暗号ハッシュ関数と共に、秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-182">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="b6061-183">HMAC の暗号強度は、基になるハッシュ関数のプロパティによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b6061-183">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="b6061-184">データまたはハッシュ値を変更した場合、メッセージを変更し、正しいハッシュ値を再現するために秘密鍵の知識が必要になるため、不一致が発生します。</span><span class="sxs-lookup"><span data-stu-id="b6061-184">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="b6061-185">したがって、元のハッシュ値と計算されたハッシュ値が一致する場合、メッセージは認証されます。</span><span class="sxs-lookup"><span data-stu-id="b6061-185">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="b6061-186">MD5 と SHA-1 の衝突の問題のため、Microsoft では、SHA-256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b6061-186">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6061-187">HMAC 計算で使用するキーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b6061-187">Gets or sets the key to use in the HMAC calculation.</span></span></summary>
        <value><span data-ttu-id="b6061-188">HMAC 計算で使用するキー。</span><span class="sxs-lookup"><span data-stu-id="b6061-188">The key to use in the HMAC calculation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6061-189">このプロパティは、キー付きハッシュアルゴリズムのキーです。</span><span class="sxs-lookup"><span data-stu-id="b6061-189">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="b6061-190">送信側と受信側が秘密キーを共有している場合、セキュリティで保護されていないチャネルを介して送信されたメッセージが改ざんされているかどうかを判断するために、ハッシュベースのメッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-190">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="b6061-191">送信側は元のデータのハッシュ値を計算し、元のデータと HMAC の両方を1つのメッセージとして送信します。</span><span class="sxs-lookup"><span data-stu-id="b6061-191">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="b6061-192">受信側は、受信したメッセージのハッシュ値を計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="b6061-192">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="b6061-193">HMAC は、MD5 や SHA-1 などの反復的な暗号ハッシュ関数と共に、秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="b6061-193">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="b6061-194">HMAC の暗号強度は、基になるハッシュ関数のプロパティによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b6061-194">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="b6061-195">データまたはハッシュ値を変更した場合、メッセージを変更し、正しいハッシュ値を再現するために秘密鍵の知識が必要になるため、不一致が発生します。</span><span class="sxs-lookup"><span data-stu-id="b6061-195">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="b6061-196">したがって、元のハッシュ値と計算されたハッシュ値が一致する場合、メッセージは認証されます。</span><span class="sxs-lookup"><span data-stu-id="b6061-196">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  

 <span data-ttu-id="b6061-197">MD5 と SHA-1 の衝突の問題のため、Microsoft では、SHA-256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b6061-197">Due to collision problems with MD5 and SHA-1, Microsoft recommends a security model based on SHA-256 or better.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b6061-198">ハッシュが開始された後に、<see cref="P:System.Security.Cryptography.HMAC.Key" /> プロパティを変更しようとしました。</span><span class="sxs-lookup"><span data-stu-id="b6061-198">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="b6061-199">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="b6061-199">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; * int -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="b6061-200">HMAC 値を受け取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="b6061-200">The buffer to receive the HMAC value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="b6061-201">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="b6061-201">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="b6061-202">このパラメーターは未初期化として扱われます。</span><span class="sxs-lookup"><span data-stu-id="b6061-202">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="b6061-203">HMAC アルゴリズムによって最後のデータが処理された後、HMAC 計算の終了を試みます。</span><span class="sxs-lookup"><span data-stu-id="b6061-203">Attempts to finalize the HMAC computation after the last data is processed by the HMAC algorithm.</span></span></summary>
        <returns><span data-ttu-id="b6061-204"><paramref name="destination" /> が HMAC 値を受け取るのに十分な長さである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6061-204"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the HMAC value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="b6061-205">このメソッドの既定の実装では、HMAC のマネージ実装がないため、<xref:System.PlatformNotSupportedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b6061-205">The default implementation of this method throws a <xref:System.PlatformNotSupportedException> because there is no managed implementation of HMAC.</span></span>

<span data-ttu-id="b6061-206">派生型はこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b6061-206">Derived types must override this method.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b6061-207">メソッドが派生型でオーバーライドされていません。</span><span class="sxs-lookup"><span data-stu-id="b6061-207">The method is not overriden in the derived type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
