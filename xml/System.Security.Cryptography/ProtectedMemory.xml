<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c1e408a9c798fefb86679568c3023f9bbe8c15a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78754362" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedMemory" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ProtectedMemory = class" />
  <TypeSignature Language="C#" Value="public static class ProtectedMemory" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProtectedMemory extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class ProtectedMemory" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory abstract sealed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>メモリの保護と保護解除のためのメソッドを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、Windows XP 以降のオペレーティングシステムで使用可能なデータ保護 API (DPAPI) へのアクセスを提供します。 これはオペレーティングシステムによって提供されるサービスであり、追加のライブラリは必要ありません。 メモリ内の機微なデータの暗号化を提供します。  
  
 クラスは、アンマネージ DPAPI、<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> および <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>の2つのラッパーで構成されます。 これらの2つのメソッドを使用して、メモリ内のデータの暗号化と復号化を行うことができます。  
  
   
  
## Examples  
 次の例は、データ保護の使用方法を示しています。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Protect (userData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">保護するメモリ内データを格納しているバイト配列。 この配列のサイズは、16 バイトの倍数である必要があります。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary>指定されたデータを保護します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、メモリ内のデータを保護するために使用できます。 メソッドはデータのコピーを作成せずに、バイト配列を暗号化します。 `userData` パラメーターの長さは16バイトであるか、または16バイトの倍数である必要があります。  
  
 この方法のサポートは、Windows XP 以降のオペレーティングシステムで使用できます。  
  
   
  
## Examples  
 次のコード例は、データ保護の使用方法を示しています。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="userData" /> の長さは 16 バイトか、16 バイトの倍数である必要があります。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドがオペレーティング システムでサポートされていません。 このメソッドは、Windows 2000 以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="userData" /> が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Unprotect (encryptedData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">復号化するメモリ内のバイト配列。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary><see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> メソッドを使用して保護されたメモリ内データの保護を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> メソッドを使用して暗号化されたメモリ内のデータを復号化するために使用できます。  
  
 この方法のサポートは、Windows XP 以降のオペレーティングシステムで使用できます。  
  
   
  
## Examples  
 次の例は、データ保護の使用方法を示しています。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドがオペレーティング システムでサポートされていません。 このメソッドは、Windows 2000 以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="encryptedData" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="encryptedData" /> が空です。  
  
- または - 
この呼び出しは実装されていません。  
  
- または - 
NTSTATUS にエラーが含まれています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
