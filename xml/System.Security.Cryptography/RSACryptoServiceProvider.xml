<Type Name="RSACryptoServiceProvider" FullName="System.Security.Cryptography.RSACryptoServiceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c3e66be33b2a60a0caa58e8ae01ef61adaad8a9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963899" /></Metadata><TypeSignature Language="C#" Value="public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RSACryptoServiceProvider extends System.Security.Cryptography.RSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RSACryptoServiceProvider&#xA;Inherits RSA&#xA;Implements ICspAsymmetricAlgorithm" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSACryptoServiceProvider sealed : System::Security::Cryptography::RSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type RSACryptoServiceProvider = class&#xA;    inherit RSA&#xA;    interface ICspAsymmetricAlgorithm" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RSACryptoServiceProvider extends System.Security.Cryptography.RSA" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RSACryptoServiceProvider&#xA;Inherits RSA" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSACryptoServiceProvider sealed : System::Security::Cryptography::RSA" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type RSACryptoServiceProvider = class&#xA;    inherit RSA" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Csp" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a88b8-101">暗号化サービス プロバイダー (CSP) によって提供される <see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムの実装を使用して、非対称の暗号化と暗号化解除を実行します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-101">Performs asymmetric encryption and decryption using the implementation of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm provided by the cryptographic service provider (CSP).</span></span> <span data-ttu-id="a88b8-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-103">これは <xref:System.Security.Cryptography.RSA>の既定の実装です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-103">This is the default implementation of <xref:System.Security.Cryptography.RSA>.</span></span>  
  
 <span data-ttu-id="a88b8-104">Microsoft Enhanced Cryptographic Provider がインストールされている場合、<xref:System.Security.Cryptography.RSACryptoServiceProvider> は、384ビットから16384ビットまでのキーサイズを8ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-104">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</span></span>  <span data-ttu-id="a88b8-105">Microsoft Base Cryptographic Provider がインストールされている場合、384ビットから512ビットまでのキーサイズを8ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-105">It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</span></span>  
  
 <span data-ttu-id="a88b8-106">有効なキーサイズは、<xref:System.Security.Cryptography.RSACryptoServiceProvider> インスタンスによって使用される暗号化サービスプロバイダー (CSP) に依存します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-106">Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance.</span></span> <span data-ttu-id="a88b8-107">Windows Csp では、[!INCLUDE[win81](~/includes/win81-md.md)]より前の Windows バージョンでは 384 ~ 16384 ビットのキーサイズが有効になり、[!INCLUDE[win81](~/includes/win81-md.md)]では512から16384ビットのキーサイズが有効になります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-107">Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/includes/win81-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/includes/win81-md.md)].</span></span> <span data-ttu-id="a88b8-108">詳細については、Windows ドキュメントの「 [Cryptgenkey](https://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)関数」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a88b8-108">For more information, see [CryptGenKey](https://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) function in the Windows documentation.</span></span>  
  
## <a name="interoperation-with-the-microsoft-cryptographic-api-capi"></a><span data-ttu-id="a88b8-109">Microsoft Cryptographic API (CAPI) との相互運用</span><span class="sxs-lookup"><span data-stu-id="a88b8-109">Interoperation with the Microsoft Cryptographic API (CAPI)</span></span>  
 <span data-ttu-id="a88b8-110">アンマネージ CAPI の RSA 実装とは異なり、<xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスは、暗号化の後、復号化の前に暗号化されたバイト配列の順序を逆にします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-110">Unlike the RSA implementation in unmanaged CAPI, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class reverses the order of an encrypted array of bytes after encryption and before decryption.</span></span>  <span data-ttu-id="a88b8-111">既定では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスによって暗号化されたデータを CAPI `CryptDecrypt` 関数で復号化することはできません。また、CAPI `CryptEncrypt` メソッドによって暗号化されたデータを <xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスで復号化することはできません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-111">By default, data encrypted by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class cannot be decrypted by the CAPI `CryptDecrypt` function and data encrypted by the CAPI `CryptEncrypt` method cannot be decrypted by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class.</span></span>  
  
 <span data-ttu-id="a88b8-112">Api 間の相互運用時に逆順の順序付けを補正しない場合、<xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスは <xref:System.Security.Cryptography.CryptographicException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-112">If you do not compensate for the reverse ordering when interoperating between APIs, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class throws a <xref:System.Security.Cryptography.CryptographicException>.</span></span>  
  
 <span data-ttu-id="a88b8-113">CAPI と相互運用するには、暗号化されたデータを別の API と相互運用する前に、暗号化されたバイトの順序を手動で逆にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-113">To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.</span></span>  <span data-ttu-id="a88b8-114"><xref:System.Array.Reverse%2A?displayProperty=nameWithType> メソッドを呼び出すことによって、マネージバイト配列の順序を簡単に逆にすることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-114">You can easily reverse the order of a managed byte array by calling the <xref:System.Array.Reverse%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-115">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスを使用して、文字列をバイト配列に暗号化した後、バイトを文字列に復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-115">The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 <span data-ttu-id="a88b8-116">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> を使用して作成されたキー情報を <xref:System.Security.Cryptography.RSAParameters> オブジェクトにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-116">The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-117">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-117">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-118"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a88b8-119">ランダムなキーのペアで、<see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-119">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="a88b8-120">このコンストラクターは、セッションキーの暗号化に適した <xref:System.Security.Cryptography.KeyNumber.Exchange> キーペアを作成して、他のユーザーと安全に格納したり、他のユーザーと交換したりできるようにします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-120">This constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="a88b8-121">生成されたキーは、アンマネージ Microsoft Cryptographic API (CAPI) で使用される `AT_KEYEXCHANGE` 値を使用して生成されたキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-121">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
<span data-ttu-id="a88b8-122">このコンストラクターは、新しいパブリック/プライベートのペアを直ちに生成しません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-122">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="a88b8-123"><xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters%2A> メソッドまたはその他のキーのインポート方法を使用してキーが読み込まれていない場合、キーが必要になる前に、1024ビットの短期キーが要求に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-123">If no key is loaded via the <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters%2A> method, or any other key import method, before a key is needed then a 1024-bit ephemeral key is created on demand.</span></span>

  
## Examples  
 <span data-ttu-id="a88b8-124">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスを使用して、文字列をバイト配列に暗号化した後、バイトを文字列に復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-124">The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-125">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-125">The cryptographic service provider (CSP) cannot be acquired.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-126">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-126">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : int -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider dwKeySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize"><span data-ttu-id="a88b8-127">使用するキーのサイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-127">The size of the key to use in bits.</span></span></param>
        <summary><span data-ttu-id="a88b8-128">指定したキー サイズのランダムなキー ペアで、<see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-128">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with a random key pair of the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a88b8-129">このコンストラクターは、セッションキーの暗号化に適した <xref:System.Security.Cryptography.KeyNumber.Exchange> キーペアを作成して、他のユーザーと安全に格納したり、他のユーザーと交換したりできるようにします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-129">This constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="a88b8-130">生成されたキーは、アンマネージ Microsoft Cryptographic API (CAPI) で使用される `AT_KEYEXCHANGE` 値を使用して生成されたキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-130">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
<span data-ttu-id="a88b8-131">このコンストラクターは、新しいパブリック/プライベートのペアを直ちに生成しません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-131">This constructor does not generate a new public/private keypair immediately.</span></span>
<span data-ttu-id="a88b8-132"><xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters%2A> メソッドまたはその他のキーのインポート方法を使用してキーが読み込まれていない場合、キーが必要になる前に、`dwKeySize`ビットの短期キーが要求に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-132">If no key is loaded via the <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters%2A> method, or any other key import method, before a key is needed then a `dwKeySize`-bit ephemeral key is created on demand.</span></span>
   
  
## Examples  
 <span data-ttu-id="a88b8-133">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider>を作成し、新しいキーを生成して、キーコンテナーに格納します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-133">The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-134">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-134">The cryptographic service provider (CSP) cannot be acquired.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-135">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-135">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a88b8-136">暗号化サービス プロバイダー (CSP) に渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="a88b8-136">The parameters to be passed to the cryptographic service provider (CSP).</span></span></param>
        <summary><span data-ttu-id="a88b8-137">指定したパラメーターを使用して、<see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-137">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-138">このコンストラクターは、`parameters` パラメーターの <xref:System.Security.Cryptography.CspParameters.KeyContainerName> フィールドを使用して指定されたキーコンテナーを作成または再利用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-138">This constructor creates or reuses a key container specified using the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of the `parameters` parameter.</span></span>  
  
 <span data-ttu-id="a88b8-139">既定では、このコンストラクターは、セッションキーの暗号化に適した <xref:System.Security.Cryptography.KeyNumber.Exchange> キーペアを作成します。これにより、他のユーザーと安全に格納したり、他のユーザーと交換したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-139">By default, this constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="a88b8-140">生成されたキーは、アンマネージ Microsoft Cryptographic API (CAPI) で使用される `AT_KEYEXCHANGE` 値を使用して生成されたキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-140">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="a88b8-141">`parameters` パラメーターの <xref:System.Security.Cryptography.CspParameters.KeyNumber> フィールドを <xref:System.Security.Cryptography.KeyNumber.Signature> 値に設定することによって、メッセージまたはファイルの認証 (デジタル署名) に適した <xref:System.Security.Cryptography.KeyNumber.Signature> キーペアを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-141">You can create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair suitable for authenticating (digitally signed) messages or files by setting the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the `parameters` parameter to the <xref:System.Security.Cryptography.KeyNumber.Signature> value.</span></span> <span data-ttu-id="a88b8-142">この種類のキーは、CAPI で使用される `AT_SIGNATURE` 値に対応しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-142">This type of key corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="a88b8-143"><xref:System.Security.Cryptography.KeyNumber.Exchange> 値を指定して <xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成し、<xref:System.Security.Cryptography.KeyNumber.Signature> 値を指定して別の <xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成した場合、両方のオブジェクトが同じキーコンテナー名を指定すると、両方のキーが1つのコンテナーに配置されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-143">If you create an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Exchange> value specified and then create another <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Signature> value specified, both keys will be placed in a single container if both objects specify the same key container name.</span></span>  
  
 <span data-ttu-id="a88b8-144"><xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスを使用して厳密な名前の署名と互換性のあるキーを作成するには、<xref:System.Security.Cryptography.KeyNumber.Signature> キーペアを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-144">To create a key that is compatible with strong-name signing using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class, you must create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-145">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成し、新しいキーを生成して、キーコンテナーに格納します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-145">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-146">CSP を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-146">The CSP cannot be acquired.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-147">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-147">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : int * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider (dwKeySize, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize"><span data-ttu-id="a88b8-148">使用するキーのサイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-148">The size of the key to use in bits.</span></span></param>
        <param name="parameters"><span data-ttu-id="a88b8-149">暗号化サービス プロバイダー (CSP) に渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="a88b8-149">The parameters to be passed to the cryptographic service provider (CSP).</span></span></param>
        <summary><span data-ttu-id="a88b8-150">指定されたキー サイズおよびパラメーターを使用して、<see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified key size and parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-151">このコンストラクターは、`parameters` パラメーターの <xref:System.Security.Cryptography.CspParameters.KeyContainerName> フィールドを使用して指定されたキーコンテナーを作成または再利用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-151">This constructor creates or reuses a key container specified using the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of the `parameters` parameter.</span></span>  
  
 <span data-ttu-id="a88b8-152">既定では、このコンストラクターは、セッションキーの暗号化に適した <xref:System.Security.Cryptography.KeyNumber.Exchange> キーペアを作成します。これにより、他のユーザーと安全に格納したり、他のユーザーと交換したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-152">By default, this constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="a88b8-153">生成されたキーは、アンマネージ Microsoft Cryptographic API (CAPI) で使用される `AT_KEYEXCHANGE` 値を使用して生成されたキーに対応します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-153">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="a88b8-154">`parameters` パラメーターの <xref:System.Security.Cryptography.CspParameters.KeyNumber> フィールドを <xref:System.Security.Cryptography.KeyNumber.Signature> 値に設定することによって、メッセージまたはファイルの認証 (デジタル署名) に適した <xref:System.Security.Cryptography.KeyNumber.Signature> キーペアを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-154">You can create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair suitable for authenticating (digitally signed) messages or files by setting the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the `parameters` parameter to the <xref:System.Security.Cryptography.KeyNumber.Signature> value.</span></span> <span data-ttu-id="a88b8-155">この種類のキーは、CAPI で使用される `AT_SIGNATURE` 値に対応しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-155">This type of key corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="a88b8-156"><xref:System.Security.Cryptography.KeyNumber.Exchange> 値を指定して <xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成し、<xref:System.Security.Cryptography.KeyNumber.Signature> 値を指定して別の <xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成した場合、両方のオブジェクトが同じキーコンテナー名を指定すると、両方のキーが1つのコンテナーに配置されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-156">If you create an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Exchange> value specified and then create another <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Signature> value specified, both keys will be placed in a single container if both objects specify the same key container name.</span></span>  
  
 <span data-ttu-id="a88b8-157"><xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスを使用して厳密な名前の署名と互換性のあるキーを作成するには、<xref:System.Security.Cryptography.KeyNumber.Signature> キーペアを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-157">To create a key that is compatible with strong-name signing using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class, you must create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-158">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider>を作成し、新しいキーを生成して、キーコンテナーに格納します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-158">The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-159">CSP を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-159">The CSP cannot be acquired.</span></span>  
  
 <span data-ttu-id="a88b8-160">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-160">-or-</span></span>  
  
 <span data-ttu-id="a88b8-161">キーを作成できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-161">The key cannot be created.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-162">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-162">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CspKeyContainerInfo : System.Security.Cryptography.CspKeyContainerInfo" Usage="System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-163">暗号化キーの組に関する追加情報を説明する <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-163">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span></span></summary>
        <value><span data-ttu-id="a88b8-164">暗号化キーの組に関する追加情報を説明する <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a88b8-164">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-165">暗号化キーのペアに関する追加情報を取得するには、<xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-165">Use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="a88b8-166">返される <xref:System.Security.Cryptography.CspKeyContainerInfo> オブジェクトは、キーがエクスポート可能かどうかを示し、キーコンテナー名、プロバイダーに関する情報、およびその他の情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-166">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="a88b8-167">ランダムキーが生成される場合、キーを使用するメソッドを呼び出すまで、キーコンテナーは作成されません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-167">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="a88b8-168"><xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> プロパティによって返される <xref:System.Security.Cryptography.CspKeyContainerInfo> オブジェクトの一部のプロパティは、キーコンテナーが作成されていない場合に <xref:System.Security.Cryptography.CryptographicException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-168">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="a88b8-169">キーコンテナーが作成されていることを確認するには、<xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> プロパティを呼び出す前に、<xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>、<xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>、<xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>、<xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>などのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-169">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-170">次のコード例は、<xref:System.Security.Cryptography.CspKeyContainerInfo> プロパティを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-170">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CspKeyContainerInfo> property.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-171">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-171">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-172">以前に暗号化されたデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-172">Decrypts data that was previously encrypted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberSignature Language="F#" Value="override this.Decrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Decrypt (rgb, fOAEP)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Decrypt (rgb, fOAEP)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="a88b8-173">復号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-173">The data to be decrypted.</span></span></param>
        <param name="fOAEP"><span data-ttu-id="a88b8-174">OAEP パディングを使用して、直接 <see cref="T:System.Security.Cryptography.RSA" /> 復号化を実行する場合は <see langword="true" />。それ以外の場合で、PKCS#1 v1.5 パディングを使用する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-174"><see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> decryption using OAEP padding; otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-175"><see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムでデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-175">Decrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="a88b8-176">暗号化する前の元のプレーン テキストである復号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-176">The decrypted data, which is the original plain text before encryption.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-177"><xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A> を使用して、この方法で復号化するデータを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-177">Use <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A> to encrypt data for decryption with this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-178">次のコード例では、データの暗号化と復号化を行います。</span><span class="sxs-lookup"><span data-stu-id="a88b8-178">The following code example encrypts and decrypts data.</span></span>  
  
 <span data-ttu-id="a88b8-179">この例では、<xref:System.Text.ASCIIEncoding> クラスを使用します。ただし、大規模なデータ操作では、<xref:System.Text.UnicodeEncoding> クラスの方が適している場合があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-179">This example uses the <xref:System.Text.ASCIIEncoding> class; however, the <xref:System.Text.UnicodeEncoding> class may be preferable in large data operations.</span></span> <span data-ttu-id="a88b8-180">暗号化された値は、Microsoft SQL Server で `nvarchar` データ型として保存できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-180">The encrypted value can be saved as an `nvarchar` data type in Microsoft SQL Server.</span></span>
  
 [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-181">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-181">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="a88b8-182">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-182">-or-</span></span> 
<span data-ttu-id="a88b8-183"><paramref name="fOAEP" /> パラメーターが <see langword="true" /> であり、<paramref name="rgb" /> パラメーターの長さが <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-183">The <paramref name="fOAEP" /> parameter is <see langword="true" /> and the length of the <paramref name="rgb" /> parameter is greater than <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.</span></span>  
  
<span data-ttu-id="a88b8-184">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-184">-or-</span></span> 
<span data-ttu-id="a88b8-185">キーが暗号化されたデータと一致しません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-185">The key does not match the encrypted data.</span></span> <span data-ttu-id="a88b8-186">ただし、例外の記述が正確でない場合があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-186">However, the exception wording may not be accurate.</span></span> <span data-ttu-id="a88b8-187">たとえば、<c>このコマンドを処理するのに必要な記憶域をサーバーで確保できません</c>と表示される場合があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-187">For example, it may say <c>Not enough storage is available to process this command</c>.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-188"><paramref name="rgb" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-188"><paramref name="rgb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-189">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-189">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.Decrypt : byte[] * System.Security.Cryptography.RSAEncryptionPadding -&gt; byte[]" Usage="rSACryptoServiceProvider.Decrypt (data, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a88b8-190">暗号化を解除するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-190">The data to decrypt.</span></span></param>
        <param name="padding"><span data-ttu-id="a88b8-191">パディング。</span><span class="sxs-lookup"><span data-stu-id="a88b8-191">The padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-192">指定された埋め込みを使用した <see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムで暗号化されたデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-192">Decrypts data that was previously encrypted with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm by using the specified padding.</span></span></summary>
        <returns><span data-ttu-id="a88b8-193">暗号化を解除されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-193">The decrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-194">`padding` は <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> または <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-194">`padding` must be either <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> or <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-195"><paramref name="data" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-195"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a88b8-196">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-196">-or-</span></span> 
 <span data-ttu-id="a88b8-197"><paramref name="padding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-197"><paramref name="padding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-198">そのパディング モードはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-198">The padding mode is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptValue">
      <MemberSignature Language="C#" Value="public override byte[] DecryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberSignature Language="F#" Value="override this.DecryptValue : byte[] -&gt; byte[]" Usage="rSACryptoServiceProvider.DecryptValue rgb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="a88b8-199">復号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-199">The data to be decrypted.</span></span></param>
        <summary><span data-ttu-id="a88b8-200">このメソッドは、現在のバージョンではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-200">This method is not supported in the current version.</span></span></summary>
        <returns><span data-ttu-id="a88b8-201">暗号化する前の元のプレーン テキストである復号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-201">The decrypted data, which is the original plain text before encryption.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a88b8-202">このメソッドは、現在のバージョンではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-202">This method is not supported in the current version.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-203">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-203">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rSACryptoServiceProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a88b8-204">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-204"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a88b8-205"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-205">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-206"><see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムでデータを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-206">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberSignature Language="F#" Value="override this.Encrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Encrypt (rgb, fOAEP)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Encrypt (rgb, fOAEP)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="a88b8-207">暗号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-207">The data to be encrypted.</span></span></param>
        <param name="fOAEP"><span data-ttu-id="a88b8-208">OAEP パディング (Windows XP 以降を実行しているコンピューターでのみ使用可能) を使用して、直接 <see cref="T:System.Security.Cryptography.RSA" /> を暗号化する場合は <see langword="true" />。それ以外の場合で、PKCS#1 v1.5 パディングを使用するには <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-208"><see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> encryption using OAEP padding (only available on a computer running Windows XP or later); otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-209"><see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムでデータを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-209">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="a88b8-210">暗号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-210">The encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-211">次の表では、さまざまなバージョンの Microsoft Windows でサポートされるパディングと、オペレーティングシステムとパディングのさまざまな組み合わせで許可される `rgb` の最大長について説明します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-211">The following table describes the padding supported by different versions of Microsoft Windows and the maximum length of `rgb` allowed by the different combinations of operating systems and padding.</span></span>  
  
|<span data-ttu-id="a88b8-212">[間隔]</span><span class="sxs-lookup"><span data-stu-id="a88b8-212">Padding</span></span>|<span data-ttu-id="a88b8-213">Rgb パラメーターの最大長</span><span class="sxs-lookup"><span data-stu-id="a88b8-213">Maximum Length of rgb Parameter</span></span>|  
|-------------|-------------------------------------|  
|<span data-ttu-id="a88b8-214">OAEP padding (PKCS # 1 v2)</span><span class="sxs-lookup"><span data-stu-id="a88b8-214">OAEP padding (PKCS#1 v2)</span></span>|<span data-ttu-id="a88b8-215">剰余サイズ-2-2 \* hLen (hLen はハッシュのサイズ)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-215">Modulus size -2 -2\*hLen, where hLen is the size of the hash.</span></span>|  
|<span data-ttu-id="a88b8-216">直接暗号化 (PKCS # 1 v 1.5)</span><span class="sxs-lookup"><span data-stu-id="a88b8-216">Direct Encryption (PKCS#1 v1.5)</span></span>|<span data-ttu-id="a88b8-217">剰余サイズ-11。</span><span class="sxs-lookup"><span data-stu-id="a88b8-217">Modulus size - 11.</span></span> <span data-ttu-id="a88b8-218">(11 バイトは、可能な最小の埋め込みです)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-218">(11 bytes is the minimum padding possible.)</span></span>|  
  
 <span data-ttu-id="a88b8-219"><xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> を使用して、このメソッドの結果を復号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-219">Use <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> to decrypt the results of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-220">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを公開キーの値 (別のパーティによって送信される) に初期化し、<xref:System.Security.Cryptography.RijndaelManaged> アルゴリズムを使用してセッションキーを生成し、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを使用してセッションキーを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-220">The following code example initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object to the value of a public key (sent by another party), generates a session key using the <xref:System.Security.Cryptography.RijndaelManaged> algorithm, and then encrypts the session key using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  <span data-ttu-id="a88b8-221">このスキームを使用して、セッションキーを秘密の RSA キーの所有者に送り返すことができます。また、この2つの当事者は、セッションキーを使用して暗号化されたデータを交換できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-221">Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-222">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-222">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="a88b8-223">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-223">-or-</span></span> 
<span data-ttu-id="a88b8-224"><paramref name="rgb" /> パラメーターの長さが、許容最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-224">The length of the <paramref name="rgb" /> parameter is greater than the maximum allowed length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-225"><paramref name="rgb" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-225"><paramref name="rgb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-226">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-226">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.Encrypt : byte[] * System.Security.Cryptography.RSAEncryptionPadding -&gt; byte[]" Usage="rSACryptoServiceProvider.Encrypt (data, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a88b8-227">暗号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-227">The data to encrypt.</span></span></param>
        <param name="padding"><span data-ttu-id="a88b8-228">パディング。</span><span class="sxs-lookup"><span data-stu-id="a88b8-228">The padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-229">指定されたパディングを使用した <see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムでデータを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-229">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm using the specified padding.</span></span></summary>
        <returns><span data-ttu-id="a88b8-230">暗号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-230">The encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-231">`padding` は <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> または <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-231">`padding` must be either <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> or <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-232"><paramref name="data" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-232"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a88b8-233">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-233">-or-</span></span> 
 <span data-ttu-id="a88b8-234"><paramref name="padding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-234"><paramref name="padding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-235">そのパディング モードはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-235">The padding mode is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptValue">
      <MemberSignature Language="C#" Value="public override byte[] EncryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberSignature Language="F#" Value="override this.EncryptValue : byte[] -&gt; byte[]" Usage="rSACryptoServiceProvider.EncryptValue rgb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="a88b8-236">暗号化するデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-236">The data to be encrypted.</span></span></param>
        <summary><span data-ttu-id="a88b8-237">このメソッドは、現在のバージョンではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-237">This method is not supported in the current version.</span></span></summary>
        <returns><span data-ttu-id="a88b8-238">暗号化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-238">The encrypted data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a88b8-239">このメソッドは、現在のバージョンではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-239">This method is not supported in the current version.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-240">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-240">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportCspBlob : bool -&gt; byte[]&#xA;override this.ExportCspBlob : bool -&gt; byte[]" Usage="rSACryptoServiceProvider.ExportCspBlob includePrivateParameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="a88b8-241">秘密キーを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-241"><see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a88b8-242"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> オブジェクトに関連付けられたキー情報を含む blob をエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-242">Exports a blob containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span></span></summary>
        <returns><span data-ttu-id="a88b8-243"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> オブジェクトに関連付けられたキー情報を含むバイト配列。</span><span class="sxs-lookup"><span data-stu-id="a88b8-243">A byte array containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-244"><xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A> メソッドは、アンマネージ Microsoft Cryptographic API (CAPI) と互換性のあるキー情報を含む blob を返します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-244">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-245">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-245">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.RSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As RSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::RSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.RSAParameters" Usage="rSACryptoServiceProvider.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="a88b8-246">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-246"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a88b8-247"><see cref="T:System.Security.Cryptography.RSAParameters" /> をエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-247">Exports the <see cref="T:System.Security.Cryptography.RSAParameters" />.</span></span></summary>
        <returns><span data-ttu-id="a88b8-248"><see cref="T:System.Security.Cryptography.RSA" /> のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="a88b8-248">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a88b8-249">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> を使用して作成されたキー情報を <xref:System.Security.Cryptography.RSAParameters> オブジェクトにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-249">The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-250">キーをエクスポートすることはできません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-250">The key cannot be exported.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-251">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-251">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!RSACryptoServiceProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="rSACryptoServiceProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a88b8-252">このインスタンスによって保持されているアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-252">Releases the unmanaged resources held by this instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="rSACryptoServiceProvider.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a88b8-253">ハッシュするバイナリ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-253">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a88b8-254">ハッシュアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-254">The hash algorithm.</span></span></param>
        <summary><span data-ttu-id="a88b8-255">指定したハッシュ アルゴリズムを使用して、指定したバイナリ ストリームのハッシュ値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-255">Computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="a88b8-256">ハッシュされたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-256">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="rSACryptoServiceProvider.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="a88b8-257">ハッシュされるデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-257">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="a88b8-258">ハッシュされる <paramref name="data" /> の最初のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="a88b8-258">The index of the first byte in <paramref name="data" /> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="a88b8-259">ハッシュするバイト数。</span><span class="sxs-lookup"><span data-stu-id="a88b8-259">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a88b8-260">データのハッシュに使用するアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-260">The algorithm to use in hash the data.</span></span></param>
        <summary><span data-ttu-id="a88b8-261">指定したハッシュ アルゴリズムを使用して、指定したバイト配列部分のハッシュ値を計算します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-261">Computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="a88b8-262">ハッシュされたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-262">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberSignature Language="F#" Value="abstract member ImportCspBlob : byte[] -&gt; unit&#xA;override this.ImportCspBlob : byte[] -&gt; unit" Usage="rSACryptoServiceProvider.ImportCspBlob keyBlob" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyBlob"><span data-ttu-id="a88b8-263">RSA キー blob を表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="a88b8-263">A byte array that represents an RSA key blob.</span></span></param>
        <summary><span data-ttu-id="a88b8-264">RSA キーの情報を表す blob をインポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-264">Imports a blob that represents RSA key information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-265"><xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A> メソッドは、アンマネージ Microsoft Cryptographic API (CAPI) と互換性のある blob を使用して、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトのキーデータを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-265">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-266">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-266">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.RSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As RSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::RSAParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.RSAParameters -&gt; unit" Usage="rSACryptoServiceProvider.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="a88b8-267"><see cref="T:System.Security.Cryptography.RSA" /> のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="a88b8-267">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span></span></param>
        <summary><span data-ttu-id="a88b8-268">指定された <see cref="T:System.Security.Cryptography.RSAParameters" /> をインポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-268">Imports the specified <see cref="T:System.Security.Cryptography.RSAParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a88b8-269">次のコード例では、<xref:System.Security.Cryptography.RSAParameters> オブジェクトから作成されたキー情報を <xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトにインポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-269">The following code example imports key information created from an <xref:System.Security.Cryptography.RSAParameters> object into an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-270">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-270">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="a88b8-271">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-271">-or-</span></span> 
<span data-ttu-id="a88b8-272"><paramref name="parameters" /> パラメーターにはフィールドが不足しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-272">The <paramref name="parameters" /> parameter has missing fields.</span></span></exception>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-273">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-273">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-274"><see cref="T:System.Security.Cryptography.RSA" /> のこの実装で使用可能なキー交換アルゴリズムの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-274">Gets the name of the key exchange algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span></span></summary>
        <value><span data-ttu-id="a88b8-275">存在する場合は、キー交換アルゴリズムの名前。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-275">The name of the key exchange algorithm if it exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-276">このプロパティは、型ではなく、アルゴリズムの名前を示します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-276">This property indicates the name of the algorithm, not of the type.</span></span> <span data-ttu-id="a88b8-277">たとえば、PKCS1-KeyEx はキー交換アルゴリズムの名前です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-277">For example, RSA-PKCS1-KeyEx is a key exchange algorithm name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-278">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-278">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-279">カーソル キーのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-279">Gets the size of the current key.</span></span></summary>
        <value><span data-ttu-id="a88b8-280">キーのサイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-280">The size of the key in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-281">Microsoft Enhanced Cryptographic Provider がインストールされている場合、<xref:System.Security.Cryptography.RSACryptoServiceProvider> は、384ビットから16384ビットまでのキーサイズを8ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-281">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</span></span>  <span data-ttu-id="a88b8-282">Microsoft Base Cryptographic Provider がインストールされている場合、384ビットから512ビットまでのキーサイズを8ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-282">It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</span></span>  
  
 <span data-ttu-id="a88b8-283">有効なキーサイズは、<xref:System.Security.Cryptography.RSACryptoServiceProvider> インスタンスによって使用される暗号化サービスプロバイダー (CSP) に依存します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-283">Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance.</span></span> <span data-ttu-id="a88b8-284">Windows Csp では、[!INCLUDE[win81](~/includes/win81-md.md)]より前の Windows バージョンでは 384 ~ 16384 ビットのキーサイズが有効になり、[!INCLUDE[win81](~/includes/win81-md.md)]では512から16384ビットのキーサイズが有効になります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-284">Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/includes/win81-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/includes/win81-md.md)].</span></span> <span data-ttu-id="a88b8-285">詳細については、Windows ドキュメントの「 [Cryptgenkey](https://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)関数」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a88b8-285">For more information, see [CryptGenKey](https://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) function in the Windows documentation.</span></span>  
  
 <span data-ttu-id="a88b8-286"><xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスでは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A> プロパティを使用してキーのサイズを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-286">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="a88b8-287">このプロパティに書き込まれた値は、エラーなしでプロパティを更新できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-287">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="a88b8-288">キーサイズを変更するには、コンストラクターのオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-288">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-289">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-289">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-290">非対称アルゴリズムでサポートされているキー サイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-290">Gets the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="a88b8-291">非対称アルゴリズムでサポートされているキー サイズを保持している配列。</span><span class="sxs-lookup"><span data-stu-id="a88b8-291">An array that contains the key sizes supported by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="a88b8-292">サポートされる RSA キーのサイズは、使用可能な暗号化サービスプロバイダーによって異なります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-292">The supported RSA key sizes depend on the available cryptographic service provider.</span></span> <span data-ttu-id="a88b8-293">詳細については、「<xref:System.Security.Cryptography.RSACryptoServiceProvider#remarks> 解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a88b8-293">For more information, see <xref:System.Security.Cryptography.RSACryptoServiceProvider#remarks> remarks.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistKeyInCsp : bool with get, set" Usage="System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-294">暗号化サービス プロバイダー (CSP) にキーを保存するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-294">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span></span></summary>
        <value><span data-ttu-id="a88b8-295">CSP にキーを保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-295"><see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-296">キーコンテナーのキーを永続化するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-296">Use this property to persist a key in a key container.</span></span>  
  
 <span data-ttu-id="a88b8-297"><xref:System.Security.Cryptography.CspParameters> オブジェクトの <xref:System.Security.Cryptography.CspParameters.KeyContainerName> フィールドにキーコンテナー名を指定し、それを使用して、<xref:System.Security.Cryptography.RSACryptoServiceProvider> パラメーターを持つコンストラクターの1つを呼び出すことによって `parameters` オブジェクトを初期化すると、<xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> プロパティは自動的に `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-297">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> property is automatically set to `true` when you specify a key container name in the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of a <xref:System.Security.Cryptography.CspParameters> object and use it to initialize an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object by calling one of the constructors with a `parameters` parameter.</span></span>  
  
 <span data-ttu-id="a88b8-298"><xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> プロパティは、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトが `null` キーコンテナー名で作成されている場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-298">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> property has no effect if the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object is created with a `null` key container name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-299">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成し、キーをキーコンテナーに保持します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-299">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and persists the key to a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-300">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-300">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicOnly : bool" Usage="System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-301"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> オブジェクトに公開キーだけが含まれているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-301">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object contains only a public key.</span></span></summary>
        <value><span data-ttu-id="a88b8-302"><see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> オブジェクトに公開キーだけが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-302"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-303"><xref:System.Security.Cryptography.RSACryptoServiceProvider> クラスは、公開キーのみを使用して、または公開キーと秘密キーの両方を指定して初期化できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-303">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="a88b8-304">現在のインスタンスに公開キーのみ、または公開キーと秘密キーの両方が含まれているかどうかを確認するには、<xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-304">Use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-305">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-305">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-306"><see cref="T:System.Security.Cryptography.RSA" /> のこの実装で使用可能なキー交換アルゴリズムの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-306">Gets the name of the signature algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span></span></summary>
        <value><span data-ttu-id="a88b8-307">署名アルゴリズムの名前。</span><span class="sxs-lookup"><span data-stu-id="a88b8-307">The name of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-308">このプロパティは、アルゴリズム URI を示すために XML デジタル署名クラスで使用されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-308">This property is used in XML digital signature classes to indicate the algorithm URI.</span></span> <span data-ttu-id="a88b8-309">この実装では、このプロパティは常に http://www.w3.org/2000/09/xmldsig#rsa-sha1 を返します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-309">In this implementation, this property always returns http://www.w3.org/2000/09/xmldsig#rsa-sha1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-310">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-310">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-311">指定したデータのハッシュ値を計算し、それに署名します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-311">Computes the hash value of the specified data and signs it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, halg)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, halg)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a88b8-312">ハッシュおよび署名する入力データ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-312">The input data to hash and sign.</span></span></param>
        <param name="halg"><span data-ttu-id="a88b8-313">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-313">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a88b8-314">指定したハッシュ アルゴリズムを使用して、指定したバイト配列のハッシュ値を計算し、結果のハッシュ値に署名します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-314">Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-315">指定されたデータの <see cref="T:System.Security.Cryptography.RSA" /> 署名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-315">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-316">このメソッドは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> メソッドを使用して検証されるデジタル署名を作成します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-316">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="a88b8-317">`halg` パラメーターは、<xref:System.String>、<xref:System.Security.Cryptography.HashAlgorithm>、または <xref:System.Type>を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-317">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-318">次のコード例では、データの署名と検証を行います。</span><span class="sxs-lookup"><span data-stu-id="a88b8-318">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-319"><paramref name="halg" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-319">The <paramref name="halg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-320"><paramref name="halg" /> パラメーターが有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-320">The <paramref name="halg" /> parameter is not a valid type.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-321">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-321">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : System.IO.Stream * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (inputStream, halg)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SignData : System.IO.Stream * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (inputStream, halg)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="a88b8-322">ハッシュおよび署名する入力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-322">The input stream to hash and sign.</span></span></param>
        <param name="halg"><span data-ttu-id="a88b8-323">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-323">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a88b8-324">指定したハッシュ アルゴリズムを使用して、指定した入力ストリームのハッシュ値を計算し、結果のハッシュ値に署名します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-324">Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-325">指定されたデータの <see cref="T:System.Security.Cryptography.RSA" /> 署名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-325">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-326">`halg` パラメーターは、<xref:System.String>、<xref:System.Security.Cryptography.HashAlgorithm>、または <xref:System.Type>を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-326">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-327">次のコード例では、データの署名と検証を行います。</span><span class="sxs-lookup"><span data-stu-id="a88b8-327">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-328"><paramref name="halg" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-328">The <paramref name="halg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-329"><paramref name="halg" /> パラメーターが有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-329">The <paramref name="halg" /> parameter is not a valid type.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-330">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-330">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * int * int * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, offset, count, halg)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * int * int * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, offset, count, halg)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a88b8-331">ハッシュおよび署名する入力データ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-331">The input data to hash and sign.</span></span></param>
        <param name="offset"><span data-ttu-id="a88b8-332">配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="a88b8-332">The offset into the array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="a88b8-333">配列内でデータとして使用されるバイトの数。</span><span class="sxs-lookup"><span data-stu-id="a88b8-333">The number of bytes in the array to use as data.</span></span></param>
        <param name="halg"><span data-ttu-id="a88b8-334">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="a88b8-334">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="a88b8-335">指定したハッシュ アルゴリズムを使用して、指定したバイト配列のサブセットのハッシュ値を計算し、結果のハッシュ値に署名します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-335">Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-336">指定されたデータの <see cref="T:System.Security.Cryptography.RSA" /> 署名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-336">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-337">このメソッドは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> メソッドを使用して検証されるデジタル署名を作成します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-337">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="a88b8-338">`halg` パラメーターは、<xref:System.String>、<xref:System.Security.Cryptography.HashAlgorithm>、または <xref:System.Type>を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-338">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span> <span data-ttu-id="a88b8-339">文字列値には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-339">The string value can be one of the following:</span></span>  
  
-   <span data-ttu-id="a88b8-340">使用するハッシュアルゴリズムのオブジェクト識別子 (OID) のフレンドリ名。暗号化構成ファイルに登録された名前、または Crypto API OID テーブル内の名前のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="a88b8-340">The object identifier (OID) friendly name of the hash algorithm to use, either a name registered in the crypto config file or one in the Crypto API OID table.</span></span>  
  
-   <span data-ttu-id="a88b8-341">OID の値。</span><span class="sxs-lookup"><span data-stu-id="a88b8-341">The OID value.</span></span> <span data-ttu-id="a88b8-342">OID は、Crypto API によって認識される必要があります。</span><span class="sxs-lookup"><span data-stu-id="a88b8-342">The OID must be one recognized by the Crypto API.</span></span>  
  
 <span data-ttu-id="a88b8-343">たとえば、SignData (new byte [5]、"1.3.14.3.2.26") または SignData (new byte [5]、"sha1")、または SignData (new byte [5], "SHA1") を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-343">For example, you could use SignData(new byte[5], "1.3.14.3.2.26") or SignData(new byte[5], "sha1"), or SignData(new byte[5], "SHA1").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-344">次のコード例では、データの署名と検証を行います。</span><span class="sxs-lookup"><span data-stu-id="a88b8-344">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-345"><paramref name="halg" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-345">The <paramref name="halg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-346"><paramref name="halg" /> パラメーターが有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-346">The <paramref name="halg" /> parameter is not a valid type.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-347">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-347">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-348">指定したハッシュ値の署名を計算します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-348">Computes the signature for the specified hash value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] * string -&gt; byte[]" Usage="rSACryptoServiceProvider.SignHash (rgbHash, str)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SignHash : byte[] * string -&gt; byte[]" Usage="rSACryptoServiceProvider.SignHash (rgbHash, str)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="a88b8-349">署名されたデータのハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="a88b8-349">The hash value of the data to be signed.</span></span></param>
        <param name="str"><span data-ttu-id="a88b8-350">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム識別子 (OID)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-350">The hash algorithm identifier (OID) used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="a88b8-351">指定したハッシュ値の署名を計算します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-351">Computes the signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-352">指定されたハッシュ値の <see cref="T:System.Security.Cryptography.RSA" /> 署名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-352">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-353">このメソッドは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> メソッドを使用して検証されるデジタル署名を作成します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-353">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="a88b8-354">有効なハッシュアルゴリズムは <xref:System.Security.Cryptography.SHA1> と <xref:System.Security.Cryptography.MD5>です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-354">The valid hash algorithms are <xref:System.Security.Cryptography.SHA1> and <xref:System.Security.Cryptography.MD5>.</span></span> <span data-ttu-id="a88b8-355">アルゴリズム識別子は、<xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> メソッドを使用してハッシュ名から派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-355">The algorithm identifier can be derived from the hash name by using the <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> method.</span></span>  
  
 <span data-ttu-id="a88b8-356">SHA1 と MD5 の衝突の問題により、SHA256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-356">Due to collision problems with SHA1 and MD5, Microsoft recommends a security model based on SHA256 or better.</span></span>  
  
## Examples  
 <span data-ttu-id="a88b8-357">次のコード例では、一部のデータを暗号化し、暗号化されたデータのハッシュを作成した後、デジタル署名を使用してハッシュに署名します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-357">The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-358"><paramref name="rgbHash" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-358">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-359">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-359">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
 <span data-ttu-id="a88b8-360">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-360">-or-</span></span>  
  
 <span data-ttu-id="a88b8-361">秘密キーはありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-361">There is no private key.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-362">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-362">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.RSASignaturePadding -&gt; byte[]" Usage="rSACryptoServiceProvider.SignHash (hash, hashAlgorithm, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="a88b8-363">署名されたデータのハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="a88b8-363">The hash value of the data to be signed.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a88b8-364">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-364">The hash algorithm name used to create the hash value of the data.</span></span></param>
        <param name="padding"><span data-ttu-id="a88b8-365">パディング。</span><span class="sxs-lookup"><span data-stu-id="a88b8-365">The padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-366">指定したパディングを使用して、指定したハッシュ値の署名を計算します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-366">Computes the signature for the specified hash value using the specified padding.</span></span></summary>
        <returns><span data-ttu-id="a88b8-367">指定されたハッシュ値の <see cref="T:System.Security.Cryptography.RSA" /> 署名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-367">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-368"><paramref name="hashAlgorithm" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-368"><paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-369"><paramref name="hash" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-369"><paramref name="hash" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a88b8-370">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-370">-or-</span></span> 
 <span data-ttu-id="a88b8-371"><paramref name="padding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-371"><paramref name="padding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-372"><paramref name="padding" /> は <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-372"><paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMachineKeyStore : bool with get, set" Usage="System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a88b8-373">キーをユーザー プロファイル ストアではなくコンピューターのキー ストア内で永続化するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-373">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span></span></summary>
        <value><span data-ttu-id="a88b8-374">キーをコンピューター キー ストア内で永続化する場合、<see langword="true" />。それ以外の場合、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-374"><see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-375">このプロパティを `true` に設定することは、<xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore> フラグを <xref:System.Security.Cryptography.CspParameters> オブジェクトに渡すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="a88b8-375">Setting this property to `true` is equivalent to passing the <xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="a88b8-376"><xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> プロパティは、現在のアプリケーションドメインのすべてのコードに適用されます。一方、<xref:System.Security.Cryptography.CspParameters> オブジェクトは、それを明示的に参照するクラスにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-376">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, whereas the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="a88b8-377">これらの設定は、ユーザープロファイルが読み込まれていないアカウントで権限を借用する場合や実行する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-377">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span> <span data-ttu-id="a88b8-378"><xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> の設定は、<xref:System.Security.Cryptography.RSACryptoServiceProvider> がパラメーターなしで初期化されている場合にのみキーストアの場所に影響します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-378">Setting <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> affects the key store location only if <xref:System.Security.Cryptography.RSACryptoServiceProvider> is initialized with no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-379">次のコード例では、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトを作成し、ユーザープロファイルキーストアではなく、コンピューターキーストアを使用するように静的 <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-379">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and sets the static <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> property to use the machine key store instead of the user profile key store.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CPP/example2.cpp#2)]
 [!code-csharp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CS/example2.cs#2)]
 [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/VB/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-380">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-380">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-381">デジタル署名が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-381">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] buffer, object halg, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] buffer, object halg, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (buffer As Byte(), halg As Object, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * obj * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyData (buffer, halg, signature)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * obj * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyData (buffer, halg, signature)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a88b8-382">署名されたデータ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-382">The data that was signed.</span></span></param>
        <param name="halg"><span data-ttu-id="a88b8-383">データのハッシュ値を作成するために使用されるハッシュ アルゴリズムの名前。</span><span class="sxs-lookup"><span data-stu-id="a88b8-383">The name of the hash algorithm used to create the hash value of the data.</span></span></param>
        <param name="signature"><span data-ttu-id="a88b8-384">検証する署名データ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-384">The signature data to be verified.</span></span></param>
        <summary><span data-ttu-id="a88b8-385">指定した公開キーを使用して署名のハッシュ値を決定し、この値と指定したデータのハッシュ値とを比較することによって、デジタル署名が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-385">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.</span></span></summary>
        <returns><span data-ttu-id="a88b8-386">署名が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-386"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-387">このメソッドは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> メソッドによって生成された <xref:System.Security.Cryptography.RSA> のデジタル署名を検証します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-387">This method verifies the <xref:System.Security.Cryptography.RSA> digital signature produced by the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> method.</span></span> <span data-ttu-id="a88b8-388">署名は、署名された公開キーを使用して署名からハッシュ値を取得し、その値を指定されたデータのハッシュ値と比較することによって検証されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-388">The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</span></span>  
  
 <span data-ttu-id="a88b8-389">`halg` パラメーターは、<xref:System.String>、<xref:System.Security.Cryptography.HashAlgorithm>、または <xref:System.Type>を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-389">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a88b8-390">次の例は、<xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> メソッドを使用して署名を検証する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-390">The following example shows how to use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method to verify a signature.</span></span> <span data-ttu-id="a88b8-391">このコード例は、<xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> メソッド用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-391">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-392"><paramref name="halg" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-392">The <paramref name="halg" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-393"><paramref name="halg" /> パラメーターが有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-393">The <paramref name="halg" /> parameter is not a valid type.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-394">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-394">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a88b8-395">デジタル署名が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-395">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * string * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyHash (rgbHash, str, rgbSignature)" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.VerifyHash : byte[] * string * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyHash (rgbHash, str, rgbSignature)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="a88b8-396">署名されたデータのハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="a88b8-396">The hash value of the signed data.</span></span></param>
        <param name="str"><span data-ttu-id="a88b8-397">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム識別子 (OID)。</span><span class="sxs-lookup"><span data-stu-id="a88b8-397">The hash algorithm identifier (OID) used to create the hash value of the data.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="a88b8-398">検証する署名データ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-398">The signature data to be verified.</span></span></param>
        <summary><span data-ttu-id="a88b8-399">指定した公開キーを使用して署名のハッシュ値を決定し、この値と指定したハッシュ値とを比較することによって、デジタル署名が正しいことを確認します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-399">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-400">署名が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-400"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a88b8-401">このメソッドは、<xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> メソッドによって生成された <xref:System.Security.Cryptography.RSA> のデジタル署名を検証します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-401">This method verifies the <xref:System.Security.Cryptography.RSA> digital signature produced by the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span> <span data-ttu-id="a88b8-402">署名は、署名された公開キーを使用して署名からハッシュ値を取得し、その値を指定されたデータのハッシュ値と比較することによって検証されます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-402">The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</span></span>  
  
 <span data-ttu-id="a88b8-403">有効なハッシュアルゴリズムは <xref:System.Security.Cryptography.SHA1> と <xref:System.Security.Cryptography.MD5>です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-403">The valid hash algorithms are <xref:System.Security.Cryptography.SHA1> and <xref:System.Security.Cryptography.MD5>.</span></span> <span data-ttu-id="a88b8-404">アルゴリズム識別子は、<xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> メソッドを使用してハッシュ名から派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="a88b8-404">The algorithm identifier can be derived from the hash name by using the <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> method.</span></span>  
  
 <span data-ttu-id="a88b8-405">SHA1 と MD5 の衝突の問題により、SHA256 以上に基づくセキュリティモデルをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a88b8-405">Due to collision problems with SHA1 and MD5, Microsoft recommends a security model based on SHA256 or better.</span></span>    
  
## Examples  
 <span data-ttu-id="a88b8-406">次の例は、<xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> メソッドを使用して署名を検証する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a88b8-406">The following example shows how to use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> method to verify a signature.</span></span> <span data-ttu-id="a88b8-407">このコード例は、<xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> メソッド用に提供されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-407">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-408"><paramref name="rgbHash" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-408">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a88b8-409">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-409">-or-</span></span> 
<span data-ttu-id="a88b8-410"><paramref name="rgbSignature" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-410">The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-411">暗号化サービス プロバイダー (CSP) を取得できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-411">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
 <span data-ttu-id="a88b8-412">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-412">-or-</span></span>  
  
 <span data-ttu-id="a88b8-413">署名を検証できません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-413">The signature cannot be verified.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
        <related type="Article" href="/dotnet/standard/security/cryptographic-services"><span data-ttu-id="a88b8-414">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="a88b8-414">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.RSASignaturePadding -&gt; bool" Usage="rSACryptoServiceProvider.VerifyHash (hash, signature, hashAlgorithm, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="signature" Type="System.Byte[]" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="a88b8-415">署名されたデータのハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="a88b8-415">The hash value of the signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="a88b8-416">検証する署名データ。</span><span class="sxs-lookup"><span data-stu-id="a88b8-416">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="a88b8-417">ハッシュ値を作成するために使用するハッシュ アルゴリズム名。</span><span class="sxs-lookup"><span data-stu-id="a88b8-417">The hash algorithm name used to create the hash value.</span></span></param>
        <param name="padding"><span data-ttu-id="a88b8-418">パディング。</span><span class="sxs-lookup"><span data-stu-id="a88b8-418">The padding.</span></span></param>
        <summary><span data-ttu-id="a88b8-419">指定したハッシュ アルゴリズムとパディングを使用して、署名のハッシュ値を決定し、これを指定したハッシュ値と比較することによって、デジタル署名が有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a88b8-419">Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.</span></span></summary>
        <returns><span data-ttu-id="a88b8-420">署名が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a88b8-420"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a88b8-421"><paramref name="hashAlgorithm" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-421"><paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a88b8-422"><paramref name="hash" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-422"><paramref name="hash" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a88b8-423">または</span><span class="sxs-lookup"><span data-stu-id="a88b8-423">-or-</span></span> 
 <span data-ttu-id="a88b8-424"><paramref name="padding" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a88b8-424"><paramref name="padding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a88b8-425"><paramref name="padding" /> は <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="a88b8-425"><paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
