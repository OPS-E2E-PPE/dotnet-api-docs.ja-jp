<Type Name="AesCcm" FullName="System.Security.Cryptography.AesCcm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fd50334804b81aa4f9c722532886a1f4dfdd5c4" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76958810" /></Metadata><TypeSignature Language="C#" Value="public sealed class AesCcm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AesCcm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AesCcm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AesCcm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AesCcm sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type AesCcm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>操作の Counter with CBC-MAC (CCM) モードで使用される Advanced Encryption Standard (AES) キーを表します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : byte[] -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">このインスタンスに使用する秘密キー。</param>
        <summary>指定されたキーを使用して、<see cref="T:System.Security.Cryptography.AesCcm" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="key" /> パラメーターの長さが 16、24、または 32 バイト (128、192、または 256 ビット) ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (ReadOnlySpan&lt;byte&gt; key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(ReadOnlySpan&lt;System::Byte&gt; key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="key">このインスタンスに使用する秘密キー。</param>
        <summary>指定されたキーを使用して、<see cref="T:System.Security.Cryptography.AesCcm" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="key" /> パラメーターの長さが 16、24、または 32 バイト (128、192、または 256 ビット) ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (byte[] nonce, byte[] ciphertext, byte[] tag, byte[] plaintext, byte[] associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(unsigned int8[] nonce, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] plaintext, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As Byte(), ciphertext As Byte(), tag As Byte(), plaintext As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">このメッセージに関連付けられている nonce。暗号化時に指定された値と一致する必要があります。</param>
        <param name="ciphertext">暗号化解除する暗号化されたコンテンツ。</param>
        <param name="tag">暗号化中にこのメッセージに対して生成された認証タグ。</param>
        <param name="plaintext">暗号化解除されたコンテンツを受け取るバイト配列。</param>
        <param name="associatedData">このメッセージに関連付けられている追加データ。暗号化時に指定された値と一致する必要があります。</param>
        <summary>認証タグを検証できる場合は、暗号化テキストを指定されたターゲット バッファーに暗号化解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

キー、`nonce`、`ciphertext`、および `associatedData` の値を使用して `tag` を検証できない場合は、`plaintext` がクリアされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> パラメーターと <paramref name="ciphertext" /> の長さが同じではありません。

または

<paramref name="nonce" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> によって許可されていません。

または

<paramref name="tag" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> によって許可されていません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="nonce" />、<paramref name="ciphertext" />、<paramref name="tag" />、または <paramref name="plaintext" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">タグ値を検証できなかったか、暗号化解除操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; ciphertext, ReadOnlySpan&lt;byte&gt; tag, Span&lt;byte&gt; plaintext, ReadOnlySpan&lt;byte&gt; associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ciphertext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; tag, valuetype System.Span`1&lt;unsigned int8&gt; plaintext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As ReadOnlySpan(Of Byte), ciphertext As ReadOnlySpan(Of Byte), tag As ReadOnlySpan(Of Byte), plaintext As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">このメッセージに関連付けられている nonce。暗号化時に指定された値と一致する必要があります。</param>
        <param name="ciphertext">暗号化解除する暗号化されたコンテンツ。</param>
        <param name="tag">暗号化中にこのメッセージに対して生成された認証タグ。</param>
        <param name="plaintext">暗号化解除されたコンテンツを受け取るバイト スパン。</param>
        <param name="associatedData">このメッセージに関連付けられている追加データ。暗号化時に指定された値と一致する必要があります。</param>
        <summary>認証タグを検証できる場合は、暗号化テキストを指定されたターゲット バッファーに暗号化解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

キー、`nonce`、`ciphertext`、および `associatedData` の値を使用して `tag` を検証できない場合は、`plaintext` がクリアされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> パラメーターと <paramref name="ciphertext" /> の長さが同じではありません。

または

<paramref name="nonce" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> によって許可されていません。

または

<paramref name="tag" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> によって許可されていません。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">タグ値を検証できなかったか、暗号化解除操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aesCcm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.AesCcm" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (byte[] nonce, byte[] plaintext, byte[] ciphertext, byte[] tag, byte[] associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(unsigned int8[] nonce, unsigned int8[] plaintext, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As Byte(), plaintext As Byte(), ciphertext As Byte(), tag As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">このメッセージに関連付けられている nonce。同じキーを持つすべての操作に対して一意の値である必要があります。</param>
        <param name="plaintext">暗号化するコンテンツ。</param>
        <param name="ciphertext">暗号化されたコンテンツを受け取るバイト配列。</param>
        <param name="tag">生成された認証タグを受け取るバイト配列。</param>
        <param name="associatedData">このメッセージに関連付けられている追加データ。暗号化解除時にも指定する必要があります。</param>
        <summary>プレーンテキストを暗号化テキストのターゲット バッファーに暗号化し、別のバッファーに認証タグを生成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

AES CCM アルゴリズムモードのセキュリティ保証では、同じ nonce 値が同じキーで2回使用されることはありません。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> パラメーターと <paramref name="ciphertext" /> の長さが同じではありません。

または

<paramref name="nonce" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> によって許可されていません。

または

<paramref name="tag" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> によって許可されていません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="nonce" />、<paramref name="ciphertext" />、<paramref name="tag" />、または <paramref name="plaintext" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; plaintext, Span&lt;byte&gt; ciphertext, Span&lt;byte&gt; tag, ReadOnlySpan&lt;byte&gt; associatedData = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; plaintext, valuetype System.Span`1&lt;unsigned int8&gt; ciphertext, valuetype System.Span`1&lt;unsigned int8&gt; tag, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As ReadOnlySpan(Of Byte), plaintext As ReadOnlySpan(Of Byte), ciphertext As Span(Of Byte), tag As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">このメッセージに関連付けられている nonce。同じキーを持つすべての操作に対して一意の値である必要があります。</param>
        <param name="plaintext">暗号化するコンテンツ。</param>
        <param name="ciphertext">暗号化されたコンテンツを受け取るバイト スパン。</param>
        <param name="tag">生成された認証タグを受け取るバイト スパン。</param>
        <param name="associatedData">このメッセージに関連付けられている追加データ。暗号化解除時にも指定する必要があります。</param>
        <summary>プレーンテキストを暗号化テキストのターゲット バッファーに暗号化し、別のバッファーに認証タグを生成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

AES CCM アルゴリズムモードのセキュリティ保証では、同じ nonce 値が同じキーで2回使用されることはありません。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> パラメーターと <paramref name="ciphertext" /> の長さが同じではありません。

または

<paramref name="nonce" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> によって許可されていません。

または

<paramref name="tag" /> パラメーターの長さは <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> によって許可されていません。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="NonceByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes NonceByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes NonceByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NonceByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ NonceByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NonceByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスでサポートされている nonce サイズをバイト単位で取得します。</summary>
        <value>このインスタンスでサポートされている nonce サイズ: 7、8、9、10、11、12、または13バイト (56、64、72、80、88、96、または104ビット)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes TagByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes TagByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TagByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ TagByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスでサポートされているタグ サイズをバイト単位で取得します。</summary>
        <value>このインスタンスでサポートされるタグサイズ: 4、6、8、10、12、14、または16バイト (32、48、64、80、96、112、または128ビット)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
