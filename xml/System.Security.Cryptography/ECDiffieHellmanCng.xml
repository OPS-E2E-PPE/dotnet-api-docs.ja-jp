<Type Name="ECDiffieHellmanCng" FullName="System.Security.Cryptography.ECDiffieHellmanCng">
  <Metadata><Meta Name="ms.openlocfilehash" Value="298eabb40c2dc401a02cbc503ff860f39205fec4" /><Meta Name="ms.sourcegitcommit" Value="fbe36a3465a31f574ebd41192d31a74126cf757c" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/26/2019" /><Meta Name="ms.locfileid" Value="74546147" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDiffieHellmanCng extends System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDiffieHellmanCng&#xA;Inherits ECDiffieHellman" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDiffieHellmanCng sealed : System::Security::Cryptography::ECDiffieHellman" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanCng = class&#xA;    inherit ECDiffieHellman" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDiffieHellman</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5b5c6-101">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの CNG (Cryptography Next Generation) 実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</span></span> <span data-ttu-id="5b5c6-102">このクラスは、暗号化操作の実行に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-102">This class is used to perform cryptographic operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-103"><xref:System.Security.Cryptography.ECDiffieHellmanCng> クラスを使用すると、2つのパーティがパブリックチャネルを介して通信している場合でも、秘密キーマテリアルを交換できます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-103">The <xref:System.Security.Cryptography.ECDiffieHellmanCng> class enables two parties to exchange private key material even if they are communicating through a public channel.</span></span>  <span data-ttu-id="5b5c6-104">どちらのパーティも、同じシークレット値を計算できます。この値は、マネージ Diffie-hellman クラスで*秘密協定*と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-104">Both parties can calculate the same secret value, which is referred to as the *secret agreement* in the managed Diffie-Hellman classes.</span></span> <span data-ttu-id="5b5c6-105">秘密協定は、対称キーといったさまざまな目的で使用できます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-105">The secret agreement can then be used for a variety of purposes, including as a symmetric key.</span></span> <span data-ttu-id="5b5c6-106">ただし、秘密協定を直接公開するのではなく、<xref:System.Security.Cryptography.ECDiffieHellmanCng> クラスは、値を提供する前に、アグリーメントの後処理を行います。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-106">However, instead of exposing the secret agreement directly, the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class does some post-processing on the agreement before providing the value.</span></span> <span data-ttu-id="5b5c6-107">この post 処理は、*キー派生関数 (KDF)* と呼ばれます。使用する KDF を選択し、Diffie-hellman オブジェクトのインスタンスの一連のプロパティを使用してそのパラメーターを設定できます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-107">This post processing is referred to as the *key derivation function (KDF)*; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</span></span>  
  
|<span data-ttu-id="5b5c6-108">キー派生関数</span><span class="sxs-lookup"><span data-stu-id="5b5c6-108">Key derivation function</span></span>|<span data-ttu-id="5b5c6-109">プロパティ</span><span class="sxs-lookup"><span data-stu-id="5b5c6-109">Properties</span></span>|  
|-----------------------------|----------------|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>|<span data-ttu-id="5b5c6-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-秘密協定の処理に使用されるハッシュアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="5b5c6-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>-ハッシュする前に、秘密協定に付加する省略可能なバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> - An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="5b5c6-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>-ハッシュする前に秘密協定に追加する省略可能なバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>|<span data-ttu-id="5b5c6-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-秘密協定の処理に使用されるハッシュアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="5b5c6-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>-ハッシュする前に、秘密協定に付加する省略可能なバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>- An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="5b5c6-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>-ハッシュする前に秘密協定に追加する省略可能なバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>|<span data-ttu-id="5b5c6-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A>-キー派生のラベル。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> - The label for key derivation.</span></span><br /><br /> <span data-ttu-id="5b5c6-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A>-キー派生のシード。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> - The seed for key derivation.</span></span>|  
  
 <span data-ttu-id="5b5c6-118">キー派生関数によって秘密協定を渡すと、アプリケーションのキーマテリアルとして使用されるバイト配列になります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-118">The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</span></span> <span data-ttu-id="5b5c6-119">生成されるキーマテリアルのバイト数は、キー派生関数に依存します。たとえば、SHA-256 では、256ビットのキーマテリアルが生成されるのに対し、SHA-512 ではキーマテリアルの512ビットが生成されます。ECDH キー交換の基本的な流れは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-119">The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</span></span>  
  
1.  <span data-ttu-id="5b5c6-120">Alice と Bob は、Diffie-hellman キー交換操作に使用するキーペアを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-120">Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</span></span>  
  
2.  <span data-ttu-id="5b5c6-121">Alice と Bob は、同意するパラメーターを使用して KDF を構成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-121">Alice and Bob configure the KDF using parameters the agree on.</span></span>  
  
3.  <span data-ttu-id="5b5c6-122">Alice は Bob の公開キーを送信します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-122">Alice sends Bob her public key.</span></span>  
  
4.  <span data-ttu-id="5b5c6-123">Bob は Alice に公開キーを送信します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-123">Bob sends Alice his public key.</span></span>  
  
5.  <span data-ttu-id="5b5c6-124">Alice と Bob は、互いの公開キーを使用して秘密協定を生成し、KDF を秘密協定に適用してキーマテリアルを生成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-124">Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b5c6-125">次の例では、<xref:System.Security.Cryptography.ECDiffieHellmanCng> クラスを使用してキー交換を確立する方法と、そのキーを使用してパブリックチャネルを介して送信し、受信側が復号化できるメッセージを暗号化する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-125">The following example shows how to use the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</span></span>  
  
 [!code-csharp[ECDiffieHellmanCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdiffiehellmancng/cs/program.cs#1)]
 [!code-vb[ECDiffieHellmanCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdiffiehellmancng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-126"><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-126">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b5c6-127">ランダムなキーのペアで、<see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-128">ランダムなキーのペアの既定の公開キーの長さは521ビットです。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-128">The random key pair has a default public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : int -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="5b5c6-129">キーのサイズです。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-129">The size of the key.</span></span> <span data-ttu-id="5b5c6-130">有効なキーのサイズは、256、384、および 521 ビットです。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-130">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="5b5c6-131">指定されたキー サイズを使用して、ランダムなキー ペアで、<see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair, using the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-132">ランダムなキーのペアには、`keySize` パラメーターによって定義される公開キーの長さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-132">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-133"><paramref name="keySize" /> に指定された長さが無効です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-133"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5b5c6-134">Cryptography Next Generation (CNG) クラスは、このシステムではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-134">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5b5c6-135">現在のオブジェクトが実行する暗号化操作への入力として使用するキー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-135">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="5b5c6-136">指定した <see cref="T:System.Security.Cryptography.CngKey" /> オブジェクトを使用して、<see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-136">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-137"><paramref name="key" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-137"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-138"><paramref name="key" /> に、ECDH アルゴリズム グループが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-138"><paramref name="key" /> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5b5c6-139">Cryptography Next Generation (CNG) クラスは、このシステムではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-139">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="5b5c6-140">公開/秘密キー ペアを生成するために使用される曲線。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-140">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="5b5c6-141">指定した曲線に対して生成された公開/秘密キー ペアの <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-141">Creates a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-142">`curve` は <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> メソッドに渡されるときに `true`を返す必要があります。また、名前付きまたは明示的な素数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-142">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-143"><paramref name="curve" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-143"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHash">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-144">指定したハッシュ アルゴリズムを使用して、キー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-144">Performs key derivation using a specified hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHash">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHash(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHash (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHash(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHash : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHash (otherPartyPublicKey, hashAlgorithm, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretAppend" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-145">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-145">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="5b5c6-146">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-146">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="5b5c6-147">ハッシュ前に派生の機密情報の先頭に追加する値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-147">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="5b5c6-148">ハッシュ前に派生の機密情報に追加する値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-148">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="5b5c6-149">指定したハッシュ アルゴリズムを省略可能な追加されたデータと共に使用して、キー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-149">Performs key derivation using a specified hash algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-150">要求に応じてデータを追加した後の共有シークレットのハッシュ。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-150">The hash of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="5b5c6-151">派生クラスはこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-151">A derived class must override this method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-152"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-152">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="5b5c6-153">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-153">-or-</span></span>

<span data-ttu-id="5b5c6-154"><paramref name="hashAlgorithm" /> パラメーターにハッシュが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-154">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-155"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-155"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-156"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-156">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="5b5c6-157">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-157">-or-</span></span>

<span data-ttu-id="5b5c6-158">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-158">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHmac">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-159">ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生しています。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-159">Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHmac">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHmac(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] hmacKey, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHmac (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, hmacKey As Byte(), secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHmac(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ hmacKey, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHmac : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHmac (otherPartyPublicKey, hashAlgorithm, hmacKey, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hmacKey" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="secretAppend" Type="System.Byte[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-160">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-160">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="5b5c6-161">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-161">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="hmacKey"><span data-ttu-id="5b5c6-162">HMAC のキー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-162">The key for the HMAC.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="5b5c6-163">ハッシュ前に派生の機密情報の先頭に追加する値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-163">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="5b5c6-164">ハッシュ前に派生の機密情報に追加する値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-164">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="5b5c6-165">指定した HMAC (Hash-based Message Authentication Code) アルゴリズムを省略可能な追加されたデータと共に使用して、キー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-165">Performs key derivation using a specified HMAC (Hash-based Message Authentication Code) algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-166">要求に応じてデータを追加した後の共有シークレットの HMAC。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-166">The HMAC of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-167"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-167">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="5b5c6-168">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-168">-or-</span></span>

<span data-ttu-id="5b5c6-169"><paramref name="hashAlgorithm" /> パラメーターにハッシュが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-169">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-170"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-170"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-171"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-171">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="5b5c6-172">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-172">-or-</span></span>

<span data-ttu-id="5b5c6-173">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-173">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyMaterial">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-174">二者の間の秘密協定から生成されたキー マテリアルを派生させます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-174">Derives the key material that is generated from the secret agreement between two parties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-175">Ecdh アルゴリズムは、秘密キーとその他のパーティの公開キーを入力として受け取り、秘密協定を出力として生成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-175">The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party's public key as input, and produces the secret agreement as output.</span></span> <span data-ttu-id="5b5c6-176">次に、キー派生関数 (KDF) が秘密協定を受け取り、キーマテリアルを出力として生成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-176">The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveKeyMaterial (otherPartyPublicKey As CngKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.CngKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-177">キー交換で相手から取得した ECDH (Elliptic Curve Diffie-Hellman) キーの公開部分を格納したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-177">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="5b5c6-178">相手の公開キーを格納した <see cref="T:System.Security.Cryptography.CngKey" /> オブジェクトを指定した場合に、二者の間の秘密協定から生成されたキー マテリアルを派生させます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-178">Derives the key material that is generated from the secret agreement between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-179">キー マテリアルを格納したバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-179">A byte array that contains the key material.</span></span> <span data-ttu-id="5b5c6-180">現在のオブジェクトの秘密キーと指定した公開キーから計算された秘密協定から、この情報は生成されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-180">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-181"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-181"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-182"><paramref name="otherPartyPublicKey" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-182"><paramref name="otherPartyPublicKey" /> is invalid.</span></span> <span data-ttu-id="5b5c6-183"><see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> プロパティで <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> が指定されていないか、キー サイズが現在のインスタンスのキー サイズと一致していません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-183">Either its <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> property does not specify <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> or its key size does not match the key size of this instance.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b5c6-184">このオブジェクトの <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> プロパティでは <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> キー派生関数を指定しますが、<see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> または <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> のどちらか一方は <see langword="null" /> にします。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-184">This object's <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> property specifies the <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> key derivation function, but either <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> or <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-185">上記以外のすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-185">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyMaterial (otherPartyPublicKey As ECDiffieHellmanPublicKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-186">キー交換で相手から取得した公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-186">The public key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="5b5c6-187">相手の公開キーを格納した <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> オブジェクトを指定した場合に、二者の間の秘密協定から生成されたキー マテリアルを派生させます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-187">Derives the key material that is generated from the secret agreement between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-188">キー マテリアルを格納したバイト配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-188">A byte array that contains the key material.</span></span> <span data-ttu-id="5b5c6-189">現在のオブジェクトの秘密キーと指定した公開キーから計算された秘密協定から、この情報は生成されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-189">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-190"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-190"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-191"><paramref name="otherPartyPublicKey" /> が <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> キーではありません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-191"><paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyTls">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyTls(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, unsigned int8[] prfLabel, unsigned int8[] prfSeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyTls (otherPartyPublicKey As ECDiffieHellmanPublicKey, prfLabel As Byte(), prfSeed As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyTls(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, cli::array &lt;System::Byte&gt; ^ prfLabel, cli::array &lt;System::Byte&gt; ^ prfSeed);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyTls : System.Security.Cryptography.ECDiffieHellmanPublicKey * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyTls (otherPartyPublicKey, prfLabel, prfSeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prfLabel" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prfSeed" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-192">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-192">The other party's public key.</span></span></param>
        <param name="prfLabel"><span data-ttu-id="5b5c6-193">ASCII エンコードされた PRF ラベル。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-193">The ASCII-encoded PRF label.</span></span></param>
        <param name="prfSeed"><span data-ttu-id="5b5c6-194">64 バイト PRF シード。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-194">The 64-byte PRF seed.</span></span></param>
        <summary><span data-ttu-id="5b5c6-195">TLS (トランスポート層セキュリティ) 1.1 PRF (擬似ランダム関数) を使用してキー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-195">Performs key derivation using the TLS (Transport Layer Security) 1.1 PRF (Pseudo-Random Function).</span></span></summary>
        <returns><span data-ttu-id="5b5c6-196">キーとして共有シークレットを使用した TLS 1.1 PRF の最初の 48 バイト。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-196">The first 48 bytes from the TLS 1.1 PRF, using the shared secret as the key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="5b5c6-197">派生クラスはこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-197">A derived class must override this method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-198"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-198">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-199"><paramref name="otherPartyPublicKey" />、<paramref name="prfLabel" />、または <paramref name="prfSeed" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-199"><paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> or <paramref name="prfSeed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-200"><paramref name="prfSeed" /> は 64 バイト長に完全には一致しません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-200"><paramref name="prfSeed" /> is not exactly 64 bytes in length.</span></span>

<span data-ttu-id="5b5c6-201">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-201">-or-</span></span>

<span data-ttu-id="5b5c6-202"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-202">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="5b5c6-203">- または -</span><span class="sxs-lookup"><span data-stu-id="5b5c6-203">-or-</span></span>

<span data-ttu-id="5b5c6-204">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-204">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveSecretAgreementHandle">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-205">二者の間で生成された秘密協定のハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-205">Gets a handle to the secret agreement generated between two parties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-206"><xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> メソッドのオーバーロードは、キーマテリアルの代わりに生の秘密協定を扱う必要がある上級ユーザー向けです。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-206">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</span></span> <span data-ttu-id="5b5c6-207">シークレットアグリーメントハンドルは、プラットフォーム呼び出しで <xref:System.Security.Cryptography.ECDiffieHellmanCng> クラスによってラップされていないすべての処理を実行するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-207">The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As CngKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.CngKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-208">キー交換で相手から取得した ECDH (Elliptic Curve Diffie-Hellman) キーの公開部分を格納したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-208">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="5b5c6-209">相手の公開キーを格納した <see cref="T:System.Security.Cryptography.CngKey" /> オブジェクトを指定した場合に、二者の間で生成された秘密協定のハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-209">Gets a handle to the secret agreement generated between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-210">秘密協定を識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-210">A handle to the secret agreement.</span></span> <span data-ttu-id="5b5c6-211">現在のオブジェクトの秘密キーと指定した公開キーから、この情報は計算されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-211">This information is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-212"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-212"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-213"><paramref name="otherPartyPublicKey" /> が ECDH キーではありません。または正しいサイズではありません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-213"><paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-214">上記以外のすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-214">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5b5c6-215">アンマネージコードを呼び出すためのアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-215">for permission to call unmanaged code.</span></span> <span data-ttu-id="5b5c6-216">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-216">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="5b5c6-217">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="5b5c6-217">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As ECDiffieHellmanPublicKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="5b5c6-218">キー交換で相手から取得した公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-218">The public key from the other party in the key exchange.</span></span></param>
        <summary><span data-ttu-id="5b5c6-219">相手の公開キーを格納した <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> オブジェクトを指定した場合に、二者の間で生成された秘密協定のハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-219">Gets a handle to the secret agreement generated between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-220">秘密協定を識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-220">A handle to the secret agreement.</span></span> <span data-ttu-id="5b5c6-221">現在のオブジェクトの秘密キーと指定した公開キーから、この情報は計算されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-221">This information is calculated from the current object's private key and the specified public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-222"><paramref name="otherPartyPublicKey" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-222"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-223"><paramref name="otherPartyPublicKey" /> が <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> キーではありません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-223"><paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eCDiffieHellmanCng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5b5c6-224">マネージド リソースとアンマネージド リソースを解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-224"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5b5c6-225"><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-225">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="5b5c6-226">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-226"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5b5c6-227"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトによって使用されているキーと明示的な曲線パラメーターを <see cref="T:System.Security.Cryptography.ECParameters" /> オブジェクトにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-227">Exports the key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-228"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトによって使用されているキーと明示的な曲線パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-228">The key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-229">メソッドは曲線の値を取得できません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-229">The method cannot obtain curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5b5c6-230">明示的なエクスポートは、このプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-230">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="5b5c6-231">Windows 10 以降が必要です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-231">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="5b5c6-232">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-232"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5b5c6-233"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトが使用するキーを <see cref="T:System.Security.Cryptography.ECParameters" /> オブジェクトにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-233">Exports the key used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-234"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトによって使用されているキーと名前付き曲線パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-234">The key and named curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-235">キーが名前付き曲線として作成された場合、<xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> フィールドには名前付き曲線パラメーターが含まれます。         それ以外の場合は、明示的なパラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-235">If the key was created as a named curve, the <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> field contains named curve parameters;          otherwise,  it contains explicit parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-236">メソッドは曲線の値を取得できません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-236">The method cannot obtain curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-237">XML 文字列のキー情報を逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-237">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="5b5c6-238">逆シリアル化する XML ベースのキー情報。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-238">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="5b5c6-239">このメソッドは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-239">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-240">XML キーを逆シリアル化するには、代わりに <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-240">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="5b5c6-241">このメソッドは、このインスタンス向けにオーバーライドされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-241">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string * System.Security.Cryptography.ECKeyXmlFormat -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString (xml, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="5b5c6-242">逆シリアル化する XML ベースのキー情報。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-242">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="5b5c6-243">XML 文字列の形式を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-243">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="5b5c6-244">現在使用できる唯一の形式は、<see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-244">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="5b5c6-245">指定した形式を使用して、XML 文字列からキー情報を逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-245">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-246"><paramref name="xml" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-246"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b5c6-247"><paramref name="xml" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-247"><paramref name="xml" /> is malformed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b5c6-248"><paramref name="format" /> が無効な形式を指定しています。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-248"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="5b5c6-249">使用できる唯一の値は、<see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-249">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-250">上記以外のすべてのエラー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-250">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDiffieHellmanCng.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="5b5c6-251">一時的な公開/秘密キー ペアを生成するために使用される曲線。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-251">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="5b5c6-252">指定した曲線の新しい一時的な公開/秘密キー ペアを生成します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-252">Generates a new ephemeral public/private key pair for the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-253">`curve` は検証する必要があります (つまり、<xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> メソッドに渡される場合は true を返す必要があります)。暗黙的にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-253">`curve` must validate (that is, it must return true when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method) and must not be implicit.</span></span>  
  
 <span data-ttu-id="5b5c6-254">特性2の曲線は、Windows ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-254">Characteristic-2 curves are not supported on Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-255"><paramref name="curve" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-255"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.CngAlgorithm with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-256">キー マテリアルの生成時に使用するハッシュ アルゴリズムを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-256">Gets or sets the hash algorithm to use when generating key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-257">ハッシュ アルゴリズムを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-257">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-258">このプロパティは、<xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティで <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> または <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> 値が設定されている場合にのみ、Cryptography Next Generation (CNG) オブジェクトによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-258">This property is used by Cryptography Next Generation (CNG) objects only if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span>  
  
 <span data-ttu-id="5b5c6-259">このプロパティは、<xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>、<xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>、<xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>、<xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>、および <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>の各アルゴリズムを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-259">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="5b5c6-260">その他のカスタムハッシュアルゴリズムを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-260">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="5b5c6-261">MD5 と SHA1 の衝突の問題により、Microsoft は <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-261">Due to collision problems with MD5 and SHA1, Microsoft recommends <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span> <span data-ttu-id="5b5c6-262">既定のアルゴリズムは <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-262">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b5c6-263">値が <see langword="null." /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-263">The value is <see langword="null." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HmacKey">
      <MemberSignature Language="C#" Value="public byte[] HmacKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] HmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberSignature Language="VB.NET" Value="Public Property HmacKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ HmacKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HmacKey : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-264">キー マテリアル派生時に使用するハッシュ メッセージ認証コード (HMAC: Hash-based Message Authentication Code) キーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-264">Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-265">キー マテリアルの派生時に使用するハッシュ メッセージ認証コード (HMAC) キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-265">The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-266">このプロパティは、<xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティで <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> 値が設定されており、<xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> プロパティが `false`場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-266">This property applies only when the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property, and the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> property is `false`.</span></span> <span data-ttu-id="5b5c6-267">既定では、値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-267">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDiffieHellmanCng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="5b5c6-268">インポートする曲線のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-268">The curve's parameters to import.</span></span></param>
        <summary><span data-ttu-id="5b5c6-269">キーとして <see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトに指定したパラメーターを現在のインスタンスにインポートします。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-269">Imports the specified parameters for an <see cref="T:System.Security.Cryptography.ECCurve" /> object as a key into the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-270"><xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> メソッドは、新しい <xref:System.Security.Cryptography.CngKey> オブジェクトを作成することによって、このオブジェクトが使用している既存のキーを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-270">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> method replaces the existing key that this object is working with by creating a         new <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="5b5c6-271">`parameters` に <xref:System.Security.Cryptography.ECParameters.Q> フィールドのみが含まれている場合は、公開キーのみがインポートされます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-271">If `parameters` contains only the <xref:System.Security.Cryptography.ECParameters.Q> field, then only a public key is imported.</span></span>         <span data-ttu-id="5b5c6-272">`parameters` も <xref:System.Security.Cryptography.ECParameters.D>を含む場合は、完全なキーのペアがインポートされます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-272">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, then a full key pair is be imported.</span></span> <span data-ttu-id="5b5c6-273">`parameter` <xref:System.Security.Cryptography.ECParameters.Curve> 値は、インポートする曲線の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-273">The `parameter` <xref:System.Security.Cryptography.ECParameters.Curve> value specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-274"><paramref name="parameters" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-274"><paramref name="parameters" /> does not validate.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5b5c6-275"><paramref name="parameters" /> はインポートできない曲線を参照します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-275"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="5b5c6-276"><paramref name="parameters" /> はこのプラットフォームでサポートされていない曲線を参照します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-276"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-277">現在のオブジェクトが暗号化操作のために使用する <see cref="T:System.Security.Cryptography.CngKey" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-277">Specifies the <see cref="T:System.Security.Cryptography.CngKey" /> that is used by the current object for cryptographic operations.</span></span></summary>
        <value><span data-ttu-id="5b5c6-278">このオブジェクトが暗号化操作を実行するために使用するキー ペア。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-278">The key pair used by this object to perform cryptographic operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDerivationFunction">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyDerivationFunction As ECDiffieHellmanKeyDerivationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction get(); void set(System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction value); };" />
      <MemberSignature Language="F#" Value="member this.KeyDerivationFunction : System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-279"><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> クラスのキー派生関数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-279">Gets or sets the key derivation function for the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span></span></summary>
        <value><span data-ttu-id="5b5c6-280"><see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> 列挙値である <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />、<see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />、<see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> のうちのいずれか。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-280">One of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> enumeration values: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />, or <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span></span> <span data-ttu-id="5b5c6-281">既定値は <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-281">The default value is <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-282">このプロパティは、秘密協定をキーマテリアルに変換するために使用されるキー派生関数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-282">This property specifies the key derivation function that is used to transform the secret agreement into key material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b5c6-283">列挙値が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-283">The enumeration value is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-284">非対称アルゴリズムで使用されるキー モジュラスのサイズをビット単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-284">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="5b5c6-285">非対称アルゴリズムで使用するキー モジュラスのサイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-285">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="5b5c6-286">このプロパティを現在の値に設定しても、可視効果はありません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-286">Setting this property to its current value has no visible effect.</span></span>
<span data-ttu-id="5b5c6-287">このプロパティを新しい有効な値に設定すると、現在のキーは破棄されますが、必要になるまで新しいキーの作成が延期されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-287">Setting this property to a new legal value discards the current key, but defers creation of a new key until one is needed.</span></span>

<span data-ttu-id="5b5c6-288">キーのサイズは楕円曲線を一意に識別しないので、プロパティ setter の使用は推奨されません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-288">Because key sizes do not uniquely identify elliptic curves, the use of the property setter is discouraged.</span></span> <span data-ttu-id="5b5c6-289">特定の曲線に新しいキーを生成するには、<xref:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-289">To generate a new key on a specific curve, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey%2A> method.</span></span>

]]></format>
        </remarks> 
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5b5c6-290"><paramref name="value" /> は <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" /> によって許可されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-290"><paramref name="value" /> is not permitted by <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public byte[] Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Label { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-291">キー派生で使用されるラベル値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-291">Gets or sets the label value that is used for key derivation.</span></span></summary>
        <value><span data-ttu-id="5b5c6-292">ラベル値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-292">The label value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-293">この値は、<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> 値が <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティで設定されている場合に、キーの派生に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-293">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span> <span data-ttu-id="5b5c6-294">既定では `null`になります。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-294">By default, it is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.ECDiffieHellmanCng.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-295"><see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" /> プロパティ セッターでサポートされているキー サイズ (ビット単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-295">Gets the key sizes, in bits, that are supported by the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" /> property setter.</span></span></summary>
        <value><span data-ttu-id="5b5c6-296"><see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" /> プロパティ setter によってサポートされるキーサイズを格納している配列。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-296">An array that contains the key sizes supported by the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize" /> property setter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5b5c6-297">楕円曲線暗号 (ECC) では、キーのサイズはキー生成プロセスへの唯一の入力ではなく、特定の楕円曲線の曲線パラメーターから派生します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-297">In Elliptic Curve Cryptography (ECC) the key size is not the only input into the key generation process, it is derived from the curve parameters for a specific elliptic curve.</span></span>
<span data-ttu-id="5b5c6-298">このプロパティは、LegalKeySizes: 256、384、および521ビットの3つのサイズのみを報告します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-298">This property reports only three sizes for LegalKeySizes: 256, 384, and 521 bits.</span></span>
<span data-ttu-id="5b5c6-299">キーの生成のベースとしてキーサイズが単独で使用される場合、サポートされるサイズは、名前付き曲線 secp256r1 (NIST P-256)、secp384r1 (NIST p-384)、および secp521r1 (nist P-521) にマップされます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-299">When the key size is used alone as a basis for key generation, the supported sizes map to the named curves secp256r1 (aka NIST P-256), secp384r1 (aka NIST P-384), and secp521r1 (aka NIST P-521).</span></span>

<span data-ttu-id="5b5c6-300">このクラスは、Windows 10 で実行された場合、多くの追加の名前付き曲線をサポートしますが、このプロパティには反映されません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-300">When executed on Windows 10, this class supports many additional named curves, but that is not reflected in this property.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PublicKey As ECDiffieHellmanPublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::ECDiffieHellmanPublicKey ^ PublicKey { System::Security::Cryptography::ECDiffieHellmanPublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.ECDiffieHellmanPublicKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanPublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-301">別の <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> オブジェクトが共有秘密協定を生成するために使用できる公開キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-301">Gets the public key that can be used by another <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object to generate a shared secret agreement.</span></span></summary>
        <value><span data-ttu-id="5b5c6-302"><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> オブジェクトの現在のインスタンスに関連付けられている公開キー。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-302">The public key that is associated with this instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretAppend">
      <MemberSignature Language="C#" Value="public byte[] SecretAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretAppend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretAppend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretAppend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretAppend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-303">キー マテリアル生成時に秘密協定に追加される値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-303">Gets or sets a value that will be appended to the secret agreement when generating key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-304">秘密協定に追加される値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-304">The value that is appended to the secret agreement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-305">この値は、<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> または <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> キー派生関数 (KDF) が使用されている場合に、キーの派生に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-305">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> key derivation function (KDF) is used.</span></span> <span data-ttu-id="5b5c6-306">値が秘密協定に付加され、結合された値が KDF に渡されてキーマテリアルが生成されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-306">The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</span></span> <span data-ttu-id="5b5c6-307">既定では、値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-307">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretPrepend">
      <MemberSignature Language="C#" Value="public byte[] SecretPrepend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretPrepend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretPrepend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretPrepend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretPrepend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-308">キー マテリアル派生時に秘密協定の開始部分に追加される値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-308">Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-309">キー派生時に秘密協定の開始部分に追加される値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-309">The value that is appended to the beginning of the secret agreement during key derivation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-310">この値は、<xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティが次のいずれかの値に設定されている場合に、キーの派生に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-310">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to one of the following values:</span></span>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>  
  
 <span data-ttu-id="5b5c6-311">値は秘密協定の前に付加され、結合された値がキー派生関数 (KDF) に渡され、キーマテリアルが生成されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-311">The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</span></span> <span data-ttu-id="5b5c6-312">既定では、値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-312">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public byte[] Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Seed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Seed { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Seed : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-313">キー マテリアル派生時に使用されるシード値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-313">Gets or sets the seed value that will be used when deriving key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-314">シード値。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-314">The seed value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-315">この値は、<xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティが <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>に設定されている場合に、キーの派生に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-315">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>.</span></span> <span data-ttu-id="5b5c6-316">既定では、値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-316">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b5c6-317">キー情報を XML 文字列にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-317">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="5b5c6-318">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-318"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5b5c6-319">このメソッドは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-319">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-320">該当なし。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-320">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b5c6-321">現在のキーを XML 表現に変換するには、代わりに <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-321">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="5b5c6-322">このメソッドは、このインスタンス向けにオーバーライドされていません。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-322">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : System.Security.Cryptography.ECKeyXmlFormat -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="5b5c6-323">XML 文字列の形式を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-323">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="5b5c6-324">現在使用できる唯一の形式は、<see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-324">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="5b5c6-325">指定した形式を使用して、キー情報を XML 文字列にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-325">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="5b5c6-326">要求された形式に従って XML 文字列にシリアル化されたキー情報を格納している文字列オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-326">A string object that contains the key information, serialized to an XML string, according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b5c6-327"><paramref name="format" /> が無効な形式を指定しています。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-327"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="5b5c6-328">使用できる唯一の値は、<see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-328">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseSecretAgreementAsHmacKey">
      <MemberSignature Language="C#" Value="public bool UseSecretAgreementAsHmacKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseSecretAgreementAsHmacKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSecretAgreementAsHmacKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseSecretAgreementAsHmacKey : bool" Usage="System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b5c6-329">キー マテリアルを派生させるハッシュ メッセージ認証コード (HMAC) キーとして秘密協定が使用されるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-329">Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</span></span></summary>
        <value><span data-ttu-id="5b5c6-330">キー マテリアルを派生させる HMAC キーとして秘密協定が使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-330"><see langword="true" /> if the secret agreement is used as an HMAC key to derive key material; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="5b5c6-331">この値は、<xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> プロパティが <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>に設定されている場合に、キーの派生に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-331">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>.</span></span> <span data-ttu-id="5b5c6-332">既定では、値は `false` です。</span><span class="sxs-lookup"><span data-stu-id="5b5c6-332">By default, the value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
