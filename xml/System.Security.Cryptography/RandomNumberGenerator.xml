<Type Name="RandomNumberGenerator" FullName="System.Security.Cryptography.RandomNumberGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c9dbc26850a631bcdda202d9689032d2a28dbdb" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82325617" /></Metadata><TypeSignature Language="C#" Value="public abstract class RandomNumberGenerator : IDisposable" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RandomNumberGenerator extends System.Object implements class System.IDisposable" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RandomNumberGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RandomNumberGenerator&#xA;Implements IDisposable" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class RandomNumberGenerator abstract : IDisposable" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type RandomNumberGenerator = class&#xA;    interface IDisposable" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class RandomNumberGenerator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RandomNumberGenerator extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RandomNumberGenerator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class RandomNumberGenerator abstract" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type RandomNumberGenerator = class" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18298-101">暗号乱数ジェネレーターのすべての実装の派生元である、抽象クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="18298-101">Represents the abstract class from which all implementations of cryptographic random number generators derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="18298-102">暗号乱数ジェネレーターは、暗号強度の高いランダム値を作成します。</span><span class="sxs-lookup"><span data-stu-id="18298-102">Cryptographic random number generators create cryptographically strong random values.</span></span>

<span data-ttu-id="18298-103">乱数ジェネレーターを作成するには、@System.Security.Cryptography.RandomNumberGenerator.Create メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18298-103">To create a random number generator, call the @System.Security.Cryptography.RandomNumberGenerator.Create method.</span></span> <span data-ttu-id="18298-104">これは、派生クラス @System.Security.Cryptography.RNGCryptoServiceProviderのコンストラクターの呼び出しよりも優先されます。これは、すべてのプラットフォームで使用できるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="18298-104">This is preferred over calling the constructor of the derived class @System.Security.Cryptography.RNGCryptoServiceProvider, which is not available on all platforms.</span></span>
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-105">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-105">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RandomNumberGenerator ();" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RandomNumberGenerator();" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public RandomNumberGenerator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RandomNumberGenerator();" FrameworkAlternate="netframework-1.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18298-106"><see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18298-106">Initializes a new instance of <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18298-107">抽象クラスのインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="18298-107">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="18298-108">アプリケーションコードによって、派生クラスの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="18298-108">Application code will create a new instance of a derived class.</span></span> <span data-ttu-id="18298-109">暗号乱数ジェネレーターの実装では、派生クラス <xref:System.Security.Cryptography.RNGCryptoServiceProvider>を使用します。</span><span class="sxs-lookup"><span data-stu-id="18298-109">For an implementation of a cryptographic random number generator, use the derived class <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-110">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-110">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18298-111">暗号乱数ジェネレーターの実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="18298-111">Creates an instance of an implementation of a cryptographic random number generator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.RandomNumberGenerator" Usage="System.Security.Cryptography.RandomNumberGenerator.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18298-112">ランダムなデータを生成するために使用できる暗号乱数ジェネレーターの、既定の実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="18298-112">Creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</span></span></summary>
        <returns><span data-ttu-id="18298-113">暗号乱数ジェネレーターの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="18298-113">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-114">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-114">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create(string rngName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (rngName As String) As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create(System::String ^ rngName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.RandomNumberGenerator" Usage="System.Security.Cryptography.RandomNumberGenerator.Create rngName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rngName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rngName"><span data-ttu-id="18298-115">使用する乱数ジェネレーターの実装の名前。</span><span class="sxs-lookup"><span data-stu-id="18298-115">The name of the random number generator implementation to use.</span></span></param>
        <summary><span data-ttu-id="18298-116">暗号乱数ジェネレーターの指定した実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="18298-116">Creates an instance of the specified implementation of a cryptographic random number generator.</span></span></summary>
        <returns><span data-ttu-id="18298-117">暗号乱数ジェネレーターの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="18298-117">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-118">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-118">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18298-119">派生クラスでオーバーライドされると、<see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> クラスの現在のインスタンスによって使用されているアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="18298-119">When overridden in a derived class, releases the unmanaged resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="randomNumberGenerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18298-120">派生クラスでオーバーライドされると、<see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="18298-120">When overridden in a derived class, releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18298-121">`Dispose` を使い終わったら、<xref:System.Security.Cryptography.RandomNumberGenerator>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18298-121">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="18298-122">`Dispose`メソッドによって、<xref:System.Security.Cryptography.RandomNumberGenerator> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="18298-122">The `Dispose` method leaves the <xref:System.Security.Cryptography.RandomNumberGenerator> in an unusable state.</span></span> <span data-ttu-id="18298-123">`Dispose`呼び出し後は、<xref:System.Security.Cryptography.RandomNumberGenerator>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Security.Cryptography.RandomNumberGenerator> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="18298-123">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RandomNumberGenerator> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RandomNumberGenerator> was occupying.</span></span>  
  
 <span data-ttu-id="18298-124">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="18298-124">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18298-125">`Dispose`への最後の参照を解放する前に、必ず<xref:System.Security.Cryptography.RandomNumberGenerator>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="18298-125">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="18298-126">そうしないと、ガベージ コレクターが <xref:System.Security.Cryptography.RandomNumberGenerator> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="18298-126">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RandomNumberGenerator> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="randomNumberGenerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="18298-127">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="18298-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="18298-128">派生クラスでオーバーライドされると、<see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="18298-128">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18298-129">このメソッドは、パブリックな `Dispose()` メソッドと `Finalize` メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="18298-129">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="18298-130">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18298-130">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="18298-131">`Finalize` は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18298-131">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="18298-132">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.RandomNumberGenerator> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="18298-132">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.RandomNumberGenerator> references.</span></span> <span data-ttu-id="18298-133">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18298-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="18298-134">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="18298-134">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="18298-135"><see langword="Dispose(Boolean)" />をオーバーライドする場合は、以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="18298-135">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="18298-136"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="18298-136">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="18298-137"><see langword="Dispose" /> と <see langword="Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="18298-137">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-138">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-138">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public static void Fill (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(Span&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="static member Fill : Span&lt;byte&gt; -&gt; unit" Usage="System.Security.Cryptography.RandomNumberGenerator.Fill data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-139">暗号強度の高いランダム バイトを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="18298-139">The span to fill with cryptographically strong random bytes.</span></span></param>
        <summary><span data-ttu-id="18298-140">暗号強度の高いランダム バイトをスパンに格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-140">Fills a span with cryptographically strong random bytes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18298-141">バイト配列に、暗号化に使用する値の厳密なランダム シーケンスを設定します。</span><span class="sxs-lookup"><span data-stu-id="18298-141">Fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract void GetBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GetBytes (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GetBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : byte[] -&gt; unit" Usage="randomNumberGenerator.GetBytes data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-142">暗号化に使用する厳密なランダム バイトを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="18298-142">The array to fill with cryptographically strong random bytes.</span></span></param>
        <summary><span data-ttu-id="18298-143">派生クラスでオーバーライドされると、バイト配列に、暗号化に使用する厳密な値のランダム シーケンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-143">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18298-144">バイト配列の長さによって、生成されるランダムバイト数が決まります。</span><span class="sxs-lookup"><span data-stu-id="18298-144">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18298-145">次の例では、ランダムシーケンス100バイト長を作成し、`random`に格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-145">The following example creates a random sequence 100 bytes long and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-146">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-146">Cryptographic Services</span></span></related>
        <altmember cref="M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span&lt;System.Byte&gt;)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(Span&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.GetBytes : Span&lt;byte&gt; -&gt; unit" Usage="randomNumberGenerator.GetBytes data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-147">暗号強度の高いランダム バイトを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="18298-147">The span to fill with cryptographically strong random bytes.</span></span></param>
        <summary><span data-ttu-id="18298-148">暗号強度の高いランダム バイトをスパンに格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-148">Fills a span with cryptographically strong random bytes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span&lt;System.Byte&gt;)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : byte[] * int * int -&gt; unit&#xA;override this.GetBytes : byte[] * int * int -&gt; unit" Usage="randomNumberGenerator.GetBytes (data, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-149">暗号化に使用する厳密なランダム バイトを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="18298-149">The array to fill with cryptographically strong random bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="18298-150">格納操作の開始位置となる配列のインデックス。</span><span class="sxs-lookup"><span data-stu-id="18298-150">The index of the array to start the fill operation.</span></span></param>
        <param name="count"><span data-ttu-id="18298-151">格納するバイト数。</span><span class="sxs-lookup"><span data-stu-id="18298-151">The number of bytes to fill.</span></span></param>
        <summary><span data-ttu-id="18298-152">指定したバイト配列に、暗号化に使用するランダムな値の厳密なシーケンスを設定します。</span><span class="sxs-lookup"><span data-stu-id="18298-152">Fills the specified byte array with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18298-153"><paramref name="data" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18298-153"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18298-154"><paramref name="offset" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="18298-154"><paramref name="offset" /> or <paramref name="count" /> is less than 0</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18298-155"><paramref name="offset" /> と <paramref name="count" /> の合計が <paramref name="data" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="18298-155"><paramref name="offset" /> plus <paramref name="count" /> exceeds the length of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public static int GetInt32 (int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInt32(int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInt32 (toExclusive As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetInt32(int toExclusive);" />
      <MemberSignature Language="F#" Value="static member GetInt32 : int -&gt; int" Usage="System.Security.Cryptography.RandomNumberGenerator.GetInt32 toExclusive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toExclusive" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="toExclusive"><span data-ttu-id="18298-156">ランダムな範囲の上限値 (その値を含まない)。</span><span class="sxs-lookup"><span data-stu-id="18298-156">The exclusive upper bound of the random range.</span></span></param>
        <summary><span data-ttu-id="18298-157">暗号強度の高い乱数ジェネレーターを使用して、0 (その値を含む) から、指定された上限値 (その値を含まない) の間で、ランダムな整数を生成します。</span><span class="sxs-lookup"><span data-stu-id="18298-157">Generates a random integer between 0 (inclusive) and a specified exclusive upper bound using a cryptographically strong random number generator.</span></span></summary>
        <returns><span data-ttu-id="18298-158">0 以上から <paramref name="toExclusive" /> (その値を含まない) の間の、ランダムな整数。</span><span class="sxs-lookup"><span data-stu-id="18298-158">A random integer between 0 (inclusive) and <paramref name="toExclusive" /> (exclusive).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="18298-159">上限は、配列、span、またはリストから長さの値を渡すことができるようにするためのものです。</span><span class="sxs-lookup"><span data-stu-id="18298-159">The upper bound is exclusive to enable passing in a length value from an array, span, or list.</span></span>
<span data-ttu-id="18298-160">このメソッドは排他的な上限であるため、<xref:System.Int32.MaxValue?displayProperty=nameWithType>を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="18298-160">Because it is an exclusive upper bound this method can never generate <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="18298-161">このメソッドは、破棄と再試行の戦略を使用して、単純なモジュール式の算術演算によって生成される低い値バイアスを回避します。</span><span class="sxs-lookup"><span data-stu-id="18298-161">This method uses a discard-and-retry strategy to avoid the low value bias that a simple modular arithmetic operation would produce.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18298-162"><paramref name="toExclusive" /> パラメーターが 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="18298-162">The <paramref name="toExclusive" /> parameter is less than or equal to 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public static int GetInt32 (int fromInclusive, int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInt32(int32 fromInclusive, int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetInt32(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInt32 (fromInclusive As Integer, toExclusive As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetInt32(int fromInclusive, int toExclusive);" />
      <MemberSignature Language="F#" Value="static member GetInt32 : int * int -&gt; int" Usage="System.Security.Cryptography.RandomNumberGenerator.GetInt32 (fromInclusive, toExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="toExclusive" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fromInclusive"><span data-ttu-id="18298-163">ランダムな範囲の下限値 (その値を含む)。</span><span class="sxs-lookup"><span data-stu-id="18298-163">The inclusive lower bound of the random range.</span></span></param>
        <param name="toExclusive"><span data-ttu-id="18298-164">ランダムな範囲の上限値 (その値を含まない)。</span><span class="sxs-lookup"><span data-stu-id="18298-164">The exclusive upper bound of the random range.</span></span></param>
        <summary><span data-ttu-id="18298-165">暗号強度の高い乱数ジェネレーターを使用して、指定された下限値 (その値を含む) から指定された上限値 (その値を含まない) の間で、ランダムな整数を生成します。</span><span class="sxs-lookup"><span data-stu-id="18298-165">Generates a random integer between a specified inclusive lower bound and a specified exclusive upper bound using a cryptographically strong random number generator.</span></span></summary>
        <returns><span data-ttu-id="18298-166"><paramref name="fromInclusive" /> (その値を含む) から <paramref name="toExclusive" /> (その値を含まない) の間の、ランダムな整数。</span><span class="sxs-lookup"><span data-stu-id="18298-166">A random integer between <paramref name="fromInclusive" /> (inclusive) and <paramref name="toExclusive" /> (exclusive).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="18298-167">上限は、配列、span、またはリストから長さの値を渡すことができるようにするためのものです。</span><span class="sxs-lookup"><span data-stu-id="18298-167">The upper bound is exclusive to enable passing in a length value from an array, span, or list.</span></span>
<span data-ttu-id="18298-168">このメソッドは排他的な上限であるため、<xref:System.Int32.MaxValue?displayProperty=nameWithType>を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="18298-168">Because it is an exclusive upper bound this method can never generate <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="18298-169">このメソッドは、破棄と再試行の戦略を使用して、単純なモジュール式の算術演算によって生成される低い値バイアスを回避します。</span><span class="sxs-lookup"><span data-stu-id="18298-169">This method uses a discard-and-retry strategy to avoid the low value bias that a simple modular arithmetic operation would produce.</span></span>

 <span data-ttu-id="18298-170">負の値は、`fromInclusive` と `toExclusive`の両方に対して許可されます。</span><span class="sxs-lookup"><span data-stu-id="18298-170">Negative values are permitted for both `fromInclusive` and `toExclusive`.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18298-171"><paramref name="toExclusive" /> パラメーターが <paramref name="fromInclusive" /> パラメーター以下です。</span><span class="sxs-lookup"><span data-stu-id="18298-171">The <paramref name="toExclusive" /> parameter is less than or equal to the <paramref name="fromInclusive" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (byte[] data);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Byte())" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(cli::array &lt;System::Byte&gt; ^ data);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetNonZeroBytes : byte[] -&gt; unit&#xA;override this.GetNonZeroBytes : byte[] -&gt; unit" Usage="randomNumberGenerator.GetNonZeroBytes data" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void GetNonZeroBytes (byte[] data);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GetNonZeroBytes (data As Byte())" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GetNonZeroBytes(cli::array &lt;System::Byte&gt; ^ data);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member GetNonZeroBytes : byte[] -&gt; unit" Usage="randomNumberGenerator.GetNonZeroBytes data" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-172">暗号化に使用する厳密な 0 以外のランダム バイトを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="18298-172">The array to fill with cryptographically strong random nonzero bytes.</span></span></param>
        <summary><span data-ttu-id="18298-173">派生クラスでオーバーライドされると、バイト配列に、暗号化に使用する厳密な 0 以外の値のランダム シーケンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-173">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18298-174">バイト配列の長さによって、生成されるランダムバイト数が決まります。</span><span class="sxs-lookup"><span data-stu-id="18298-174">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18298-175">次の例では、0以外の100バイトのランダムシーケンスを作成し、`random`に格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-175">The following example creates a random sequence of 100 nonzero bytes and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="18298-176">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="18298-176">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(Span&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member GetNonZeroBytes : Span&lt;byte&gt; -&gt; unit&#xA;override this.GetNonZeroBytes : Span&lt;byte&gt; -&gt; unit" Usage="randomNumberGenerator.GetNonZeroBytes data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="18298-177">暗号強度の高いランダムな 0 以外のバイトを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="18298-177">The span to fill with cryptographically strong random nonzero bytes.</span></span></param>
        <summary><span data-ttu-id="18298-178">暗号強度の高い 0 以外の値のランダムなシーケンスをバイト スパンに格納します。</span><span class="sxs-lookup"><span data-stu-id="18298-178">Fills a byte span with a cryptographically strong random sequence of nonzero values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
