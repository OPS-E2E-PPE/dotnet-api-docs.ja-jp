<Type Name="ECDiffieHellmanOpenSsl" FullName="System.Security.Cryptography.ECDiffieHellmanOpenSsl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c3bbfc20b4f492a306a5030dba95f7a8a6daf7e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75074746" /></Metadata><TypeSignature Language="C#" Value="public sealed class ECDiffieHellmanOpenSsl : System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDiffieHellmanOpenSsl extends System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDiffieHellmanOpenSsl&#xA;Inherits ECDiffieHellman" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDiffieHellmanOpenSsl sealed : System::Security::Cryptography::ECDiffieHellman" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanOpenSsl = class&#xA;    inherit ECDiffieHellman" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDiffieHellman</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e18c4-101">OpenSSL によってサポートされる Elliptic Curve Diffie-Hellman (ECDH) アルゴリズムの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-101">Provides an implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm backed by OpenSSL.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e18c4-102">このクラスは、システム OpenSSL ライブラリとプラットフォームの相互運用を行う場合にのみ、直接使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-102">This class should only be used directly when doing platform interop with the system OpenSSL library.</span></span> <span data-ttu-id="e18c4-103">プラットフォームの相互運用が不要な場合は、特定の派生実装ではなく、<xref:System.Security.Cryptography.ECDiffieHellman.Create%2A?displayProperty=nameWithType> ファクトリメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-103">When platform interop is not needed, you should use the <xref:System.Security.Cryptography.ECDiffieHellman.Create%2A?displayProperty=nameWithType> factory methods instead of a specific derived implementation.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanOpenSsl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanOpenSsl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e18c4-104">NIST P-521 (secp521r1) の既定の曲線を使用して、<see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> class with a default curve of NIST P-521/secp521r1.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e18c4-105">このコンストラクターは、新しいパブリック/プライベートキーペアを直ちに生成しません。キーの生成に使用されるサイズは、必要な場合にのみ設定されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-105">This constructor does not generate a new public/private keypair immediately, it just sets the size which will be used to generate a key when one is needed.</span></span>
<span data-ttu-id="e18c4-106">キーが <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ImportParameters%2A> メソッドまたはその他のキーインポートメソッドを使用して読み込まれた場合、このコンストラクターからのキーサイズは意味を持ちません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-106">If key is loaded via the <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellman.Create" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanOpenSsl (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanOpenSsl(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanOpenSsl : int -&gt; System.Security.Cryptography.ECDiffieHellmanOpenSsl" Usage="new System.Security.Cryptography.ECDiffieHellmanOpenSsl keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="e18c4-107">生成するキーのサイズ (キーが必要な場合)。</span><span class="sxs-lookup"><span data-stu-id="e18c4-107">The size of the key to generate, when a key is needed.</span></span></param>
        <summary><span data-ttu-id="e18c4-108">指定されたサイズの NIST プライム曲線を既定値として、<see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> class defaulting to the NIST prime curve of the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e18c4-109">このコンストラクターでは、256 (NIST P-256/secp256r1)、384 (NIST p-384/secp384r1)、および 521 (NIST P-521/secp521r1) の3つのキーサイズのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="e18c4-109">Only three key sizes are supported by this constructor: 256 (NIST P-256/secp256r1), 384 (NIST P-384/secp384r1), and 521 (NIST P-521/secp521r1).</span></span>
<span data-ttu-id="e18c4-110">その他の曲線のキーを生成するには、<xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.%23ctor(System.Security.Cryptography.ECCurve)> コンストラクターまたは <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-110">To generate keys For any other curve, use the <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.%23ctor(System.Security.Cryptography.ECCurve)> constructor or the <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)> method.</span></span>

<span data-ttu-id="e18c4-111">このコンストラクターは、新しいパブリック/プライベートキーペアを直ちに生成しません。キーの生成に使用されるサイズは、必要な場合にのみ設定されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-111">This constructor does not generate a new public/private keypair immediately, it just sets the size which will be used to generate a key when one is needed.</span></span>
<span data-ttu-id="e18c4-112">キーが <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ImportParameters%2A> メソッドまたはその他のキーインポートメソッドを使用して読み込まれた場合、このコンストラクターからのキーサイズは意味を持ちません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-112">If key is loaded via the <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ImportParameters%2A> method, or other key import method, the key size from this constructor has no meaning.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-113">この実装では、<paramref name="keySize" /> 値はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-113">The <paramref name="keySize" /> value is not supported by this implementation.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellman.Create" />
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor(System.Security.Cryptography.ECCurve)" />
        <altmember cref="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanOpenSsl (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanOpenSsl(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanOpenSsl : nativeint -&gt; System.Security.Cryptography.ECDiffieHellmanOpenSsl" Usage="new System.Security.Cryptography.ECDiffieHellmanOpenSsl handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="e18c4-114">キーとして使用する OpenSSL の <c>EC_KEY\*</c> 値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-114">The OpenSSL <c>EC_KEY\*</c> value to use as the key.</span></span></param>
        <summary><span data-ttu-id="e18c4-115"><see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" />EC_KEY\*<c>として表された既存の OpenSSL キーから、</c> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> class from an existing OpenSSL key represented as an <c>EC_KEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
> <span data-ttu-id="e18c4-116">OpenSSL は、同じプロセス内で読み込まれる複数のライブラリのバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e18c4-116">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="e18c4-117">このコンストラクターを呼び出す前に、このクラスが使用している OpenSSL と同じバージョンのポインター値があることを確認してください。詳細については、「<xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e18c4-117">Before calling this constructor verify your pointer value came from the same version of OpenSSL that this class uses, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion> for more information.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-118"><paramref name="handle" /> は <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-118"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-119"><paramref name="handle" /> が有効な <c>EC_KEY\*</c> ではありません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-119"><paramref name="handle" /> is not a valid <c>EC_KEY\*</c>.</span></span></exception>
        <altmember cref="P:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanOpenSsl (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanOpenSsl(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanOpenSsl : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDiffieHellmanOpenSsl" Usage="new System.Security.Cryptography.ECDiffieHellmanOpenSsl curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="e18c4-120">一時的な公開/秘密キー ペアを生成するために使用される曲線。</span><span class="sxs-lookup"><span data-stu-id="e18c4-120">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="e18c4-121"><see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> クラスの新しいインスタンスを初期化し、指定された曲線に新しいキーを生成します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-121">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> class and generates a new key on the specified curve.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-122"><paramref name="curve" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-122"><paramref name="curve" /> does not validate.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.ECCurve.Validate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanOpenSsl (System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.SafeEvpPKeyHandle pkeyHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.#ctor(System.Security.Cryptography.SafeEvpPKeyHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pkeyHandle As SafeEvpPKeyHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanOpenSsl(System::Security::Cryptography::SafeEvpPKeyHandle ^ pkeyHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanOpenSsl : System.Security.Cryptography.SafeEvpPKeyHandle -&gt; System.Security.Cryptography.ECDiffieHellmanOpenSsl" Usage="new System.Security.Cryptography.ECDiffieHellmanOpenSsl pkeyHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pkeyHandle" Type="System.Security.Cryptography.SafeEvpPKeyHandle" />
      </Parameters>
      <Docs>
        <param name="pkeyHandle"><span data-ttu-id="e18c4-123"><c>として表された、キーとして使用する OpenSSL の</c>EVP_PKEY\*<see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> 値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-123">The OpenSSL <c>EVP_PKEY\*</c> value to use as the key, represented as a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" />.</span></span></param>
        <summary><span data-ttu-id="e18c4-124"><see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" />EVP_PKEY\*<c>として表された既存の OpenSSL キーから、</c> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> class from an existing OpenSSL key represented as an <c>EVP_PKEY\*</c>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="e18c4-125">OpenSSL は、同じプロセス内で読み込まれる複数のライブラリのバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e18c4-125">OpenSSL supports multiple library versions being loaded within the same process.</span></span>
> <span data-ttu-id="e18c4-126">このコンストラクターを呼び出す前に、このクラスが使用する OpenSSL のバージョンと同じバージョンのポインター値であることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="e18c4-126">Before calling this constructor, verify your pointer value came from the same version of OpenSSL that this class uses.</span></span>
> <span data-ttu-id="e18c4-127">詳細については、「 <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e18c4-127">For more information, see <xref:System.Security.Cryptography.SafeEvpPKeyHandle.OpenSslVersion>.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-128"><paramref name="pkeyHandle" /> は無効なハンドルを表しています。</span><span class="sxs-lookup"><span data-stu-id="e18c4-128"><paramref name="pkeyHandle" /> represents an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e18c4-129"><paramref name="pkeyHandle" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-129"><paramref name="pkeyHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-130"><paramref name="pkeyHandle" /> は楕円曲線 (EC) キーを表していません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-130"><paramref name="pkeyHandle" /> does not represent a elliptic curve (EC) key.</span></span></exception>
        <seealso cref="P:System.Security.Cryptography.SafeEvpPKeyValue.OpenSslVersion" />
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyFromHash">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHash(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHash (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHash(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHash : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanOpenSsl.DeriveKeyFromHash (otherPartyPublicKey, hashAlgorithm, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" />
        <Parameter Name="secretAppend" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="e18c4-131">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-131">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="e18c4-132">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="e18c4-132">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="e18c4-133">ハッシュ前に派生の機密情報の先頭に追加する値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-133">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="e18c4-134">ハッシュ前に派生の機密情報に追加する値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-134">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="e18c4-135">指定されたハッシュ アルゴリズムを省略可能な先頭または末尾に追加されたデータと共に使用して、キー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-135">Performs key derivation using a specified hash algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="e18c4-136">要求に応じてデータを先頭または末尾に追加した後の共有シークレットのハッシュ。</span><span class="sxs-lookup"><span data-stu-id="e18c4-136">The hash of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-137"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-137">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="e18c4-138">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-138">-or-</span></span>

<span data-ttu-id="e18c4-139"><paramref name="hashAlgorithm" /> パラメーターにハッシュが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-139">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e18c4-140"><paramref name="otherPartyPublicKey" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-140"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-141"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-141">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="e18c4-142">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-142">-or-</span></span>

<span data-ttu-id="e18c4-143">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-143">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyFromHmac">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHmac(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] hmacKey, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHmac (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, hmacKey As Byte(), secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHmac(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ hmacKey, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHmac : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanOpenSsl.DeriveKeyFromHmac (otherPartyPublicKey, hashAlgorithm, hmacKey, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="hmacKey" Type="System.Byte[]" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" />
        <Parameter Name="secretAppend" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="e18c4-144">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-144">The other party's public key.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="e18c4-145">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="e18c4-145">The hash algorithm to use to derive the key material.</span></span></param>
        <param name="hmacKey"><span data-ttu-id="e18c4-146">HMAC のキー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-146">The key for the HMAC.</span></span></param>
        <param name="secretPrepend"><span data-ttu-id="e18c4-147">ハッシュ前に派生の機密情報の先頭に追加する値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-147">A value to prepend to the derived secret before hashing.</span></span></param>
        <param name="secretAppend"><span data-ttu-id="e18c4-148">ハッシュ前に派生の機密情報に追加する値。</span><span class="sxs-lookup"><span data-stu-id="e18c4-148">A value to append to the derived secret before hashing.</span></span></param>
        <summary><span data-ttu-id="e18c4-149">指定された HMAC (Hash-based Message Authentication Code) アルゴリズムを省略可能な先頭または末尾に追加されたデータと共に使用して、キー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-149">Performs key derivation using a specified HMAC (Hash-based Message Authentication Code) algorithm with optional prepended or appended data.</span></span></summary>
        <returns><span data-ttu-id="e18c4-150">要求に応じてデータを先頭または末尾に追加した後の共有シークレットの HMAC。</span><span class="sxs-lookup"><span data-stu-id="e18c4-150">The HMAC of the shared secret after prepending or appending data as requested.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-151"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-151">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span>

<span data-ttu-id="e18c4-152">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-152">-or-</span></span>

<span data-ttu-id="e18c4-153"><paramref name="hashAlgorithm" /> パラメーターにハッシュが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-153">The <paramref name="hashAlgorithm" /> parameter does not specify a hash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e18c4-154"><paramref name="otherPartyPublicKey" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-154"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-155"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-155">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="e18c4-156">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-156">-or-</span></span>

<span data-ttu-id="e18c4-157">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-157">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyMaterial (otherPartyPublicKey As ECDiffieHellmanPublicKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; byte[]" Usage="eCDiffieHellmanOpenSsl.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="e18c4-158">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-158">The other party's public key.</span></span></param>
        <summary><span data-ttu-id="e18c4-159">共有シークレットに対してキー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-159">Performs a key derivation on the shared secret.</span></span></summary>
        <returns><span data-ttu-id="e18c4-160">共有シークレットの SHA-256 ハッシュ。</span><span class="sxs-lookup"><span data-stu-id="e18c4-160">The SHA-256 hash of the shared secret.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-161"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-161">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e18c4-162"><paramref name="otherPartyPublicKey" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-162"><paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-163"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-163">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="e18c4-164">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-164">-or-</span></span>

<span data-ttu-id="e18c4-165">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-165">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyTls">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyTls(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, unsigned int8[] prfLabel, unsigned int8[] prfSeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyTls (otherPartyPublicKey As ECDiffieHellmanPublicKey, prfLabel As Byte(), prfSeed As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyTls(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, cli::array &lt;System::Byte&gt; ^ prfLabel, cli::array &lt;System::Byte&gt; ^ prfSeed);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyTls : System.Security.Cryptography.ECDiffieHellmanPublicKey * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanOpenSsl.DeriveKeyTls (otherPartyPublicKey, prfLabel, prfSeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="prfLabel" Type="System.Byte[]" />
        <Parameter Name="prfSeed" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey"><span data-ttu-id="e18c4-166">もう一方のパーティの公開キー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-166">The other party's public key.</span></span></param>
        <param name="prfLabel"><span data-ttu-id="e18c4-167">ASCII エンコードされた PRF ラベル。</span><span class="sxs-lookup"><span data-stu-id="e18c4-167">The ASCII-encoded PRF label.</span></span></param>
        <param name="prfSeed"><span data-ttu-id="e18c4-168">64 バイト PRF シード。</span><span class="sxs-lookup"><span data-stu-id="e18c4-168">The 64-byte PRF seed.</span></span></param>
        <summary><span data-ttu-id="e18c4-169">TLS (トランスポート層セキュリティ) 1.1 PRF (擬似ランダム関数) を使用してキー派生を実行します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-169">Performs key derivation using the TLS (Transport Layer Security) 1.1 PRF (Pseudo-Random Function).</span></span></summary>
        <returns><span data-ttu-id="e18c4-170">キーとして共有シークレットを使用した TLS 1.1 PRF の最初の 48 バイト。</span><span class="sxs-lookup"><span data-stu-id="e18c4-170">The first 48 bytes from the TLS 1.1 PRF, using the shared secret as the key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e18c4-171">派生クラスはこのメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-171">A derived class must override this method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e18c4-172"><paramref name="otherPartyPublicKey" /> によって使用される曲線のサイズが、このキーの曲線のサイズと異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-172">The curve used by <paramref name="otherPartyPublicKey" /> has a different size than the curve from this key.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e18c4-173"><paramref name="otherPartyPublicKey" />、<paramref name="prfLabel" />、または <paramref name="prfSeed" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e18c4-173"><paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> or <paramref name="prfSeed" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-174"><paramref name="prfSeed" /> は 64 バイト長に完全には一致しません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-174"><paramref name="prfSeed" /> is not exactly 64 bytes in length.</span></span>

<span data-ttu-id="e18c4-175">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-175">-or-</span></span>

<span data-ttu-id="e18c4-176"><paramref name="otherPartyPublicKey" /> によって使用される曲線が、このキーの曲線と異なります。</span><span class="sxs-lookup"><span data-stu-id="e18c4-176">The curve used by <paramref name="otherPartyPublicKey" /> is different than the curve from this key.</span></span>

<span data-ttu-id="e18c4-177">または</span><span class="sxs-lookup"><span data-stu-id="e18c4-177">-or-</span></span>

<span data-ttu-id="e18c4-178">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-178">This instance represents only a public key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyHandle">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.SafeEvpPKeyHandle DuplicateKeyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.DuplicateKeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateKeyHandle () As SafeEvpPKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::SafeEvpPKeyHandle ^ DuplicateKeyHandle();" />
      <MemberSignature Language="F#" Value="member this.DuplicateKeyHandle : unit -&gt; System.Security.Cryptography.SafeEvpPKeyHandle" Usage="eCDiffieHellmanOpenSsl.DuplicateKeyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SafeEvpPKeyHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e18c4-179">暗号化キーの <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> 表現を取得します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-179">Gets a <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="e18c4-180">暗号化キーの <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> 表現。</span><span class="sxs-lookup"><span data-stu-id="e18c4-180">A <see cref="T:System.Security.Cryptography.SafeEvpPKeyHandle" /> representation of the cryptographic key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e18c4-181">このメソッドを呼び出すたびに、独自の有効期間を持つ新しい <xref:System.Security.Cryptography.SafeEvpPKeyHandle> オブジェクトが生成されます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-181">Each call to this method produces a new <xref:System.Security.Cryptography.SafeEvpPKeyHandle> object with its own lifetime.</span></span>
<span data-ttu-id="e18c4-182">このメソッドによって返されるオブジェクトは、この <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl> インスタンスが破棄された後でも安全に使用できます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-182">The objects returned by this method can safely be used even after this <xref:System.Security.Cryptography.ECDiffieHellmanOpenSsl> instance has been disposed.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanOpenSsl.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="e18c4-183">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e18c4-183"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e18c4-184"><see cref="T:System.Security.Cryptography.ECParameters" /> メソッドに渡すことができるように、現在のキーから <see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /> 構造体に明示的な曲線フォームを使用して、公開キーまたは公開キーと秘密キーの情報のいずれかをエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="e18c4-184">Exports either the public or the public and private key information using the explicit curve form from the current key to an <see cref="T:System.Security.Cryptography.ECParameters" /> structure so that it can be passed to the <see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /> method.</span></span></summary>
        <returns><span data-ttu-id="e18c4-185">明示的な曲線形式を使用して、このキーの曲線上のポイントを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e18c4-185">An object that represents the point on the curve for this key, using the explicit curve format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-186">メソッドは曲線の値を取得できません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-186">The method cannot obtain curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanOpenSsl.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="e18c4-187">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e18c4-187"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e18c4-188"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトが使用するキーを <see cref="T:System.Security.Cryptography.ECParameters" /> オブジェクトにエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="e18c4-188">Exports the key used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="e18c4-189"><see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトによって使用されているキーと名前付き曲線パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e18c4-189">The key and named curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e18c4-190">キーが名前付き曲線として作成された場合、<xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> フィールドには名前付き曲線パラメーターが含まれます。それ以外の場合は、明示的なパラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-190">If the key was created as a named curve, the <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> field contains named curve parameters; otherwise,  it contains explicit parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-191">メソッドは曲線の値を取得できません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-191">The method cannot obtain curve values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDiffieHellmanOpenSsl.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="e18c4-192">一時的な公開/秘密キー ペアを生成するために使用される曲線。</span><span class="sxs-lookup"><span data-stu-id="e18c4-192">The curve used to generate an ephemeral public/private key pair.</span></span></param>
        <summary><span data-ttu-id="e18c4-193">指定した曲線の新しい一時的な公開/秘密キー ペアを生成します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-193">Generates a new ephemeral public/private key pair for the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e18c4-194">`curve` は検証する必要があります (つまり、<xref:System.Security.Cryptography.ECCurve.Validate?displayProperty=nameWithType> メソッドに渡される場合は true を返す必要があります)。暗黙的にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-194">`curve` must validate (that is, it must return true when passed to the <xref:System.Security.Cryptography.ECCurve.Validate?displayProperty=nameWithType> method) and must not be implicit.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-195"><paramref name="curve" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-195"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanOpenSsl.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDiffieHellmanOpenSsl.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="e18c4-196">インポートする曲線のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="e18c4-196">The curve's parameters to import.</span></span></param>
        <summary><span data-ttu-id="e18c4-197">キーとして <see cref="T:System.Security.Cryptography.ECCurve" /> オブジェクトに指定したパラメーターを現在のインスタンスにインポートします。</span><span class="sxs-lookup"><span data-stu-id="e18c4-197">Imports the specified parameters for an <see cref="T:System.Security.Cryptography.ECCurve" /> object as a key into the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e18c4-198"><xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> メソッドは、新しい <xref:System.Security.Cryptography.CngKey> オブジェクトを作成することによって、このオブジェクトが使用している既存のキーを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-198">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> method replaces the existing key that this object is working with by creating a         new <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="e18c4-199">`parameters` に <xref:System.Security.Cryptography.ECParameters.Q> フィールドのみが含まれている場合は、公開キーのみがインポートされます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-199">If `parameters` contains only the <xref:System.Security.Cryptography.ECParameters.Q> field, then only a public key is imported.</span></span>         <span data-ttu-id="e18c4-200">`parameters` も <xref:System.Security.Cryptography.ECParameters.D>を含む場合は、完全なキーのペアがインポートされます。</span><span class="sxs-lookup"><span data-stu-id="e18c4-200">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, then a full key pair is be imported.</span></span> <span data-ttu-id="e18c4-201">`parameter` <xref:System.Security.Cryptography.ECParameters.Curve> 値は、インポートする曲線の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-201">The `parameter` <xref:System.Security.Cryptography.ECParameters.Curve> value specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e18c4-202"><paramref name="parameters" /> は検証されません。</span><span class="sxs-lookup"><span data-stu-id="e18c4-202"><paramref name="parameters" /> does not validate.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e18c4-203"><paramref name="parameters" /> はインポートできない曲線を参照します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-203"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e18c4-204"><paramref name="parameters" /> はこのプラットフォームでサポートされていない曲線を参照します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-204"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanOpenSsl.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PublicKey As ECDiffieHellmanPublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::ECDiffieHellmanPublicKey ^ PublicKey { System::Security::Cryptography::ECDiffieHellmanPublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.ECDiffieHellmanPublicKey" Usage="System.Security.Cryptography.ECDiffieHellmanOpenSsl.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.OpenSsl</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanPublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e18c4-205">別の <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> オブジェクトが共有秘密協定を生成するために使用できる公開キーを取得します。</span><span class="sxs-lookup"><span data-stu-id="e18c4-205">Gets the public key that can be used by another <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> object to generate a shared secret agreement.</span></span></summary>
        <value><span data-ttu-id="e18c4-206"><see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> オブジェクトの現在のインスタンスに関連付けられている公開キー。</span><span class="sxs-lookup"><span data-stu-id="e18c4-206">The public key that is associated with this instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanOpenSsl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
