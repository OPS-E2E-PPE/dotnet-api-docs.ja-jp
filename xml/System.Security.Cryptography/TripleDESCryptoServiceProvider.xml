<Type Name="TripleDESCryptoServiceProvider" FullName="System.Security.Cryptography.TripleDESCryptoServiceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="723215184623448debc8401efe94c8c82174fcd7" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83523288" /></Metadata><TypeSignature Language="C#" Value="public sealed class TripleDESCryptoServiceProvider : System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TripleDESCryptoServiceProvider extends System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TripleDESCryptoServiceProvider&#xA;Inherits TripleDES" />
  <TypeSignature Language="C++ CLI" Value="public ref class TripleDESCryptoServiceProvider sealed : System::Security::Cryptography::TripleDES" />
  <TypeSignature Language="F#" Value="type TripleDESCryptoServiceProvider = class&#xA;    inherit TripleDES" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Csp" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.TripleDES</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13b73-101"><see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの暗号サービス プロバイダー (CSP: Cryptographic Service Provider) バージョンにアクセスする、ラッパー オブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="13b73-101">Defines a wrapper object to access the cryptographic service provider (CSP) version of the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span> <span data-ttu-id="13b73-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="13b73-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-103">このアルゴリズムは、128ビットから192ビットまでのキーの長さを64ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="13b73-103">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13b73-104">新しい対称暗号化アルゴリズム (Advanced Encryption Standard (AES)) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="13b73-104">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="13b73-105"><xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> クラスではなく、<xref:System.Security.Cryptography.AesCryptoServiceProvider> クラスを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="13b73-105">Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class.</span></span> <span data-ttu-id="13b73-106"><xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> は、レガシアプリケーションおよびデータとの互換性のためだけに使用してください。</span><span class="sxs-lookup"><span data-stu-id="13b73-106">Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13b73-107">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してファイル内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-107">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13b73-108">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してメモリ内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-108">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-109">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-109">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TripleDESCryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TripleDESCryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13b73-110"><see cref="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13b73-111">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してファイル内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-111">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13b73-112">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してメモリ内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-112">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-113"><see cref="T:System.Security.Cryptography.TripleDES" /> 暗号サービス プロバイダーは使用できません。</span><span class="sxs-lookup"><span data-stu-id="13b73-113">The <see cref="T:System.Security.Cryptography.TripleDES" /> cryptographic service provider is not available.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-114">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-114">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public override int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-115">暗号操作のブロック サイズをビット単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-115">Gets or sets the block size, in bits, of the cryptographic operation.</span></span></summary>
        <value><span data-ttu-id="13b73-116">ブロック サイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="13b73-116">The block size, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-117">ブロックサイズは、1回の操作で暗号化または復号化できるデータの基本単位です。</span><span class="sxs-lookup"><span data-stu-id="13b73-117">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="13b73-118">ブロックサイズより長いメッセージは、連続するブロックとして処理されます。ブロックサイズより短いメッセージには、ブロックのサイズになるまでに余分なビットを埋め込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="13b73-118">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="13b73-119">有効なブロックサイズは、使用される対称アルゴリズムによって決まります。</span><span class="sxs-lookup"><span data-stu-id="13b73-119">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="tripleDESCryptoServiceProvider.CreateDecryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13b73-120">現在の <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> プロパティおよび初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) を使用して、対称復号化オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-120">Creates a symmetric decryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="13b73-121">対称復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13b73-121">A symmetric decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-122">このメソッドは、<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> のオーバーロードを使用して作成された暗号化されたメッセージを、同じ署名で復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-122">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="tripleDESCryptoServiceProvider.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="13b73-123">対称アルゴリズムに使用する共有キー。</span><span class="sxs-lookup"><span data-stu-id="13b73-123">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="13b73-124">対称アルゴリズムに使用する初期化ベクター。</span><span class="sxs-lookup"><span data-stu-id="13b73-124">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="13b73-125">指定したキー (<see cref="T:System.Security.Cryptography.TripleDES" />) および初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) を使用して、対称 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> 復号化オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-125">Creates a symmetric <see cref="T:System.Security.Cryptography.TripleDES" /> decryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="13b73-126">対称 <see cref="T:System.Security.Cryptography.TripleDES" /> 復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13b73-126">A symmetric <see cref="T:System.Security.Cryptography.TripleDES" /> decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-127">このメソッドは、同じパラメーターを使用して <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> のオーバーロードを使用して作成された暗号化されたメッセージを復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-127">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13b73-128">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してファイル内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-128">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13b73-129">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してメモリ内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-129">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-130"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> プロパティの値が <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> です。</span><span class="sxs-lookup"><span data-stu-id="13b73-130">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.</span></span>  
  
<span data-ttu-id="13b73-131">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-131">-or-</span></span> 
<span data-ttu-id="13b73-132"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> プロパティの値が <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> であり、<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> プロパティの値が 8 ではありません。</span><span class="sxs-lookup"><span data-stu-id="13b73-132">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> and the value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property is not 8.</span></span>  
  
<span data-ttu-id="13b73-133">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-133">-or-</span></span> 
<span data-ttu-id="13b73-134">無効なキー サイズが使用されました。</span><span class="sxs-lookup"><span data-stu-id="13b73-134">An invalid key size was used.</span></span>  
  
<span data-ttu-id="13b73-135">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-135">-or-</span></span> 
<span data-ttu-id="13b73-136">アルゴリズムのキー サイズが使用できませんでした。</span><span class="sxs-lookup"><span data-stu-id="13b73-136">The algorithm key size was not available.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-137">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-137">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13b73-138">対称暗号化オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-138">Creates a symmetric encryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="tripleDESCryptoServiceProvider.CreateEncryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13b73-139">現在の <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> プロパティおよび初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) を使用して、対称暗号化オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-139">Creates a symmetric encryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="13b73-140">対称暗号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13b73-140">A symmetric encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-141">現在の <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> プロパティが `null`場合、新しいランダム <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>を作成するために <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-141">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</span></span> <span data-ttu-id="13b73-142">現在の <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> プロパティが `null`場合、新しいランダム <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>を作成するために <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-142">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</span></span>  
  
 <span data-ttu-id="13b73-143">同じシグネチャを持つ <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> オーバーロードを使用して、このメソッドの結果を復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-143">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="tripleDESCryptoServiceProvider.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="13b73-144">対称アルゴリズムに使用する共有キー。</span><span class="sxs-lookup"><span data-stu-id="13b73-144">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="13b73-145">対称アルゴリズムに使用する初期化ベクター。</span><span class="sxs-lookup"><span data-stu-id="13b73-145">The initialization vector to use for the symmetric algorithm.</span></span>  
  
 <para><span data-ttu-id="13b73-146">メモ:初期化ベクターの長さは 8 バイトの必要があります。</span><span class="sxs-lookup"><span data-stu-id="13b73-146">Note: The initialization vector must be 8 bytes long.</span></span> <span data-ttu-id="13b73-147">8 バイトよりも長い場合は、切り捨てられ、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="13b73-147">If it is longer than 8 bytes, it is truncated and an exception is not thrown.</span></span> <span data-ttu-id="13b73-148"><see cref="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />を呼び出す前に、初期化ベクターの長さをチェックし、長すぎる場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="13b73-148">Before you call <see cref="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />, check the length of the initialization vector and throw an exception if it is too long.</span></span></para></param>
        <summary><span data-ttu-id="13b73-149">指定したキー (<see cref="T:System.Security.Cryptography.TripleDES" />) および初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) を使用して、対称 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> 暗号化オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-149">Creates a symmetric <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="13b73-150">対称 <see cref="T:System.Security.Cryptography.TripleDES" /> 暗号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13b73-150">A symmetric <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-151">同じパラメーターで <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> オーバーロードを使用して、このメソッドの結果を復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-151">Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13b73-152">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してファイル内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-152">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13b73-153">次のコード例では、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> オブジェクトを作成し、それを使用してメモリ内のデータを暗号化および復号化します。</span><span class="sxs-lookup"><span data-stu-id="13b73-153">The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-154"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> プロパティの値が <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> です。</span><span class="sxs-lookup"><span data-stu-id="13b73-154">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.</span></span>  
  
<span data-ttu-id="13b73-155">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-155">-or-</span></span> 
<span data-ttu-id="13b73-156"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> プロパティの値が <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> であり、<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> プロパティの値が 8 ではありません。</span><span class="sxs-lookup"><span data-stu-id="13b73-156">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> and the value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property is not 8.</span></span>  
  
<span data-ttu-id="13b73-157">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-157">-or-</span></span> 
<span data-ttu-id="13b73-158">無効なキー サイズが使用されました。</span><span class="sxs-lookup"><span data-stu-id="13b73-158">An invalid key size was used.</span></span>  
  
<span data-ttu-id="13b73-159">- または -</span><span class="sxs-lookup"><span data-stu-id="13b73-159">-or-</span></span> 
<span data-ttu-id="13b73-160">アルゴリズムのキー サイズが使用できませんでした。</span><span class="sxs-lookup"><span data-stu-id="13b73-160">The algorithm key size was not available.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-161">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-161">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="tripleDESCryptoServiceProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="13b73-162">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13b73-162"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="13b73-163"><see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="13b73-163">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSize">
      <MemberSignature Language="C#" Value="public override int FeedbackSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeedbackSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property FeedbackSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FeedbackSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FeedbackSize : int with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-164">暗号フィードバック (CFB) および出力フィードバック (OFB) の暗号モードにおける暗号化操作のフィードバック サイズをビット単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-164">Gets or sets the feedback size, in bits, of the cryptographic operation for the Cipher Feedback (CFB) and Output Feedback (OFB) cipher modes.</span></span></summary>
        <value><span data-ttu-id="13b73-165">フィードバック サイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="13b73-165">The feedback size in bits.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-166">フィードバック サイズがブロック サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="13b73-166">The feedback size is larger than the block size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberSignature Language="F#" Value="override this.GenerateIV : unit -&gt; unit" Usage="tripleDESCryptoServiceProvider.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13b73-167">アルゴリズムに使用するランダムな初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) を生成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-167">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-168">このメソッドは、何も指定されていない場合に、ランダムな初期化ベクターを生成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="13b73-168">Use this method to generate a random initialization vector when none is specified.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-169">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-169">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : unit -&gt; unit" Usage="tripleDESCryptoServiceProvider.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13b73-170">アルゴリズムで使用するランダムな <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> を生成します。</span><span class="sxs-lookup"><span data-stu-id="13b73-170">Generates a random <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> to be used for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-171">このメソッドは、none が指定されている場合にランダムキーを生成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="13b73-171">Use this method to generate a random key when none is specified.</span></span> <span data-ttu-id="13b73-172">このメソッドは、弱いキーを返すことはありません (<xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="13b73-172">This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).</span></span>  
  
 <span data-ttu-id="13b73-173">このアルゴリズムは、128ビットから192ビットまでのキーの長さを64ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="13b73-173">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="13b73-174">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="13b73-174">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public override byte[] IV { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] IV" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.IV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IV As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ IV { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IV : byte[] with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.IV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-175">対称アルゴリズムの初期化ベクター (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-175">Gets or sets the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-176">初期化ベクター。</span><span class="sxs-lookup"><span data-stu-id="13b73-176">The initialization vector.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-177"><xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> プロパティは、いずれかの <xref:System.Security.Cryptography.SymmetricAlgorithm> クラスの新しいインスタンスを作成するたびに、または <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> メソッドを手動で呼び出すときに、自動的に新しい乱数値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-177">The <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is automatically set to a new random value whenever you create a new instance of one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes or when you manually call the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method.</span></span>  <span data-ttu-id="13b73-178"><xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> プロパティのサイズは、<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> プロパティと8で割った値と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="13b73-178">The size of the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property must be the same as the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property divided by 8.</span></span>  
  
 <span data-ttu-id="13b73-179"><xref:System.Security.Cryptography.SymmetricAlgorithm> クラスから派生するクラスは、暗号ブロックチェーン (CBC) と呼ばれるチェーンモードを使用します。このモードでは、キーと初期化ベクターを使用してデータに対して暗号変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="13b73-179">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key and an initialization vector to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="13b73-180"><xref:System.Security.Cryptography.SymmetricAlgorithm> クラスの1つを使用して暗号化されたデータを復号化するには、<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> プロパティと <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> プロパティを、暗号化に使用したのと同じ値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="13b73-180">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  
  
 <span data-ttu-id="13b73-181">特定の秘密キー *k*の場合、初期化ベクターを使用しない単純なブロック暗号では、プレーンテキストの同じ入力ブロックが暗号テキストの同じ出力ブロックに暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-181">For a given secret key *k*, a simple block cipher that does not use an initialization vector will encrypt the same input block of plain text into the same output block of cipher text.</span></span> <span data-ttu-id="13b73-182">プレーンテキストストリーム内に重複するブロックがある場合は、暗号テキストストリーム内に重複するブロックがあります。</span><span class="sxs-lookup"><span data-stu-id="13b73-182">If you have duplicate blocks within your plain text stream, you will have duplicate blocks within your cipher text stream.</span></span> <span data-ttu-id="13b73-183">承認されていないユーザーがプレーンテキストのブロックの構造に関する知識を持っている場合、その情報を使用して既知の暗号文ブロックを解読し、場合によってはキーを回復することができます。</span><span class="sxs-lookup"><span data-stu-id="13b73-183">If unauthorized users know anything about the structure of a block of your plain text, they can use that information to decipher the known cipher text block and possibly recover your key.</span></span> <span data-ttu-id="13b73-184">この問題に対処するために、前のブロックの情報は、次のブロックを暗号化するプロセスに組み込まれています。</span><span class="sxs-lookup"><span data-stu-id="13b73-184">To combat this problem, information from the previous block is mixed into the process of encrypting the next block.</span></span> <span data-ttu-id="13b73-185">したがって、2つの同じプレーンテキストブロックの出力は異なります。</span><span class="sxs-lookup"><span data-stu-id="13b73-185">Thus, the output of two identical plain text blocks is different.</span></span> <span data-ttu-id="13b73-186">この手法では、前のブロックを使用して次のブロックを暗号化するため、データの最初のブロックを暗号化するために初期化ベクターが必要になります。</span><span class="sxs-lookup"><span data-stu-id="13b73-186">Because this technique uses the previous block to encrypt the next block, an initialization vector is needed to encrypt the first block of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13b73-187">初期化ベクターを <see langword="null" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="13b73-187">An attempt was made to set the initialization vector to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-188">初期化ベクターを無効なサイズに設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="13b73-188">An attempt was made to set the initialization vector to an invalid size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-189"><see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの秘密鍵を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-189">Gets or sets the secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-190"><see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの秘密鍵 (共通鍵)。</span><span class="sxs-lookup"><span data-stu-id="13b73-190">The secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-191">このアルゴリズムは、128ビットから192ビットまでのキーの長さを64ビット単位でサポートします。</span><span class="sxs-lookup"><span data-stu-id="13b73-191">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-192">共有キーのサイズ (ビット単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-192">Gets or sets the size, in bits, of the secret key.</span></span></summary>
        <value><span data-ttu-id="13b73-193">キーのサイズ (ビット数)。</span><span class="sxs-lookup"><span data-stu-id="13b73-193">The size, in bits, of the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-194">キーの最小サイズは128ビット、最大サイズは256ビットです。</span><span class="sxs-lookup"><span data-stu-id="13b73-194">The minimum size of the key is 128 bits, and the maximum size is 256 bits.</span></span>  
  
 <span data-ttu-id="13b73-195">`KeySize` 値を変更すると、キーがリセットされ、新しいランダムキーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-195">Changing the `KeySize` value resets the key and generates a new random key.</span></span> <span data-ttu-id="13b73-196">これは、`KeySize` プロパティ setter が呼び出されるたびに発生します (同じ値が割り当てられている場合を含む)。</span><span class="sxs-lookup"><span data-stu-id="13b73-196">This happens whenever the `KeySize` property setter is invoked (including when it's assigned the same value).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalBlockSizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-197">対称アルゴリズムでサポートされているブロック サイズをビット単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="13b73-197">Gets the block sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-198">アルゴリズムでサポートされているブロック サイズを格納している配列。</span><span class="sxs-lookup"><span data-stu-id="13b73-198">An array that contains the block sizes supported by the algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-199">TripleDES の場合、有効なブロックサイズは64ビットのみです。</span><span class="sxs-lookup"><span data-stu-id="13b73-199">For TripleDES, the only legal block size is 64 bits.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-200">対称アルゴリズムでサポートされているキー サイズをビット単位で取得します。</span><span class="sxs-lookup"><span data-stu-id="13b73-200">Gets the key sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-201">アルゴリズムでサポートされているキー サイズを格納している配列。</span><span class="sxs-lookup"><span data-stu-id="13b73-201">An array that contains the key sizes supported by the algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-202">TripleDES の場合、有効なキーサイズは128と192ビットです。</span><span class="sxs-lookup"><span data-stu-id="13b73-202">For TripleDES, the legal key sizes are 128 and 192 bits.</span></span>
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-203">対称アルゴリズムの操作モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-203">Gets or sets the mode for operation of the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-204">対称アルゴリズムの操作モード。</span><span class="sxs-lookup"><span data-stu-id="13b73-204">The mode for operation of the symmetric algorithm.</span></span> <span data-ttu-id="13b73-205">既定値は、<see cref="F:System.Security.Cryptography.CipherMode.CBC" /> です。</span><span class="sxs-lookup"><span data-stu-id="13b73-205">The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-206">特定のモードの説明については、「<xref:System.Security.Cryptography.CipherMode> 列挙型」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="13b73-206">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-207">暗号モードが <see cref="T:System.Security.Cryptography.CipherMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="13b73-207">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13b73-208">対称アルゴリズムで使用する埋め込みモードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="13b73-208">Gets or sets the padding mode used in the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="13b73-209">対称アルゴリズムで使用する埋め込みモード。</span><span class="sxs-lookup"><span data-stu-id="13b73-209">The padding mode used in the symmetric algorithm.</span></span> <span data-ttu-id="13b73-210">既定値は、<see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> です。</span><span class="sxs-lookup"><span data-stu-id="13b73-210">The default is <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13b73-211">ほとんどのプレーンテキストメッセージは、ブロックを完全に埋めるバイト数で構成されていません。</span><span class="sxs-lookup"><span data-stu-id="13b73-211">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="13b73-212">多くの場合、最後のブロックを埋めるために必要なバイト数が不足しています。</span><span class="sxs-lookup"><span data-stu-id="13b73-212">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="13b73-213">これが発生すると、テキストに埋め込み文字列が追加されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-213">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="13b73-214">たとえば、ブロック長が64ビットで、最後のブロックに40ビットだけが含まれている場合、24ビットの埋め込みが追加されます。</span><span class="sxs-lookup"><span data-stu-id="13b73-214">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="13b73-215">特定のモードの説明については、<xref:System.Security.Cryptography.PaddingMode> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="13b73-215">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="13b73-216">埋め込みモードが <see cref="T:System.Security.Cryptography.PaddingMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="13b73-216">The padding mode is not one of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
