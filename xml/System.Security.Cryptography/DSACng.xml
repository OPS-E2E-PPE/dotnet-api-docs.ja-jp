<Type Name="DSACng" FullName="System.Security.Cryptography.DSACng">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19d2cd8f5acd5e76f6704ee3caeeebd0a3a8753a" /><Meta Name="ms.sourcegitcommit" Value="9310f96004cd02c3dd21b963e01f1cbd6067ae6b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/23/2019" /><Meta Name="ms.locfileid" Value="74450793" /></Metadata><TypeSignature Language="C#" Value="public sealed class DSACng : System.Security.Cryptography.DSA" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACng extends System.Security.Cryptography.DSA" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACng&#xA;Inherits DSA" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACng sealed : System::Security::Cryptography::DSA" />
  <TypeSignature Language="F#" Value="type DSACng = class&#xA;    inherit DSA" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="64ab7-101">デジタル署名アルゴリズム (DSA) の Cryptography Next Generation (CNG) 実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-101">Provides a Cryptography Next Generation (CNG) implementation of the Digital Signature Algorithm (DSA).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="64ab7-102"><see cref="T:System.Security.Cryptography.DSACng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-102">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="64ab7-103">ランダムな 2,048 ビット キーのペアで、<see cref="T:System.Security.Cryptography.DSACng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-103">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with a random 2,048-bit key pair.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSACng : int -&gt; System.Security.Cryptography.DSACng" Usage="new System.Security.Cryptography.DSACng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="64ab7-104">生成するキーのサイズ (ビット単位)。</span><span class="sxs-lookup"><span data-stu-id="64ab7-104">The size of the key to generate in bits.</span></span></param>
        <summary><span data-ttu-id="64ab7-105">指定のサイズでランダムに生成されたキーで、<see cref="T:System.Security.Cryptography.DSACng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with a randomly generated key of the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ab7-106">有効なキーサイズは、512から3072ビットまでの範囲で、64単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-106">Valid key sizes range from 512 to 3,072 bits, in increments of 64.</span></span> <span data-ttu-id="64ab7-107">すべてのキーには、2048ビットの最小サイズを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="64ab7-107">We recommend that a minimum size of 2,048 bits be used for all keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="64ab7-108"><paramref name="keySize" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="64ab7-108"><paramref name="keySize" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSACng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.DSACng" Usage="new System.Security.Cryptography.DSACng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="64ab7-109">DSA 操作に使用するキー。</span><span class="sxs-lookup"><span data-stu-id="64ab7-109">The key to use for DSA operations.</span></span></param>
        <summary><span data-ttu-id="64ab7-110">指定したキーで、<see cref="T:System.Security.Cryptography.DSACng" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACng" /> class with the specified key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ab7-111">`key` の <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=nameWithType> は <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=nameWithType>する必要があります。</span><span class="sxs-lookup"><span data-stu-id="64ab7-111">The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=nameWithType> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="64ab7-112">このコンストラクターは、キーのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-112">This constructor creates a copy of the key.</span></span> <span data-ttu-id="64ab7-113">`key` が破棄されている場合でも、DSA でのこのキーオブジェクトのコピーは保持されたままになります。</span><span class="sxs-lookup"><span data-stu-id="64ab7-113">Even if `key` is disposed, the copy of this key object in DSA remains alive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="64ab7-114"><paramref name="key" /> は有効な DSA キーではありません。</span><span class="sxs-lookup"><span data-stu-id="64ab7-114"><paramref name="key" /> is not a valid DSA key.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ab7-115"><paramref name="key" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="64ab7-115"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberSignature Language="F#" Value="override this.CreateSignature : byte[] -&gt; byte[]" Usage="dSACng.CreateSignature rgbHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="64ab7-116">署名対象のハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="64ab7-116">The hash value to be signed.</span></span></param>
        <summary><span data-ttu-id="64ab7-117">指定したデータに対する <see cref="T:System.Security.Cryptography.DSA" /> 署名を作成します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-117">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="64ab7-118">指定したデータに対するデジタル署名。</span><span class="sxs-lookup"><span data-stu-id="64ab7-118">The digital signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ab7-119"><paramref name="rgbHash" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="64ab7-119"><paramref name="rgbHash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="64ab7-120">このインスタンスでは公開キーのみ表されます。</span><span class="sxs-lookup"><span data-stu-id="64ab7-120">This instance represents only a public key.</span></span>

<span data-ttu-id="64ab7-121">- または -</span><span class="sxs-lookup"><span data-stu-id="64ab7-121">-or-</span></span>

<span data-ttu-id="64ab7-122">署名の作成中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="64ab7-122">An error occurred during signature creation.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="64ab7-123"><paramref name="rgbHash" /> は、DSA キーの Q 値の長さよりも短くなります。</span><span class="sxs-lookup"><span data-stu-id="64ab7-123"><paramref name="rgbHash" /> is shorter in length than the Q value of the DSA key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dSACng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="64ab7-124">マネージド リソースとアンマネージド リソースを解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="64ab7-124"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="64ab7-125"><see xref="T:System.Security.Cryptography.DSACng" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-125">Releases the resources used by the current instance of the <see xref="T:System.Security.Cryptography.DSACng" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.DSAParameters" Usage="dSACng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="64ab7-126">プライベート パラメーターを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="64ab7-126"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64ab7-127">DSA アルゴリズム パラメーターをエクスポートします。</span><span class="sxs-lookup"><span data-stu-id="64ab7-127">Exports the DSA algorithm parameters.</span></span></summary>
        <returns><span data-ttu-id="64ab7-128">DSA アルゴリズム パラメーター。</span><span class="sxs-lookup"><span data-stu-id="64ab7-128">The DSA algorithm parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="64ab7-129">DSA キーが有効な公開キーまたは秘密キーではありません。</span><span class="sxs-lookup"><span data-stu-id="64ab7-129">DSA key is not a valid public or private key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSACng.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="64ab7-130">ハッシュするバイナリ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="64ab7-130">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="64ab7-131">データのハッシュに使用するアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="64ab7-131">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="64ab7-132">指定したハッシュ アルゴリズムを使用して、指定したバイナリ ストリームのハッシュ値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="64ab7-132">Computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="64ab7-133">ハッシュされたデータ。</span><span class="sxs-lookup"><span data-stu-id="64ab7-133">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSACng.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="64ab7-134">ハッシュされるデータ。</span><span class="sxs-lookup"><span data-stu-id="64ab7-134">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="64ab7-135">ハッシュされる <paramref name="data" /> の最初のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="64ab7-135">The index of the first byte in <paramref name="data" /> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="64ab7-136">ハッシュするバイト数。</span><span class="sxs-lookup"><span data-stu-id="64ab7-136">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="64ab7-137">データのハッシュに使用するアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="64ab7-137">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="64ab7-138">派生クラスでオーバーライドされると、指定したハッシュ アルゴリズムを使用して、指定したバイト配列部分のハッシュ値が計算されます。</span><span class="sxs-lookup"><span data-stu-id="64ab7-138">When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="64ab7-139">ハッシュされたデータ。</span><span class="sxs-lookup"><span data-stu-id="64ab7-139">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.DSAParameters -&gt; unit" Usage="dSACng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="64ab7-140">DSA パラメーター。</span><span class="sxs-lookup"><span data-stu-id="64ab7-140">The DSA parameters.</span></span></param>
        <summary><span data-ttu-id="64ab7-141">パラメーター構造体に新しい <see cref="T:System.Security.Cryptography.CngKey" /> を作成し、現在のインスタンスが扱っている既存のキーを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="64ab7-141">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="64ab7-142">指定した DSA パラメーターは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="64ab7-142">The specified DSA parameters are not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.DSACng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64ab7-143"><see cref="T:System.Security.Cryptography.DSACng" /> オブジェクトが任意の暗号化操作を行うときに使用するキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-143">Gets the key that will be used by the <see cref="T:System.Security.Cryptography.DSACng" /> object for any cryptographic operation that it performs.</span></span></summary>
        <value><span data-ttu-id="64ab7-144">暗号化操作を実行するために <see cref="T:System.Security.Cryptography.DSACng" /> オブジェクトが使用するキー。</span><span class="sxs-lookup"><span data-stu-id="64ab7-144">The key used by the <see cref="T:System.Security.Cryptography.DSACng" /> object to perform cryptographic operations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64ab7-145"><xref:System.Security.Cryptography.CngKey> オブジェクトは、キーがリセットされた場合に破棄されます。たとえば、<xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=nameWithType> プロパティを変更したり、<xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=nameWithType> メソッドを使用して新しいキーを作成したり、親 <xref:System.Security.Cryptography.DSACng> オブジェクトを破棄したりします。</span><span class="sxs-lookup"><span data-stu-id="64ab7-145">The  <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=nameWithType> property, by using the <xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=nameWithType> method to create a new key, or by disposing the parent <xref:System.Security.Cryptography.DSACng> object.</span></span> <span data-ttu-id="64ab7-146">そのため、このような場合は、キーオブジェクトが使用されなくなったことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="64ab7-146">Therefore, you should ensure that the key object is no longer used in these cases.</span></span>  
  
 <span data-ttu-id="64ab7-147">この <xref:System.Security.Cryptography.CngKey> オブジェクトは、コンストラクターが使用された場合に <xref:System.Security.Cryptography.DSACng.%23ctor%2A> コンストラクターに渡された <xref:System.Security.Cryptography.CngKey> オブジェクトと同じではありません。</span><span class="sxs-lookup"><span data-stu-id="64ab7-147">This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.DSACng.%23ctor%2A> constructor, if that constructor was used.</span></span> <span data-ttu-id="64ab7-148">ただし、同じ CNG キーが参照されます。</span><span class="sxs-lookup"><span data-stu-id="64ab7-148">However, it will point to the same CNG key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.DSACng.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64ab7-149">キー交換アルゴリズムの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-149">Gets the name of the key exchange algorithm.</span></span></summary>
        <value><span data-ttu-id="64ab7-150">常に <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="64ab7-150">Always <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.DSACng.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64ab7-151">DSA アルゴリズムでサポートされているキー サイズ (ビット単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-151">Gets the key sizes, in bits, that are supported by the DSA algorithm.</span></span></summary>
        <value><span data-ttu-id="64ab7-152">アルゴリズムでサポートされているキー サイズを格納している配列。</span><span class="sxs-lookup"><span data-stu-id="64ab7-152">An array that contains the key sizes supported by the algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACng.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.DSACng.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64ab7-153">署名アルゴリズムの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-153">Gets the name of the signature algorithm.</span></span></summary>
        <value><span data-ttu-id="64ab7-154">文字列 "DSA"。</span><span class="sxs-lookup"><span data-stu-id="64ab7-154">The string "DSA".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifySignature : byte[] * byte[] -&gt; bool" Usage="dSACng.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="64ab7-155">署名されたハッシュ。</span><span class="sxs-lookup"><span data-stu-id="64ab7-155">The signed hash.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="64ab7-156">検証対象のデジタル署名。</span><span class="sxs-lookup"><span data-stu-id="64ab7-156">The digital signature to be verified.</span></span></param>
        <summary><span data-ttu-id="64ab7-157">指定したデジタル署名が指定したハッシュと一致するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="64ab7-157">Verifies if the specified digital signature matches the specified hash.</span></span></summary>
        <returns><span data-ttu-id="64ab7-158"><paramref name="rgbSignature" /> が、指定したハッシュを使用して計算された署名と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="64ab7-158"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="64ab7-159"><paramref name="rgbHash" /> または <paramref name="rgbSignature" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="64ab7-159">The <paramref name="rgbHash" /> or <paramref name="rgbSignature" /> parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
