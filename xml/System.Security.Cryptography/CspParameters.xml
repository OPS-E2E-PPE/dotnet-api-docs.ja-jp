<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cade78c930de7caa40f235af5e7f71778182d7d" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83494890" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.Csp" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cac87-101">暗号化の計算を実行する暗号化サービス プロバイダー (CSP) に渡されるパラメーターを格納します。</span><span class="sxs-lookup"><span data-stu-id="cac87-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span></span> <span data-ttu-id="cac87-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="cac87-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-103"><xref:System.Security.Cryptography.CspParameters> クラスは、管理されていない Microsoft Cryptography API (CAPI) から Microsoft 暗号化サービスプロバイダー (Csp) を内部的に使用するマネージ暗号化クラスに渡すことができるパラメーターを表します。</span><span class="sxs-lookup"><span data-stu-id="cac87-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="cac87-104">"CryptoServiceProvider" で終わる名前を持つクラスは、対応する CSP のマネージコードラッパーです。</span><span class="sxs-lookup"><span data-stu-id="cac87-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="cac87-105"><xref:System.Security.Cryptography.CspParameters> クラスを使用して、次の操作を行います。</span><span class="sxs-lookup"><span data-stu-id="cac87-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="cac87-106">プロバイダーの種類を <xref:System.Security.Cryptography.CspParameters.ProviderType> または <xref:System.Security.Cryptography.CspParameters.ProviderName> プロパティに渡すことによって、特定の CSP を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="cac87-107">また、コンストラクターのオーバーロードを使用して CSP を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="cac87-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="cac87-108">暗号化キーを格納できるキーコンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="cac87-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="cac87-109">キーコンテナーを使用すると、暗号化キーを永続化し、悪意のあるサードパーティの機密情報を保存することができます。</span><span class="sxs-lookup"><span data-stu-id="cac87-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="cac87-110">キーコンテナーの作成の詳細については、「[方法: キーコンテナーに非対称キーを格納する](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
-   <span data-ttu-id="cac87-111"><xref:System.Security.Cryptography.CspParameters.KeyNumber> プロパティを使用して、非対称署名キーまたは非対称交換キーを作成するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-112">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用してキーコンテナーを作成し、そのキーをコンテナーに保存します。</span><span class="sxs-lookup"><span data-stu-id="cac87-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="cac87-113">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用して、スマートカード暗号化サービスプロバイダーを選択します。</span><span class="sxs-lookup"><span data-stu-id="cac87-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="cac87-114">次に、スマートカードを使用してデータに署名し、検証します。</span><span class="sxs-lookup"><span data-stu-id="cac87-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-115">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-115">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cac87-116"><see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cac87-117"><see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-118">この形式の <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> は、<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールドを `24`の値に初期化します。これにより、PROV_RSA_AES プロバイダーが指定されます。</span><span class="sxs-lookup"><span data-stu-id="cac87-118">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="cac87-119">この既定のプロバイダーは、<xref:System.Security.Cryptography.Aes> アルゴリズムと互換性があります。</span><span class="sxs-lookup"><span data-stu-id="cac87-119">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="cac87-120">その他のプロバイダーの種類の詳細については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-120">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-121">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用してキーコンテナーを作成し、そのキーをコンテナーに保存します。</span><span class="sxs-lookup"><span data-stu-id="cac87-121">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-122">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-122">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="cac87-123">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span><span class="sxs-lookup"><span data-stu-id="cac87-123">A provider type code that specifies the kind of provider to create.</span></span></param>
        <summary><span data-ttu-id="cac87-124">指定したプロバイダーの型コードで <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-124">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-125">プロバイダーを表す数値を渡すことによって、<xref:System.Security.Cryptography.CspParameters.%23ctor%2A> コンストラクターを使用して、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-125">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="cac87-126">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-126">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-127"><xref:System.Security.Cryptography.RSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`1` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-127">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="cac87-128"><xref:System.Security.Cryptography.DSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`13` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-128">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="cac87-129">その他のプロバイダーの種類の値については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-129">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="cac87-130">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-130">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-131">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用してキーコンテナーを作成し、そのキーをコンテナーに保存します。</span><span class="sxs-lookup"><span data-stu-id="cac87-131">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-132">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-132">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="cac87-133">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span><span class="sxs-lookup"><span data-stu-id="cac87-133">A provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="cac87-134">プロバイダー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-134">A provider name.</span></span></param>
        <summary><span data-ttu-id="cac87-135">指定したプロバイダーの型コードと名前で <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-135">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-136"><xref:System.Security.Cryptography.CspParameters.%23ctor%2A> コンストラクターを使用して、プロバイダーの種類と名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-136">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="cac87-137">目的のプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-137">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="cac87-138">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-138">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-139"><xref:System.Security.Cryptography.RSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`1` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-139">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="cac87-140"><xref:System.Security.Cryptography.DSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`13` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-140">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="cac87-141">その他のプロバイダーの種類の値については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-141">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="cac87-142">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-142">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-143">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用して、スマートカード暗号化サービスプロバイダーを選択します。</span><span class="sxs-lookup"><span data-stu-id="cac87-143">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="cac87-144">次に、スマートカードを使用してデータに署名し、検証します。</span><span class="sxs-lookup"><span data-stu-id="cac87-144">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-145">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-145">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="cac87-146">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span><span class="sxs-lookup"><span data-stu-id="cac87-146">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="cac87-147">プロバイダー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-147">A provider name.</span></span></param>
        <param name="strContainerNameIn"><span data-ttu-id="cac87-148">コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-148">A container name.</span></span></param>
        <summary><span data-ttu-id="cac87-149">指定したプロバイダーの型コードと名前、指定したコンテナー名を使って <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-149">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-150"><xref:System.Security.Cryptography.CspParameters.%23ctor%2A> コンストラクターを使用して、プロバイダーの種類、プロバイダー名、コンテナー名を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-150">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="cac87-151">コンテナー名を使用して、そのコンテナー内のキーを取得できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-151">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="cac87-152">目的のプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-152">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="cac87-153">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-153">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-154"><xref:System.Security.Cryptography.RSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`1` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-154">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="cac87-155"><xref:System.Security.Cryptography.DSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`13` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-155">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="cac87-156">その他のプロバイダーの種類の値については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-156">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="cac87-157">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-157">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-158">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerType As Integer, providerName As String, keyContainerName As String, cryptoKeySecurity As CryptoKeySecurity, parentWindowHandle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="cac87-159">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span><span class="sxs-lookup"><span data-stu-id="cac87-159">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="cac87-160">プロバイダー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-160">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="cac87-161">コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-161">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="cac87-162">コンテナーに対するアクセス権および監査規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cac87-162">An object that represents access rights and audit rules for the container.</span></span></param>
        <param name="parentWindowHandle"><span data-ttu-id="cac87-163">スマート カード パスワード ダイアログの親ウィンドウを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="cac87-163">A handle to the parent window for a smart card password dialog.</span></span></param>
        <summary><span data-ttu-id="cac87-164">プロバイダーの種類、プロバイダー名、コンテナー名、アクセス情報、およびアンマネージ スマート カード パスワード ダイアログを識別するハンドルを使用して、<see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-164">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-165">コンテナー名を使用して、そのコンテナー内のキーを取得できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-165">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="cac87-166">目的のプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-166">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="cac87-167">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-167">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-168"><xref:System.Security.Cryptography.RSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`1` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-168">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="cac87-169"><xref:System.Security.Cryptography.DSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`13` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-169">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="cac87-170">その他のプロバイダーの種類の値については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-170">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="cac87-171">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-171">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerType As Integer, providerName As String, keyContainerName As String, cryptoKeySecurity As CryptoKeySecurity, keyPassword As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="cac87-172">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span><span class="sxs-lookup"><span data-stu-id="cac87-172">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="cac87-173">プロバイダー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-173">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="cac87-174">コンテナー名。</span><span class="sxs-lookup"><span data-stu-id="cac87-174">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="cac87-175">コンテナーに対するアクセス権および監査規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cac87-175">An object that represents access rights and audit rules for a container.</span></span></param>
        <param name="keyPassword"><span data-ttu-id="cac87-176">スマート カード キーに関連付けられたパスワード。</span><span class="sxs-lookup"><span data-stu-id="cac87-176">A password associated with a smart card key.</span></span></param>
        <summary><span data-ttu-id="cac87-177">プロバイダーの種類、プロバイダー名、コンテナー名、アクセス情報、およびスマート カード キーに関連付けられたパスワードを使用して、<see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cac87-177">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-178">コンテナー名を使用して、そのコンテナー内のキーを取得できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-178">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="cac87-179">目的のプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-179">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="cac87-180">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-180">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-181"><xref:System.Security.Cryptography.RSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`1` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-181">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="cac87-182"><xref:System.Security.Cryptography.DSA> アルゴリズムと互換性のあるプロバイダーを指定するには、`13` の値を `dwTypeIn` パラメーターに渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-182">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="cac87-183">その他のプロバイダーの種類の値については、「<xref:System.Security.Cryptography.CspParameters.ProviderType> フィールド」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-183">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="cac87-184">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-184">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-185">コンテナーに対するアクセス権および監査規則を表す <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-185">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="cac87-186">コンテナーに対するアクセス権および監査規則を表す <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cac87-186">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-187"><xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> プロパティを使用して、コンテナーの随意アクセス制御リスト (DACL) とシステムアクセス制御リスト (SACL) の作成を管理する <xref:System.Security.AccessControl.CryptoKeySecurity> オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-187">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-188">暗号化サービス プロバイダー (CSP) の動作を変更する <see cref="T:System.Security.Cryptography.CspParameters" /> のフラグを表します。</span><span class="sxs-lookup"><span data-stu-id="cac87-188">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span></span></summary>
        <value><span data-ttu-id="cac87-189">列挙値、または列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="cac87-189">An enumeration value, or a bitwise combination of enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cac87-190">値は有効な列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="cac87-190">Value is not a valid enumeration value.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-191">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-191">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-192"><see cref="T:System.Security.Cryptography.CspParameters" /> のキー コンテナー名を表します。</span><span class="sxs-lookup"><span data-stu-id="cac87-192">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-193">[<xref:System.Security.Cryptography.CspParameters.KeyContainerName>] フィールドを使用して、キーコンテナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-193">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="cac87-194">コンテナー名を使用して、そのコンテナー内の永続化キーを取得できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-194">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="cac87-195">キーコンテナーの作成の詳細については、「[方法: キーコンテナーに非対称キーを格納する](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-195">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-196">次のコード例では、<xref:System.Security.Cryptography.CspParameters> クラスを使用してキーコンテナーを作成し、そのキーをコンテナーに保存します。</span><span class="sxs-lookup"><span data-stu-id="cac87-196">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-197">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-197">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-198">非対称キーが署名キーとして作成されるか、交換キーとして作成されるかを示します。</span><span class="sxs-lookup"><span data-stu-id="cac87-198">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-199"><xref:System.Security.Cryptography.CspParameters> オブジェクトを使用して <xref:System.Security.Cryptography.CspKeyContainerInfo> オブジェクトを初期化するときに、<xref:System.Security.Cryptography.CspParameters.KeyNumber> フィールドによって <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> プロパティが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="cac87-199">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="cac87-200">交換キーは、セッションキーを暗号化するために使用される非対称キーペアであり、他のユーザーと安全に保存したり、交換したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="cac87-200">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="cac87-201"><xref:System.Security.Cryptography.KeyNumber.Exchange> 値 (`1`) を使用して、交換キーを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-201">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="cac87-202">この値は、アンマネージ Microsoft Cryptographic API (CAPI) で使用される `AT_KEYEXCHANGE` 値に対応します。</span><span class="sxs-lookup"><span data-stu-id="cac87-202">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="cac87-203">署名キーは、デジタル署名されたメッセージまたはファイルを認証するために使用される非対称キーペアです。</span><span class="sxs-lookup"><span data-stu-id="cac87-203">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="cac87-204"><xref:System.Security.Cryptography.KeyNumber.Signature> 値 (`2`) を使用して、署名キーを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cac87-204">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="cac87-205">この値は、CAPI で使用される `AT_SIGNATURE` 値に対応します。</span><span class="sxs-lookup"><span data-stu-id="cac87-205">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="cac87-206">既定では、<xref:System.Security.Cryptography.CspParameters.KeyNumber> フィールドは交換キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-206">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cac87-207">次のコード例では、<xref:System.Security.Cryptography.KeyNumber> 列挙体を使用して、<xref:System.Security.Cryptography.RSACryptoServiceProvider> オブジェクトのキーの種類を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cac87-207">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-208">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-208">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-209">スマート カード キーに関連付けられたパスワードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-209">Gets or sets a password associated with a smart card key.</span></span></summary>
        <value><span data-ttu-id="cac87-210">スマート カード キーに関連付けられたパスワード。</span><span class="sxs-lookup"><span data-stu-id="cac87-210">A password associated with a smart card key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-211">スマートカードキーのパスワードを入力するには、<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="cac87-211">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="cac87-212">このプロパティを使用してパスワードを指定すると、パスワードダイアログボックスはユーザーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="cac87-212">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-213">スマート カード パスワード ダイアログ ボックスのアンマネージ親ウィンドウを識別するハンドルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-213">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span></span></summary>
        <value><span data-ttu-id="cac87-214">スマート カード パスワード ダイアログ ボックスの親ウィンドウを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="cac87-214">A handle to the parent window for a smart card password dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-215"><xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> プロパティを使用して、スマートカードパスワードダイアログボックスのアンマネージ親ウィンドウへのハンドルを指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-215">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="cac87-216">このプロパティを使用してハンドルを指定すると、[スマートカードパスワード] ダイアログボックスがユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="cac87-216">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="cac87-217"><xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> プロパティを使用してパスワードを明示的に指定することによって、スマートカードパスワードの表示を避けることができます。</span><span class="sxs-lookup"><span data-stu-id="cac87-217">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-218"><see cref="T:System.Security.Cryptography.CspParameters" /> のプロバイダー名を表します。</span><span class="sxs-lookup"><span data-stu-id="cac87-218">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-219">プロバイダー名の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-219">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-220">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-220">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cac87-221"><see cref="T:System.Security.Cryptography.CspParameters" /> のプロバイダーの型コードを表します。</span><span class="sxs-lookup"><span data-stu-id="cac87-221">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cac87-222">[<xref:System.Security.Cryptography.CspParameters.ProviderType>] フィールドを使用して、プロバイダーを表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="cac87-222">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="cac87-223">既定のプロバイダーの種類を表す数値は、WinCrypt .h ヘッダーファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cac87-223">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="cac87-224"><xref:System.Security.Cryptography.RSA> クラスと互換性のあるプロバイダーを指定するには、`1`の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-224">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="cac87-225"><xref:System.Security.Cryptography.DSA> クラスと互換性のあるプロバイダーを指定するには、`13`の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="cac87-225">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="cac87-226">次の表に、プロバイダーの種類と、WinCrypt のヘッダーファイルで定義されている対応する数値を示します。</span><span class="sxs-lookup"><span data-stu-id="cac87-226">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="cac87-227">プロバイダーの種類</span><span class="sxs-lookup"><span data-stu-id="cac87-227">Provider Type</span></span>|<span data-ttu-id="cac87-228">数値</span><span class="sxs-lookup"><span data-stu-id="cac87-228">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="cac87-229">1</span><span class="sxs-lookup"><span data-stu-id="cac87-229">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="cac87-230">2</span><span class="sxs-lookup"><span data-stu-id="cac87-230">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="cac87-231">3</span><span class="sxs-lookup"><span data-stu-id="cac87-231">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="cac87-232">4</span><span class="sxs-lookup"><span data-stu-id="cac87-232">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="cac87-233">5</span><span class="sxs-lookup"><span data-stu-id="cac87-233">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="cac87-234">6</span><span class="sxs-lookup"><span data-stu-id="cac87-234">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="cac87-235">12</span><span class="sxs-lookup"><span data-stu-id="cac87-235">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="cac87-236">13</span><span class="sxs-lookup"><span data-stu-id="cac87-236">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="cac87-237">14</span><span class="sxs-lookup"><span data-stu-id="cac87-237">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="cac87-238">15</span><span class="sxs-lookup"><span data-stu-id="cac87-238">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="cac87-239">16</span><span class="sxs-lookup"><span data-stu-id="cac87-239">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="cac87-240">17</span><span class="sxs-lookup"><span data-stu-id="cac87-240">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="cac87-241">18</span><span class="sxs-lookup"><span data-stu-id="cac87-241">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="cac87-242">20</span><span class="sxs-lookup"><span data-stu-id="cac87-242">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="cac87-243">21</span><span class="sxs-lookup"><span data-stu-id="cac87-243">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="cac87-244">22</span><span class="sxs-lookup"><span data-stu-id="cac87-244">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="cac87-245">23</span><span class="sxs-lookup"><span data-stu-id="cac87-245">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="cac87-246">24</span><span class="sxs-lookup"><span data-stu-id="cac87-246">24</span></span>|  
  
 <span data-ttu-id="cac87-247">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cac87-247">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="cac87-248">暗号サービス</span><span class="sxs-lookup"><span data-stu-id="cac87-248">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
