<Type Name="CounterSet" FullName="System.Diagnostics.PerformanceData.CounterSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5015ce35de2d4ecddab7619f744b3ca63a9472f7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75138940" /></Metadata><TypeSignature Language="C#" Value="public class CounterSet : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CounterSet extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceData.CounterSet" />
  <TypeSignature Language="VB.NET" Value="Public Class CounterSet&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CounterSet : IDisposable" />
  <TypeSignature Language="F#" Value="type CounterSet = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7f6ed-101">論理カウンターのセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-101">Defines a set of logical counters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-102">プロバイダーの登録を削除し、すべてのマネージリソースとアンマネージリソースを解放するには、<xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-102">Call the <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> method when you are finished to remove your provider's registration and to release all managed and unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f6ed-103">例については、「<xref:System.Diagnostics.PerformanceData>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-103">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid providerGuid, valuetype System.Guid counterSetGuid, valuetype System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerGuid As Guid, counterSetGuid As Guid, instanceType As CounterSetInstanceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CounterSet(Guid providerGuid, Guid counterSetGuid, System::Diagnostics::PerformanceData::CounterSetInstanceType instanceType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceData.CounterSet : Guid * Guid * System.Diagnostics.PerformanceData.CounterSetInstanceType -&gt; System.Diagnostics.PerformanceData.CounterSet" Usage="new System.Diagnostics.PerformanceData.CounterSet (providerGuid, counterSetGuid, instanceType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerGuid" Type="System.Guid" />
        <Parameter Name="counterSetGuid" Type="System.Guid" />
        <Parameter Name="instanceType" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" />
      </Parameters>
      <Docs>
        <param name="providerGuid"><span data-ttu-id="7f6ed-104">カウンター データのプロバイダーを一意に識別する GUID。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-104">Guid that uniquely identifies the provider of the counter data.</span></span> <span data-ttu-id="7f6ed-105">マニフェストに指定した GUID を使用します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-105">Use the Guid specified in the manifest.</span></span></param>
        <param name="counterSetGuid"><span data-ttu-id="7f6ed-106">プロバイダーのカウンター セットを一意に識別する GUID。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-106">Guid that uniquely identifies the counter set for a provider.</span></span> <span data-ttu-id="7f6ed-107">マニフェストに指定した GUID を使用します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-107">Use the Guid specified in the manifest.</span></span></param>
        <param name="instanceType"><span data-ttu-id="7f6ed-108">カウンター セットの種類を識別します。たとえば、カウンター セットが単一インスタンスのカウンター セットであるか、複数インスタンスのカウンター セットであるかを示します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-108">Identifies the type of the counter set, for example, whether the counter set is a single or multiple instance counter set.</span></span></param>
        <summary><span data-ttu-id="7f6ed-109"><see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-109">Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-110">プロバイダーを登録します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-110">Registers your provider.</span></span> <span data-ttu-id="7f6ed-111"><xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> メソッドを呼び出すと、登録が削除されます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-111">Calling the <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> method removes the registration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f6ed-112">例については、「<xref:System.Diagnostics.PerformanceData>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-112">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientMemoryException"><span data-ttu-id="7f6ed-113">メモリ不足のため、操作を完了できません。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-113">Not enough memory is available to complete the operation.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="7f6ed-114">Windows Vista 以前ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-114">Not supported prior to Windows Vista.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f6ed-115">パラメーターの 1 つが NULL または無効です。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-115">One of the parameters is NULL or not valid.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="7f6ed-116">基になる Win32 関数呼び出しが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-116">An underlying Win32 function call failed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCounter">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f6ed-117">カウンター セットにカウンターを追加します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-117">Adds a counter to the counter set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
      </Parameters>
      <Docs>
        <param name="counterId"><span data-ttu-id="7f6ed-118">カウンターを識別します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-118">Identifies the counter.</span></span> <span data-ttu-id="7f6ed-119">マニフェストでカウンターの定義に使用した値と同じ値を使用します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-119">Use the same value that you used in the manifest to define the counter.</span></span></param>
        <param name="counterType"><span data-ttu-id="7f6ed-120">カウンター タイプを識別します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-120">Identifies the counter type.</span></span> <span data-ttu-id="7f6ed-121">カウンター タイプによって、カウンター データの計算方法、その平均値の求め方、および表示方法が決まります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-121">The counter type determines how the counter data is calculated, averaged, and displayed.</span></span></param>
        <summary><span data-ttu-id="7f6ed-122">指定したカウンター ID とカウンター タイプを使用して、カウンター セットにカウンターを追加します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-122">Adds a counter to the counter set by using the specified counter identifier and type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-123">カウンター セットのインスタンスを作成する前に、カウンター セットにカウンターを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-123">You must add counters to the counter set before creating an instance of the counter set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f6ed-124">カウンター ID が既にセット内に存在するか、負の値であるか、カウンター タイプが NULL または無効です。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-124">The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f6ed-125">カウンター セットのインスタンスを作成した後に、カウンター セットにカウンターを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-125">You cannot add counters to the counter set after creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType * string -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType, counterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterId"><span data-ttu-id="7f6ed-126">カウンターを識別します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-126">Identifies the counter.</span></span> <span data-ttu-id="7f6ed-127">マニフェストでカウンターの定義に使用した値と同じ値を使用します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-127">Use the same value that you used in the manifest to define the counter.</span></span></param>
        <param name="counterType"><span data-ttu-id="7f6ed-128">カウンター タイプを識別します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-128">Identifies the counter type.</span></span> <span data-ttu-id="7f6ed-129">カウンター タイプによって、カウンター データの計算方法、その平均値の求め方、および表示方法が決まります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-129">The counter type determines how the counter data is calculated, averaged, and displayed.</span></span></param>
        <param name="counterName"><span data-ttu-id="7f6ed-130">カウンターの名前。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-130">Name of the counter.</span></span> <span data-ttu-id="7f6ed-131">この名前を使用して、カウンター セット インスタンス内のカウンターにインデックスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-131">You can use this name to index the counter in the counter set instance.</span></span> <span data-ttu-id="7f6ed-132">(「<see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-132">(See <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</span></span></param>
        <summary><span data-ttu-id="7f6ed-133">指定したカウンター ID、カウンター タイプ、およびカウンターの表示名を使用して、カウンター セットにカウンターを追加します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-133">Adds a counter to the counter set by using the specified counter identifier and type and a display name for the counter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-134">カウンター セットのインスタンスを作成する前に、カウンター セットにカウンターを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-134">You must add counters to the counter set before creating an instance of the counter set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f6ed-135">例については、「<xref:System.Diagnostics.PerformanceData>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-135">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f6ed-136">カウンター ID が既にセット内に存在するか、負の値であるか、カウンター タイプが NULL または無効です。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-136">The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f6ed-137">カウンター セットのインスタンスを作成した後に、カウンター セットにカウンターを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-137">You cannot add counters to the counter set after creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCounterSetInstance">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCounterSetInstance (instanceName As String) As CounterSetInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::PerformanceData::CounterSetInstance ^ CreateCounterSetInstance(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.CreateCounterSetInstance : string -&gt; System.Diagnostics.PerformanceData.CounterSetInstance" Usage="counterSet.CreateCounterSetInstance instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceData.CounterSetInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName"><span data-ttu-id="7f6ed-138">インスタンスの名前。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-138">Name of the instance.</span></span> <span data-ttu-id="7f6ed-139">名前は一意にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-139">The name must be unique.</span></span></param>
        <summary><span data-ttu-id="7f6ed-140">カウンター セットのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-140">Creates an instance of the counter set.</span></span></summary>
        <returns><span data-ttu-id="7f6ed-141">カウンター データを格納するカウンター セットのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-141">An instance of the counter set which will contain the counter data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-142">このメソッドは、単一インスタンスのカウンターセットに対して1回、または複数インスタンスのカウンターセットに対して1回以上呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-142">Call this method one time for single-instance counter sets and one or more times for multiple-instance counter sets.</span></span>  
  
 <span data-ttu-id="7f6ed-143">プロバイダーは、インスタンスをいつ作成するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-143">The provider determines when it creates an instance.</span></span> <span data-ttu-id="7f6ed-144">カウンターデータが静的である場合、プロバイダーは初期化時にインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-144">If the counter data is more static, the provider can create an instance at initialization time.</span></span> <span data-ttu-id="7f6ed-145">たとえば、コンピューターのプロセッサの数は静的と見なされるため、プロセッサのカウンターデータを提供するプロバイダーは、初期化時にコンピューター上の各プロセッサに対してインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-145">For example, the number of processors on a computer would be considered static, so a provider that provides counter data for processors could create an instance for each processor on the computer at initialization time.</span></span> <span data-ttu-id="7f6ed-146">ディスクカウンターやプロセスカウンターなど、より動的なカウンターの場合、プロバイダーは新しい USB デバイスの追加または新しいプロセスの作成に応じて新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-146">For counters that are more dynamic, such as disk or process counters, the providers would create the new instances in response to a new USB device being added or a new process being created.</span></span>  
  
 <span data-ttu-id="7f6ed-147">プロバイダーは、常にカウンターデータを最新の状態に保つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-147">The provider should keep the counter data up-to-date at all times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f6ed-148">例については、「<xref:System.Diagnostics.PerformanceData>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-148">For an example, see <xref:System.Diagnostics.PerformanceData>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7f6ed-149">インスタンス名が NULL です。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-149">The instance name is NULL.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f6ed-150">カウンター セットのインスタンスを作成する前に、カウンター セットにカウンターを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-150">You must add counters to the counter set before creating an instance of the counter set.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f6ed-151">このオブジェクトに使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-151">Releases resources used by this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="counterSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f6ed-152">このオブジェクトによって使用されているすべてのアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-152">Releases all unmanaged resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="counterSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7f6ed-153">Dispose メソッドから呼び出された場合は <see langword="True" />。ファイナライザーから呼び出された場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-153"><see langword="True" /> if this was called from the Dispose method, <see langword="False" /> if called from the finalizer.</span></span></param>
        <summary><span data-ttu-id="7f6ed-154">このオブジェクトによって使用されているすべてのアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-154">Releases all unmanaged resources used by this object and optionally release the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CounterSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CounterSet ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="counterSet.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f6ed-155">ガベージ コレクションでオブジェクトがクリアされる前に、リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-155">Frees resources before the object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f6ed-156">このメソッドは、ランタイムによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7f6ed-156">This method is called automatically by the runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
