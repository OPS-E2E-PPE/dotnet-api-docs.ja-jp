<Type Name="JsonException" FullName="System.Text.Json.JsonException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec852da25b3e7c8962f69b895a02c75d067271de" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74388206" /></Metadata><TypeSignature Language="C#" Value="public class JsonException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonException" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonException : Exception" />
  <TypeSignature Language="F#" Value="type JsonException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>無効な JSON テキストが見つかったとき、定義された最大深度が渡されたとき、あるいはオブジェクトのプロパティの型と JSON テキストの間に互換性がないときにスローされるカスタムの例外オブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

詳細については、「 [JSON シリアル化のカスタムコンバーターを記述する方法](~/docs/standard/serialization/system-text-json-converters-how-to.md#error-handling)」を参照してください。

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Text.Json.JsonException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">コンテキスト固有のエラー メッセージ。</param>
        <summary>指定したエラー メッセージを使用して、<see cref="T:System.Text.Json.JsonException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">スローされた例外に関するシリアル化されたオブジェクト データ。</param>
        <param name="context">転送元または転送先に関するコンテキスト情報を含むオブジェクト。</param>
        <summary>シリアル化されたデータを使用して新しい例外オブジェクトを作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="info" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">コンテキスト固有のエラー メッセージ。</param>
        <param name="innerException">現在の例外を引き起こした例外。</param>
        <summary>指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.Text.Json.JsonException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="message">コンテキスト固有のエラー メッセージ。</param>
        <param name="path">無効な JSON が検出されたパス。</param>
        <param name="lineNumber">逆シリアル化したとき、無効な JSON が見つかった行番号 (0 から開始)。</param>
        <param name="bytePositionInLine">無効な JSON が見つかった現在の行 (0 から開始) 内のバイト数。</param>
        <summary>ユーザーにエラー情報を伝えるための新しい例外オブジェクトを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`bytePositionInLine` は、文字またはスカラーではなく、バイト数 (UTF-8 コード単位) をカウントすることに注意してください。

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long), innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">コンテキスト固有のエラー メッセージ。</param>
        <param name="path">無効な JSON が検出されたパス。</param>
        <param name="lineNumber">逆シリアル化したとき、無効な JSON が見つかった行番号 (0 から開始)。</param>
        <param name="bytePositionInLine">無効な JSON が見つかった現在の行 (0 から開始) 内のバイト数。</param>
        <param name="innerException">現在の例外を引き起こした例外。</param>
        <summary>指定の内部例外が含まれ、ユーザーにエラー情報を伝える新しい例外オブジェクトを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`bytePositionInLine` は、文字またはスカラーではなく、バイト数 (UTF-8 コード単位) をカウントすることに注意してください。

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytePositionInLine">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; BytePositionInLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; BytePositionInLine" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.BytePositionInLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytePositionInLine As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; BytePositionInLine { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.BytePositionInLine : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.BytePositionInLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外発生前に現在の行から読み取られたバイト数 (0 から開始) を取得します。</summary>
        <value>例外の前に現在の行で読み取られたバイト数の0から始まる数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="jsonException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">スローされた例外に関するシリアル化されたオブジェクト データ。</param>
        <param name="context">転送元または転送先に関するコンテキスト情報を含むオブジェクト。</param>
        <summary>例外に関する情報を含む <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; LineNumber { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外発生前に読み取られた行数 (0 から開始) を取得します。</summary>
        <value>例外の前に読み取られた、0から始まる行数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Text.Json.JsonException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の例外を説明するメッセージを取得します。</summary>
        <value>現在の例外を説明するエラー メッセージ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Text.Json.JsonException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外が発生した JSON 内のパスを取得します。</summary>
        <value>例外が発生した JSON 内のパス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
