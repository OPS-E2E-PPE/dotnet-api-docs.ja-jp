<Type Name="JsonDocument" FullName="System.Text.Json.JsonDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="004010f553dc2cd1df2a551c1889c594f110dfe6" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82332351" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonDocument : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonDocument extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonDocument&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonDocument sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type JsonDocument = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>データ値を自動的にインスタンス化せずに JSON 値の構造的な内容を調べるためのメカニズムを提供します。</summary>
    <remarks>
      <format><![CDATA[
      
このクラスは、プールされたメモリのリソースを利用して、使用率の高いシナリオでのガベージコレクター (GC) の影響を最小限に抑えます。 このオブジェクトを適切に破棄しないと、メモリがプールに返されません。これにより、フレームワークのさまざまな部分における GC の影響が増加します。

詳細については、「 [JSON をシリアル化および逆シリアル化する方法](~/docs/standard/serialization/system-text-json-how-to.md#utf8jsonreader-utf8jsonwriter-and-jsondocument)」を参照してください。

              
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jsonDocument.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Text.Json.JsonDocument" /> インスタンスによって使用されているリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.Buffers.ReadOnlySequence&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlySequence(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.Buffers.ReadOnlySequence&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json">解析対象の JSON テキスト。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <summary>単一の JSON バイト値を表す UTF-8 エンコード テキストとしてシーケンスを JsonDocument に解析します。</summary>
        <returns>JSON 値の JsonDocument 表現。</returns>
        <remarks>
          <format><![CDATA[

## Remarks

<xref:System.Buffers.ReadOnlySequence%601> は、JsonDocument オブジェクトの有効期間全体に使用される場合があります。呼び出し元は、オブジェクトの有効期間中にそのデータが変更されないようにする必要があります。
入力はテキストと見なされるため、UTF-8 バイト順マーク (BOM) を指定することはできません。

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="utf8Json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.IO.Stream,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As Stream, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.IO.Stream * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json">解析対象の JSON データ。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <summary>単一の JSON 値を表す UTF-8 エンコード データとして <see cref="T:System.IO.Stream" /> を JsonDocument に解析します。 ストリームは最後まで読み取られます。</summary>
        <returns>JSON 値の JsonDocument 表現。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="utf8Json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlyMemory(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json">解析対象の JSON テキスト。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <summary>単一の JSON バイト値を表す UTF-8 エンコード テキストとしてメモリを JsonDocument に解析します。</summary>
        <returns>JSON 値の JsonDocument 表現。</returns>
        <remarks>
          <format><![CDATA[

<xref:System.ReadOnlyMemory%601> 値は、JsonDocument オブジェクトの有効期間全体に使用されます。呼び出し元は、オブジェクトの有効期間中にそのデータが変更されないようにする必要があります。

入力はテキストと見なされるため、UTF-8 バイト順マーク (BOM) を指定することはできません。
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="utf8Json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;char&gt; json, System.Text.Json.JsonDocumentOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;char&gt; json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Char},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As ReadOnlyMemory(Of Char), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;char&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json">解析対象の JSON テキスト。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <summary>単一の JSON 文字値を表すテキストを JsonDocument に解析します。</summary>
        <returns>JSON 値の JsonDocument 表現。</returns>
        <remarks>
          <format><![CDATA[
<xref:System.ReadOnlyMemory%601> 値は、JsonDocument オブジェクトの有効期間全体に使用できます。呼び出し元は、オブジェクトの有効期間中にそのデータが変更されないようにする必要があります。

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (string json, System.Text.Json.JsonDocumentOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(string json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As String, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json">解析対象の JSON テキスト。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <summary>単一の JSON 文字列値を表すテキストを JsonDocument に解析します。</summary>
        <returns>JSON 値の JsonDocument 表現。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt; ParseAsync (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Text.Json.JsonDocument&gt; ParseAsync(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseAsync(System.IO.Stream,System.Text.Json.JsonDocumentOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseAsync (utf8Json As Stream, Optional options As JsonDocumentOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of JsonDocument)" />
      <MemberSignature Language="F#" Value="static member ParseAsync : System.IO.Stream * System.Text.Json.JsonDocumentOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;" Usage="System.Text.Json.JsonDocument.ParseAsync (utf8Json, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json">解析対象の JSON データ。</param>
        <param name="options">解析中にリーダーの動作を制御するオプション。</param>
        <param name="cancellationToken">キャンセル要求を監視するトークン。</param>
        <summary>単一の JSON 値を表す UTF-8 エンコード データとして <see cref="T:System.IO.Stream" /> を JsonDocument に解析します。 ストリームは最後まで読み取られます。</summary>
        <returns>JSON 値の JsonDocument 表現を作成するタスク。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><paramref name="utf8Json" /> では、有効な単一の JSON 値が表現されていません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" /> に、サポート対象外のオプションが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument ParseValue (ref System.Text.Json.Utf8JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument ParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseValue(System.Text.Json.Utf8JsonReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseValue (ByRef reader As Utf8JsonReader) As JsonDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::JsonDocument ^ ParseValue(System::Text::Json::Utf8JsonReader % reader);" />
      <MemberSignature Language="F#" Value="static member ParseValue : Utf8JsonReader -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.ParseValue reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="reader">読み取りを行うリーダー。</param>
        <summary>指定されたリーダーからの 1 つの JSON 値 (オブジェクトまたは配列を含む) を解析します。</summary>
        <returns>リーダーから読み取られた値 (およびネストされた値) を表す JsonDocument。</returns>
        <remarks>
          <format><![CDATA[

## Remarks

`reader` の <xref:System.Text.Json.Utf8JsonReader.TokenType> プロパティが <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> または <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>の場合、リーダーは、値の先頭を特定するために、<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> の1回の呼び出しによって進められます。
               
このメソッドが完了すると、JSON 値の最後のトークンに `reader` が配置されます。 例外がスローされた場合、リーダーは、メソッドが呼び出されたときの状態にリセットされます。
               
このメソッドは、リーダーが処理したデータのコピーを作成します。したがって、このメソッドの戻り値を超えてデータの整合性を維持するための呼び出し元の要件はありません。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="reader" /> に、サポート対象外のオプションが含まれています。

または

現在の <paramref name="reader" /> トークンは値を開始または表現していません。</exception>
        <exception cref="T:System.Text.Json.JsonException">リーダーから値を読み取ることができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocument.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElement As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement RootElement { System::Text::Json::JsonElement get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonDocument.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この JSON ドキュメントのルート要素を取得します。</summary>
        <value>ドキュメントの値を表す <see cref="T:System.Text.Json.JsonElement" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseValue">
      <MemberSignature Language="C#" Value="public static bool TryParseValue (ref System.Text.Json.Utf8JsonReader reader, out System.Text.Json.JsonDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader, [out] class System.Text.Json.JsonDocument&amp; document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.TryParseValue(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonDocument@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseValue (ByRef reader As Utf8JsonReader, ByRef document As JsonDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseValue(System::Text::Json::Utf8JsonReader % reader, [Runtime::InteropServices::Out] System::Text::Json::JsonDocument ^ % document);" />
      <MemberSignature Language="F#" Value="static member TryParseValue : Utf8JsonReader * JsonDocument -&gt; bool" Usage="System.Text.Json.JsonDocument.TryParseValue (reader, document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="document" Type="System.Text.Json.JsonDocument" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.Diagnostics.CodeAnalysis.NotNullWhen(true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reader">読み取りを行うリーダー。</param>
        <param name="document">このメソッドから戻るときに、解析されたドキュメントが格納されます。</param>
        <summary>指定されたリーダーからの 1 つの JSON 値 (オブジェクトまたは配列を含む) の解析を試みます。</summary>
        <returns>値が読み取られ、JsonDocument に解析された場合は <see langword="true" />。解析中にリーダーでデータが不足した場合は <see langword="false" />。 他のすべての状況では、例外がスローされます。</returns>
        <remarks>
          <format><![CDATA[

## Remarks

`reader` の <xref:System.Text.Json.Utf8JsonReader.TokenType> プロパティが <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> または <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>の場合、リーダーは、値の先頭を特定するために、<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> の1回の呼び出しによって進められます。
               
このメソッドが完了すると、JSON 値の最後のトークンに `reader` が配置されます。 例外がスローされた場合、または `false` が返された場合、リーダーは、メソッドが呼び出されたときの状態にリセットされます。
               
このメソッドは、リーダーが処理したデータのコピーを作成します。したがって、このメソッドの戻り値を超えてデータの整合性を維持するための呼び出し元の要件はありません。
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="reader" /> に、サポート対象外のオプションが含まれています。

または

現在の <paramref name="reader" /> トークンは値を開始または表現していません。</exception>
        <exception cref="T:System.Text.Json.JsonException">リーダーから値を読み取ることができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.WriteTo(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonDocument.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer">ドキュメントの書き込み先のライター。</param>
        <summary>指定されたライターにドキュメントを JSON 値として書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">この <see cref="P:System.Text.Json.JsonElement.ValueKind" /> の <see cref="P:System.Text.Json.JsonDocument.RootElement" /> は無効な JSON となることがあります。</exception>
        <exception cref="T:System.ObjectDisposedException">親 <see cref="T:System.Text.Json.JsonDocument" /> は破棄されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
